 .data # Program at 31.1
# ****** class Object ****** # ClassDecl at 0.0
 .byte 234 # 'j' with high bit set # IdentifierType at 0.0
 .byte 97 # 'a' # IdentifierType at 0.0
 .byte 118 # 'v' # IdentifierType at 0.0
 .byte 97 # 'a' # IdentifierType at 0.0
 .byte 46 # '.' # IdentifierType at 0.0
 .byte 108 # 'l' # IdentifierType at 0.0
 .byte 97 # 'a' # IdentifierType at 0.0
 .byte 110 # 'n' # IdentifierType at 0.0
 .byte 103 # 'g' # IdentifierType at 0.0
 .byte 46 # '.' # IdentifierType at 0.0
 .byte 79 # 'O' # IdentifierType at 0.0
 .byte 98 # 'b' # IdentifierType at 0.0
 .byte 106 # 'j' # IdentifierType at 0.0
 .byte 101 # 'e' # IdentifierType at 0.0
 .byte 99 # 'c' # IdentifierType at 0.0
 .byte 116 # 't' # IdentifierType at 0.0
CLASS_Object: # ClassDecl at 0.0
 .word hashCode_Object # ClassDecl at 0.0
 .word equals_Object # ClassDecl at 0.0
 .word toString_Object # ClassDecl at 0.0
# ****** class Main ****** # ClassDecl at 31.7
 .byte 205 # 'M' with high bit set # IdentifierType at 31.7
 .byte 97 # 'a' # IdentifierType at 31.7
 .byte 105 # 'i' # IdentifierType at 31.7
 .byte 110 # 'n' # IdentifierType at 31.7
CLASS_Main: # ClassDecl at 31.7
 .word hashCode_Object # ClassDecl at 31.7
 .word equals_Object # ClassDecl at 31.7
 .word toString_Object # ClassDecl at 31.7
 .word fcn_13_main # ClassDecl at 31.7
END_CLASS_Main: # ClassDecl at 31.7
# ****** class BigInt ****** # ClassDecl at 408.7
 .byte 0 # IdentifierType at 408.7
 .byte 0 # IdentifierType at 408.7
 .byte 194 # 'B' with high bit set # IdentifierType at 408.7
 .byte 105 # 'i' # IdentifierType at 408.7
 .byte 103 # 'g' # IdentifierType at 408.7
 .byte 73 # 'I' # IdentifierType at 408.7
 .byte 110 # 'n' # IdentifierType at 408.7
 .byte 116 # 't' # IdentifierType at 408.7
CLASS_BigInt: # ClassDecl at 408.7
 .word fcn_2900_hashCode # ClassDecl at 408.7
 .word fcn_2876_equals # ClassDecl at 408.7
 .word fcn_2523_toString # ClassDecl at 408.7
 .word fcn_2492_init # ClassDecl at 408.7
 .word fcn_2507_init2 # ClassDecl at 408.7
 .word fcn_2580_add # ClassDecl at 408.7
 .word fcn_2638_subtract # ClassDecl at 408.7
 .word fcn_2663_negate # ClassDecl at 408.7
 .word fcn_2708_multiply # ClassDecl at 408.7
 .word fcn_2758_divide # ClassDecl at 408.7
 .word fcn_2778_abs # ClassDecl at 408.7
 .word fcn_2842_compareTo # ClassDecl at 408.7
 .word fcn_2938_helpHashCode # ClassDecl at 408.7
 .word fcn_2994_primitiveMult # ClassDecl at 408.7
 .word fcn_3041_intValue # ClassDecl at 408.7
 .word fcn_3061_max # ClassDecl at 408.7
 .word fcn_3081_min # ClassDecl at 408.7
 .word fcn_3108_signum # ClassDecl at 408.7
 .word fcn_3123_remainder # ClassDecl at 408.7
 .word fcn_3160_divideAndRemainder # ClassDecl at 408.7
 .word fcn_3298_primitiveDivide # ClassDecl at 408.7
 .word fcn_3347_div2 # ClassDecl at 408.7
 .word fcn_3392_primitiveCompare # ClassDecl at 408.7
 .word fcn_3667_primitiveAdd # ClassDecl at 408.7
 .word fcn_3786_primitiveReciprocal # ClassDecl at 408.7
 .word fcn_3832_repeatString # ClassDecl at 408.7
 .word fcn_3864_truncateLeadingZeros # ClassDecl at 408.7
END_CLASS_BigInt: # ClassDecl at 408.7
# ****** class String ****** # ClassDecl at 0.0
 .byte 234 # 'j' with high bit set # IdentifierType at 0.0
 .byte 97 # 'a' # IdentifierType at 0.0
 .byte 118 # 'v' # IdentifierType at 0.0
 .byte 97 # 'a' # IdentifierType at 0.0
 .byte 46 # '.' # IdentifierType at 0.0
 .byte 108 # 'l' # IdentifierType at 0.0
 .byte 97 # 'a' # IdentifierType at 0.0
 .byte 110 # 'n' # IdentifierType at 0.0
 .byte 103 # 'g' # IdentifierType at 0.0
 .byte 46 # '.' # IdentifierType at 0.0
 .byte 83 # 'S' # IdentifierType at 0.0
 .byte 116 # 't' # IdentifierType at 0.0
 .byte 114 # 'r' # IdentifierType at 0.0
 .byte 105 # 'i' # IdentifierType at 0.0
 .byte 110 # 'n' # IdentifierType at 0.0
 .byte 103 # 'g' # IdentifierType at 0.0
CLASS_String: # ClassDecl at 0.0
 .word hashCode_String # ClassDecl at 0.0
 .word equals_String # ClassDecl at 0.0
 .word toString_String # ClassDecl at 0.0
 .word concat_String # ClassDecl at 0.0
 .word substring_String # ClassDecl at 0.0
 .word length_String # ClassDecl at 0.0
 .word charAt_String # ClassDecl at 0.0
 .word compareTo_String # ClassDecl at 0.0
END_CLASS_String: # ClassDecl at 0.0
# ****** class Lib ****** # ClassDecl at 0.0
 .byte 0 # IdentifierType at 0.0
 .byte 204 # 'L' with high bit set # IdentifierType at 0.0
 .byte 105 # 'i' # IdentifierType at 0.0
 .byte 98 # 'b' # IdentifierType at 0.0
CLASS_Lib: # ClassDecl at 0.0
 .word hashCode_Object # ClassDecl at 0.0
 .word equals_Object # ClassDecl at 0.0
 .word toString_Object # ClassDecl at 0.0
 .word readLine_Lib # ClassDecl at 0.0
 .word readInt_Lib # ClassDecl at 0.0
 .word readChar_Lib # ClassDecl at 0.0
 .word printStr_Lib # ClassDecl at 0.0
 .word printBool_Lib # ClassDecl at 0.0
 .word printInt_Lib # ClassDecl at 0.0
 .word intToString_Lib # ClassDecl at 0.0
 .word intToChar_Lib # ClassDecl at 0.0
# ****** class BigIntTest ****** # ClassDecl at 46.7
 .byte 0 # IdentifierType at 46.7
 .byte 0 # IdentifierType at 46.7
 .byte 194 # 'B' with high bit set # IdentifierType at 46.7
 .byte 105 # 'i' # IdentifierType at 46.7
 .byte 103 # 'g' # IdentifierType at 46.7
 .byte 73 # 'I' # IdentifierType at 46.7
 .byte 110 # 'n' # IdentifierType at 46.7
 .byte 116 # 't' # IdentifierType at 46.7
 .byte 84 # 'T' # IdentifierType at 46.7
 .byte 101 # 'e' # IdentifierType at 46.7
 .byte 115 # 's' # IdentifierType at 46.7
 .byte 116 # 't' # IdentifierType at 46.7
CLASS_BigIntTest: # ClassDecl at 46.7
 .word hashCode_Object # ClassDecl at 46.7
 .word equals_Object # ClassDecl at 46.7
 .word toString_Object # ClassDecl at 46.7
 .word readLine_Lib # ClassDecl at 46.7
 .word readInt_Lib # ClassDecl at 46.7
 .word readChar_Lib # ClassDecl at 46.7
 .word printStr_Lib # ClassDecl at 46.7
 .word printBool_Lib # ClassDecl at 46.7
 .word printInt_Lib # ClassDecl at 46.7
 .word intToString_Lib # ClassDecl at 46.7
 .word intToChar_Lib # ClassDecl at 46.7
 .word fcn_18_newBigInt # ClassDecl at 46.7
 .word fcn_310_init # ClassDecl at 46.7
 .word fcn_433_exec # ClassDecl at 46.7
 .word fcn_467_fact # ClassDecl at 46.7
 .word fcn_522_abs # ClassDecl at 46.7
 .word fcn_677_add # ClassDecl at 46.7
 .word fcn_836_compareTo # ClassDecl at 46.7
 .word fcn_860_helpDiv # ClassDecl at 46.7
 .word fcn_1015_divide # ClassDecl at 46.7
 .word fcn_1053_helpDivRem # ClassDecl at 46.7
 .word fcn_1208_divideAndRemainder # ClassDecl at 46.7
 .word fcn_1367_equalsTest # ClassDecl at 46.7
 .word fcn_1424_hashCodeTest # ClassDecl at 46.7
 .word fcn_1481_intValue # ClassDecl at 46.7
 .word fcn_1636_max # ClassDecl at 46.7
 .word fcn_1791_min # ClassDecl at 46.7
 .word fcn_1946_multiply # ClassDecl at 46.7
 .word fcn_2001_negate # ClassDecl at 46.7
 .word fcn_2025_helpRem # ClassDecl at 46.7
 .word fcn_2180_remainder # ClassDecl at 46.7
 .word fcn_2237_signum # ClassDecl at 46.7
 .word fcn_2392_subtract # ClassDecl at 46.7
 .word fcn_2449_toStringTest # ClassDecl at 46.7
END_CLASS_BigIntTest: # ClassDecl at 46.7
END_CLASS_Lib: # ClassDecl at 0.0
# ****** class RunMain ****** # ClassDecl at 0.0
 .byte 0 # IdentifierType at 0.0
 .byte 210 # 'R' with high bit set # IdentifierType at 0.0
 .byte 117 # 'u' # IdentifierType at 0.0
 .byte 110 # 'n' # IdentifierType at 0.0
 .byte 77 # 'M' # IdentifierType at 0.0
 .byte 97 # 'a' # IdentifierType at 0.0
 .byte 105 # 'i' # IdentifierType at 0.0
 .byte 110 # 'n' # IdentifierType at 0.0
CLASS_RunMain: # ClassDecl at 0.0
 .word hashCode_Object # ClassDecl at 0.0
 .word equals_Object # ClassDecl at 0.0
 .word toString_Object # ClassDecl at 0.0
END_CLASS_RunMain: # ClassDecl at 0.0
 .byte 0 # ArrayType at 571.10
 .byte 0 # ArrayType at 571.10
 .byte 0 # ArrayType at 571.10
 .byte 219 # '[' with high bit set # ArrayType at 571.10
 .byte 76 # 'L' # ArrayType at 571.10
 .byte 66 # 'B' # ArrayType at 571.10
 .byte 105 # 'i' # ArrayType at 571.10
 .byte 103 # 'g' # ArrayType at 571.10
 .byte 73 # 'I' # ArrayType at 571.10
 .byte 110 # 'n' # ArrayType at 571.10
 .byte 116 # 't' # ArrayType at 571.10
 .byte 59 # ';' # ArrayType at 571.10
CLASS__ARRAY_BigInt: # ArrayType at 571.10
 .word hashCode_Object # ArrayType at 571.10
 .word equals_Object # ArrayType at 571.10
 .word toString_Object # ArrayType at 571.10
END_CLASS__ARRAY_BigInt: # ArrayType at 571.10
dataArrayVTableStart: # IntegerType at 0.0
END_CLASS_Object: # ClassDecl at 0.0
  .data # Program at 31.1
  .byte 42 # StringLiteral at 93.12
  .byte 42 # StringLiteral at 93.12
  .byte 42 # StringLiteral at 93.12
  .byte 42 # StringLiteral at 93.12
  .byte 42 # StringLiteral at 93.12
  .byte 42 # StringLiteral at 93.12
  .byte 42 # StringLiteral at 93.12
  .byte 42 # StringLiteral at 93.12
  .byte 42 # StringLiteral at 93.12
  .byte 32 # StringLiteral at 93.12
  .byte 66 # StringLiteral at 93.12
  .byte 69 # StringLiteral at 93.12
  .byte 71 # StringLiteral at 93.12
  .byte 73 # StringLiteral at 93.12
  .byte 78 # StringLiteral at 93.12
  .byte 32 # StringLiteral at 93.12
  .byte 84 # StringLiteral at 93.12
  .byte 69 # StringLiteral at 93.12
  .byte 83 # StringLiteral at 93.12
  .byte 84 # StringLiteral at 93.12
  .byte 32 # StringLiteral at 93.12
  .byte 42 # StringLiteral at 93.12
  .byte 42 # StringLiteral at 93.12
  .byte 42 # StringLiteral at 93.12
  .byte 42 # StringLiteral at 93.12
  .byte 42 # StringLiteral at 93.12
  .byte 42 # StringLiteral at 93.12
  .byte 42 # StringLiteral at 93.12
  .byte 42 # StringLiteral at 93.12
  .byte 42 # StringLiteral at 93.12
  .byte 10 # StringLiteral at 93.12
  .byte 0 # StringLiteral at 93.12
  .word CLASS_String # StringLiteral at 93.12
  .word 9 # StringLiteral at 93.12
  .word -31 # StringLiteral at 93.12
strLit_317: # StringLiteral at 93.12
  .byte 61 # StringLiteral at 94.12
  .byte 61 # StringLiteral at 94.12
  .byte 61 # StringLiteral at 94.12
  .byte 61 # StringLiteral at 94.12
  .byte 97 # StringLiteral at 94.12
  .byte 98 # StringLiteral at 94.12
  .byte 115 # StringLiteral at 94.12
  .byte 61 # StringLiteral at 94.12
  .byte 61 # StringLiteral at 94.12
  .byte 61 # StringLiteral at 94.12
  .byte 10 # StringLiteral at 94.12
  .byte 0 # StringLiteral at 94.12
  .word CLASS_String # StringLiteral at 94.12
  .word 4 # StringLiteral at 94.12
  .word -11 # StringLiteral at 94.12
strLit_321: # StringLiteral at 94.12
  .byte 61 # StringLiteral at 95.12
  .byte 61 # StringLiteral at 95.12
  .byte 61 # StringLiteral at 95.12
  .byte 61 # StringLiteral at 95.12
  .byte 97 # StringLiteral at 95.12
  .byte 100 # StringLiteral at 95.12
  .byte 100 # StringLiteral at 95.12
  .byte 61 # StringLiteral at 95.12
  .byte 61 # StringLiteral at 95.12
  .byte 61 # StringLiteral at 95.12
  .byte 10 # StringLiteral at 95.12
  .byte 0 # StringLiteral at 95.12
  .word CLASS_String # StringLiteral at 95.12
  .word 4 # StringLiteral at 95.12
  .word -11 # StringLiteral at 95.12
strLit_328: # StringLiteral at 95.12
  .byte 61 # StringLiteral at 96.12
  .byte 61 # StringLiteral at 96.12
  .byte 61 # StringLiteral at 96.12
  .byte 61 # StringLiteral at 96.12
  .byte 99 # StringLiteral at 96.12
  .byte 111 # StringLiteral at 96.12
  .byte 109 # StringLiteral at 96.12
  .byte 112 # StringLiteral at 96.12
  .byte 97 # StringLiteral at 96.12
  .byte 114 # StringLiteral at 96.12
  .byte 101 # StringLiteral at 96.12
  .byte 84 # StringLiteral at 96.12
  .byte 111 # StringLiteral at 96.12
  .byte 61 # StringLiteral at 96.12
  .byte 61 # StringLiteral at 96.12
  .byte 61 # StringLiteral at 96.12
  .byte 10 # StringLiteral at 96.12
  .byte 0 # StringLiteral at 96.12
  .byte 0 # StringLiteral at 96.12
  .byte 0 # StringLiteral at 96.12
  .word CLASS_String # StringLiteral at 96.12
  .word 6 # StringLiteral at 96.12
  .word -17 # StringLiteral at 96.12
strLit_335: # StringLiteral at 96.12
  .byte 61 # StringLiteral at 97.12
  .byte 61 # StringLiteral at 97.12
  .byte 61 # StringLiteral at 97.12
  .byte 61 # StringLiteral at 97.12
  .byte 101 # StringLiteral at 97.12
  .byte 113 # StringLiteral at 97.12
  .byte 117 # StringLiteral at 97.12
  .byte 97 # StringLiteral at 97.12
  .byte 108 # StringLiteral at 97.12
  .byte 115 # StringLiteral at 97.12
  .byte 61 # StringLiteral at 97.12
  .byte 61 # StringLiteral at 97.12
  .byte 61 # StringLiteral at 97.12
  .byte 10 # StringLiteral at 97.12
  .byte 0 # StringLiteral at 97.12
  .byte 0 # StringLiteral at 97.12
  .word CLASS_String # StringLiteral at 97.12
  .word 5 # StringLiteral at 97.12
  .word -14 # StringLiteral at 97.12
strLit_342: # StringLiteral at 97.12
  .byte 61 # StringLiteral at 98.12
  .byte 61 # StringLiteral at 98.12
  .byte 61 # StringLiteral at 98.12
  .byte 61 # StringLiteral at 98.12
  .byte 105 # StringLiteral at 98.12
  .byte 110 # StringLiteral at 98.12
  .byte 116 # StringLiteral at 98.12
  .byte 86 # StringLiteral at 98.12
  .byte 97 # StringLiteral at 98.12
  .byte 108 # StringLiteral at 98.12
  .byte 117 # StringLiteral at 98.12
  .byte 101 # StringLiteral at 98.12
  .byte 61 # StringLiteral at 98.12
  .byte 61 # StringLiteral at 98.12
  .byte 61 # StringLiteral at 98.12
  .byte 10 # StringLiteral at 98.12
  .word CLASS_String # StringLiteral at 98.12
  .word 5 # StringLiteral at 98.12
  .word -16 # StringLiteral at 98.12
strLit_349: # StringLiteral at 98.12
  .byte 61 # StringLiteral at 99.12
  .byte 61 # StringLiteral at 99.12
  .byte 61 # StringLiteral at 99.12
  .byte 61 # StringLiteral at 99.12
  .byte 109 # StringLiteral at 99.12
  .byte 97 # StringLiteral at 99.12
  .byte 120 # StringLiteral at 99.12
  .byte 61 # StringLiteral at 99.12
  .byte 61 # StringLiteral at 99.12
  .byte 61 # StringLiteral at 99.12
  .byte 10 # StringLiteral at 99.12
  .byte 0 # StringLiteral at 99.12
  .word CLASS_String # StringLiteral at 99.12
  .word 4 # StringLiteral at 99.12
  .word -11 # StringLiteral at 99.12
strLit_356: # StringLiteral at 99.12
  .byte 61 # StringLiteral at 100.12
  .byte 61 # StringLiteral at 100.12
  .byte 61 # StringLiteral at 100.12
  .byte 61 # StringLiteral at 100.12
  .byte 109 # StringLiteral at 100.12
  .byte 105 # StringLiteral at 100.12
  .byte 110 # StringLiteral at 100.12
  .byte 61 # StringLiteral at 100.12
  .byte 61 # StringLiteral at 100.12
  .byte 61 # StringLiteral at 100.12
  .byte 10 # StringLiteral at 100.12
  .byte 0 # StringLiteral at 100.12
  .word CLASS_String # StringLiteral at 100.12
  .word 4 # StringLiteral at 100.12
  .word -11 # StringLiteral at 100.12
strLit_363: # StringLiteral at 100.12
  .byte 61 # StringLiteral at 101.12
  .byte 61 # StringLiteral at 101.12
  .byte 61 # StringLiteral at 101.12
  .byte 61 # StringLiteral at 101.12
  .byte 110 # StringLiteral at 101.12
  .byte 101 # StringLiteral at 101.12
  .byte 103 # StringLiteral at 101.12
  .byte 97 # StringLiteral at 101.12
  .byte 116 # StringLiteral at 101.12
  .byte 101 # StringLiteral at 101.12
  .byte 61 # StringLiteral at 101.12
  .byte 61 # StringLiteral at 101.12
  .byte 61 # StringLiteral at 101.12
  .byte 10 # StringLiteral at 101.12
  .byte 0 # StringLiteral at 101.12
  .byte 0 # StringLiteral at 101.12
  .word CLASS_String # StringLiteral at 101.12
  .word 5 # StringLiteral at 101.12
  .word -14 # StringLiteral at 101.12
strLit_370: # StringLiteral at 101.12
  .byte 61 # StringLiteral at 102.12
  .byte 61 # StringLiteral at 102.12
  .byte 61 # StringLiteral at 102.12
  .byte 61 # StringLiteral at 102.12
  .byte 115 # StringLiteral at 102.12
  .byte 105 # StringLiteral at 102.12
  .byte 103 # StringLiteral at 102.12
  .byte 110 # StringLiteral at 102.12
  .byte 117 # StringLiteral at 102.12
  .byte 109 # StringLiteral at 102.12
  .byte 61 # StringLiteral at 102.12
  .byte 61 # StringLiteral at 102.12
  .byte 61 # StringLiteral at 102.12
  .byte 10 # StringLiteral at 102.12
  .byte 0 # StringLiteral at 102.12
  .byte 0 # StringLiteral at 102.12
  .word CLASS_String # StringLiteral at 102.12
  .word 5 # StringLiteral at 102.12
  .word -14 # StringLiteral at 102.12
strLit_377: # StringLiteral at 102.12
  .byte 61 # StringLiteral at 103.12
  .byte 61 # StringLiteral at 103.12
  .byte 61 # StringLiteral at 103.12
  .byte 61 # StringLiteral at 103.12
  .byte 115 # StringLiteral at 103.12
  .byte 117 # StringLiteral at 103.12
  .byte 98 # StringLiteral at 103.12
  .byte 116 # StringLiteral at 103.12
  .byte 114 # StringLiteral at 103.12
  .byte 97 # StringLiteral at 103.12
  .byte 99 # StringLiteral at 103.12
  .byte 116 # StringLiteral at 103.12
  .byte 61 # StringLiteral at 103.12
  .byte 61 # StringLiteral at 103.12
  .byte 61 # StringLiteral at 103.12
  .byte 10 # StringLiteral at 103.12
  .word CLASS_String # StringLiteral at 103.12
  .word 5 # StringLiteral at 103.12
  .word -16 # StringLiteral at 103.12
strLit_384: # StringLiteral at 103.12
  .byte 61 # StringLiteral at 104.12
  .byte 61 # StringLiteral at 104.12
  .byte 61 # StringLiteral at 104.12
  .byte 61 # StringLiteral at 104.12
  .byte 116 # StringLiteral at 104.12
  .byte 111 # StringLiteral at 104.12
  .byte 83 # StringLiteral at 104.12
  .byte 116 # StringLiteral at 104.12
  .byte 114 # StringLiteral at 104.12
  .byte 105 # StringLiteral at 104.12
  .byte 110 # StringLiteral at 104.12
  .byte 103 # StringLiteral at 104.12
  .byte 61 # StringLiteral at 104.12
  .byte 61 # StringLiteral at 104.12
  .byte 61 # StringLiteral at 104.12
  .byte 10 # StringLiteral at 104.12
  .word CLASS_String # StringLiteral at 104.12
  .word 5 # StringLiteral at 104.12
  .word -16 # StringLiteral at 104.12
strLit_391: # StringLiteral at 104.12
  .byte 61 # StringLiteral at 105.12
  .byte 61 # StringLiteral at 105.12
  .byte 61 # StringLiteral at 105.12
  .byte 61 # StringLiteral at 105.12
  .byte 109 # StringLiteral at 105.12
  .byte 117 # StringLiteral at 105.12
  .byte 108 # StringLiteral at 105.12
  .byte 116 # StringLiteral at 105.12
  .byte 105 # StringLiteral at 105.12
  .byte 112 # StringLiteral at 105.12
  .byte 108 # StringLiteral at 105.12
  .byte 121 # StringLiteral at 105.12
  .byte 61 # StringLiteral at 105.12
  .byte 61 # StringLiteral at 105.12
  .byte 61 # StringLiteral at 105.12
  .byte 10 # StringLiteral at 105.12
  .word CLASS_String # StringLiteral at 105.12
  .word 5 # StringLiteral at 105.12
  .word -16 # StringLiteral at 105.12
strLit_398: # StringLiteral at 105.12
  .byte 61 # StringLiteral at 106.12
  .byte 61 # StringLiteral at 106.12
  .byte 61 # StringLiteral at 106.12
  .byte 61 # StringLiteral at 106.12
  .byte 100 # StringLiteral at 106.12
  .byte 105 # StringLiteral at 106.12
  .byte 118 # StringLiteral at 106.12
  .byte 105 # StringLiteral at 106.12
  .byte 100 # StringLiteral at 106.12
  .byte 101 # StringLiteral at 106.12
  .byte 61 # StringLiteral at 106.12
  .byte 61 # StringLiteral at 106.12
  .byte 61 # StringLiteral at 106.12
  .byte 10 # StringLiteral at 106.12
  .byte 0 # StringLiteral at 106.12
  .byte 0 # StringLiteral at 106.12
  .word CLASS_String # StringLiteral at 106.12
  .word 5 # StringLiteral at 106.12
  .word -14 # StringLiteral at 106.12
strLit_405: # StringLiteral at 106.12
  .byte 61 # StringLiteral at 107.12
  .byte 61 # StringLiteral at 107.12
  .byte 61 # StringLiteral at 107.12
  .byte 61 # StringLiteral at 107.12
  .byte 100 # StringLiteral at 107.12
  .byte 105 # StringLiteral at 107.12
  .byte 118 # StringLiteral at 107.12
  .byte 105 # StringLiteral at 107.12
  .byte 100 # StringLiteral at 107.12
  .byte 101 # StringLiteral at 107.12
  .byte 65 # StringLiteral at 107.12
  .byte 110 # StringLiteral at 107.12
  .byte 100 # StringLiteral at 107.12
  .byte 82 # StringLiteral at 107.12
  .byte 101 # StringLiteral at 107.12
  .byte 109 # StringLiteral at 107.12
  .byte 97 # StringLiteral at 107.12
  .byte 105 # StringLiteral at 107.12
  .byte 110 # StringLiteral at 107.12
  .byte 100 # StringLiteral at 107.12
  .byte 101 # StringLiteral at 107.12
  .byte 114 # StringLiteral at 107.12
  .byte 61 # StringLiteral at 107.12
  .byte 61 # StringLiteral at 107.12
  .byte 61 # StringLiteral at 107.12
  .byte 10 # StringLiteral at 107.12
  .byte 0 # StringLiteral at 107.12
  .byte 0 # StringLiteral at 107.12
  .word CLASS_String # StringLiteral at 107.12
  .word 8 # StringLiteral at 107.12
  .word -26 # StringLiteral at 107.12
strLit_412: # StringLiteral at 107.12
  .byte 61 # StringLiteral at 108.12
  .byte 61 # StringLiteral at 108.12
  .byte 61 # StringLiteral at 108.12
  .byte 61 # StringLiteral at 108.12
  .byte 114 # StringLiteral at 108.12
  .byte 101 # StringLiteral at 108.12
  .byte 109 # StringLiteral at 108.12
  .byte 97 # StringLiteral at 108.12
  .byte 105 # StringLiteral at 108.12
  .byte 110 # StringLiteral at 108.12
  .byte 100 # StringLiteral at 108.12
  .byte 101 # StringLiteral at 108.12
  .byte 114 # StringLiteral at 108.12
  .byte 61 # StringLiteral at 108.12
  .byte 61 # StringLiteral at 108.12
  .byte 61 # StringLiteral at 108.12
  .byte 10 # StringLiteral at 108.12
  .byte 0 # StringLiteral at 108.12
  .byte 0 # StringLiteral at 108.12
  .byte 0 # StringLiteral at 108.12
  .word CLASS_String # StringLiteral at 108.12
  .word 6 # StringLiteral at 108.12
  .word -17 # StringLiteral at 108.12
strLit_419: # StringLiteral at 108.12
  .byte 61 # StringLiteral at 109.12
  .byte 61 # StringLiteral at 109.12
  .byte 61 # StringLiteral at 109.12
  .byte 61 # StringLiteral at 109.12
  .byte 104 # StringLiteral at 109.12
  .byte 97 # StringLiteral at 109.12
  .byte 115 # StringLiteral at 109.12
  .byte 104 # StringLiteral at 109.12
  .byte 67 # StringLiteral at 109.12
  .byte 111 # StringLiteral at 109.12
  .byte 100 # StringLiteral at 109.12
  .byte 101 # StringLiteral at 109.12
  .byte 61 # StringLiteral at 109.12
  .byte 61 # StringLiteral at 109.12
  .byte 61 # StringLiteral at 109.12
  .byte 10 # StringLiteral at 109.12
  .word CLASS_String # StringLiteral at 109.12
  .word 5 # StringLiteral at 109.12
  .word -16 # StringLiteral at 109.12
strLit_426: # StringLiteral at 109.12
  .byte 10 # StringLiteral at 125.45
  .byte 0 # StringLiteral at 125.45
  .byte 0 # StringLiteral at 125.45
  .byte 0 # StringLiteral at 125.45
  .word CLASS_String # StringLiteral at 125.45
  .word 2 # StringLiteral at 125.45
  .word -1 # StringLiteral at 125.45
strLit_486: # StringLiteral at 125.45
  .byte 42 # StringLiteral at 172.19
  .byte 42 # StringLiteral at 172.19
  .byte 68 # StringLiteral at 172.19
  .byte 73 # StringLiteral at 172.19
  .byte 86 # StringLiteral at 172.19
  .byte 45 # StringLiteral at 172.19
  .byte 66 # StringLiteral at 172.19
  .byte 89 # StringLiteral at 172.19
  .byte 61 # StringLiteral at 172.19
  .byte 90 # StringLiteral at 172.19
  .byte 69 # StringLiteral at 172.19
  .byte 82 # StringLiteral at 172.19
  .byte 79 # StringLiteral at 172.19
  .byte 42 # StringLiteral at 172.19
  .byte 42 # StringLiteral at 172.19
  .byte 0 # StringLiteral at 172.19
  .word CLASS_String # StringLiteral at 172.19
  .word 5 # StringLiteral at 172.19
  .word -15 # StringLiteral at 172.19
strLit_843: # StringLiteral at 172.19
  .byte 44 # StringLiteral at 203.39
  .byte 0 # StringLiteral at 203.39
  .byte 0 # StringLiteral at 203.39
  .byte 0 # StringLiteral at 203.39
  .word CLASS_String # StringLiteral at 203.39
  .word 2 # StringLiteral at 203.39
  .word -1 # StringLiteral at 203.39
strLit_1041: # StringLiteral at 203.39
  .byte 45 # StringLiteral at 435.13
  .byte 0 # StringLiteral at 435.13
  .byte 0 # StringLiteral at 435.13
  .byte 0 # StringLiteral at 435.13
  .word CLASS_String # StringLiteral at 435.13
  .word 2 # StringLiteral at 435.13
  .word -1 # StringLiteral at 435.13
strLit_2515: # StringLiteral at 435.13
  .byte 48 # StringLiteral at 476.25
  .byte 0 # StringLiteral at 476.25
  .byte 0 # StringLiteral at 476.25
  .byte 0 # StringLiteral at 476.25
  .word CLASS_String # StringLiteral at 476.25
  .word 2 # StringLiteral at 476.25
  .word -1 # StringLiteral at 476.25
strLit_2646: # StringLiteral at 476.25
  .byte 52 # StringLiteral at 561.59
  .byte 50 # StringLiteral at 561.59
  .byte 57 # StringLiteral at 561.59
  .byte 52 # StringLiteral at 561.59
  .byte 57 # StringLiteral at 561.59
  .byte 54 # StringLiteral at 561.59
  .byte 55 # StringLiteral at 561.59
  .byte 50 # StringLiteral at 561.59
  .byte 57 # StringLiteral at 561.59
  .byte 54 # StringLiteral at 561.59
  .byte 0 # StringLiteral at 561.59
  .byte 0 # StringLiteral at 561.59
  .word CLASS_String # StringLiteral at 561.59
  .word 4 # StringLiteral at 561.59
  .word -10 # StringLiteral at 561.59
strLit_2883: # StringLiteral at 561.59
  .byte 49 # StringLiteral at 661.30
  .byte 0 # StringLiteral at 661.30
  .byte 0 # StringLiteral at 661.30
  .byte 0 # StringLiteral at 661.30
  .word CLASS_String # StringLiteral at 661.30
  .word 2 # StringLiteral at 661.30
  .word -1 # StringLiteral at 661.30
strLit_3236: # StringLiteral at 661.30
  .word CLASS_String # StringLiteral at 710.23
  .word 1 # StringLiteral at 710.23
  .word 0 # StringLiteral at 710.23
strLit_3401: # StringLiteral at 710.23
  .byte 50 # StringLiteral at 743.20
  .byte 0 # StringLiteral at 743.20
  .byte 0 # StringLiteral at 743.20
  .byte 0 # StringLiteral at 743.20
  .word CLASS_String # StringLiteral at 743.20
  .word 2 # StringLiteral at 743.20
  .word -1 # StringLiteral at 743.20
strLit_3550: # StringLiteral at 743.20
  .byte 51 # StringLiteral at 744.20
  .byte 0 # StringLiteral at 744.20
  .byte 0 # StringLiteral at 744.20
  .byte 0 # StringLiteral at 744.20
  .word CLASS_String # StringLiteral at 744.20
  .word 2 # StringLiteral at 744.20
  .word -1 # StringLiteral at 744.20
strLit_3556: # StringLiteral at 744.20
  .byte 52 # StringLiteral at 745.20
  .byte 0 # StringLiteral at 745.20
  .byte 0 # StringLiteral at 745.20
  .byte 0 # StringLiteral at 745.20
  .word CLASS_String # StringLiteral at 745.20
  .word 2 # StringLiteral at 745.20
  .word -1 # StringLiteral at 745.20
strLit_3562: # StringLiteral at 745.20
  .byte 53 # StringLiteral at 746.20
  .byte 0 # StringLiteral at 746.20
  .byte 0 # StringLiteral at 746.20
  .byte 0 # StringLiteral at 746.20
  .word CLASS_String # StringLiteral at 746.20
  .word 2 # StringLiteral at 746.20
  .word -1 # StringLiteral at 746.20
strLit_3568: # StringLiteral at 746.20
  .byte 54 # StringLiteral at 747.20
  .byte 0 # StringLiteral at 747.20
  .byte 0 # StringLiteral at 747.20
  .byte 0 # StringLiteral at 747.20
  .word CLASS_String # StringLiteral at 747.20
  .word 2 # StringLiteral at 747.20
  .word -1 # StringLiteral at 747.20
strLit_3574: # StringLiteral at 747.20
  .byte 55 # StringLiteral at 748.20
  .byte 0 # StringLiteral at 748.20
  .byte 0 # StringLiteral at 748.20
  .byte 0 # StringLiteral at 748.20
  .word CLASS_String # StringLiteral at 748.20
  .word 2 # StringLiteral at 748.20
  .word -1 # StringLiteral at 748.20
strLit_3580: # StringLiteral at 748.20
  .byte 56 # StringLiteral at 749.20
  .byte 0 # StringLiteral at 749.20
  .byte 0 # StringLiteral at 749.20
  .byte 0 # StringLiteral at 749.20
  .word CLASS_String # StringLiteral at 749.20
  .word 2 # StringLiteral at 749.20
  .word -1 # StringLiteral at 749.20
strLit_3586: # StringLiteral at 749.20
  .byte 57 # StringLiteral at 750.20
  .byte 0 # StringLiteral at 750.20
  .byte 0 # StringLiteral at 750.20
  .byte 0 # StringLiteral at 750.20
  .word CLASS_String # StringLiteral at 750.20
  .word 2 # StringLiteral at 750.20
  .word -1 # StringLiteral at 750.20
strLit_3592: # StringLiteral at 750.20
 .text # Program at 31.1; stackHeight = 0
  # ENTER NODE # Program at 31.1; stackHeight = 0
   .globl main # Program at 31.1; stackHeight = 0
  main: # Program at 31.1; stackHeight = 0
   jal vm_init # Program at 31.1; stackHeight = 0
    # ENTER NODE # CallStatement at 0.0; stackHeight = 0
      # ENTER NODE # Call at 0.0; stackHeight = 0
        # ENTER NODE # NewObject at 0.0; stackHeight = 0
         li $s6,1 # NewObject at 0.0; stackHeight = 0
         li $s7,0 # NewObject at 0.0; stackHeight = 0
         jal newObject # NewObject at 0.0; stackHeight = 0
         la $t0,CLASS_Main # NewObject at 0.0; stackHeight = 4
         sw $t0,-12($s7)#**"VTP: Main" # NewObject at 0.0; stackHeight = 4
        # EXIT NODE # NewObject at 0.0; stackHeight = 4
       lw $t0,0($sp) # Call at 0.0; stackHeight = 4
       beq $t0,$zero,nullPtrException # Call at 0.0; stackHeight = 4
       lw $t0,-12($t0) # Call at 0.0; stackHeight = 4
       lw $t0,12($t0) # Call at 0.0; stackHeight = 4
       jalr $t0 # main # Call at 0.0; stackHeight = 4
      # EXIT NODE # Call at 0.0; stackHeight = 0
    # EXIT NODE # CallStatement at 0.0; stackHeight = 0
   li $v0,10 # Program at 31.1; stackHeight = 0
   syscall # Program at 31.1; stackHeight = 0
  # EXIT NODE # Program at 31.1; stackHeight = 0
  # ENTER NODE # ClassDecl at 31.7; stackHeight = 0
  # **** class Main **** # ClassDecl at 31.7; stackHeight = 0
    # ENTER NODE # MethodDeclVoid at 32.14; stackHeight = 0
    .globl fcn_13_main # MethodDeclVoid at 32.14; stackHeight = 0
    fcn_13_main: # MethodDeclVoid at 32.14; stackHeight = 0
     subu $sp,$sp,4 # MethodDeclVoid at 32.14; stackHeight = 0
     sw $s2,($sp) #**"old this-ptr" # MethodDeclVoid at 32.14; stackHeight = 0
     lw $s2,4($sp) #**"this-ptr" # MethodDeclVoid at 32.14; stackHeight = 0
     sw $ra,4($sp) #**"RA:main" # MethodDeclVoid at 32.14; stackHeight = 0
      # ENTER NODE # LocalVarDecl at 33.7; stackHeight = 0
        # ENTER NODE # IntegerLiteral at 33.15; stackHeight = 0
         subu $sp,$sp,8 # IntegerLiteral at 33.15; stackHeight = 0
         sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 33.15; stackHeight = 8
         li $t0,1 # IntegerLiteral at 33.15; stackHeight = 8
         sw $t0,($sp) # IntegerLiteral at 33.15; stackHeight = 8
        # EXIT NODE # IntegerLiteral at 33.15; stackHeight = 8
      # EXIT NODE # LocalVarDecl at 33.7; stackHeight = 8
      # ENTER NODE # LocalVarDecl at 34.14; stackHeight = 8
        # ENTER NODE # NewObject at 34.20; stackHeight = 8
         li $s6,1 # NewObject at 34.20; stackHeight = 8
         li $s7,3 # NewObject at 34.20; stackHeight = 8
         jal newObject # NewObject at 34.20; stackHeight = 8
         la $t0,CLASS_BigIntTest # NewObject at 34.20; stackHeight = 12
         sw $t0,-12($s7)#**"VTP: BigIntTest" # NewObject at 34.20; stackHeight = 12
        # EXIT NODE # NewObject at 34.20; stackHeight = 12
      # EXIT NODE # LocalVarDecl at 34.14; stackHeight = 12
      # ENTER NODE # CallStatement at 36.7; stackHeight = 12
        # ENTER NODE # Call at 36.7; stackHeight = 12
          # ENTER NODE # IdentifierExp at 36.3; stackHeight = 12
           lw $t0,0($sp) # local: stackHt=12,var-offset=-12 # IdentifierExp at 36.3; stackHeight = 12
           subu $sp,$sp,4 # IdentifierExp at 36.3; stackHeight = 12
           sw $t0,($sp)#**"" # IdentifierExp at 36.3; stackHeight = 16
          # EXIT NODE # IdentifierExp at 36.3; stackHeight = 16
          # ENTER NODE # IdentifierExp at 36.12; stackHeight = 16
           lw $t0,8($sp) # local: stackHt=16,var-offset=-8 # IdentifierExp at 36.12; stackHeight = 16
           subu $sp,$sp,8 # IdentifierExp at 36.12; stackHeight = 16
           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 36.12; stackHeight = 24
           sw $t0,($sp)#**"" # IdentifierExp at 36.12; stackHeight = 24
          # EXIT NODE # IdentifierExp at 36.12; stackHeight = 24
         lw $t0,8($sp) # Call at 36.7; stackHeight = 24
         beq $t0,$zero,nullPtrException # Call at 36.7; stackHeight = 24
         lw $t0,-12($t0) # Call at 36.7; stackHeight = 24
         lw $t0,52($t0) # Call at 36.7; stackHeight = 24
         jalr $t0 # exec # Call at 36.7; stackHeight = 24
        # EXIT NODE # Call at 36.7; stackHeight = 12
      # EXIT NODE # CallStatement at 36.7; stackHeight = 12
     # stack height is 12 # MethodDeclVoid at 32.14; stackHeight = 12
     lw $ra,16($sp) # MethodDeclVoid at 32.14; stackHeight = 12
     lw $s2,12($sp) # MethodDeclVoid at 32.14; stackHeight = 12
     addu $sp,$sp,20 # MethodDeclVoid at 32.14; stackHeight = 12
    jr $ra # MethodDeclVoid at 32.14; stackHeight = -8
    # EXIT NODE # MethodDeclVoid at 32.14; stackHeight = -8
  # EXIT NODE # ClassDecl at 31.7; stackHeight = -8
  # ENTER NODE # ClassDecl at 46.7; stackHeight = -8
  # **** class BigIntTest **** # ClassDecl at 46.7; stackHeight = -8
    # ENTER NODE # MethodDeclNonVoid at 47.16; stackHeight = -8
    .globl fcn_18_newBigInt # MethodDeclNonVoid at 47.16; stackHeight = -8
    fcn_18_newBigInt: # MethodDeclNonVoid at 47.16; stackHeight = -8
     subu $sp,$sp,4 # MethodDeclNonVoid at 47.16; stackHeight = -8
     sw $s2,($sp) #**"old this-ptr" # MethodDeclNonVoid at 47.16; stackHeight = -8
     lw $s2,4($sp) #**"this-ptr" # MethodDeclNonVoid at 47.16; stackHeight = -8
     sw $ra,4($sp) #**"RA:newBigInt" # MethodDeclNonVoid at 47.16; stackHeight = -8
      # ENTER NODE # NewObject at 48.10; stackHeight = 0
       li $s6,2 # NewObject at 48.10; stackHeight = 0
       li $s7,1 # NewObject at 48.10; stackHeight = 0
       jal newObject # NewObject at 48.10; stackHeight = 0
       la $t0,CLASS_BigInt # NewObject at 48.10; stackHeight = 4
       sw $t0,-12($s7)#**"VTP: BigInt" # NewObject at 48.10; stackHeight = 4
      # EXIT NODE # NewObject at 48.10; stackHeight = 4
     lw $ra,8($sp) # MethodDeclNonVoid at 47.16; stackHeight = 4
     lw $s2,4($sp) # MethodDeclNonVoid at 47.16; stackHeight = 4
     lw $t0,($sp) # MethodDeclNonVoid at 47.16; stackHeight = 4
     sw $t0,8($sp)#**"(return-val)" # MethodDeclNonVoid at 47.16; stackHeight = 4
     addu $sp,$sp,8 # MethodDeclNonVoid at 47.16; stackHeight = 4
    jr $ra # MethodDeclNonVoid at 47.16; stackHeight = -4
    # EXIT NODE # MethodDeclNonVoid at 47.16; stackHeight = -4
    # ENTER NODE # MethodDeclVoid at 55.14; stackHeight = -4
    .globl fcn_310_init # MethodDeclVoid at 55.14; stackHeight = -4
    fcn_310_init: # MethodDeclVoid at 55.14; stackHeight = -4
     subu $sp,$sp,4 # MethodDeclVoid at 55.14; stackHeight = -4
     sw $s2,($sp) #**"old this-ptr" # MethodDeclVoid at 55.14; stackHeight = -4
     lw $s2,12($sp) #**"this-ptr" # MethodDeclVoid at 55.14; stackHeight = -4
     sw $ra,12($sp) #**"RA:init" # MethodDeclVoid at 55.14; stackHeight = -4
      # ENTER NODE # Assign at 56.8; stackHeight = 0
        # ENTER NODE # Call at 56.22; stackHeight = 0
          # ENTER NODE # Call at 56.10; stackHeight = 0
            # ENTER NODE # This at 56.10; stackHeight = 0
             subu $sp,$sp,4 # This at 56.10; stackHeight = 0
             sw $s2,($sp)#**"" # This at 56.10; stackHeight = 4
            # EXIT NODE # This at 56.10; stackHeight = 4
           lw $t0,0($sp) # Call at 56.10; stackHeight = 4
           beq $t0,$zero,nullPtrException # Call at 56.10; stackHeight = 4
           lw $t0,-12($t0) # Call at 56.10; stackHeight = 4
           lw $t0,44($t0) # Call at 56.10; stackHeight = 4
           jalr $t0 # newBigInt # Call at 56.10; stackHeight = 4
          # EXIT NODE # Call at 56.10; stackHeight = 4
          # ENTER NODE # IntegerLiteral at 56.27; stackHeight = 4
           subu $sp,$sp,8 # IntegerLiteral at 56.27; stackHeight = 4
           sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 56.27; stackHeight = 12
           li $t0,0 # IntegerLiteral at 56.27; stackHeight = 12
           sw $t0,($sp) # IntegerLiteral at 56.27; stackHeight = 12
          # EXIT NODE # IntegerLiteral at 56.27; stackHeight = 12
         lw $t0,8($sp) # Call at 56.22; stackHeight = 12
         beq $t0,$zero,nullPtrException # Call at 56.22; stackHeight = 12
         lw $t0,-12($t0) # Call at 56.22; stackHeight = 12
         lw $t0,12($t0) # Call at 56.22; stackHeight = 12
         jalr $t0 # init # Call at 56.22; stackHeight = 12
        # EXIT NODE # Call at 56.22; stackHeight = 4
       lw $t0,($sp) # Assign at 56.8; stackHeight = 4
       sw $t0,8($s2) # Assign at 56.8; stackHeight = 4
       addu $sp,$sp,4 # Assign at 56.8; stackHeight = 4
      # EXIT NODE # Assign at 56.8; stackHeight = 0
      # ENTER NODE # Assign at 57.8; stackHeight = 0
        # ENTER NODE # NewArray at 57.10; stackHeight = 0
          # ENTER NODE # Plus at 57.31; stackHeight = 0
            # ENTER NODE # Times at 57.29; stackHeight = 0
              # ENTER NODE # IdentifierExp at 57.21; stackHeight = 0
               lw $t0,4($sp) # local: stackHt=0,var-offset=4 # IdentifierExp at 57.21; stackHeight = 0
               subu $sp,$sp,8 # IdentifierExp at 57.21; stackHeight = 0
               sw $s5,4($sp)#**"GC tag" # IdentifierExp at 57.21; stackHeight = 8
               sw $t0,($sp)#**"" # IdentifierExp at 57.21; stackHeight = 8
              # EXIT NODE # IdentifierExp at 57.21; stackHeight = 8
              # ENTER NODE # IntegerLiteral at 57.30; stackHeight = 8
               subu $sp,$sp,8 # IntegerLiteral at 57.30; stackHeight = 8
               sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 57.30; stackHeight = 16
               li $t0,2 # IntegerLiteral at 57.30; stackHeight = 16
               sw $t0,($sp) # IntegerLiteral at 57.30; stackHeight = 16
              # EXIT NODE # IntegerLiteral at 57.30; stackHeight = 16
             lw $t0,($sp) # Times at 57.29; stackHeight = 16
             lw $t1,8($sp) # Times at 57.29; stackHeight = 16
             mult $t0,$t1 # Times at 57.29; stackHeight = 16
             mflo $t0 # Times at 57.29; stackHeight = 16
             addu $sp,$sp,8 # Times at 57.29; stackHeight = 16
             sw $t0,($sp)#**"" # Times at 57.29; stackHeight = 16
            # EXIT NODE # Times at 57.29; stackHeight = 8
            # ENTER NODE # IntegerLiteral at 57.32; stackHeight = 8
             subu $sp,$sp,8 # IntegerLiteral at 57.32; stackHeight = 8
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 57.32; stackHeight = 16
             li $t0,1 # IntegerLiteral at 57.32; stackHeight = 16
             sw $t0,($sp) # IntegerLiteral at 57.32; stackHeight = 16
            # EXIT NODE # IntegerLiteral at 57.32; stackHeight = 16
           lw $t0,($sp) # Plus at 57.31; stackHeight = 16
           lw $t1,8($sp) # Plus at 57.31; stackHeight = 16
           addu $t0,$t0,$t1 # Plus at 57.31; stackHeight = 16
           addu $sp,$sp,8 # Plus at 57.31; stackHeight = 16
           sw $t0,($sp)#**"" # Plus at 57.31; stackHeight = 16
          # EXIT NODE # Plus at 57.31; stackHeight = 8
         lw $s7,($sp) # NewArray at 57.10; stackHeight = 8
         addu $sp,$sp,8 # NewArray at 57.10; stackHeight = 8
         li $s6, 1 # NewArray at 57.10; stackHeight = 0
         jal newObject # NewArray at 57.10; stackHeight = 0
         la $t0,CLASS__ARRAY_BigInt # NewArray at 57.10; stackHeight = 4
         sw $t0,-12($s7)#**"VTP: _ARRAY_BigInt" # NewArray at 57.10; stackHeight = 4
        # EXIT NODE # NewArray at 57.10; stackHeight = 4
       lw $t0,($sp) # Assign at 57.8; stackHeight = 4
       sw $t0,0($s2) # Assign at 57.8; stackHeight = 4
       addu $sp,$sp,4 # Assign at 57.8; stackHeight = 4
      # EXIT NODE # Assign at 57.8; stackHeight = 0
      # ENTER NODE # Assign at 58.20; stackHeight = 0
        # ENTER NODE # IdentifierExp at 58.3; stackHeight = 0
         lw $t0,0($s2) # inst-var # IdentifierExp at 58.3; stackHeight = 0
         subu $sp,$sp,4 # IdentifierExp at 58.3; stackHeight = 0
         sw $t0,($sp)#**"" # IdentifierExp at 58.3; stackHeight = 4
        # EXIT NODE # IdentifierExp at 58.3; stackHeight = 4
        # ENTER NODE # Remainder at 58.9; stackHeight = 4
          # ENTER NODE # IntegerLiteral at 58.8; stackHeight = 4
           subu $sp,$sp,8 # IntegerLiteral at 58.8; stackHeight = 4
           sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 58.8; stackHeight = 12
           li $t0,0 # IntegerLiteral at 58.8; stackHeight = 12
           sw $t0,($sp) # IntegerLiteral at 58.8; stackHeight = 12
          # EXIT NODE # IntegerLiteral at 58.8; stackHeight = 12
          # ENTER NODE # IdentifierExp at 58.10; stackHeight = 12
           lw $t0,16($sp) # local: stackHt=12,var-offset=4 # IdentifierExp at 58.10; stackHeight = 12
           subu $sp,$sp,8 # IdentifierExp at 58.10; stackHeight = 12
           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 58.10; stackHeight = 20
           sw $t0,($sp)#**"" # IdentifierExp at 58.10; stackHeight = 20
          # EXIT NODE # IdentifierExp at 58.10; stackHeight = 20
         jal remainder # Remainder at 58.9; stackHeight = 20
        # EXIT NODE # Remainder at 58.9; stackHeight = 12
        # ENTER NODE # Call at 58.34; stackHeight = 12
          # ENTER NODE # Call at 58.22; stackHeight = 12
            # ENTER NODE # This at 58.22; stackHeight = 12
             subu $sp,$sp,4 # This at 58.22; stackHeight = 12
             sw $s2,($sp)#**"" # This at 58.22; stackHeight = 16
            # EXIT NODE # This at 58.22; stackHeight = 16
           lw $t0,0($sp) # Call at 58.22; stackHeight = 16
           beq $t0,$zero,nullPtrException # Call at 58.22; stackHeight = 16
           lw $t0,-12($t0) # Call at 58.22; stackHeight = 16
           lw $t0,44($t0) # Call at 58.22; stackHeight = 16
           jalr $t0 # newBigInt # Call at 58.22; stackHeight = 16
          # EXIT NODE # Call at 58.22; stackHeight = 16
          # ENTER NODE # IntegerLiteral at 58.39; stackHeight = 16
           subu $sp,$sp,8 # IntegerLiteral at 58.39; stackHeight = 16
           sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 58.39; stackHeight = 24
           li $t0,31 # IntegerLiteral at 58.39; stackHeight = 24
           sw $t0,($sp) # IntegerLiteral at 58.39; stackHeight = 24
          # EXIT NODE # IntegerLiteral at 58.39; stackHeight = 24
         lw $t0,8($sp) # Call at 58.34; stackHeight = 24
         beq $t0,$zero,nullPtrException # Call at 58.34; stackHeight = 24
         lw $t0,-12($t0) # Call at 58.34; stackHeight = 24
         lw $t0,12($t0) # Call at 58.34; stackHeight = 24
         jalr $t0 # init # Call at 58.34; stackHeight = 24
        # EXIT NODE # Call at 58.34; stackHeight = 16
       lw $t0,($sp) # Assign at 58.20; stackHeight = 16
       lw $t1,12($sp) # Assign at 58.20; stackHeight = 16
       beq $t1,$zero,nullPtrException # Assign at 58.20; stackHeight = 16
       lw $t2,4($sp) # Assign at 58.20; stackHeight = 16
       lw $t3,-4($t1) # Assign at 58.20; stackHeight = 16
       bgeu $t2,$t3,arrayIndexOutOfBounds # Assign at 58.20; stackHeight = 16
       sll $t2,$t2,2 # Assign at 58.20; stackHeight = 16
       addu $t2,$t2,$t1 # Assign at 58.20; stackHeight = 16
       sw $t0,($t2) # Assign at 58.20; stackHeight = 16
       addu $sp,$sp,16 # Assign at 58.20; stackHeight = 16
      # EXIT NODE # Assign at 58.20; stackHeight = 0
      # ENTER NODE # Assign at 59.20; stackHeight = 0
        # ENTER NODE # IdentifierExp at 59.3; stackHeight = 0
         lw $t0,0($s2) # inst-var # IdentifierExp at 59.3; stackHeight = 0
         subu $sp,$sp,4 # IdentifierExp at 59.3; stackHeight = 0
         sw $t0,($sp)#**"" # IdentifierExp at 59.3; stackHeight = 4
        # EXIT NODE # IdentifierExp at 59.3; stackHeight = 4
        # ENTER NODE # Remainder at 59.9; stackHeight = 4
          # ENTER NODE # IntegerLiteral at 59.8; stackHeight = 4
           subu $sp,$sp,8 # IntegerLiteral at 59.8; stackHeight = 4
           sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 59.8; stackHeight = 12
           li $t0,1 # IntegerLiteral at 59.8; stackHeight = 12
           sw $t0,($sp) # IntegerLiteral at 59.8; stackHeight = 12
          # EXIT NODE # IntegerLiteral at 59.8; stackHeight = 12
          # ENTER NODE # IdentifierExp at 59.10; stackHeight = 12
           lw $t0,16($sp) # local: stackHt=12,var-offset=4 # IdentifierExp at 59.10; stackHeight = 12
           subu $sp,$sp,8 # IdentifierExp at 59.10; stackHeight = 12
           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 59.10; stackHeight = 20
           sw $t0,($sp)#**"" # IdentifierExp at 59.10; stackHeight = 20
          # EXIT NODE # IdentifierExp at 59.10; stackHeight = 20
         jal remainder # Remainder at 59.9; stackHeight = 20
        # EXIT NODE # Remainder at 59.9; stackHeight = 12
        # ENTER NODE # Call at 59.34; stackHeight = 12
          # ENTER NODE # Call at 59.22; stackHeight = 12
            # ENTER NODE # This at 59.22; stackHeight = 12
             subu $sp,$sp,4 # This at 59.22; stackHeight = 12
             sw $s2,($sp)#**"" # This at 59.22; stackHeight = 16
            # EXIT NODE # This at 59.22; stackHeight = 16
           lw $t0,0($sp) # Call at 59.22; stackHeight = 16
           beq $t0,$zero,nullPtrException # Call at 59.22; stackHeight = 16
           lw $t0,-12($t0) # Call at 59.22; stackHeight = 16
           lw $t0,44($t0) # Call at 59.22; stackHeight = 16
           jalr $t0 # newBigInt # Call at 59.22; stackHeight = 16
          # EXIT NODE # Call at 59.22; stackHeight = 16
          # ENTER NODE # IntegerLiteral at 59.39; stackHeight = 16
           subu $sp,$sp,8 # IntegerLiteral at 59.39; stackHeight = 16
           sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 59.39; stackHeight = 24
           li $t0,2 # IntegerLiteral at 59.39; stackHeight = 24
           sw $t0,($sp) # IntegerLiteral at 59.39; stackHeight = 24
          # EXIT NODE # IntegerLiteral at 59.39; stackHeight = 24
         lw $t0,8($sp) # Call at 59.34; stackHeight = 24
         beq $t0,$zero,nullPtrException # Call at 59.34; stackHeight = 24
         lw $t0,-12($t0) # Call at 59.34; stackHeight = 24
         lw $t0,12($t0) # Call at 59.34; stackHeight = 24
         jalr $t0 # init # Call at 59.34; stackHeight = 24
        # EXIT NODE # Call at 59.34; stackHeight = 16
       lw $t0,($sp) # Assign at 59.20; stackHeight = 16
       lw $t1,12($sp) # Assign at 59.20; stackHeight = 16
       beq $t1,$zero,nullPtrException # Assign at 59.20; stackHeight = 16
       lw $t2,4($sp) # Assign at 59.20; stackHeight = 16
       lw $t3,-4($t1) # Assign at 59.20; stackHeight = 16
       bgeu $t2,$t3,arrayIndexOutOfBounds # Assign at 59.20; stackHeight = 16
       sll $t2,$t2,2 # Assign at 59.20; stackHeight = 16
       addu $t2,$t2,$t1 # Assign at 59.20; stackHeight = 16
       sw $t0,($t2) # Assign at 59.20; stackHeight = 16
       addu $sp,$sp,16 # Assign at 59.20; stackHeight = 16
      # EXIT NODE # Assign at 59.20; stackHeight = 0
      # ENTER NODE # Assign at 60.20; stackHeight = 0
        # ENTER NODE # IdentifierExp at 60.3; stackHeight = 0
         lw $t0,0($s2) # inst-var # IdentifierExp at 60.3; stackHeight = 0
         subu $sp,$sp,4 # IdentifierExp at 60.3; stackHeight = 0
         sw $t0,($sp)#**"" # IdentifierExp at 60.3; stackHeight = 4
        # EXIT NODE # IdentifierExp at 60.3; stackHeight = 4
        # ENTER NODE # Remainder at 60.9; stackHeight = 4
          # ENTER NODE # IntegerLiteral at 60.8; stackHeight = 4
           subu $sp,$sp,8 # IntegerLiteral at 60.8; stackHeight = 4
           sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 60.8; stackHeight = 12
           li $t0,2 # IntegerLiteral at 60.8; stackHeight = 12
           sw $t0,($sp) # IntegerLiteral at 60.8; stackHeight = 12
          # EXIT NODE # IntegerLiteral at 60.8; stackHeight = 12
          # ENTER NODE # IdentifierExp at 60.10; stackHeight = 12
           lw $t0,16($sp) # local: stackHt=12,var-offset=4 # IdentifierExp at 60.10; stackHeight = 12
           subu $sp,$sp,8 # IdentifierExp at 60.10; stackHeight = 12
           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 60.10; stackHeight = 20
           sw $t0,($sp)#**"" # IdentifierExp at 60.10; stackHeight = 20
          # EXIT NODE # IdentifierExp at 60.10; stackHeight = 20
         jal remainder # Remainder at 60.9; stackHeight = 20
        # EXIT NODE # Remainder at 60.9; stackHeight = 12
        # ENTER NODE # Call at 60.34; stackHeight = 12
          # ENTER NODE # Call at 60.22; stackHeight = 12
            # ENTER NODE # This at 60.22; stackHeight = 12
             subu $sp,$sp,4 # This at 60.22; stackHeight = 12
             sw $s2,($sp)#**"" # This at 60.22; stackHeight = 16
            # EXIT NODE # This at 60.22; stackHeight = 16
           lw $t0,0($sp) # Call at 60.22; stackHeight = 16
           beq $t0,$zero,nullPtrException # Call at 60.22; stackHeight = 16
           lw $t0,-12($t0) # Call at 60.22; stackHeight = 16
           lw $t0,44($t0) # Call at 60.22; stackHeight = 16
           jalr $t0 # newBigInt # Call at 60.22; stackHeight = 16
          # EXIT NODE # Call at 60.22; stackHeight = 16
          # ENTER NODE # IntegerLiteral at 60.39; stackHeight = 16
           subu $sp,$sp,8 # IntegerLiteral at 60.39; stackHeight = 16
           sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 60.39; stackHeight = 24
           li $t0,45 # IntegerLiteral at 60.39; stackHeight = 24
           sw $t0,($sp) # IntegerLiteral at 60.39; stackHeight = 24
          # EXIT NODE # IntegerLiteral at 60.39; stackHeight = 24
         lw $t0,8($sp) # Call at 60.34; stackHeight = 24
         beq $t0,$zero,nullPtrException # Call at 60.34; stackHeight = 24
         lw $t0,-12($t0) # Call at 60.34; stackHeight = 24
         lw $t0,12($t0) # Call at 60.34; stackHeight = 24
         jalr $t0 # init # Call at 60.34; stackHeight = 24
        # EXIT NODE # Call at 60.34; stackHeight = 16
       lw $t0,($sp) # Assign at 60.20; stackHeight = 16
       lw $t1,12($sp) # Assign at 60.20; stackHeight = 16
       beq $t1,$zero,nullPtrException # Assign at 60.20; stackHeight = 16
       lw $t2,4($sp) # Assign at 60.20; stackHeight = 16
       lw $t3,-4($t1) # Assign at 60.20; stackHeight = 16
       bgeu $t2,$t3,arrayIndexOutOfBounds # Assign at 60.20; stackHeight = 16
       sll $t2,$t2,2 # Assign at 60.20; stackHeight = 16
       addu $t2,$t2,$t1 # Assign at 60.20; stackHeight = 16
       sw $t0,($t2) # Assign at 60.20; stackHeight = 16
       addu $sp,$sp,16 # Assign at 60.20; stackHeight = 16
      # EXIT NODE # Assign at 60.20; stackHeight = 0
      # ENTER NODE # Assign at 61.20; stackHeight = 0
        # ENTER NODE # IdentifierExp at 61.3; stackHeight = 0
         lw $t0,0($s2) # inst-var # IdentifierExp at 61.3; stackHeight = 0
         subu $sp,$sp,4 # IdentifierExp at 61.3; stackHeight = 0
         sw $t0,($sp)#**"" # IdentifierExp at 61.3; stackHeight = 4
        # EXIT NODE # IdentifierExp at 61.3; stackHeight = 4
        # ENTER NODE # Remainder at 61.9; stackHeight = 4
          # ENTER NODE # IntegerLiteral at 61.8; stackHeight = 4
           subu $sp,$sp,8 # IntegerLiteral at 61.8; stackHeight = 4
           sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 61.8; stackHeight = 12
           li $t0,3 # IntegerLiteral at 61.8; stackHeight = 12
           sw $t0,($sp) # IntegerLiteral at 61.8; stackHeight = 12
          # EXIT NODE # IntegerLiteral at 61.8; stackHeight = 12
          # ENTER NODE # IdentifierExp at 61.10; stackHeight = 12
           lw $t0,16($sp) # local: stackHt=12,var-offset=4 # IdentifierExp at 61.10; stackHeight = 12
           subu $sp,$sp,8 # IdentifierExp at 61.10; stackHeight = 12
           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 61.10; stackHeight = 20
           sw $t0,($sp)#**"" # IdentifierExp at 61.10; stackHeight = 20
          # EXIT NODE # IdentifierExp at 61.10; stackHeight = 20
         jal remainder # Remainder at 61.9; stackHeight = 20
        # EXIT NODE # Remainder at 61.9; stackHeight = 12
        # ENTER NODE # Call at 61.34; stackHeight = 12
          # ENTER NODE # Call at 61.22; stackHeight = 12
            # ENTER NODE # This at 61.22; stackHeight = 12
             subu $sp,$sp,4 # This at 61.22; stackHeight = 12
             sw $s2,($sp)#**"" # This at 61.22; stackHeight = 16
            # EXIT NODE # This at 61.22; stackHeight = 16
           lw $t0,0($sp) # Call at 61.22; stackHeight = 16
           beq $t0,$zero,nullPtrException # Call at 61.22; stackHeight = 16
           lw $t0,-12($t0) # Call at 61.22; stackHeight = 16
           lw $t0,44($t0) # Call at 61.22; stackHeight = 16
           jalr $t0 # newBigInt # Call at 61.22; stackHeight = 16
          # EXIT NODE # Call at 61.22; stackHeight = 16
          # ENTER NODE # IntegerLiteral at 61.39; stackHeight = 16
           subu $sp,$sp,8 # IntegerLiteral at 61.39; stackHeight = 16
           sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 61.39; stackHeight = 24
           li $t0,100000 # IntegerLiteral at 61.39; stackHeight = 24
           sw $t0,($sp) # IntegerLiteral at 61.39; stackHeight = 24
          # EXIT NODE # IntegerLiteral at 61.39; stackHeight = 24
         lw $t0,8($sp) # Call at 61.34; stackHeight = 24
         beq $t0,$zero,nullPtrException # Call at 61.34; stackHeight = 24
         lw $t0,-12($t0) # Call at 61.34; stackHeight = 24
         lw $t0,12($t0) # Call at 61.34; stackHeight = 24
         jalr $t0 # init # Call at 61.34; stackHeight = 24
        # EXIT NODE # Call at 61.34; stackHeight = 16
       lw $t0,($sp) # Assign at 61.20; stackHeight = 16
       lw $t1,12($sp) # Assign at 61.20; stackHeight = 16
       beq $t1,$zero,nullPtrException # Assign at 61.20; stackHeight = 16
       lw $t2,4($sp) # Assign at 61.20; stackHeight = 16
       lw $t3,-4($t1) # Assign at 61.20; stackHeight = 16
       bgeu $t2,$t3,arrayIndexOutOfBounds # Assign at 61.20; stackHeight = 16
       sll $t2,$t2,2 # Assign at 61.20; stackHeight = 16
       addu $t2,$t2,$t1 # Assign at 61.20; stackHeight = 16
       sw $t0,($t2) # Assign at 61.20; stackHeight = 16
       addu $sp,$sp,16 # Assign at 61.20; stackHeight = 16
      # EXIT NODE # Assign at 61.20; stackHeight = 0
      # ENTER NODE # Assign at 62.20; stackHeight = 0
        # ENTER NODE # IdentifierExp at 62.3; stackHeight = 0
         lw $t0,0($s2) # inst-var # IdentifierExp at 62.3; stackHeight = 0
         subu $sp,$sp,4 # IdentifierExp at 62.3; stackHeight = 0
         sw $t0,($sp)#**"" # IdentifierExp at 62.3; stackHeight = 4
        # EXIT NODE # IdentifierExp at 62.3; stackHeight = 4
        # ENTER NODE # Remainder at 62.9; stackHeight = 4
          # ENTER NODE # IntegerLiteral at 62.8; stackHeight = 4
           subu $sp,$sp,8 # IntegerLiteral at 62.8; stackHeight = 4
           sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 62.8; stackHeight = 12
           li $t0,4 # IntegerLiteral at 62.8; stackHeight = 12
           sw $t0,($sp) # IntegerLiteral at 62.8; stackHeight = 12
          # EXIT NODE # IntegerLiteral at 62.8; stackHeight = 12
          # ENTER NODE # IdentifierExp at 62.10; stackHeight = 12
           lw $t0,16($sp) # local: stackHt=12,var-offset=4 # IdentifierExp at 62.10; stackHeight = 12
           subu $sp,$sp,8 # IdentifierExp at 62.10; stackHeight = 12
           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 62.10; stackHeight = 20
           sw $t0,($sp)#**"" # IdentifierExp at 62.10; stackHeight = 20
          # EXIT NODE # IdentifierExp at 62.10; stackHeight = 20
         jal remainder # Remainder at 62.9; stackHeight = 20
        # EXIT NODE # Remainder at 62.9; stackHeight = 12
        # ENTER NODE # Call at 62.34; stackHeight = 12
          # ENTER NODE # Call at 62.22; stackHeight = 12
            # ENTER NODE # This at 62.22; stackHeight = 12
             subu $sp,$sp,4 # This at 62.22; stackHeight = 12
             sw $s2,($sp)#**"" # This at 62.22; stackHeight = 16
            # EXIT NODE # This at 62.22; stackHeight = 16
           lw $t0,0($sp) # Call at 62.22; stackHeight = 16
           beq $t0,$zero,nullPtrException # Call at 62.22; stackHeight = 16
           lw $t0,-12($t0) # Call at 62.22; stackHeight = 16
           lw $t0,44($t0) # Call at 62.22; stackHeight = 16
           jalr $t0 # newBigInt # Call at 62.22; stackHeight = 16
          # EXIT NODE # Call at 62.22; stackHeight = 16
          # ENTER NODE # IntegerLiteral at 62.39; stackHeight = 16
           subu $sp,$sp,8 # IntegerLiteral at 62.39; stackHeight = 16
           sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 62.39; stackHeight = 24
           li $t0,10000 # IntegerLiteral at 62.39; stackHeight = 24
           sw $t0,($sp) # IntegerLiteral at 62.39; stackHeight = 24
          # EXIT NODE # IntegerLiteral at 62.39; stackHeight = 24
         lw $t0,8($sp) # Call at 62.34; stackHeight = 24
         beq $t0,$zero,nullPtrException # Call at 62.34; stackHeight = 24
         lw $t0,-12($t0) # Call at 62.34; stackHeight = 24
         lw $t0,12($t0) # Call at 62.34; stackHeight = 24
         jalr $t0 # init # Call at 62.34; stackHeight = 24
        # EXIT NODE # Call at 62.34; stackHeight = 16
       lw $t0,($sp) # Assign at 62.20; stackHeight = 16
       lw $t1,12($sp) # Assign at 62.20; stackHeight = 16
       beq $t1,$zero,nullPtrException # Assign at 62.20; stackHeight = 16
       lw $t2,4($sp) # Assign at 62.20; stackHeight = 16
       lw $t3,-4($t1) # Assign at 62.20; stackHeight = 16
       bgeu $t2,$t3,arrayIndexOutOfBounds # Assign at 62.20; stackHeight = 16
       sll $t2,$t2,2 # Assign at 62.20; stackHeight = 16
       addu $t2,$t2,$t1 # Assign at 62.20; stackHeight = 16
       sw $t0,($t2) # Assign at 62.20; stackHeight = 16
       addu $sp,$sp,16 # Assign at 62.20; stackHeight = 16
      # EXIT NODE # Assign at 62.20; stackHeight = 0
      # ENTER NODE # Assign at 63.20; stackHeight = 0
        # ENTER NODE # IdentifierExp at 63.3; stackHeight = 0
         lw $t0,0($s2) # inst-var # IdentifierExp at 63.3; stackHeight = 0
         subu $sp,$sp,4 # IdentifierExp at 63.3; stackHeight = 0
         sw $t0,($sp)#**"" # IdentifierExp at 63.3; stackHeight = 4
        # EXIT NODE # IdentifierExp at 63.3; stackHeight = 4
        # ENTER NODE # Remainder at 63.9; stackHeight = 4
          # ENTER NODE # IntegerLiteral at 63.8; stackHeight = 4
           subu $sp,$sp,8 # IntegerLiteral at 63.8; stackHeight = 4
           sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 63.8; stackHeight = 12
           li $t0,5 # IntegerLiteral at 63.8; stackHeight = 12
           sw $t0,($sp) # IntegerLiteral at 63.8; stackHeight = 12
          # EXIT NODE # IntegerLiteral at 63.8; stackHeight = 12
          # ENTER NODE # IdentifierExp at 63.10; stackHeight = 12
           lw $t0,16($sp) # local: stackHt=12,var-offset=4 # IdentifierExp at 63.10; stackHeight = 12
           subu $sp,$sp,8 # IdentifierExp at 63.10; stackHeight = 12
           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 63.10; stackHeight = 20
           sw $t0,($sp)#**"" # IdentifierExp at 63.10; stackHeight = 20
          # EXIT NODE # IdentifierExp at 63.10; stackHeight = 20
         jal remainder # Remainder at 63.9; stackHeight = 20
        # EXIT NODE # Remainder at 63.9; stackHeight = 12
        # ENTER NODE # Call at 63.34; stackHeight = 12
          # ENTER NODE # Call at 63.22; stackHeight = 12
            # ENTER NODE # This at 63.22; stackHeight = 12
             subu $sp,$sp,4 # This at 63.22; stackHeight = 12
             sw $s2,($sp)#**"" # This at 63.22; stackHeight = 16
            # EXIT NODE # This at 63.22; stackHeight = 16
           lw $t0,0($sp) # Call at 63.22; stackHeight = 16
           beq $t0,$zero,nullPtrException # Call at 63.22; stackHeight = 16
           lw $t0,-12($t0) # Call at 63.22; stackHeight = 16
           lw $t0,44($t0) # Call at 63.22; stackHeight = 16
           jalr $t0 # newBigInt # Call at 63.22; stackHeight = 16
          # EXIT NODE # Call at 63.22; stackHeight = 16
          # ENTER NODE # Times at 63.51; stackHeight = 16
            # ENTER NODE # Times at 63.47; stackHeight = 16
              # ENTER NODE # Times at 63.43; stackHeight = 16
                # ENTER NODE # Minus at 63.39; stackHeight = 16
                  # ENTER NODE # IntegerLiteral at 63.39; stackHeight = 16
                   subu $sp,$sp,8 # IntegerLiteral at 63.39; stackHeight = 16
                   sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 63.39; stackHeight = 24
                   li $t0,0 # IntegerLiteral at 63.39; stackHeight = 24
                   sw $t0,($sp) # IntegerLiteral at 63.39; stackHeight = 24
                  # EXIT NODE # IntegerLiteral at 63.39; stackHeight = 24
                  # ENTER NODE # IntegerLiteral at 63.40; stackHeight = 24
                   subu $sp,$sp,8 # IntegerLiteral at 63.40; stackHeight = 24
                   sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 63.40; stackHeight = 32
                   li $t0,128 # IntegerLiteral at 63.40; stackHeight = 32
                   sw $t0,($sp) # IntegerLiteral at 63.40; stackHeight = 32
                  # EXIT NODE # IntegerLiteral at 63.40; stackHeight = 32
                 lw $t0,($sp) # Minus at 63.39; stackHeight = 32
                 lw $t1,8($sp) # Minus at 63.39; stackHeight = 32
                 subu $t0,$t1,$t0 # Minus at 63.39; stackHeight = 32
                 addu $sp,$sp,8 # Minus at 63.39; stackHeight = 32
                 sw $t0,($sp)#**"" # Minus at 63.39; stackHeight = 24
                # EXIT NODE # Minus at 63.39; stackHeight = 24
                # ENTER NODE # IntegerLiteral at 63.44; stackHeight = 24
                 subu $sp,$sp,8 # IntegerLiteral at 63.44; stackHeight = 24
                 sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 63.44; stackHeight = 32
                 li $t0,256 # IntegerLiteral at 63.44; stackHeight = 32
                 sw $t0,($sp) # IntegerLiteral at 63.44; stackHeight = 32
                # EXIT NODE # IntegerLiteral at 63.44; stackHeight = 32
               lw $t0,($sp) # Times at 63.43; stackHeight = 32
               lw $t1,8($sp) # Times at 63.43; stackHeight = 32
               mult $t0,$t1 # Times at 63.43; stackHeight = 32
               mflo $t0 # Times at 63.43; stackHeight = 32
               addu $sp,$sp,8 # Times at 63.43; stackHeight = 32
               sw $t0,($sp)#**"" # Times at 63.43; stackHeight = 32
              # EXIT NODE # Times at 63.43; stackHeight = 24
              # ENTER NODE # IntegerLiteral at 63.48; stackHeight = 24
               subu $sp,$sp,8 # IntegerLiteral at 63.48; stackHeight = 24
               sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 63.48; stackHeight = 32
               li $t0,256 # IntegerLiteral at 63.48; stackHeight = 32
               sw $t0,($sp) # IntegerLiteral at 63.48; stackHeight = 32
              # EXIT NODE # IntegerLiteral at 63.48; stackHeight = 32
             lw $t0,($sp) # Times at 63.47; stackHeight = 32
             lw $t1,8($sp) # Times at 63.47; stackHeight = 32
             mult $t0,$t1 # Times at 63.47; stackHeight = 32
             mflo $t0 # Times at 63.47; stackHeight = 32
             addu $sp,$sp,8 # Times at 63.47; stackHeight = 32
             sw $t0,($sp)#**"" # Times at 63.47; stackHeight = 32
            # EXIT NODE # Times at 63.47; stackHeight = 24
            # ENTER NODE # IntegerLiteral at 63.52; stackHeight = 24
             subu $sp,$sp,8 # IntegerLiteral at 63.52; stackHeight = 24
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 63.52; stackHeight = 32
             li $t0,256 # IntegerLiteral at 63.52; stackHeight = 32
             sw $t0,($sp) # IntegerLiteral at 63.52; stackHeight = 32
            # EXIT NODE # IntegerLiteral at 63.52; stackHeight = 32
           lw $t0,($sp) # Times at 63.51; stackHeight = 32
           lw $t1,8($sp) # Times at 63.51; stackHeight = 32
           mult $t0,$t1 # Times at 63.51; stackHeight = 32
           mflo $t0 # Times at 63.51; stackHeight = 32
           addu $sp,$sp,8 # Times at 63.51; stackHeight = 32
           sw $t0,($sp)#**"" # Times at 63.51; stackHeight = 32
          # EXIT NODE # Times at 63.51; stackHeight = 24
         lw $t0,8($sp) # Call at 63.34; stackHeight = 24
         beq $t0,$zero,nullPtrException # Call at 63.34; stackHeight = 24
         lw $t0,-12($t0) # Call at 63.34; stackHeight = 24
         lw $t0,12($t0) # Call at 63.34; stackHeight = 24
         jalr $t0 # init # Call at 63.34; stackHeight = 24
        # EXIT NODE # Call at 63.34; stackHeight = 16
       lw $t0,($sp) # Assign at 63.20; stackHeight = 16
       lw $t1,12($sp) # Assign at 63.20; stackHeight = 16
       beq $t1,$zero,nullPtrException # Assign at 63.20; stackHeight = 16
       lw $t2,4($sp) # Assign at 63.20; stackHeight = 16
       lw $t3,-4($t1) # Assign at 63.20; stackHeight = 16
       bgeu $t2,$t3,arrayIndexOutOfBounds # Assign at 63.20; stackHeight = 16
       sll $t2,$t2,2 # Assign at 63.20; stackHeight = 16
       addu $t2,$t2,$t1 # Assign at 63.20; stackHeight = 16
       sw $t0,($t2) # Assign at 63.20; stackHeight = 16
       addu $sp,$sp,16 # Assign at 63.20; stackHeight = 16
      # EXIT NODE # Assign at 63.20; stackHeight = 0
      # ENTER NODE # Assign at 64.20; stackHeight = 0
        # ENTER NODE # IdentifierExp at 64.3; stackHeight = 0
         lw $t0,0($s2) # inst-var # IdentifierExp at 64.3; stackHeight = 0
         subu $sp,$sp,4 # IdentifierExp at 64.3; stackHeight = 0
         sw $t0,($sp)#**"" # IdentifierExp at 64.3; stackHeight = 4
        # EXIT NODE # IdentifierExp at 64.3; stackHeight = 4
        # ENTER NODE # Remainder at 64.9; stackHeight = 4
          # ENTER NODE # IntegerLiteral at 64.8; stackHeight = 4
           subu $sp,$sp,8 # IntegerLiteral at 64.8; stackHeight = 4
           sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 64.8; stackHeight = 12
           li $t0,6 # IntegerLiteral at 64.8; stackHeight = 12
           sw $t0,($sp) # IntegerLiteral at 64.8; stackHeight = 12
          # EXIT NODE # IntegerLiteral at 64.8; stackHeight = 12
          # ENTER NODE # IdentifierExp at 64.10; stackHeight = 12
           lw $t0,16($sp) # local: stackHt=12,var-offset=4 # IdentifierExp at 64.10; stackHeight = 12
           subu $sp,$sp,8 # IdentifierExp at 64.10; stackHeight = 12
           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 64.10; stackHeight = 20
           sw $t0,($sp)#**"" # IdentifierExp at 64.10; stackHeight = 20
          # EXIT NODE # IdentifierExp at 64.10; stackHeight = 20
         jal remainder # Remainder at 64.9; stackHeight = 20
        # EXIT NODE # Remainder at 64.9; stackHeight = 12
        # ENTER NODE # Call at 64.22; stackHeight = 12
          # ENTER NODE # This at 64.22; stackHeight = 12
           subu $sp,$sp,4 # This at 64.22; stackHeight = 12
           sw $s2,($sp)#**"" # This at 64.22; stackHeight = 16
          # EXIT NODE # This at 64.22; stackHeight = 16
          # ENTER NODE # IntegerLiteral at 64.27; stackHeight = 16
           subu $sp,$sp,8 # IntegerLiteral at 64.27; stackHeight = 16
           sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 64.27; stackHeight = 24
           li $t0,30 # IntegerLiteral at 64.27; stackHeight = 24
           sw $t0,($sp) # IntegerLiteral at 64.27; stackHeight = 24
          # EXIT NODE # IntegerLiteral at 64.27; stackHeight = 24
         lw $t0,8($sp) # Call at 64.22; stackHeight = 24
         beq $t0,$zero,nullPtrException # Call at 64.22; stackHeight = 24
         lw $t0,-12($t0) # Call at 64.22; stackHeight = 24
         lw $t0,56($t0) # Call at 64.22; stackHeight = 24
         jalr $t0 # fact # Call at 64.22; stackHeight = 24
        # EXIT NODE # Call at 64.22; stackHeight = 16
       lw $t0,($sp) # Assign at 64.20; stackHeight = 16
       lw $t1,12($sp) # Assign at 64.20; stackHeight = 16
       beq $t1,$zero,nullPtrException # Assign at 64.20; stackHeight = 16
       lw $t2,4($sp) # Assign at 64.20; stackHeight = 16
       lw $t3,-4($t1) # Assign at 64.20; stackHeight = 16
       bgeu $t2,$t3,arrayIndexOutOfBounds # Assign at 64.20; stackHeight = 16
       sll $t2,$t2,2 # Assign at 64.20; stackHeight = 16
       addu $t2,$t2,$t1 # Assign at 64.20; stackHeight = 16
       sw $t0,($t2) # Assign at 64.20; stackHeight = 16
       addu $sp,$sp,16 # Assign at 64.20; stackHeight = 16
      # EXIT NODE # Assign at 64.20; stackHeight = 0
      # ENTER NODE # Assign at 65.20; stackHeight = 0
        # ENTER NODE # IdentifierExp at 65.3; stackHeight = 0
         lw $t0,0($s2) # inst-var # IdentifierExp at 65.3; stackHeight = 0
         subu $sp,$sp,4 # IdentifierExp at 65.3; stackHeight = 0
         sw $t0,($sp)#**"" # IdentifierExp at 65.3; stackHeight = 4
        # EXIT NODE # IdentifierExp at 65.3; stackHeight = 4
        # ENTER NODE # Remainder at 65.9; stackHeight = 4
          # ENTER NODE # IntegerLiteral at 65.8; stackHeight = 4
           subu $sp,$sp,8 # IntegerLiteral at 65.8; stackHeight = 4
           sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 65.8; stackHeight = 12
           li $t0,7 # IntegerLiteral at 65.8; stackHeight = 12
           sw $t0,($sp) # IntegerLiteral at 65.8; stackHeight = 12
          # EXIT NODE # IntegerLiteral at 65.8; stackHeight = 12
          # ENTER NODE # IdentifierExp at 65.10; stackHeight = 12
           lw $t0,16($sp) # local: stackHt=12,var-offset=4 # IdentifierExp at 65.10; stackHeight = 12
           subu $sp,$sp,8 # IdentifierExp at 65.10; stackHeight = 12
           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 65.10; stackHeight = 20
           sw $t0,($sp)#**"" # IdentifierExp at 65.10; stackHeight = 20
          # EXIT NODE # IdentifierExp at 65.10; stackHeight = 20
         jal remainder # Remainder at 65.9; stackHeight = 20
        # EXIT NODE # Remainder at 65.9; stackHeight = 12
        # ENTER NODE # Call at 65.22; stackHeight = 12
          # ENTER NODE # This at 65.22; stackHeight = 12
           subu $sp,$sp,4 # This at 65.22; stackHeight = 12
           sw $s2,($sp)#**"" # This at 65.22; stackHeight = 16
          # EXIT NODE # This at 65.22; stackHeight = 16
          # ENTER NODE # IntegerLiteral at 65.27; stackHeight = 16
           subu $sp,$sp,8 # IntegerLiteral at 65.27; stackHeight = 16
           sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 65.27; stackHeight = 24
           li $t0,51 # IntegerLiteral at 65.27; stackHeight = 24
           sw $t0,($sp) # IntegerLiteral at 65.27; stackHeight = 24
          # EXIT NODE # IntegerLiteral at 65.27; stackHeight = 24
         lw $t0,8($sp) # Call at 65.22; stackHeight = 24
         beq $t0,$zero,nullPtrException # Call at 65.22; stackHeight = 24
         lw $t0,-12($t0) # Call at 65.22; stackHeight = 24
         lw $t0,56($t0) # Call at 65.22; stackHeight = 24
         jalr $t0 # fact # Call at 65.22; stackHeight = 24
        # EXIT NODE # Call at 65.22; stackHeight = 16
       lw $t0,($sp) # Assign at 65.20; stackHeight = 16
       lw $t1,12($sp) # Assign at 65.20; stackHeight = 16
       beq $t1,$zero,nullPtrException # Assign at 65.20; stackHeight = 16
       lw $t2,4($sp) # Assign at 65.20; stackHeight = 16
       lw $t3,-4($t1) # Assign at 65.20; stackHeight = 16
       bgeu $t2,$t3,arrayIndexOutOfBounds # Assign at 65.20; stackHeight = 16
       sll $t2,$t2,2 # Assign at 65.20; stackHeight = 16
       addu $t2,$t2,$t1 # Assign at 65.20; stackHeight = 16
       sw $t0,($t2) # Assign at 65.20; stackHeight = 16
       addu $sp,$sp,16 # Assign at 65.20; stackHeight = 16
      # EXIT NODE # Assign at 65.20; stackHeight = 0
      # ENTER NODE # Assign at 66.20; stackHeight = 0
        # ENTER NODE # IdentifierExp at 66.3; stackHeight = 0
         lw $t0,0($s2) # inst-var # IdentifierExp at 66.3; stackHeight = 0
         subu $sp,$sp,4 # IdentifierExp at 66.3; stackHeight = 0
         sw $t0,($sp)#**"" # IdentifierExp at 66.3; stackHeight = 4
        # EXIT NODE # IdentifierExp at 66.3; stackHeight = 4
        # ENTER NODE # Remainder at 66.9; stackHeight = 4
          # ENTER NODE # IntegerLiteral at 66.8; stackHeight = 4
           subu $sp,$sp,8 # IntegerLiteral at 66.8; stackHeight = 4
           sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 66.8; stackHeight = 12
           li $t0,8 # IntegerLiteral at 66.8; stackHeight = 12
           sw $t0,($sp) # IntegerLiteral at 66.8; stackHeight = 12
          # EXIT NODE # IntegerLiteral at 66.8; stackHeight = 12
          # ENTER NODE # IdentifierExp at 66.10; stackHeight = 12
           lw $t0,16($sp) # local: stackHt=12,var-offset=4 # IdentifierExp at 66.10; stackHeight = 12
           subu $sp,$sp,8 # IdentifierExp at 66.10; stackHeight = 12
           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 66.10; stackHeight = 20
           sw $t0,($sp)#**"" # IdentifierExp at 66.10; stackHeight = 20
          # EXIT NODE # IdentifierExp at 66.10; stackHeight = 20
         jal remainder # Remainder at 66.9; stackHeight = 20
        # EXIT NODE # Remainder at 66.9; stackHeight = 12
        # ENTER NODE # Call at 66.22; stackHeight = 12
          # ENTER NODE # This at 66.22; stackHeight = 12
           subu $sp,$sp,4 # This at 66.22; stackHeight = 12
           sw $s2,($sp)#**"" # This at 66.22; stackHeight = 16
          # EXIT NODE # This at 66.22; stackHeight = 16
          # ENTER NODE # IntegerLiteral at 66.27; stackHeight = 16
           subu $sp,$sp,8 # IntegerLiteral at 66.27; stackHeight = 16
           sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 66.27; stackHeight = 24
           li $t0,100 # IntegerLiteral at 66.27; stackHeight = 24
           sw $t0,($sp) # IntegerLiteral at 66.27; stackHeight = 24
          # EXIT NODE # IntegerLiteral at 66.27; stackHeight = 24
         lw $t0,8($sp) # Call at 66.22; stackHeight = 24
         beq $t0,$zero,nullPtrException # Call at 66.22; stackHeight = 24
         lw $t0,-12($t0) # Call at 66.22; stackHeight = 24
         lw $t0,56($t0) # Call at 66.22; stackHeight = 24
         jalr $t0 # fact # Call at 66.22; stackHeight = 24
        # EXIT NODE # Call at 66.22; stackHeight = 16
       lw $t0,($sp) # Assign at 66.20; stackHeight = 16
       lw $t1,12($sp) # Assign at 66.20; stackHeight = 16
       beq $t1,$zero,nullPtrException # Assign at 66.20; stackHeight = 16
       lw $t2,4($sp) # Assign at 66.20; stackHeight = 16
       lw $t3,-4($t1) # Assign at 66.20; stackHeight = 16
       bgeu $t2,$t3,arrayIndexOutOfBounds # Assign at 66.20; stackHeight = 16
       sll $t2,$t2,2 # Assign at 66.20; stackHeight = 16
       addu $t2,$t2,$t1 # Assign at 66.20; stackHeight = 16
       sw $t0,($t2) # Assign at 66.20; stackHeight = 16
       addu $sp,$sp,16 # Assign at 66.20; stackHeight = 16
      # EXIT NODE # Assign at 66.20; stackHeight = 0
      # ENTER NODE # LocalVarDecl at 67.7; stackHeight = 0
        # ENTER NODE # Minus at 67.27; stackHeight = 0
          # ENTER NODE # ArrayLength at 67.20; stackHeight = 0
            # ENTER NODE # IdentifierExp at 67.16; stackHeight = 0
             lw $t0,0($s2) # inst-var # IdentifierExp at 67.16; stackHeight = 0
             subu $sp,$sp,4 # IdentifierExp at 67.16; stackHeight = 0
             sw $t0,($sp)#**"" # IdentifierExp at 67.16; stackHeight = 4
            # EXIT NODE # IdentifierExp at 67.16; stackHeight = 4
           lw $t0,($sp) # ArrayLength at 67.20; stackHeight = 4
           beq $t0,$zero,nullPtrException # ArrayLength at 67.20; stackHeight = 4
           lw $t0,-4($t0) # ArrayLength at 67.20; stackHeight = 4
           sw $s5,($sp)#**"GC tag" # ArrayLength at 67.20; stackHeight = 4
           subu $sp,4 # ArrayLength at 67.20; stackHeight = 4
           sw $t0,($sp)#**"" # ArrayLength at 67.20; stackHeight = 4
          # EXIT NODE # ArrayLength at 67.20; stackHeight = 8
          # ENTER NODE # IntegerLiteral at 67.28; stackHeight = 8
           subu $sp,$sp,8 # IntegerLiteral at 67.28; stackHeight = 8
           sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 67.28; stackHeight = 16
           li $t0,1 # IntegerLiteral at 67.28; stackHeight = 16
           sw $t0,($sp) # IntegerLiteral at 67.28; stackHeight = 16
          # EXIT NODE # IntegerLiteral at 67.28; stackHeight = 16
         lw $t0,($sp) # Minus at 67.27; stackHeight = 16
         lw $t1,8($sp) # Minus at 67.27; stackHeight = 16
         subu $t0,$t1,$t0 # Minus at 67.27; stackHeight = 16
         addu $sp,$sp,8 # Minus at 67.27; stackHeight = 16
         sw $t0,($sp)#**"" # Minus at 67.27; stackHeight = 8
        # EXIT NODE # Minus at 67.27; stackHeight = 8
        # ENTER NODE # IntegerLiteral at 67.31; stackHeight = 8
         subu $sp,$sp,8 # IntegerLiteral at 67.31; stackHeight = 8
         sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 67.31; stackHeight = 16
         li $t0,2 # IntegerLiteral at 67.31; stackHeight = 16
         sw $t0,($sp) # IntegerLiteral at 67.31; stackHeight = 16
        # EXIT NODE # IntegerLiteral at 67.31; stackHeight = 16
       jal divide # Divide at 67.30; stackHeight = 16
      # EXIT NODE # Divide at 67.30; stackHeight = 8
    # EXIT NODE # LocalVarDecl at 67.7; stackHeight = 8
    # ENTER NODE # Block at 68.3; stackHeight = 8
      # ENTER NODE # LocalVarDecl at 68.12; stackHeight = 8
        # ENTER NODE # IntegerLiteral at 68.16; stackHeight = 8
         subu $sp,$sp,8 # IntegerLiteral at 68.16; stackHeight = 8
         sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 68.16; stackHeight = 16
         li $t0,0 # IntegerLiteral at 68.16; stackHeight = 16
         sw $t0,($sp) # IntegerLiteral at 68.16; stackHeight = 16
        # EXIT NODE # IntegerLiteral at 68.16; stackHeight = 16
      # EXIT NODE # LocalVarDecl at 68.12; stackHeight = 16
      # ENTER NODE # While at 68.3; stackHeight = 16
      j while_enter_172 # While at 68.3; stackHeight = 16
      while_top_172: # While at 68.3; stackHeight = 16
        # ENTER NODE # Block at 68.3; stackHeight = 16
          # ENTER NODE # Block at 68.35; stackHeight = 16
            # ENTER NODE # Assign at 69.18; stackHeight = 16
              # ENTER NODE # IdentifierExp at 69.4; stackHeight = 16
               lw $t0,0($s2) # inst-var # IdentifierExp at 69.4; stackHeight = 16
               subu $sp,$sp,4 # IdentifierExp at 69.4; stackHeight = 16
               sw $t0,($sp)#**"" # IdentifierExp at 69.4; stackHeight = 20
              # EXIT NODE # IdentifierExp at 69.4; stackHeight = 20
              # ENTER NODE # Plus at 69.10; stackHeight = 20
                # ENTER NODE # IdentifierExp at 69.9; stackHeight = 20
                 lw $t0,4($sp) # local: stackHt=20,var-offset=-16 # IdentifierExp at 69.9; stackHeight = 20
                 subu $sp,$sp,8 # IdentifierExp at 69.9; stackHeight = 20
                 sw $s5,4($sp)#**"GC tag" # IdentifierExp at 69.9; stackHeight = 28
                 sw $t0,($sp)#**"" # IdentifierExp at 69.9; stackHeight = 28
                # EXIT NODE # IdentifierExp at 69.9; stackHeight = 28
                # ENTER NODE # IdentifierExp at 69.11; stackHeight = 28
                 lw $t0,20($sp) # local: stackHt=28,var-offset=-8 # IdentifierExp at 69.11; stackHeight = 28
                 subu $sp,$sp,8 # IdentifierExp at 69.11; stackHeight = 28
                 sw $s5,4($sp)#**"GC tag" # IdentifierExp at 69.11; stackHeight = 36
                 sw $t0,($sp)#**"" # IdentifierExp at 69.11; stackHeight = 36
                # EXIT NODE # IdentifierExp at 69.11; stackHeight = 36
               lw $t0,($sp) # Plus at 69.10; stackHeight = 36
               lw $t1,8($sp) # Plus at 69.10; stackHeight = 36
               addu $t0,$t0,$t1 # Plus at 69.10; stackHeight = 36
               addu $sp,$sp,8 # Plus at 69.10; stackHeight = 36
               sw $t0,($sp)#**"" # Plus at 69.10; stackHeight = 36
              # EXIT NODE # Plus at 69.10; stackHeight = 28
              # ENTER NODE # Call at 69.28; stackHeight = 28
                # ENTER NODE # IdentifierExp at 69.20; stackHeight = 28
                 lw $t0,0($s2) # inst-var # IdentifierExp at 69.20; stackHeight = 28
                 subu $sp,$sp,4 # IdentifierExp at 69.20; stackHeight = 28
                 sw $t0,($sp)#**"" # IdentifierExp at 69.20; stackHeight = 32
                # EXIT NODE # IdentifierExp at 69.20; stackHeight = 32
                # ENTER NODE # IdentifierExp at 69.25; stackHeight = 32
                 lw $t0,16($sp) # local: stackHt=32,var-offset=-16 # IdentifierExp at 69.25; stackHeight = 32
                 subu $sp,$sp,8 # IdentifierExp at 69.25; stackHeight = 32
                 sw $s5,4($sp)#**"GC tag" # IdentifierExp at 69.25; stackHeight = 40
                 sw $t0,($sp)#**"" # IdentifierExp at 69.25; stackHeight = 40
                # EXIT NODE # IdentifierExp at 69.25; stackHeight = 40
               lw $t0,8($sp) # ArrayLookup at 69.24; stackHeight = 40
               beq $t0,$zero,nullPtrException # ArrayLookup at 69.24; stackHeight = 40
               lw $t1,-4($t0) # ArrayLookup at 69.24; stackHeight = 40
               lw $t2,($sp) # ArrayLookup at 69.24; stackHeight = 40
               bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 69.24; stackHeight = 40
               sll $t2,$t2,2 # ArrayLookup at 69.24; stackHeight = 40
               addu $t2,$t2,$t0 # ArrayLookup at 69.24; stackHeight = 40
               lw $t0,($t2) # ArrayLookup at 69.24; stackHeight = 40
               sw $t0,8($sp)#**"" # ArrayLookup at 69.24; stackHeight = 40
               addu $sp,$sp,8 # ArrayLookup at 69.24; stackHeight = 40
              # EXIT NODE # ArrayLookup at 69.24; stackHeight = 32
             lw $t0,0($sp) # Call at 69.28; stackHeight = 32
             beq $t0,$zero,nullPtrException # Call at 69.28; stackHeight = 32
             lw $t0,-12($t0) # Call at 69.28; stackHeight = 32
             lw $t0,28($t0) # Call at 69.28; stackHeight = 32
             jalr $t0 # negate # Call at 69.28; stackHeight = 32
            # EXIT NODE # Call at 69.28; stackHeight = 32
           lw $t0,($sp) # Assign at 69.18; stackHeight = 32
           lw $t1,12($sp) # Assign at 69.18; stackHeight = 32
           beq $t1,$zero,nullPtrException # Assign at 69.18; stackHeight = 32
           lw $t2,4($sp) # Assign at 69.18; stackHeight = 32
           lw $t3,-4($t1) # Assign at 69.18; stackHeight = 32
           bgeu $t2,$t3,arrayIndexOutOfBounds # Assign at 69.18; stackHeight = 32
           sll $t2,$t2,2 # Assign at 69.18; stackHeight = 32
           addu $t2,$t2,$t1 # Assign at 69.18; stackHeight = 32
           sw $t0,($t2) # Assign at 69.18; stackHeight = 32
           addu $sp,$sp,16 # Assign at 69.18; stackHeight = 32
          # EXIT NODE # Assign at 69.18; stackHeight = 16
        # EXIT NODE # Block at 68.35; stackHeight = 16
        # ENTER NODE # Assign at 68.30; stackHeight = 16
          # ENTER NODE # Plus at 68.31; stackHeight = 16
            # ENTER NODE # IdentifierExp at 68.30; stackHeight = 16
             lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 68.30; stackHeight = 16
             subu $sp,$sp,8 # IdentifierExp at 68.30; stackHeight = 16
             sw $s5,4($sp)#**"GC tag" # IdentifierExp at 68.30; stackHeight = 24
             sw $t0,($sp)#**"" # IdentifierExp at 68.30; stackHeight = 24
            # EXIT NODE # IdentifierExp at 68.30; stackHeight = 24
            # ENTER NODE # IntegerLiteral at 68.31; stackHeight = 24
             subu $sp,$sp,8 # IntegerLiteral at 68.31; stackHeight = 24
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 68.31; stackHeight = 32
             li $t0,1 # IntegerLiteral at 68.31; stackHeight = 32
             sw $t0,($sp) # IntegerLiteral at 68.31; stackHeight = 32
            # EXIT NODE # IntegerLiteral at 68.31; stackHeight = 32
           lw $t0,($sp) # Plus at 68.31; stackHeight = 32
           lw $t1,8($sp) # Plus at 68.31; stackHeight = 32
           addu $t0,$t0,$t1 # Plus at 68.31; stackHeight = 32
           addu $sp,$sp,8 # Plus at 68.31; stackHeight = 32
           sw $t0,($sp)#**"" # Plus at 68.31; stackHeight = 32
          # EXIT NODE # Plus at 68.31; stackHeight = 24
         lw $t0,($sp) # Assign at 68.30; stackHeight = 24
         sw $t0,8($sp) # Assign at 68.30; stackHeight = 24
         addu $sp,$sp,8 # Assign at 68.30; stackHeight = 24
        # EXIT NODE # Assign at 68.30; stackHeight = 16
      # EXIT NODE # Block at 68.3; stackHeight = 16
    while_enter_172: # While at 68.3; stackHeight = 16
      # ENTER NODE # LessThan at 68.21; stackHeight = 16
        # ENTER NODE # IdentifierExp at 68.19; stackHeight = 16
         lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 68.19; stackHeight = 16
         subu $sp,$sp,8 # IdentifierExp at 68.19; stackHeight = 16
         sw $s5,4($sp)#**"GC tag" # IdentifierExp at 68.19; stackHeight = 24
         sw $t0,($sp)#**"" # IdentifierExp at 68.19; stackHeight = 24
        # EXIT NODE # IdentifierExp at 68.19; stackHeight = 24
        # ENTER NODE # IdentifierExp at 68.23; stackHeight = 24
         lw $t0,16($sp) # local: stackHt=24,var-offset=-8 # IdentifierExp at 68.23; stackHeight = 24
         subu $sp,$sp,8 # IdentifierExp at 68.23; stackHeight = 24
         sw $s5,4($sp)#**"GC tag" # IdentifierExp at 68.23; stackHeight = 32
         sw $t0,($sp)#**"" # IdentifierExp at 68.23; stackHeight = 32
        # EXIT NODE # IdentifierExp at 68.23; stackHeight = 32
       lw $t0,($sp) # LessThan at 68.21; stackHeight = 32
       lw $t1,8($sp) # LessThan at 68.21; stackHeight = 32
       slt $t0,$t1,$t0 # LessThan at 68.21; stackHeight = 32
       addu $sp,$sp,12 # LessThan at 68.21; stackHeight = 32
       sw $t0,($sp)#**"" # LessThan at 68.21; stackHeight = 20
      # EXIT NODE # LessThan at 68.21; stackHeight = 20
     lw $t0,($sp) # While at 68.3; stackHeight = 20
     addu $sp,$sp,4 # While at 68.3; stackHeight = 20
    bne $t0,$zero,while_top_172 # While at 68.3; stackHeight = 16
    break_target_172: # While at 68.3; stackHeight = 16
    # EXIT NODE # While at 68.3; stackHeight = 16
   addu $sp,8 # Block at 68.3; stackHeight = 16
  # EXIT NODE # Block at 68.3; stackHeight = 8
  # ENTER NODE # Assign at 71.17; stackHeight = 8
    # ENTER NODE # IdentifierExp at 71.3; stackHeight = 8
     lw $t0,0($s2) # inst-var # IdentifierExp at 71.3; stackHeight = 8
     subu $sp,$sp,4 # IdentifierExp at 71.3; stackHeight = 8
     sw $t0,($sp)#**"" # IdentifierExp at 71.3; stackHeight = 12
    # EXIT NODE # IdentifierExp at 71.3; stackHeight = 12
    # ENTER NODE # Times at 71.13; stackHeight = 12
      # ENTER NODE # IdentifierExp at 71.8; stackHeight = 12
       lw $t0,4($sp) # local: stackHt=12,var-offset=-8 # IdentifierExp at 71.8; stackHeight = 12
       subu $sp,$sp,8 # IdentifierExp at 71.8; stackHeight = 12
       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 71.8; stackHeight = 20
       sw $t0,($sp)#**"" # IdentifierExp at 71.8; stackHeight = 20
      # EXIT NODE # IdentifierExp at 71.8; stackHeight = 20
      # ENTER NODE # IntegerLiteral at 71.14; stackHeight = 20
       subu $sp,$sp,8 # IntegerLiteral at 71.14; stackHeight = 20
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 71.14; stackHeight = 28
       li $t0,2 # IntegerLiteral at 71.14; stackHeight = 28
       sw $t0,($sp) # IntegerLiteral at 71.14; stackHeight = 28
      # EXIT NODE # IntegerLiteral at 71.14; stackHeight = 28
     lw $t0,($sp) # Times at 71.13; stackHeight = 28
     lw $t1,8($sp) # Times at 71.13; stackHeight = 28
     mult $t0,$t1 # Times at 71.13; stackHeight = 28
     mflo $t0 # Times at 71.13; stackHeight = 28
     addu $sp,$sp,8 # Times at 71.13; stackHeight = 28
     sw $t0,($sp)#**"" # Times at 71.13; stackHeight = 28
    # EXIT NODE # Times at 71.13; stackHeight = 20
    # ENTER NODE # IdentifierExp at 71.19; stackHeight = 20
     lw $t0,8($s2) # inst-var # IdentifierExp at 71.19; stackHeight = 20
     subu $sp,$sp,4 # IdentifierExp at 71.19; stackHeight = 20
     sw $t0,($sp)#**"" # IdentifierExp at 71.19; stackHeight = 24
    # EXIT NODE # IdentifierExp at 71.19; stackHeight = 24
   lw $t0,($sp) # Assign at 71.17; stackHeight = 24
   lw $t1,12($sp) # Assign at 71.17; stackHeight = 24
   beq $t1,$zero,nullPtrException # Assign at 71.17; stackHeight = 24
   lw $t2,4($sp) # Assign at 71.17; stackHeight = 24
   lw $t3,-4($t1) # Assign at 71.17; stackHeight = 24
   bgeu $t2,$t3,arrayIndexOutOfBounds # Assign at 71.17; stackHeight = 24
   sll $t2,$t2,2 # Assign at 71.17; stackHeight = 24
   addu $t2,$t2,$t1 # Assign at 71.17; stackHeight = 24
   sw $t0,($t2) # Assign at 71.17; stackHeight = 24
   addu $sp,$sp,16 # Assign at 71.17; stackHeight = 24
  # EXIT NODE # Assign at 71.17; stackHeight = 8
  # ENTER NODE # Assign at 73.10; stackHeight = 8
    # ENTER NODE # NewArray at 73.12; stackHeight = 8
      # ENTER NODE # Times at 73.31; stackHeight = 8
        # ENTER NODE # IdentifierExp at 73.23; stackHeight = 8
         lw $t0,12($sp) # local: stackHt=8,var-offset=4 # IdentifierExp at 73.23; stackHeight = 8
         subu $sp,$sp,8 # IdentifierExp at 73.23; stackHeight = 8
         sw $s5,4($sp)#**"GC tag" # IdentifierExp at 73.23; stackHeight = 16
         sw $t0,($sp)#**"" # IdentifierExp at 73.23; stackHeight = 16
        # EXIT NODE # IdentifierExp at 73.23; stackHeight = 16
        # ENTER NODE # IntegerLiteral at 73.32; stackHeight = 16
         subu $sp,$sp,8 # IntegerLiteral at 73.32; stackHeight = 16
         sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 73.32; stackHeight = 24
         li $t0,2 # IntegerLiteral at 73.32; stackHeight = 24
         sw $t0,($sp) # IntegerLiteral at 73.32; stackHeight = 24
        # EXIT NODE # IntegerLiteral at 73.32; stackHeight = 24
       lw $t0,($sp) # Times at 73.31; stackHeight = 24
       lw $t1,8($sp) # Times at 73.31; stackHeight = 24
       mult $t0,$t1 # Times at 73.31; stackHeight = 24
       mflo $t0 # Times at 73.31; stackHeight = 24
       addu $sp,$sp,8 # Times at 73.31; stackHeight = 24
       sw $t0,($sp)#**"" # Times at 73.31; stackHeight = 24
      # EXIT NODE # Times at 73.31; stackHeight = 16
     lw $s7,($sp) # NewArray at 73.12; stackHeight = 16
     addu $sp,$sp,8 # NewArray at 73.12; stackHeight = 16
     li $s6, 1 # NewArray at 73.12; stackHeight = 8
     jal newObject # NewArray at 73.12; stackHeight = 8
     la $t0,CLASS__ARRAY_BigInt # NewArray at 73.12; stackHeight = 12
     sw $t0,-12($s7)#**"VTP: _ARRAY_BigInt" # NewArray at 73.12; stackHeight = 12
    # EXIT NODE # NewArray at 73.12; stackHeight = 12
   lw $t0,($sp) # Assign at 73.10; stackHeight = 12
   sw $t0,4($s2) # Assign at 73.10; stackHeight = 12
   addu $sp,$sp,4 # Assign at 73.10; stackHeight = 12
  # EXIT NODE # Assign at 73.10; stackHeight = 8
  # ENTER NODE # Assign at 74.22; stackHeight = 8
    # ENTER NODE # IdentifierExp at 74.3; stackHeight = 8
     lw $t0,4($s2) # inst-var # IdentifierExp at 74.3; stackHeight = 8
     subu $sp,$sp,4 # IdentifierExp at 74.3; stackHeight = 8
     sw $t0,($sp)#**"" # IdentifierExp at 74.3; stackHeight = 12
    # EXIT NODE # IdentifierExp at 74.3; stackHeight = 12
    # ENTER NODE # Remainder at 74.11; stackHeight = 12
      # ENTER NODE # IntegerLiteral at 74.10; stackHeight = 12
       subu $sp,$sp,8 # IntegerLiteral at 74.10; stackHeight = 12
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 74.10; stackHeight = 20
       li $t0,0 # IntegerLiteral at 74.10; stackHeight = 20
       sw $t0,($sp) # IntegerLiteral at 74.10; stackHeight = 20
      # EXIT NODE # IntegerLiteral at 74.10; stackHeight = 20
      # ENTER NODE # IdentifierExp at 74.12; stackHeight = 20
       lw $t0,24($sp) # local: stackHt=20,var-offset=4 # IdentifierExp at 74.12; stackHeight = 20
       subu $sp,$sp,8 # IdentifierExp at 74.12; stackHeight = 20
       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 74.12; stackHeight = 28
       sw $t0,($sp)#**"" # IdentifierExp at 74.12; stackHeight = 28
      # EXIT NODE # IdentifierExp at 74.12; stackHeight = 28
     jal remainder # Remainder at 74.11; stackHeight = 28
    # EXIT NODE # Remainder at 74.11; stackHeight = 20
    # ENTER NODE # Call at 74.36; stackHeight = 20
      # ENTER NODE # Call at 74.24; stackHeight = 20
        # ENTER NODE # This at 74.24; stackHeight = 20
         subu $sp,$sp,4 # This at 74.24; stackHeight = 20
         sw $s2,($sp)#**"" # This at 74.24; stackHeight = 24
        # EXIT NODE # This at 74.24; stackHeight = 24
       lw $t0,0($sp) # Call at 74.24; stackHeight = 24
       beq $t0,$zero,nullPtrException # Call at 74.24; stackHeight = 24
       lw $t0,-12($t0) # Call at 74.24; stackHeight = 24
       lw $t0,44($t0) # Call at 74.24; stackHeight = 24
       jalr $t0 # newBigInt # Call at 74.24; stackHeight = 24
      # EXIT NODE # Call at 74.24; stackHeight = 24
      # ENTER NODE # IntegerLiteral at 74.41; stackHeight = 24
       subu $sp,$sp,8 # IntegerLiteral at 74.41; stackHeight = 24
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 74.41; stackHeight = 32
       li $t0,43 # IntegerLiteral at 74.41; stackHeight = 32
       sw $t0,($sp) # IntegerLiteral at 74.41; stackHeight = 32
      # EXIT NODE # IntegerLiteral at 74.41; stackHeight = 32
     lw $t0,8($sp) # Call at 74.36; stackHeight = 32
     beq $t0,$zero,nullPtrException # Call at 74.36; stackHeight = 32
     lw $t0,-12($t0) # Call at 74.36; stackHeight = 32
     lw $t0,12($t0) # Call at 74.36; stackHeight = 32
     jalr $t0 # init # Call at 74.36; stackHeight = 32
    # EXIT NODE # Call at 74.36; stackHeight = 24
   lw $t0,($sp) # Assign at 74.22; stackHeight = 24
   lw $t1,12($sp) # Assign at 74.22; stackHeight = 24
   beq $t1,$zero,nullPtrException # Assign at 74.22; stackHeight = 24
   lw $t2,4($sp) # Assign at 74.22; stackHeight = 24
   lw $t3,-4($t1) # Assign at 74.22; stackHeight = 24
   bgeu $t2,$t3,arrayIndexOutOfBounds # Assign at 74.22; stackHeight = 24
   sll $t2,$t2,2 # Assign at 74.22; stackHeight = 24
   addu $t2,$t2,$t1 # Assign at 74.22; stackHeight = 24
   sw $t0,($t2) # Assign at 74.22; stackHeight = 24
   addu $sp,$sp,16 # Assign at 74.22; stackHeight = 24
  # EXIT NODE # Assign at 74.22; stackHeight = 8
  # ENTER NODE # Assign at 75.22; stackHeight = 8
    # ENTER NODE # IdentifierExp at 75.3; stackHeight = 8
     lw $t0,4($s2) # inst-var # IdentifierExp at 75.3; stackHeight = 8
     subu $sp,$sp,4 # IdentifierExp at 75.3; stackHeight = 8
     sw $t0,($sp)#**"" # IdentifierExp at 75.3; stackHeight = 12
    # EXIT NODE # IdentifierExp at 75.3; stackHeight = 12
    # ENTER NODE # Remainder at 75.11; stackHeight = 12
      # ENTER NODE # IntegerLiteral at 75.10; stackHeight = 12
       subu $sp,$sp,8 # IntegerLiteral at 75.10; stackHeight = 12
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 75.10; stackHeight = 20
       li $t0,1 # IntegerLiteral at 75.10; stackHeight = 20
       sw $t0,($sp) # IntegerLiteral at 75.10; stackHeight = 20
      # EXIT NODE # IntegerLiteral at 75.10; stackHeight = 20
      # ENTER NODE # IdentifierExp at 75.12; stackHeight = 20
       lw $t0,24($sp) # local: stackHt=20,var-offset=4 # IdentifierExp at 75.12; stackHeight = 20
       subu $sp,$sp,8 # IdentifierExp at 75.12; stackHeight = 20
       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 75.12; stackHeight = 28
       sw $t0,($sp)#**"" # IdentifierExp at 75.12; stackHeight = 28
      # EXIT NODE # IdentifierExp at 75.12; stackHeight = 28
     jal remainder # Remainder at 75.11; stackHeight = 28
    # EXIT NODE # Remainder at 75.11; stackHeight = 20
    # ENTER NODE # Call at 75.36; stackHeight = 20
      # ENTER NODE # Call at 75.24; stackHeight = 20
        # ENTER NODE # This at 75.24; stackHeight = 20
         subu $sp,$sp,4 # This at 75.24; stackHeight = 20
         sw $s2,($sp)#**"" # This at 75.24; stackHeight = 24
        # EXIT NODE # This at 75.24; stackHeight = 24
       lw $t0,0($sp) # Call at 75.24; stackHeight = 24
       beq $t0,$zero,nullPtrException # Call at 75.24; stackHeight = 24
       lw $t0,-12($t0) # Call at 75.24; stackHeight = 24
       lw $t0,44($t0) # Call at 75.24; stackHeight = 24
       jalr $t0 # newBigInt # Call at 75.24; stackHeight = 24
      # EXIT NODE # Call at 75.24; stackHeight = 24
      # ENTER NODE # IntegerLiteral at 75.41; stackHeight = 24
       subu $sp,$sp,8 # IntegerLiteral at 75.41; stackHeight = 24
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 75.41; stackHeight = 32
       li $t0,97 # IntegerLiteral at 75.41; stackHeight = 32
       sw $t0,($sp) # IntegerLiteral at 75.41; stackHeight = 32
      # EXIT NODE # IntegerLiteral at 75.41; stackHeight = 32
     lw $t0,8($sp) # Call at 75.36; stackHeight = 32
     beq $t0,$zero,nullPtrException # Call at 75.36; stackHeight = 32
     lw $t0,-12($t0) # Call at 75.36; stackHeight = 32
     lw $t0,12($t0) # Call at 75.36; stackHeight = 32
     jalr $t0 # init # Call at 75.36; stackHeight = 32
    # EXIT NODE # Call at 75.36; stackHeight = 24
   lw $t0,($sp) # Assign at 75.22; stackHeight = 24
   lw $t1,12($sp) # Assign at 75.22; stackHeight = 24
   beq $t1,$zero,nullPtrException # Assign at 75.22; stackHeight = 24
   lw $t2,4($sp) # Assign at 75.22; stackHeight = 24
   lw $t3,-4($t1) # Assign at 75.22; stackHeight = 24
   bgeu $t2,$t3,arrayIndexOutOfBounds # Assign at 75.22; stackHeight = 24
   sll $t2,$t2,2 # Assign at 75.22; stackHeight = 24
   addu $t2,$t2,$t1 # Assign at 75.22; stackHeight = 24
   sw $t0,($t2) # Assign at 75.22; stackHeight = 24
   addu $sp,$sp,16 # Assign at 75.22; stackHeight = 24
  # EXIT NODE # Assign at 75.22; stackHeight = 8
  # ENTER NODE # Assign at 76.22; stackHeight = 8
    # ENTER NODE # IdentifierExp at 76.3; stackHeight = 8
     lw $t0,4($s2) # inst-var # IdentifierExp at 76.3; stackHeight = 8
     subu $sp,$sp,4 # IdentifierExp at 76.3; stackHeight = 8
     sw $t0,($sp)#**"" # IdentifierExp at 76.3; stackHeight = 12
    # EXIT NODE # IdentifierExp at 76.3; stackHeight = 12
    # ENTER NODE # Remainder at 76.11; stackHeight = 12
      # ENTER NODE # IntegerLiteral at 76.10; stackHeight = 12
       subu $sp,$sp,8 # IntegerLiteral at 76.10; stackHeight = 12
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 76.10; stackHeight = 20
       li $t0,2 # IntegerLiteral at 76.10; stackHeight = 20
       sw $t0,($sp) # IntegerLiteral at 76.10; stackHeight = 20
      # EXIT NODE # IntegerLiteral at 76.10; stackHeight = 20
      # ENTER NODE # IdentifierExp at 76.12; stackHeight = 20
       lw $t0,24($sp) # local: stackHt=20,var-offset=4 # IdentifierExp at 76.12; stackHeight = 20
       subu $sp,$sp,8 # IdentifierExp at 76.12; stackHeight = 20
       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 76.12; stackHeight = 28
       sw $t0,($sp)#**"" # IdentifierExp at 76.12; stackHeight = 28
      # EXIT NODE # IdentifierExp at 76.12; stackHeight = 28
     jal remainder # Remainder at 76.11; stackHeight = 28
    # EXIT NODE # Remainder at 76.11; stackHeight = 20
    # ENTER NODE # Call at 76.36; stackHeight = 20
      # ENTER NODE # Call at 76.24; stackHeight = 20
        # ENTER NODE # This at 76.24; stackHeight = 20
         subu $sp,$sp,4 # This at 76.24; stackHeight = 20
         sw $s2,($sp)#**"" # This at 76.24; stackHeight = 24
        # EXIT NODE # This at 76.24; stackHeight = 24
       lw $t0,0($sp) # Call at 76.24; stackHeight = 24
       beq $t0,$zero,nullPtrException # Call at 76.24; stackHeight = 24
       lw $t0,-12($t0) # Call at 76.24; stackHeight = 24
       lw $t0,44($t0) # Call at 76.24; stackHeight = 24
       jalr $t0 # newBigInt # Call at 76.24; stackHeight = 24
      # EXIT NODE # Call at 76.24; stackHeight = 24
      # ENTER NODE # IntegerLiteral at 76.41; stackHeight = 24
       subu $sp,$sp,8 # IntegerLiteral at 76.41; stackHeight = 24
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 76.41; stackHeight = 32
       li $t0,421 # IntegerLiteral at 76.41; stackHeight = 32
       sw $t0,($sp) # IntegerLiteral at 76.41; stackHeight = 32
      # EXIT NODE # IntegerLiteral at 76.41; stackHeight = 32
     lw $t0,8($sp) # Call at 76.36; stackHeight = 32
     beq $t0,$zero,nullPtrException # Call at 76.36; stackHeight = 32
     lw $t0,-12($t0) # Call at 76.36; stackHeight = 32
     lw $t0,12($t0) # Call at 76.36; stackHeight = 32
     jalr $t0 # init # Call at 76.36; stackHeight = 32
    # EXIT NODE # Call at 76.36; stackHeight = 24
   lw $t0,($sp) # Assign at 76.22; stackHeight = 24
   lw $t1,12($sp) # Assign at 76.22; stackHeight = 24
   beq $t1,$zero,nullPtrException # Assign at 76.22; stackHeight = 24
   lw $t2,4($sp) # Assign at 76.22; stackHeight = 24
   lw $t3,-4($t1) # Assign at 76.22; stackHeight = 24
   bgeu $t2,$t3,arrayIndexOutOfBounds # Assign at 76.22; stackHeight = 24
   sll $t2,$t2,2 # Assign at 76.22; stackHeight = 24
   addu $t2,$t2,$t1 # Assign at 76.22; stackHeight = 24
   sw $t0,($t2) # Assign at 76.22; stackHeight = 24
   addu $sp,$sp,16 # Assign at 76.22; stackHeight = 24
  # EXIT NODE # Assign at 76.22; stackHeight = 8
  # ENTER NODE # Assign at 77.22; stackHeight = 8
    # ENTER NODE # IdentifierExp at 77.3; stackHeight = 8
     lw $t0,4($s2) # inst-var # IdentifierExp at 77.3; stackHeight = 8
     subu $sp,$sp,4 # IdentifierExp at 77.3; stackHeight = 8
     sw $t0,($sp)#**"" # IdentifierExp at 77.3; stackHeight = 12
    # EXIT NODE # IdentifierExp at 77.3; stackHeight = 12
    # ENTER NODE # Remainder at 77.11; stackHeight = 12
      # ENTER NODE # IntegerLiteral at 77.10; stackHeight = 12
       subu $sp,$sp,8 # IntegerLiteral at 77.10; stackHeight = 12
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 77.10; stackHeight = 20
       li $t0,3 # IntegerLiteral at 77.10; stackHeight = 20
       sw $t0,($sp) # IntegerLiteral at 77.10; stackHeight = 20
      # EXIT NODE # IntegerLiteral at 77.10; stackHeight = 20
      # ENTER NODE # IdentifierExp at 77.12; stackHeight = 20
       lw $t0,24($sp) # local: stackHt=20,var-offset=4 # IdentifierExp at 77.12; stackHeight = 20
       subu $sp,$sp,8 # IdentifierExp at 77.12; stackHeight = 20
       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 77.12; stackHeight = 28
       sw $t0,($sp)#**"" # IdentifierExp at 77.12; stackHeight = 28
      # EXIT NODE # IdentifierExp at 77.12; stackHeight = 28
     jal remainder # Remainder at 77.11; stackHeight = 28
    # EXIT NODE # Remainder at 77.11; stackHeight = 20
    # ENTER NODE # Call at 77.36; stackHeight = 20
      # ENTER NODE # Call at 77.24; stackHeight = 20
        # ENTER NODE # This at 77.24; stackHeight = 20
         subu $sp,$sp,4 # This at 77.24; stackHeight = 20
         sw $s2,($sp)#**"" # This at 77.24; stackHeight = 24
        # EXIT NODE # This at 77.24; stackHeight = 24
       lw $t0,0($sp) # Call at 77.24; stackHeight = 24
       beq $t0,$zero,nullPtrException # Call at 77.24; stackHeight = 24
       lw $t0,-12($t0) # Call at 77.24; stackHeight = 24
       lw $t0,44($t0) # Call at 77.24; stackHeight = 24
       jalr $t0 # newBigInt # Call at 77.24; stackHeight = 24
      # EXIT NODE # Call at 77.24; stackHeight = 24
      # ENTER NODE # IntegerLiteral at 77.41; stackHeight = 24
       subu $sp,$sp,8 # IntegerLiteral at 77.41; stackHeight = 24
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 77.41; stackHeight = 32
       li $t0,617 # IntegerLiteral at 77.41; stackHeight = 32
       sw $t0,($sp) # IntegerLiteral at 77.41; stackHeight = 32
      # EXIT NODE # IntegerLiteral at 77.41; stackHeight = 32
     lw $t0,8($sp) # Call at 77.36; stackHeight = 32
     beq $t0,$zero,nullPtrException # Call at 77.36; stackHeight = 32
     lw $t0,-12($t0) # Call at 77.36; stackHeight = 32
     lw $t0,12($t0) # Call at 77.36; stackHeight = 32
     jalr $t0 # init # Call at 77.36; stackHeight = 32
    # EXIT NODE # Call at 77.36; stackHeight = 24
   lw $t0,($sp) # Assign at 77.22; stackHeight = 24
   lw $t1,12($sp) # Assign at 77.22; stackHeight = 24
   beq $t1,$zero,nullPtrException # Assign at 77.22; stackHeight = 24
   lw $t2,4($sp) # Assign at 77.22; stackHeight = 24
   lw $t3,-4($t1) # Assign at 77.22; stackHeight = 24
   bgeu $t2,$t3,arrayIndexOutOfBounds # Assign at 77.22; stackHeight = 24
   sll $t2,$t2,2 # Assign at 77.22; stackHeight = 24
   addu $t2,$t2,$t1 # Assign at 77.22; stackHeight = 24
   sw $t0,($t2) # Assign at 77.22; stackHeight = 24
   addu $sp,$sp,16 # Assign at 77.22; stackHeight = 24
  # EXIT NODE # Assign at 77.22; stackHeight = 8
  # ENTER NODE # Assign at 78.22; stackHeight = 8
    # ENTER NODE # IdentifierExp at 78.3; stackHeight = 8
     lw $t0,4($s2) # inst-var # IdentifierExp at 78.3; stackHeight = 8
     subu $sp,$sp,4 # IdentifierExp at 78.3; stackHeight = 8
     sw $t0,($sp)#**"" # IdentifierExp at 78.3; stackHeight = 12
    # EXIT NODE # IdentifierExp at 78.3; stackHeight = 12
    # ENTER NODE # Remainder at 78.11; stackHeight = 12
      # ENTER NODE # IntegerLiteral at 78.10; stackHeight = 12
       subu $sp,$sp,8 # IntegerLiteral at 78.10; stackHeight = 12
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 78.10; stackHeight = 20
       li $t0,4 # IntegerLiteral at 78.10; stackHeight = 20
       sw $t0,($sp) # IntegerLiteral at 78.10; stackHeight = 20
      # EXIT NODE # IntegerLiteral at 78.10; stackHeight = 20
      # ENTER NODE # IdentifierExp at 78.12; stackHeight = 20
       lw $t0,24($sp) # local: stackHt=20,var-offset=4 # IdentifierExp at 78.12; stackHeight = 20
       subu $sp,$sp,8 # IdentifierExp at 78.12; stackHeight = 20
       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 78.12; stackHeight = 28
       sw $t0,($sp)#**"" # IdentifierExp at 78.12; stackHeight = 28
      # EXIT NODE # IdentifierExp at 78.12; stackHeight = 28
     jal remainder # Remainder at 78.11; stackHeight = 28
    # EXIT NODE # Remainder at 78.11; stackHeight = 20
    # ENTER NODE # Call at 78.36; stackHeight = 20
      # ENTER NODE # Call at 78.24; stackHeight = 20
        # ENTER NODE # This at 78.24; stackHeight = 20
         subu $sp,$sp,4 # This at 78.24; stackHeight = 20
         sw $s2,($sp)#**"" # This at 78.24; stackHeight = 24
        # EXIT NODE # This at 78.24; stackHeight = 24
       lw $t0,0($sp) # Call at 78.24; stackHeight = 24
       beq $t0,$zero,nullPtrException # Call at 78.24; stackHeight = 24
       lw $t0,-12($t0) # Call at 78.24; stackHeight = 24
       lw $t0,44($t0) # Call at 78.24; stackHeight = 24
       jalr $t0 # newBigInt # Call at 78.24; stackHeight = 24
      # EXIT NODE # Call at 78.24; stackHeight = 24
      # ENTER NODE # IntegerLiteral at 78.41; stackHeight = 24
       subu $sp,$sp,8 # IntegerLiteral at 78.41; stackHeight = 24
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 78.41; stackHeight = 32
       li $t0,919 # IntegerLiteral at 78.41; stackHeight = 32
       sw $t0,($sp) # IntegerLiteral at 78.41; stackHeight = 32
      # EXIT NODE # IntegerLiteral at 78.41; stackHeight = 32
     lw $t0,8($sp) # Call at 78.36; stackHeight = 32
     beq $t0,$zero,nullPtrException # Call at 78.36; stackHeight = 32
     lw $t0,-12($t0) # Call at 78.36; stackHeight = 32
     lw $t0,12($t0) # Call at 78.36; stackHeight = 32
     jalr $t0 # init # Call at 78.36; stackHeight = 32
    # EXIT NODE # Call at 78.36; stackHeight = 24
   lw $t0,($sp) # Assign at 78.22; stackHeight = 24
   lw $t1,12($sp) # Assign at 78.22; stackHeight = 24
   beq $t1,$zero,nullPtrException # Assign at 78.22; stackHeight = 24
   lw $t2,4($sp) # Assign at 78.22; stackHeight = 24
   lw $t3,-4($t1) # Assign at 78.22; stackHeight = 24
   bgeu $t2,$t3,arrayIndexOutOfBounds # Assign at 78.22; stackHeight = 24
   sll $t2,$t2,2 # Assign at 78.22; stackHeight = 24
   addu $t2,$t2,$t1 # Assign at 78.22; stackHeight = 24
   sw $t0,($t2) # Assign at 78.22; stackHeight = 24
   addu $sp,$sp,16 # Assign at 78.22; stackHeight = 24
  # EXIT NODE # Assign at 78.22; stackHeight = 8
  # ENTER NODE # Assign at 79.22; stackHeight = 8
    # ENTER NODE # IdentifierExp at 79.3; stackHeight = 8
     lw $t0,4($s2) # inst-var # IdentifierExp at 79.3; stackHeight = 8
     subu $sp,$sp,4 # IdentifierExp at 79.3; stackHeight = 8
     sw $t0,($sp)#**"" # IdentifierExp at 79.3; stackHeight = 12
    # EXIT NODE # IdentifierExp at 79.3; stackHeight = 12
    # ENTER NODE # Remainder at 79.11; stackHeight = 12
      # ENTER NODE # IntegerLiteral at 79.10; stackHeight = 12
       subu $sp,$sp,8 # IntegerLiteral at 79.10; stackHeight = 12
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 79.10; stackHeight = 20
       li $t0,5 # IntegerLiteral at 79.10; stackHeight = 20
       sw $t0,($sp) # IntegerLiteral at 79.10; stackHeight = 20
      # EXIT NODE # IntegerLiteral at 79.10; stackHeight = 20
      # ENTER NODE # IdentifierExp at 79.12; stackHeight = 20
       lw $t0,24($sp) # local: stackHt=20,var-offset=4 # IdentifierExp at 79.12; stackHeight = 20
       subu $sp,$sp,8 # IdentifierExp at 79.12; stackHeight = 20
       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 79.12; stackHeight = 28
       sw $t0,($sp)#**"" # IdentifierExp at 79.12; stackHeight = 28
      # EXIT NODE # IdentifierExp at 79.12; stackHeight = 28
     jal remainder # Remainder at 79.11; stackHeight = 28
    # EXIT NODE # Remainder at 79.11; stackHeight = 20
    # ENTER NODE # Call at 79.36; stackHeight = 20
      # ENTER NODE # Call at 79.24; stackHeight = 20
        # ENTER NODE # This at 79.24; stackHeight = 20
         subu $sp,$sp,4 # This at 79.24; stackHeight = 20
         sw $s2,($sp)#**"" # This at 79.24; stackHeight = 24
        # EXIT NODE # This at 79.24; stackHeight = 24
       lw $t0,0($sp) # Call at 79.24; stackHeight = 24
       beq $t0,$zero,nullPtrException # Call at 79.24; stackHeight = 24
       lw $t0,-12($t0) # Call at 79.24; stackHeight = 24
       lw $t0,44($t0) # Call at 79.24; stackHeight = 24
       jalr $t0 # newBigInt # Call at 79.24; stackHeight = 24
      # EXIT NODE # Call at 79.24; stackHeight = 24
      # ENTER NODE # IntegerLiteral at 79.41; stackHeight = 24
       subu $sp,$sp,8 # IntegerLiteral at 79.41; stackHeight = 24
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 79.41; stackHeight = 32
       li $t0,1427 # IntegerLiteral at 79.41; stackHeight = 32
       sw $t0,($sp) # IntegerLiteral at 79.41; stackHeight = 32
      # EXIT NODE # IntegerLiteral at 79.41; stackHeight = 32
     lw $t0,8($sp) # Call at 79.36; stackHeight = 32
     beq $t0,$zero,nullPtrException # Call at 79.36; stackHeight = 32
     lw $t0,-12($t0) # Call at 79.36; stackHeight = 32
     lw $t0,12($t0) # Call at 79.36; stackHeight = 32
     jalr $t0 # init # Call at 79.36; stackHeight = 32
    # EXIT NODE # Call at 79.36; stackHeight = 24
   lw $t0,($sp) # Assign at 79.22; stackHeight = 24
   lw $t1,12($sp) # Assign at 79.22; stackHeight = 24
   beq $t1,$zero,nullPtrException # Assign at 79.22; stackHeight = 24
   lw $t2,4($sp) # Assign at 79.22; stackHeight = 24
   lw $t3,-4($t1) # Assign at 79.22; stackHeight = 24
   bgeu $t2,$t3,arrayIndexOutOfBounds # Assign at 79.22; stackHeight = 24
   sll $t2,$t2,2 # Assign at 79.22; stackHeight = 24
   addu $t2,$t2,$t1 # Assign at 79.22; stackHeight = 24
   sw $t0,($t2) # Assign at 79.22; stackHeight = 24
   addu $sp,$sp,16 # Assign at 79.22; stackHeight = 24
  # EXIT NODE # Assign at 79.22; stackHeight = 8
  # ENTER NODE # Assign at 80.22; stackHeight = 8
    # ENTER NODE # IdentifierExp at 80.3; stackHeight = 8
     lw $t0,4($s2) # inst-var # IdentifierExp at 80.3; stackHeight = 8
     subu $sp,$sp,4 # IdentifierExp at 80.3; stackHeight = 8
     sw $t0,($sp)#**"" # IdentifierExp at 80.3; stackHeight = 12
    # EXIT NODE # IdentifierExp at 80.3; stackHeight = 12
    # ENTER NODE # Remainder at 80.11; stackHeight = 12
      # ENTER NODE # IntegerLiteral at 80.10; stackHeight = 12
       subu $sp,$sp,8 # IntegerLiteral at 80.10; stackHeight = 12
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 80.10; stackHeight = 20
       li $t0,6 # IntegerLiteral at 80.10; stackHeight = 20
       sw $t0,($sp) # IntegerLiteral at 80.10; stackHeight = 20
      # EXIT NODE # IntegerLiteral at 80.10; stackHeight = 20
      # ENTER NODE # IdentifierExp at 80.12; stackHeight = 20
       lw $t0,24($sp) # local: stackHt=20,var-offset=4 # IdentifierExp at 80.12; stackHeight = 20
       subu $sp,$sp,8 # IdentifierExp at 80.12; stackHeight = 20
       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 80.12; stackHeight = 28
       sw $t0,($sp)#**"" # IdentifierExp at 80.12; stackHeight = 28
      # EXIT NODE # IdentifierExp at 80.12; stackHeight = 28
     jal remainder # Remainder at 80.11; stackHeight = 28
    # EXIT NODE # Remainder at 80.11; stackHeight = 20
    # ENTER NODE # Call at 80.36; stackHeight = 20
      # ENTER NODE # Call at 80.24; stackHeight = 20
        # ENTER NODE # This at 80.24; stackHeight = 20
         subu $sp,$sp,4 # This at 80.24; stackHeight = 20
         sw $s2,($sp)#**"" # This at 80.24; stackHeight = 24
        # EXIT NODE # This at 80.24; stackHeight = 24
       lw $t0,0($sp) # Call at 80.24; stackHeight = 24
       beq $t0,$zero,nullPtrException # Call at 80.24; stackHeight = 24
       lw $t0,-12($t0) # Call at 80.24; stackHeight = 24
       lw $t0,44($t0) # Call at 80.24; stackHeight = 24
       jalr $t0 # newBigInt # Call at 80.24; stackHeight = 24
      # EXIT NODE # Call at 80.24; stackHeight = 24
      # ENTER NODE # IntegerLiteral at 80.41; stackHeight = 24
       subu $sp,$sp,8 # IntegerLiteral at 80.41; stackHeight = 24
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 80.41; stackHeight = 32
       li $t0,2657 # IntegerLiteral at 80.41; stackHeight = 32
       sw $t0,($sp) # IntegerLiteral at 80.41; stackHeight = 32
      # EXIT NODE # IntegerLiteral at 80.41; stackHeight = 32
     lw $t0,8($sp) # Call at 80.36; stackHeight = 32
     beq $t0,$zero,nullPtrException # Call at 80.36; stackHeight = 32
     lw $t0,-12($t0) # Call at 80.36; stackHeight = 32
     lw $t0,12($t0) # Call at 80.36; stackHeight = 32
     jalr $t0 # init # Call at 80.36; stackHeight = 32
    # EXIT NODE # Call at 80.36; stackHeight = 24
   lw $t0,($sp) # Assign at 80.22; stackHeight = 24
   lw $t1,12($sp) # Assign at 80.22; stackHeight = 24
   beq $t1,$zero,nullPtrException # Assign at 80.22; stackHeight = 24
   lw $t2,4($sp) # Assign at 80.22; stackHeight = 24
   lw $t3,-4($t1) # Assign at 80.22; stackHeight = 24
   bgeu $t2,$t3,arrayIndexOutOfBounds # Assign at 80.22; stackHeight = 24
   sll $t2,$t2,2 # Assign at 80.22; stackHeight = 24
   addu $t2,$t2,$t1 # Assign at 80.22; stackHeight = 24
   sw $t0,($t2) # Assign at 80.22; stackHeight = 24
   addu $sp,$sp,16 # Assign at 80.22; stackHeight = 24
  # EXIT NODE # Assign at 80.22; stackHeight = 8
  # ENTER NODE # Assign at 81.22; stackHeight = 8
    # ENTER NODE # IdentifierExp at 81.3; stackHeight = 8
     lw $t0,4($s2) # inst-var # IdentifierExp at 81.3; stackHeight = 8
     subu $sp,$sp,4 # IdentifierExp at 81.3; stackHeight = 8
     sw $t0,($sp)#**"" # IdentifierExp at 81.3; stackHeight = 12
    # EXIT NODE # IdentifierExp at 81.3; stackHeight = 12
    # ENTER NODE # Remainder at 81.11; stackHeight = 12
      # ENTER NODE # IntegerLiteral at 81.10; stackHeight = 12
       subu $sp,$sp,8 # IntegerLiteral at 81.10; stackHeight = 12
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 81.10; stackHeight = 20
       li $t0,7 # IntegerLiteral at 81.10; stackHeight = 20
       sw $t0,($sp) # IntegerLiteral at 81.10; stackHeight = 20
      # EXIT NODE # IntegerLiteral at 81.10; stackHeight = 20
      # ENTER NODE # IdentifierExp at 81.12; stackHeight = 20
       lw $t0,24($sp) # local: stackHt=20,var-offset=4 # IdentifierExp at 81.12; stackHeight = 20
       subu $sp,$sp,8 # IdentifierExp at 81.12; stackHeight = 20
       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 81.12; stackHeight = 28
       sw $t0,($sp)#**"" # IdentifierExp at 81.12; stackHeight = 28
      # EXIT NODE # IdentifierExp at 81.12; stackHeight = 28
     jal remainder # Remainder at 81.11; stackHeight = 28
    # EXIT NODE # Remainder at 81.11; stackHeight = 20
    # ENTER NODE # Call at 81.36; stackHeight = 20
      # ENTER NODE # Call at 81.24; stackHeight = 20
        # ENTER NODE # This at 81.24; stackHeight = 20
         subu $sp,$sp,4 # This at 81.24; stackHeight = 20
         sw $s2,($sp)#**"" # This at 81.24; stackHeight = 24
        # EXIT NODE # This at 81.24; stackHeight = 24
       lw $t0,0($sp) # Call at 81.24; stackHeight = 24
       beq $t0,$zero,nullPtrException # Call at 81.24; stackHeight = 24
       lw $t0,-12($t0) # Call at 81.24; stackHeight = 24
       lw $t0,44($t0) # Call at 81.24; stackHeight = 24
       jalr $t0 # newBigInt # Call at 81.24; stackHeight = 24
      # EXIT NODE # Call at 81.24; stackHeight = 24
      # ENTER NODE # IntegerLiteral at 81.41; stackHeight = 24
       subu $sp,$sp,8 # IntegerLiteral at 81.41; stackHeight = 24
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 81.41; stackHeight = 32
       li $t0,5059 # IntegerLiteral at 81.41; stackHeight = 32
       sw $t0,($sp) # IntegerLiteral at 81.41; stackHeight = 32
      # EXIT NODE # IntegerLiteral at 81.41; stackHeight = 32
     lw $t0,8($sp) # Call at 81.36; stackHeight = 32
     beq $t0,$zero,nullPtrException # Call at 81.36; stackHeight = 32
     lw $t0,-12($t0) # Call at 81.36; stackHeight = 32
     lw $t0,12($t0) # Call at 81.36; stackHeight = 32
     jalr $t0 # init # Call at 81.36; stackHeight = 32
    # EXIT NODE # Call at 81.36; stackHeight = 24
   lw $t0,($sp) # Assign at 81.22; stackHeight = 24
   lw $t1,12($sp) # Assign at 81.22; stackHeight = 24
   beq $t1,$zero,nullPtrException # Assign at 81.22; stackHeight = 24
   lw $t2,4($sp) # Assign at 81.22; stackHeight = 24
   lw $t3,-4($t1) # Assign at 81.22; stackHeight = 24
   bgeu $t2,$t3,arrayIndexOutOfBounds # Assign at 81.22; stackHeight = 24
   sll $t2,$t2,2 # Assign at 81.22; stackHeight = 24
   addu $t2,$t2,$t1 # Assign at 81.22; stackHeight = 24
   sw $t0,($t2) # Assign at 81.22; stackHeight = 24
   addu $sp,$sp,16 # Assign at 81.22; stackHeight = 24
  # EXIT NODE # Assign at 81.22; stackHeight = 8
  # ENTER NODE # Assign at 82.22; stackHeight = 8
    # ENTER NODE # IdentifierExp at 82.3; stackHeight = 8
     lw $t0,4($s2) # inst-var # IdentifierExp at 82.3; stackHeight = 8
     subu $sp,$sp,4 # IdentifierExp at 82.3; stackHeight = 8
     sw $t0,($sp)#**"" # IdentifierExp at 82.3; stackHeight = 12
    # EXIT NODE # IdentifierExp at 82.3; stackHeight = 12
    # ENTER NODE # Remainder at 82.11; stackHeight = 12
      # ENTER NODE # IntegerLiteral at 82.10; stackHeight = 12
       subu $sp,$sp,8 # IntegerLiteral at 82.10; stackHeight = 12
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 82.10; stackHeight = 20
       li $t0,8 # IntegerLiteral at 82.10; stackHeight = 20
       sw $t0,($sp) # IntegerLiteral at 82.10; stackHeight = 20
      # EXIT NODE # IntegerLiteral at 82.10; stackHeight = 20
      # ENTER NODE # IdentifierExp at 82.12; stackHeight = 20
       lw $t0,24($sp) # local: stackHt=20,var-offset=4 # IdentifierExp at 82.12; stackHeight = 20
       subu $sp,$sp,8 # IdentifierExp at 82.12; stackHeight = 20
       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 82.12; stackHeight = 28
       sw $t0,($sp)#**"" # IdentifierExp at 82.12; stackHeight = 28
      # EXIT NODE # IdentifierExp at 82.12; stackHeight = 28
     jal remainder # Remainder at 82.11; stackHeight = 28
    # EXIT NODE # Remainder at 82.11; stackHeight = 20
    # ENTER NODE # Call at 82.36; stackHeight = 20
      # ENTER NODE # Call at 82.24; stackHeight = 20
        # ENTER NODE # This at 82.24; stackHeight = 20
         subu $sp,$sp,4 # This at 82.24; stackHeight = 20
         sw $s2,($sp)#**"" # This at 82.24; stackHeight = 24
        # EXIT NODE # This at 82.24; stackHeight = 24
       lw $t0,0($sp) # Call at 82.24; stackHeight = 24
       beq $t0,$zero,nullPtrException # Call at 82.24; stackHeight = 24
       lw $t0,-12($t0) # Call at 82.24; stackHeight = 24
       lw $t0,44($t0) # Call at 82.24; stackHeight = 24
       jalr $t0 # newBigInt # Call at 82.24; stackHeight = 24
      # EXIT NODE # Call at 82.24; stackHeight = 24
      # ENTER NODE # IntegerLiteral at 82.41; stackHeight = 24
       subu $sp,$sp,8 # IntegerLiteral at 82.41; stackHeight = 24
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 82.41; stackHeight = 32
       li $t0,7873 # IntegerLiteral at 82.41; stackHeight = 32
       sw $t0,($sp) # IntegerLiteral at 82.41; stackHeight = 32
      # EXIT NODE # IntegerLiteral at 82.41; stackHeight = 32
     lw $t0,8($sp) # Call at 82.36; stackHeight = 32
     beq $t0,$zero,nullPtrException # Call at 82.36; stackHeight = 32
     lw $t0,-12($t0) # Call at 82.36; stackHeight = 32
     lw $t0,12($t0) # Call at 82.36; stackHeight = 32
     jalr $t0 # init # Call at 82.36; stackHeight = 32
    # EXIT NODE # Call at 82.36; stackHeight = 24
   lw $t0,($sp) # Assign at 82.22; stackHeight = 24
   lw $t1,12($sp) # Assign at 82.22; stackHeight = 24
   beq $t1,$zero,nullPtrException # Assign at 82.22; stackHeight = 24
   lw $t2,4($sp) # Assign at 82.22; stackHeight = 24
   lw $t3,-4($t1) # Assign at 82.22; stackHeight = 24
   bgeu $t2,$t3,arrayIndexOutOfBounds # Assign at 82.22; stackHeight = 24
   sll $t2,$t2,2 # Assign at 82.22; stackHeight = 24
   addu $t2,$t2,$t1 # Assign at 82.22; stackHeight = 24
   sw $t0,($t2) # Assign at 82.22; stackHeight = 24
   addu $sp,$sp,16 # Assign at 82.22; stackHeight = 24
  # EXIT NODE # Assign at 82.22; stackHeight = 8
  # ENTER NODE # Assign at 83.9; stackHeight = 8
    # ENTER NODE # ArrayLength at 83.17; stackHeight = 8
      # ENTER NODE # IdentifierExp at 83.11; stackHeight = 8
       lw $t0,4($s2) # inst-var # IdentifierExp at 83.11; stackHeight = 8
       subu $sp,$sp,4 # IdentifierExp at 83.11; stackHeight = 8
       sw $t0,($sp)#**"" # IdentifierExp at 83.11; stackHeight = 12
      # EXIT NODE # IdentifierExp at 83.11; stackHeight = 12
     lw $t0,($sp) # ArrayLength at 83.17; stackHeight = 12
     beq $t0,$zero,nullPtrException # ArrayLength at 83.17; stackHeight = 12
     lw $t0,-4($t0) # ArrayLength at 83.17; stackHeight = 12
     sw $s5,($sp)#**"GC tag" # ArrayLength at 83.17; stackHeight = 12
     subu $sp,4 # ArrayLength at 83.17; stackHeight = 12
     sw $t0,($sp)#**"" # ArrayLength at 83.17; stackHeight = 12
    # EXIT NODE # ArrayLength at 83.17; stackHeight = 16
    # ENTER NODE # IntegerLiteral at 83.25; stackHeight = 16
     subu $sp,$sp,8 # IntegerLiteral at 83.25; stackHeight = 16
     sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 83.25; stackHeight = 24
     li $t0,2 # IntegerLiteral at 83.25; stackHeight = 24
     sw $t0,($sp) # IntegerLiteral at 83.25; stackHeight = 24
    # EXIT NODE # IntegerLiteral at 83.25; stackHeight = 24
   jal divide # Divide at 83.24; stackHeight = 24
  # EXIT NODE # Divide at 83.24; stackHeight = 16
 lw $t0,($sp) # Assign at 83.9; stackHeight = 16
 sw $t0,8($sp) # Assign at 83.9; stackHeight = 16
 addu $sp,$sp,8 # Assign at 83.9; stackHeight = 16
# EXIT NODE # Assign at 83.9; stackHeight = 8
  # ENTER NODE # Block at 84.3; stackHeight = 8
    # ENTER NODE # LocalVarDecl at 84.12; stackHeight = 8
      # ENTER NODE # IntegerLiteral at 84.16; stackHeight = 8
       subu $sp,$sp,8 # IntegerLiteral at 84.16; stackHeight = 8
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 84.16; stackHeight = 16
       li $t0,0 # IntegerLiteral at 84.16; stackHeight = 16
       sw $t0,($sp) # IntegerLiteral at 84.16; stackHeight = 16
      # EXIT NODE # IntegerLiteral at 84.16; stackHeight = 16
    # EXIT NODE # LocalVarDecl at 84.12; stackHeight = 16
    # ENTER NODE # While at 84.3; stackHeight = 16
    j while_enter_308 # While at 84.3; stackHeight = 16
    while_top_308: # While at 84.3; stackHeight = 16
      # ENTER NODE # Block at 84.3; stackHeight = 16
        # ENTER NODE # Block at 84.35; stackHeight = 16
          # ENTER NODE # Assign at 85.20; stackHeight = 16
            # ENTER NODE # IdentifierExp at 85.4; stackHeight = 16
             lw $t0,4($s2) # inst-var # IdentifierExp at 85.4; stackHeight = 16
             subu $sp,$sp,4 # IdentifierExp at 85.4; stackHeight = 16
             sw $t0,($sp)#**"" # IdentifierExp at 85.4; stackHeight = 20
            # EXIT NODE # IdentifierExp at 85.4; stackHeight = 20
            # ENTER NODE # Plus at 85.12; stackHeight = 20
              # ENTER NODE # IdentifierExp at 85.11; stackHeight = 20
               lw $t0,4($sp) # local: stackHt=20,var-offset=-16 # IdentifierExp at 85.11; stackHeight = 20
               subu $sp,$sp,8 # IdentifierExp at 85.11; stackHeight = 20
               sw $s5,4($sp)#**"GC tag" # IdentifierExp at 85.11; stackHeight = 28
               sw $t0,($sp)#**"" # IdentifierExp at 85.11; stackHeight = 28
              # EXIT NODE # IdentifierExp at 85.11; stackHeight = 28
              # ENTER NODE # IdentifierExp at 85.13; stackHeight = 28
               lw $t0,20($sp) # local: stackHt=28,var-offset=-8 # IdentifierExp at 85.13; stackHeight = 28
               subu $sp,$sp,8 # IdentifierExp at 85.13; stackHeight = 28
               sw $s5,4($sp)#**"GC tag" # IdentifierExp at 85.13; stackHeight = 36
               sw $t0,($sp)#**"" # IdentifierExp at 85.13; stackHeight = 36
              # EXIT NODE # IdentifierExp at 85.13; stackHeight = 36
             lw $t0,($sp) # Plus at 85.12; stackHeight = 36
             lw $t1,8($sp) # Plus at 85.12; stackHeight = 36
             addu $t0,$t0,$t1 # Plus at 85.12; stackHeight = 36
             addu $sp,$sp,8 # Plus at 85.12; stackHeight = 36
             sw $t0,($sp)#**"" # Plus at 85.12; stackHeight = 36
            # EXIT NODE # Plus at 85.12; stackHeight = 28
            # ENTER NODE # Call at 85.32; stackHeight = 28
              # ENTER NODE # IdentifierExp at 85.22; stackHeight = 28
               lw $t0,4($s2) # inst-var # IdentifierExp at 85.22; stackHeight = 28
               subu $sp,$sp,4 # IdentifierExp at 85.22; stackHeight = 28
               sw $t0,($sp)#**"" # IdentifierExp at 85.22; stackHeight = 32
              # EXIT NODE # IdentifierExp at 85.22; stackHeight = 32
              # ENTER NODE # IdentifierExp at 85.29; stackHeight = 32
               lw $t0,16($sp) # local: stackHt=32,var-offset=-16 # IdentifierExp at 85.29; stackHeight = 32
               subu $sp,$sp,8 # IdentifierExp at 85.29; stackHeight = 32
               sw $s5,4($sp)#**"GC tag" # IdentifierExp at 85.29; stackHeight = 40
               sw $t0,($sp)#**"" # IdentifierExp at 85.29; stackHeight = 40
              # EXIT NODE # IdentifierExp at 85.29; stackHeight = 40
             lw $t0,8($sp) # ArrayLookup at 85.28; stackHeight = 40
             beq $t0,$zero,nullPtrException # ArrayLookup at 85.28; stackHeight = 40
             lw $t1,-4($t0) # ArrayLookup at 85.28; stackHeight = 40
             lw $t2,($sp) # ArrayLookup at 85.28; stackHeight = 40
             bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 85.28; stackHeight = 40
             sll $t2,$t2,2 # ArrayLookup at 85.28; stackHeight = 40
             addu $t2,$t2,$t0 # ArrayLookup at 85.28; stackHeight = 40
             lw $t0,($t2) # ArrayLookup at 85.28; stackHeight = 40
             sw $t0,8($sp)#**"" # ArrayLookup at 85.28; stackHeight = 40
             addu $sp,$sp,8 # ArrayLookup at 85.28; stackHeight = 40
            # EXIT NODE # ArrayLookup at 85.28; stackHeight = 32
           lw $t0,0($sp) # Call at 85.32; stackHeight = 32
           beq $t0,$zero,nullPtrException # Call at 85.32; stackHeight = 32
           lw $t0,-12($t0) # Call at 85.32; stackHeight = 32
           lw $t0,28($t0) # Call at 85.32; stackHeight = 32
           jalr $t0 # negate # Call at 85.32; stackHeight = 32
          # EXIT NODE # Call at 85.32; stackHeight = 32
         lw $t0,($sp) # Assign at 85.20; stackHeight = 32
         lw $t1,12($sp) # Assign at 85.20; stackHeight = 32
         beq $t1,$zero,nullPtrException # Assign at 85.20; stackHeight = 32
         lw $t2,4($sp) # Assign at 85.20; stackHeight = 32
         lw $t3,-4($t1) # Assign at 85.20; stackHeight = 32
         bgeu $t2,$t3,arrayIndexOutOfBounds # Assign at 85.20; stackHeight = 32
         sll $t2,$t2,2 # Assign at 85.20; stackHeight = 32
         addu $t2,$t2,$t1 # Assign at 85.20; stackHeight = 32
         sw $t0,($t2) # Assign at 85.20; stackHeight = 32
         addu $sp,$sp,16 # Assign at 85.20; stackHeight = 32
        # EXIT NODE # Assign at 85.20; stackHeight = 16
      # EXIT NODE # Block at 84.35; stackHeight = 16
      # ENTER NODE # Assign at 84.30; stackHeight = 16
        # ENTER NODE # Plus at 84.31; stackHeight = 16
          # ENTER NODE # IdentifierExp at 84.30; stackHeight = 16
           lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 84.30; stackHeight = 16
           subu $sp,$sp,8 # IdentifierExp at 84.30; stackHeight = 16
           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 84.30; stackHeight = 24
           sw $t0,($sp)#**"" # IdentifierExp at 84.30; stackHeight = 24
          # EXIT NODE # IdentifierExp at 84.30; stackHeight = 24
          # ENTER NODE # IntegerLiteral at 84.31; stackHeight = 24
           subu $sp,$sp,8 # IntegerLiteral at 84.31; stackHeight = 24
           sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 84.31; stackHeight = 32
           li $t0,1 # IntegerLiteral at 84.31; stackHeight = 32
           sw $t0,($sp) # IntegerLiteral at 84.31; stackHeight = 32
          # EXIT NODE # IntegerLiteral at 84.31; stackHeight = 32
         lw $t0,($sp) # Plus at 84.31; stackHeight = 32
         lw $t1,8($sp) # Plus at 84.31; stackHeight = 32
         addu $t0,$t0,$t1 # Plus at 84.31; stackHeight = 32
         addu $sp,$sp,8 # Plus at 84.31; stackHeight = 32
         sw $t0,($sp)#**"" # Plus at 84.31; stackHeight = 32
        # EXIT NODE # Plus at 84.31; stackHeight = 24
       lw $t0,($sp) # Assign at 84.30; stackHeight = 24
       sw $t0,8($sp) # Assign at 84.30; stackHeight = 24
       addu $sp,$sp,8 # Assign at 84.30; stackHeight = 24
      # EXIT NODE # Assign at 84.30; stackHeight = 16
    # EXIT NODE # Block at 84.3; stackHeight = 16
  while_enter_308: # While at 84.3; stackHeight = 16
    # ENTER NODE # LessThan at 84.21; stackHeight = 16
      # ENTER NODE # IdentifierExp at 84.19; stackHeight = 16
       lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 84.19; stackHeight = 16
       subu $sp,$sp,8 # IdentifierExp at 84.19; stackHeight = 16
       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 84.19; stackHeight = 24
       sw $t0,($sp)#**"" # IdentifierExp at 84.19; stackHeight = 24
      # EXIT NODE # IdentifierExp at 84.19; stackHeight = 24
      # ENTER NODE # IdentifierExp at 84.23; stackHeight = 24
       lw $t0,16($sp) # local: stackHt=24,var-offset=-8 # IdentifierExp at 84.23; stackHeight = 24
       subu $sp,$sp,8 # IdentifierExp at 84.23; stackHeight = 24
       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 84.23; stackHeight = 32
       sw $t0,($sp)#**"" # IdentifierExp at 84.23; stackHeight = 32
      # EXIT NODE # IdentifierExp at 84.23; stackHeight = 32
     lw $t0,($sp) # LessThan at 84.21; stackHeight = 32
     lw $t1,8($sp) # LessThan at 84.21; stackHeight = 32
     slt $t0,$t1,$t0 # LessThan at 84.21; stackHeight = 32
     addu $sp,$sp,12 # LessThan at 84.21; stackHeight = 32
     sw $t0,($sp)#**"" # LessThan at 84.21; stackHeight = 20
    # EXIT NODE # LessThan at 84.21; stackHeight = 20
   lw $t0,($sp) # While at 84.3; stackHeight = 20
   addu $sp,$sp,4 # While at 84.3; stackHeight = 20
  bne $t0,$zero,while_top_308 # While at 84.3; stackHeight = 16
  break_target_308: # While at 84.3; stackHeight = 16
  # EXIT NODE # While at 84.3; stackHeight = 16
 addu $sp,8 # Block at 84.3; stackHeight = 16
# EXIT NODE # Block at 84.3; stackHeight = 8
 # stack height is 8 # MethodDeclVoid at 55.14; stackHeight = 8
 lw $ra,20($sp) # MethodDeclVoid at 55.14; stackHeight = 8
 lw $s2,8($sp) # MethodDeclVoid at 55.14; stackHeight = 8
 addu $sp,$sp,24 # MethodDeclVoid at 55.14; stackHeight = 8
jr $ra # MethodDeclVoid at 55.14; stackHeight = -16
# EXIT NODE # MethodDeclVoid at 55.14; stackHeight = -16
  # ENTER NODE # MethodDeclVoid at 89.14; stackHeight = -16
  .globl fcn_433_exec # MethodDeclVoid at 89.14; stackHeight = -16
  fcn_433_exec: # MethodDeclVoid at 89.14; stackHeight = -16
   subu $sp,$sp,4 # MethodDeclVoid at 89.14; stackHeight = -16
   sw $s2,($sp) #**"old this-ptr" # MethodDeclVoid at 89.14; stackHeight = -16
   lw $s2,12($sp) #**"this-ptr" # MethodDeclVoid at 89.14; stackHeight = -16
   sw $ra,12($sp) #**"RA:exec" # MethodDeclVoid at 89.14; stackHeight = -16
    # ENTER NODE # CallStatement at 91.3; stackHeight = 0
      # ENTER NODE # Call at 91.3; stackHeight = 0
        # ENTER NODE # This at 91.3; stackHeight = 0
         subu $sp,$sp,4 # This at 91.3; stackHeight = 0
         sw $s2,($sp)#**"" # This at 91.3; stackHeight = 4
        # EXIT NODE # This at 91.3; stackHeight = 4
        # ENTER NODE # IdentifierExp at 91.8; stackHeight = 4
         lw $t0,8($sp) # local: stackHt=4,var-offset=4 # IdentifierExp at 91.8; stackHeight = 4
         subu $sp,$sp,8 # IdentifierExp at 91.8; stackHeight = 4
         sw $s5,4($sp)#**"GC tag" # IdentifierExp at 91.8; stackHeight = 12
         sw $t0,($sp)#**"" # IdentifierExp at 91.8; stackHeight = 12
        # EXIT NODE # IdentifierExp at 91.8; stackHeight = 12
       lw $t0,8($sp) # Call at 91.3; stackHeight = 12
       beq $t0,$zero,nullPtrException # Call at 91.3; stackHeight = 12
       lw $t0,-12($t0) # Call at 91.3; stackHeight = 12
       lw $t0,48($t0) # Call at 91.3; stackHeight = 12
       jalr $t0 # init # Call at 91.3; stackHeight = 12
      # EXIT NODE # Call at 91.3; stackHeight = 0
    # EXIT NODE # CallStatement at 91.3; stackHeight = 0
    # ENTER NODE # CallStatement at 93.3; stackHeight = 0
      # ENTER NODE # Call at 93.3; stackHeight = 0
        # ENTER NODE # This at 93.3; stackHeight = 0
         subu $sp,$sp,4 # This at 93.3; stackHeight = 0
         sw $s2,($sp)#**"" # This at 93.3; stackHeight = 4
        # EXIT NODE # This at 93.3; stackHeight = 4
        # ENTER NODE # StringLiteral at 93.12; stackHeight = 4
         subu $sp,$sp,4 # StringLiteral at 93.12; stackHeight = 4
         la $t0,strLit_317 # StringLiteral at 93.12; stackHeight = 8
         sw $t0,($sp)#**"strLit:********* BEGIN TEST *********\?" # StringLiteral at 93.12; stackHeight = 8
        # EXIT NODE # StringLiteral at 93.12; stackHeight = 8
       lw $t0,4($sp) # Call at 93.3; stackHeight = 8
       beq $t0,$zero,nullPtrException # Call at 93.3; stackHeight = 8
       lw $t0,-12($t0) # Call at 93.3; stackHeight = 8
       lw $t0,24($t0) # Call at 93.3; stackHeight = 8
       jalr $t0 # printStr # Call at 93.3; stackHeight = 8
      # EXIT NODE # Call at 93.3; stackHeight = 0
    # EXIT NODE # CallStatement at 93.3; stackHeight = 0
    # ENTER NODE # CallStatement at 94.3; stackHeight = 0
      # ENTER NODE # Call at 94.3; stackHeight = 0
        # ENTER NODE # This at 94.3; stackHeight = 0
         subu $sp,$sp,4 # This at 94.3; stackHeight = 0
         sw $s2,($sp)#**"" # This at 94.3; stackHeight = 4
        # EXIT NODE # This at 94.3; stackHeight = 4
        # ENTER NODE # StringLiteral at 94.12; stackHeight = 4
         subu $sp,$sp,4 # StringLiteral at 94.12; stackHeight = 4
         la $t0,strLit_321 # StringLiteral at 94.12; stackHeight = 8
         sw $t0,($sp)#**"strLit:====abs===\?" # StringLiteral at 94.12; stackHeight = 8
        # EXIT NODE # StringLiteral at 94.12; stackHeight = 8
       lw $t0,4($sp) # Call at 94.3; stackHeight = 8
       beq $t0,$zero,nullPtrException # Call at 94.3; stackHeight = 8
       lw $t0,-12($t0) # Call at 94.3; stackHeight = 8
       lw $t0,24($t0) # Call at 94.3; stackHeight = 8
       jalr $t0 # printStr # Call at 94.3; stackHeight = 8
      # EXIT NODE # Call at 94.3; stackHeight = 0
    # EXIT NODE # CallStatement at 94.3; stackHeight = 0
    # ENTER NODE # CallStatement at 94.28; stackHeight = 0
      # ENTER NODE # Call at 94.28; stackHeight = 0
        # ENTER NODE # This at 94.28; stackHeight = 0
         subu $sp,$sp,4 # This at 94.28; stackHeight = 0
         sw $s2,($sp)#**"" # This at 94.28; stackHeight = 4
        # EXIT NODE # This at 94.28; stackHeight = 4
       lw $t0,0($sp) # Call at 94.28; stackHeight = 4
       beq $t0,$zero,nullPtrException # Call at 94.28; stackHeight = 4
       lw $t0,-12($t0) # Call at 94.28; stackHeight = 4
       lw $t0,60($t0) # Call at 94.28; stackHeight = 4
       jalr $t0 # abs # Call at 94.28; stackHeight = 4
      # EXIT NODE # Call at 94.28; stackHeight = 0
    # EXIT NODE # CallStatement at 94.28; stackHeight = 0
    # ENTER NODE # CallStatement at 95.3; stackHeight = 0
      # ENTER NODE # Call at 95.3; stackHeight = 0
        # ENTER NODE # This at 95.3; stackHeight = 0
         subu $sp,$sp,4 # This at 95.3; stackHeight = 0
         sw $s2,($sp)#**"" # This at 95.3; stackHeight = 4
        # EXIT NODE # This at 95.3; stackHeight = 4
        # ENTER NODE # StringLiteral at 95.12; stackHeight = 4
         subu $sp,$sp,4 # StringLiteral at 95.12; stackHeight = 4
         la $t0,strLit_328 # StringLiteral at 95.12; stackHeight = 8
         sw $t0,($sp)#**"strLit:====add===\?" # StringLiteral at 95.12; stackHeight = 8
        # EXIT NODE # StringLiteral at 95.12; stackHeight = 8
       lw $t0,4($sp) # Call at 95.3; stackHeight = 8
       beq $t0,$zero,nullPtrException # Call at 95.3; stackHeight = 8
       lw $t0,-12($t0) # Call at 95.3; stackHeight = 8
       lw $t0,24($t0) # Call at 95.3; stackHeight = 8
       jalr $t0 # printStr # Call at 95.3; stackHeight = 8
      # EXIT NODE # Call at 95.3; stackHeight = 0
    # EXIT NODE # CallStatement at 95.3; stackHeight = 0
    # ENTER NODE # CallStatement at 95.28; stackHeight = 0
      # ENTER NODE # Call at 95.28; stackHeight = 0
        # ENTER NODE # This at 95.28; stackHeight = 0
         subu $sp,$sp,4 # This at 95.28; stackHeight = 0
         sw $s2,($sp)#**"" # This at 95.28; stackHeight = 4
        # EXIT NODE # This at 95.28; stackHeight = 4
       lw $t0,0($sp) # Call at 95.28; stackHeight = 4
       beq $t0,$zero,nullPtrException # Call at 95.28; stackHeight = 4
       lw $t0,-12($t0) # Call at 95.28; stackHeight = 4
       lw $t0,64($t0) # Call at 95.28; stackHeight = 4
       jalr $t0 # add # Call at 95.28; stackHeight = 4
      # EXIT NODE # Call at 95.28; stackHeight = 0
    # EXIT NODE # CallStatement at 95.28; stackHeight = 0
    # ENTER NODE # CallStatement at 96.3; stackHeight = 0
      # ENTER NODE # Call at 96.3; stackHeight = 0
        # ENTER NODE # This at 96.3; stackHeight = 0
         subu $sp,$sp,4 # This at 96.3; stackHeight = 0
         sw $s2,($sp)#**"" # This at 96.3; stackHeight = 4
        # EXIT NODE # This at 96.3; stackHeight = 4
        # ENTER NODE # StringLiteral at 96.12; stackHeight = 4
         subu $sp,$sp,4 # StringLiteral at 96.12; stackHeight = 4
         la $t0,strLit_335 # StringLiteral at 96.12; stackHeight = 8
         sw $t0,($sp)#**"strLit:====compareTo===\?" # StringLiteral at 96.12; stackHeight = 8
        # EXIT NODE # StringLiteral at 96.12; stackHeight = 8
       lw $t0,4($sp) # Call at 96.3; stackHeight = 8
       beq $t0,$zero,nullPtrException # Call at 96.3; stackHeight = 8
       lw $t0,-12($t0) # Call at 96.3; stackHeight = 8
       lw $t0,24($t0) # Call at 96.3; stackHeight = 8
       jalr $t0 # printStr # Call at 96.3; stackHeight = 8
      # EXIT NODE # Call at 96.3; stackHeight = 0
    # EXIT NODE # CallStatement at 96.3; stackHeight = 0
    # ENTER NODE # CallStatement at 96.34; stackHeight = 0
      # ENTER NODE # Call at 96.34; stackHeight = 0
        # ENTER NODE # This at 96.34; stackHeight = 0
         subu $sp,$sp,4 # This at 96.34; stackHeight = 0
         sw $s2,($sp)#**"" # This at 96.34; stackHeight = 4
        # EXIT NODE # This at 96.34; stackHeight = 4
       lw $t0,0($sp) # Call at 96.34; stackHeight = 4
       beq $t0,$zero,nullPtrException # Call at 96.34; stackHeight = 4
       lw $t0,-12($t0) # Call at 96.34; stackHeight = 4
       lw $t0,68($t0) # Call at 96.34; stackHeight = 4
       jalr $t0 # compareTo # Call at 96.34; stackHeight = 4
      # EXIT NODE # Call at 96.34; stackHeight = 0
    # EXIT NODE # CallStatement at 96.34; stackHeight = 0
    # ENTER NODE # CallStatement at 97.3; stackHeight = 0
      # ENTER NODE # Call at 97.3; stackHeight = 0
        # ENTER NODE # This at 97.3; stackHeight = 0
         subu $sp,$sp,4 # This at 97.3; stackHeight = 0
         sw $s2,($sp)#**"" # This at 97.3; stackHeight = 4
        # EXIT NODE # This at 97.3; stackHeight = 4
        # ENTER NODE # StringLiteral at 97.12; stackHeight = 4
         subu $sp,$sp,4 # StringLiteral at 97.12; stackHeight = 4
         la $t0,strLit_342 # StringLiteral at 97.12; stackHeight = 8
         sw $t0,($sp)#**"strLit:====equals===\?" # StringLiteral at 97.12; stackHeight = 8
        # EXIT NODE # StringLiteral at 97.12; stackHeight = 8
       lw $t0,4($sp) # Call at 97.3; stackHeight = 8
       beq $t0,$zero,nullPtrException # Call at 97.3; stackHeight = 8
       lw $t0,-12($t0) # Call at 97.3; stackHeight = 8
       lw $t0,24($t0) # Call at 97.3; stackHeight = 8
       jalr $t0 # printStr # Call at 97.3; stackHeight = 8
      # EXIT NODE # Call at 97.3; stackHeight = 0
    # EXIT NODE # CallStatement at 97.3; stackHeight = 0
    # ENTER NODE # CallStatement at 97.31; stackHeight = 0
      # ENTER NODE # Call at 97.31; stackHeight = 0
        # ENTER NODE # This at 97.31; stackHeight = 0
         subu $sp,$sp,4 # This at 97.31; stackHeight = 0
         sw $s2,($sp)#**"" # This at 97.31; stackHeight = 4
        # EXIT NODE # This at 97.31; stackHeight = 4
       lw $t0,0($sp) # Call at 97.31; stackHeight = 4
       beq $t0,$zero,nullPtrException # Call at 97.31; stackHeight = 4
       lw $t0,-12($t0) # Call at 97.31; stackHeight = 4
       lw $t0,88($t0) # Call at 97.31; stackHeight = 4
       jalr $t0 # equalsTest # Call at 97.31; stackHeight = 4
      # EXIT NODE # Call at 97.31; stackHeight = 0
    # EXIT NODE # CallStatement at 97.31; stackHeight = 0
    # ENTER NODE # CallStatement at 98.3; stackHeight = 0
      # ENTER NODE # Call at 98.3; stackHeight = 0
        # ENTER NODE # This at 98.3; stackHeight = 0
         subu $sp,$sp,4 # This at 98.3; stackHeight = 0
         sw $s2,($sp)#**"" # This at 98.3; stackHeight = 4
        # EXIT NODE # This at 98.3; stackHeight = 4
        # ENTER NODE # StringLiteral at 98.12; stackHeight = 4
         subu $sp,$sp,4 # StringLiteral at 98.12; stackHeight = 4
         la $t0,strLit_349 # StringLiteral at 98.12; stackHeight = 8
         sw $t0,($sp)#**"strLit:====intValue===\?" # StringLiteral at 98.12; stackHeight = 8
        # EXIT NODE # StringLiteral at 98.12; stackHeight = 8
       lw $t0,4($sp) # Call at 98.3; stackHeight = 8
       beq $t0,$zero,nullPtrException # Call at 98.3; stackHeight = 8
       lw $t0,-12($t0) # Call at 98.3; stackHeight = 8
       lw $t0,24($t0) # Call at 98.3; stackHeight = 8
       jalr $t0 # printStr # Call at 98.3; stackHeight = 8
      # EXIT NODE # Call at 98.3; stackHeight = 0
    # EXIT NODE # CallStatement at 98.3; stackHeight = 0
    # ENTER NODE # CallStatement at 98.33; stackHeight = 0
      # ENTER NODE # Call at 98.33; stackHeight = 0
        # ENTER NODE # This at 98.33; stackHeight = 0
         subu $sp,$sp,4 # This at 98.33; stackHeight = 0
         sw $s2,($sp)#**"" # This at 98.33; stackHeight = 4
        # EXIT NODE # This at 98.33; stackHeight = 4
       lw $t0,0($sp) # Call at 98.33; stackHeight = 4
       beq $t0,$zero,nullPtrException # Call at 98.33; stackHeight = 4
       lw $t0,-12($t0) # Call at 98.33; stackHeight = 4
       lw $t0,96($t0) # Call at 98.33; stackHeight = 4
       jalr $t0 # intValue # Call at 98.33; stackHeight = 4
      # EXIT NODE # Call at 98.33; stackHeight = 0
    # EXIT NODE # CallStatement at 98.33; stackHeight = 0
    # ENTER NODE # CallStatement at 99.3; stackHeight = 0
      # ENTER NODE # Call at 99.3; stackHeight = 0
        # ENTER NODE # This at 99.3; stackHeight = 0
         subu $sp,$sp,4 # This at 99.3; stackHeight = 0
         sw $s2,($sp)#**"" # This at 99.3; stackHeight = 4
        # EXIT NODE # This at 99.3; stackHeight = 4
        # ENTER NODE # StringLiteral at 99.12; stackHeight = 4
         subu $sp,$sp,4 # StringLiteral at 99.12; stackHeight = 4
         la $t0,strLit_356 # StringLiteral at 99.12; stackHeight = 8
         sw $t0,($sp)#**"strLit:====max===\?" # StringLiteral at 99.12; stackHeight = 8
        # EXIT NODE # StringLiteral at 99.12; stackHeight = 8
       lw $t0,4($sp) # Call at 99.3; stackHeight = 8
       beq $t0,$zero,nullPtrException # Call at 99.3; stackHeight = 8
       lw $t0,-12($t0) # Call at 99.3; stackHeight = 8
       lw $t0,24($t0) # Call at 99.3; stackHeight = 8
       jalr $t0 # printStr # Call at 99.3; stackHeight = 8
      # EXIT NODE # Call at 99.3; stackHeight = 0
    # EXIT NODE # CallStatement at 99.3; stackHeight = 0
    # ENTER NODE # CallStatement at 99.28; stackHeight = 0
      # ENTER NODE # Call at 99.28; stackHeight = 0
        # ENTER NODE # This at 99.28; stackHeight = 0
         subu $sp,$sp,4 # This at 99.28; stackHeight = 0
         sw $s2,($sp)#**"" # This at 99.28; stackHeight = 4
        # EXIT NODE # This at 99.28; stackHeight = 4
       lw $t0,0($sp) # Call at 99.28; stackHeight = 4
       beq $t0,$zero,nullPtrException # Call at 99.28; stackHeight = 4
       lw $t0,-12($t0) # Call at 99.28; stackHeight = 4
       lw $t0,100($t0) # Call at 99.28; stackHeight = 4
       jalr $t0 # max # Call at 99.28; stackHeight = 4
      # EXIT NODE # Call at 99.28; stackHeight = 0
    # EXIT NODE # CallStatement at 99.28; stackHeight = 0
    # ENTER NODE # CallStatement at 100.3; stackHeight = 0
      # ENTER NODE # Call at 100.3; stackHeight = 0
        # ENTER NODE # This at 100.3; stackHeight = 0
         subu $sp,$sp,4 # This at 100.3; stackHeight = 0
         sw $s2,($sp)#**"" # This at 100.3; stackHeight = 4
        # EXIT NODE # This at 100.3; stackHeight = 4
        # ENTER NODE # StringLiteral at 100.12; stackHeight = 4
         subu $sp,$sp,4 # StringLiteral at 100.12; stackHeight = 4
         la $t0,strLit_363 # StringLiteral at 100.12; stackHeight = 8
         sw $t0,($sp)#**"strLit:====min===\?" # StringLiteral at 100.12; stackHeight = 8
        # EXIT NODE # StringLiteral at 100.12; stackHeight = 8
       lw $t0,4($sp) # Call at 100.3; stackHeight = 8
       beq $t0,$zero,nullPtrException # Call at 100.3; stackHeight = 8
       lw $t0,-12($t0) # Call at 100.3; stackHeight = 8
       lw $t0,24($t0) # Call at 100.3; stackHeight = 8
       jalr $t0 # printStr # Call at 100.3; stackHeight = 8
      # EXIT NODE # Call at 100.3; stackHeight = 0
    # EXIT NODE # CallStatement at 100.3; stackHeight = 0
    # ENTER NODE # CallStatement at 100.28; stackHeight = 0
      # ENTER NODE # Call at 100.28; stackHeight = 0
        # ENTER NODE # This at 100.28; stackHeight = 0
         subu $sp,$sp,4 # This at 100.28; stackHeight = 0
         sw $s2,($sp)#**"" # This at 100.28; stackHeight = 4
        # EXIT NODE # This at 100.28; stackHeight = 4
       lw $t0,0($sp) # Call at 100.28; stackHeight = 4
       beq $t0,$zero,nullPtrException # Call at 100.28; stackHeight = 4
       lw $t0,-12($t0) # Call at 100.28; stackHeight = 4
       lw $t0,104($t0) # Call at 100.28; stackHeight = 4
       jalr $t0 # min # Call at 100.28; stackHeight = 4
      # EXIT NODE # Call at 100.28; stackHeight = 0
    # EXIT NODE # CallStatement at 100.28; stackHeight = 0
    # ENTER NODE # CallStatement at 101.3; stackHeight = 0
      # ENTER NODE # Call at 101.3; stackHeight = 0
        # ENTER NODE # This at 101.3; stackHeight = 0
         subu $sp,$sp,4 # This at 101.3; stackHeight = 0
         sw $s2,($sp)#**"" # This at 101.3; stackHeight = 4
        # EXIT NODE # This at 101.3; stackHeight = 4
        # ENTER NODE # StringLiteral at 101.12; stackHeight = 4
         subu $sp,$sp,4 # StringLiteral at 101.12; stackHeight = 4
         la $t0,strLit_370 # StringLiteral at 101.12; stackHeight = 8
         sw $t0,($sp)#**"strLit:====negate===\?" # StringLiteral at 101.12; stackHeight = 8
        # EXIT NODE # StringLiteral at 101.12; stackHeight = 8
       lw $t0,4($sp) # Call at 101.3; stackHeight = 8
       beq $t0,$zero,nullPtrException # Call at 101.3; stackHeight = 8
       lw $t0,-12($t0) # Call at 101.3; stackHeight = 8
       lw $t0,24($t0) # Call at 101.3; stackHeight = 8
       jalr $t0 # printStr # Call at 101.3; stackHeight = 8
      # EXIT NODE # Call at 101.3; stackHeight = 0
    # EXIT NODE # CallStatement at 101.3; stackHeight = 0
    # ENTER NODE # CallStatement at 101.31; stackHeight = 0
      # ENTER NODE # Call at 101.31; stackHeight = 0
        # ENTER NODE # This at 101.31; stackHeight = 0
         subu $sp,$sp,4 # This at 101.31; stackHeight = 0
         sw $s2,($sp)#**"" # This at 101.31; stackHeight = 4
        # EXIT NODE # This at 101.31; stackHeight = 4
       lw $t0,0($sp) # Call at 101.31; stackHeight = 4
       beq $t0,$zero,nullPtrException # Call at 101.31; stackHeight = 4
       lw $t0,-12($t0) # Call at 101.31; stackHeight = 4
       lw $t0,112($t0) # Call at 101.31; stackHeight = 4
       jalr $t0 # negate # Call at 101.31; stackHeight = 4
      # EXIT NODE # Call at 101.31; stackHeight = 0
    # EXIT NODE # CallStatement at 101.31; stackHeight = 0
    # ENTER NODE # CallStatement at 102.3; stackHeight = 0
      # ENTER NODE # Call at 102.3; stackHeight = 0
        # ENTER NODE # This at 102.3; stackHeight = 0
         subu $sp,$sp,4 # This at 102.3; stackHeight = 0
         sw $s2,($sp)#**"" # This at 102.3; stackHeight = 4
        # EXIT NODE # This at 102.3; stackHeight = 4
        # ENTER NODE # StringLiteral at 102.12; stackHeight = 4
         subu $sp,$sp,4 # StringLiteral at 102.12; stackHeight = 4
         la $t0,strLit_377 # StringLiteral at 102.12; stackHeight = 8
         sw $t0,($sp)#**"strLit:====signum===\?" # StringLiteral at 102.12; stackHeight = 8
        # EXIT NODE # StringLiteral at 102.12; stackHeight = 8
       lw $t0,4($sp) # Call at 102.3; stackHeight = 8
       beq $t0,$zero,nullPtrException # Call at 102.3; stackHeight = 8
       lw $t0,-12($t0) # Call at 102.3; stackHeight = 8
       lw $t0,24($t0) # Call at 102.3; stackHeight = 8
       jalr $t0 # printStr # Call at 102.3; stackHeight = 8
      # EXIT NODE # Call at 102.3; stackHeight = 0
    # EXIT NODE # CallStatement at 102.3; stackHeight = 0
    # ENTER NODE # CallStatement at 102.31; stackHeight = 0
      # ENTER NODE # Call at 102.31; stackHeight = 0
        # ENTER NODE # This at 102.31; stackHeight = 0
         subu $sp,$sp,4 # This at 102.31; stackHeight = 0
         sw $s2,($sp)#**"" # This at 102.31; stackHeight = 4
        # EXIT NODE # This at 102.31; stackHeight = 4
       lw $t0,0($sp) # Call at 102.31; stackHeight = 4
       beq $t0,$zero,nullPtrException # Call at 102.31; stackHeight = 4
       lw $t0,-12($t0) # Call at 102.31; stackHeight = 4
       lw $t0,124($t0) # Call at 102.31; stackHeight = 4
       jalr $t0 # signum # Call at 102.31; stackHeight = 4
      # EXIT NODE # Call at 102.31; stackHeight = 0
    # EXIT NODE # CallStatement at 102.31; stackHeight = 0
    # ENTER NODE # CallStatement at 103.3; stackHeight = 0
      # ENTER NODE # Call at 103.3; stackHeight = 0
        # ENTER NODE # This at 103.3; stackHeight = 0
         subu $sp,$sp,4 # This at 103.3; stackHeight = 0
         sw $s2,($sp)#**"" # This at 103.3; stackHeight = 4
        # EXIT NODE # This at 103.3; stackHeight = 4
        # ENTER NODE # StringLiteral at 103.12; stackHeight = 4
         subu $sp,$sp,4 # StringLiteral at 103.12; stackHeight = 4
         la $t0,strLit_384 # StringLiteral at 103.12; stackHeight = 8
         sw $t0,($sp)#**"strLit:====subtract===\?" # StringLiteral at 103.12; stackHeight = 8
        # EXIT NODE # StringLiteral at 103.12; stackHeight = 8
       lw $t0,4($sp) # Call at 103.3; stackHeight = 8
       beq $t0,$zero,nullPtrException # Call at 103.3; stackHeight = 8
       lw $t0,-12($t0) # Call at 103.3; stackHeight = 8
       lw $t0,24($t0) # Call at 103.3; stackHeight = 8
       jalr $t0 # printStr # Call at 103.3; stackHeight = 8
      # EXIT NODE # Call at 103.3; stackHeight = 0
    # EXIT NODE # CallStatement at 103.3; stackHeight = 0
    # ENTER NODE # CallStatement at 103.33; stackHeight = 0
      # ENTER NODE # Call at 103.33; stackHeight = 0
        # ENTER NODE # This at 103.33; stackHeight = 0
         subu $sp,$sp,4 # This at 103.33; stackHeight = 0
         sw $s2,($sp)#**"" # This at 103.33; stackHeight = 4
        # EXIT NODE # This at 103.33; stackHeight = 4
       lw $t0,0($sp) # Call at 103.33; stackHeight = 4
       beq $t0,$zero,nullPtrException # Call at 103.33; stackHeight = 4
       lw $t0,-12($t0) # Call at 103.33; stackHeight = 4
       lw $t0,128($t0) # Call at 103.33; stackHeight = 4
       jalr $t0 # subtract # Call at 103.33; stackHeight = 4
      # EXIT NODE # Call at 103.33; stackHeight = 0
    # EXIT NODE # CallStatement at 103.33; stackHeight = 0
    # ENTER NODE # CallStatement at 104.3; stackHeight = 0
      # ENTER NODE # Call at 104.3; stackHeight = 0
        # ENTER NODE # This at 104.3; stackHeight = 0
         subu $sp,$sp,4 # This at 104.3; stackHeight = 0
         sw $s2,($sp)#**"" # This at 104.3; stackHeight = 4
        # EXIT NODE # This at 104.3; stackHeight = 4
        # ENTER NODE # StringLiteral at 104.12; stackHeight = 4
         subu $sp,$sp,4 # StringLiteral at 104.12; stackHeight = 4
         la $t0,strLit_391 # StringLiteral at 104.12; stackHeight = 8
         sw $t0,($sp)#**"strLit:====toString===\?" # StringLiteral at 104.12; stackHeight = 8
        # EXIT NODE # StringLiteral at 104.12; stackHeight = 8
       lw $t0,4($sp) # Call at 104.3; stackHeight = 8
       beq $t0,$zero,nullPtrException # Call at 104.3; stackHeight = 8
       lw $t0,-12($t0) # Call at 104.3; stackHeight = 8
       lw $t0,24($t0) # Call at 104.3; stackHeight = 8
       jalr $t0 # printStr # Call at 104.3; stackHeight = 8
      # EXIT NODE # Call at 104.3; stackHeight = 0
    # EXIT NODE # CallStatement at 104.3; stackHeight = 0
    # ENTER NODE # CallStatement at 104.33; stackHeight = 0
      # ENTER NODE # Call at 104.33; stackHeight = 0
        # ENTER NODE # This at 104.33; stackHeight = 0
         subu $sp,$sp,4 # This at 104.33; stackHeight = 0
         sw $s2,($sp)#**"" # This at 104.33; stackHeight = 4
        # EXIT NODE # This at 104.33; stackHeight = 4
       lw $t0,0($sp) # Call at 104.33; stackHeight = 4
       beq $t0,$zero,nullPtrException # Call at 104.33; stackHeight = 4
       lw $t0,-12($t0) # Call at 104.33; stackHeight = 4
       lw $t0,132($t0) # Call at 104.33; stackHeight = 4
       jalr $t0 # toStringTest # Call at 104.33; stackHeight = 4
      # EXIT NODE # Call at 104.33; stackHeight = 0
    # EXIT NODE # CallStatement at 104.33; stackHeight = 0
    # ENTER NODE # CallStatement at 105.3; stackHeight = 0
      # ENTER NODE # Call at 105.3; stackHeight = 0
        # ENTER NODE # This at 105.3; stackHeight = 0
         subu $sp,$sp,4 # This at 105.3; stackHeight = 0
         sw $s2,($sp)#**"" # This at 105.3; stackHeight = 4
        # EXIT NODE # This at 105.3; stackHeight = 4
        # ENTER NODE # StringLiteral at 105.12; stackHeight = 4
         subu $sp,$sp,4 # StringLiteral at 105.12; stackHeight = 4
         la $t0,strLit_398 # StringLiteral at 105.12; stackHeight = 8
         sw $t0,($sp)#**"strLit:====multiply===\?" # StringLiteral at 105.12; stackHeight = 8
        # EXIT NODE # StringLiteral at 105.12; stackHeight = 8
       lw $t0,4($sp) # Call at 105.3; stackHeight = 8
       beq $t0,$zero,nullPtrException # Call at 105.3; stackHeight = 8
       lw $t0,-12($t0) # Call at 105.3; stackHeight = 8
       lw $t0,24($t0) # Call at 105.3; stackHeight = 8
       jalr $t0 # printStr # Call at 105.3; stackHeight = 8
      # EXIT NODE # Call at 105.3; stackHeight = 0
    # EXIT NODE # CallStatement at 105.3; stackHeight = 0
    # ENTER NODE # CallStatement at 105.33; stackHeight = 0
      # ENTER NODE # Call at 105.33; stackHeight = 0
        # ENTER NODE # This at 105.33; stackHeight = 0
         subu $sp,$sp,4 # This at 105.33; stackHeight = 0
         sw $s2,($sp)#**"" # This at 105.33; stackHeight = 4
        # EXIT NODE # This at 105.33; stackHeight = 4
       lw $t0,0($sp) # Call at 105.33; stackHeight = 4
       beq $t0,$zero,nullPtrException # Call at 105.33; stackHeight = 4
       lw $t0,-12($t0) # Call at 105.33; stackHeight = 4
       lw $t0,108($t0) # Call at 105.33; stackHeight = 4
       jalr $t0 # multiply # Call at 105.33; stackHeight = 4
      # EXIT NODE # Call at 105.33; stackHeight = 0
    # EXIT NODE # CallStatement at 105.33; stackHeight = 0
    # ENTER NODE # CallStatement at 106.3; stackHeight = 0
      # ENTER NODE # Call at 106.3; stackHeight = 0
        # ENTER NODE # This at 106.3; stackHeight = 0
         subu $sp,$sp,4 # This at 106.3; stackHeight = 0
         sw $s2,($sp)#**"" # This at 106.3; stackHeight = 4
        # EXIT NODE # This at 106.3; stackHeight = 4
        # ENTER NODE # StringLiteral at 106.12; stackHeight = 4
         subu $sp,$sp,4 # StringLiteral at 106.12; stackHeight = 4
         la $t0,strLit_405 # StringLiteral at 106.12; stackHeight = 8
         sw $t0,($sp)#**"strLit:====divide===\?" # StringLiteral at 106.12; stackHeight = 8
        # EXIT NODE # StringLiteral at 106.12; stackHeight = 8
       lw $t0,4($sp) # Call at 106.3; stackHeight = 8
       beq $t0,$zero,nullPtrException # Call at 106.3; stackHeight = 8
       lw $t0,-12($t0) # Call at 106.3; stackHeight = 8
       lw $t0,24($t0) # Call at 106.3; stackHeight = 8
       jalr $t0 # printStr # Call at 106.3; stackHeight = 8
      # EXIT NODE # Call at 106.3; stackHeight = 0
    # EXIT NODE # CallStatement at 106.3; stackHeight = 0
    # ENTER NODE # CallStatement at 106.31; stackHeight = 0
      # ENTER NODE # Call at 106.31; stackHeight = 0
        # ENTER NODE # This at 106.31; stackHeight = 0
         subu $sp,$sp,4 # This at 106.31; stackHeight = 0
         sw $s2,($sp)#**"" # This at 106.31; stackHeight = 4
        # EXIT NODE # This at 106.31; stackHeight = 4
       lw $t0,0($sp) # Call at 106.31; stackHeight = 4
       beq $t0,$zero,nullPtrException # Call at 106.31; stackHeight = 4
       lw $t0,-12($t0) # Call at 106.31; stackHeight = 4
       lw $t0,76($t0) # Call at 106.31; stackHeight = 4
       jalr $t0 # divide # Call at 106.31; stackHeight = 4
      # EXIT NODE # Call at 106.31; stackHeight = 0
    # EXIT NODE # CallStatement at 106.31; stackHeight = 0
    # ENTER NODE # CallStatement at 107.3; stackHeight = 0
      # ENTER NODE # Call at 107.3; stackHeight = 0
        # ENTER NODE # This at 107.3; stackHeight = 0
         subu $sp,$sp,4 # This at 107.3; stackHeight = 0
         sw $s2,($sp)#**"" # This at 107.3; stackHeight = 4
        # EXIT NODE # This at 107.3; stackHeight = 4
        # ENTER NODE # StringLiteral at 107.12; stackHeight = 4
         subu $sp,$sp,4 # StringLiteral at 107.12; stackHeight = 4
         la $t0,strLit_412 # StringLiteral at 107.12; stackHeight = 8
         sw $t0,($sp)#**"strLit:====divideAndRemainder===\?" # StringLiteral at 107.12; stackHeight = 8
        # EXIT NODE # StringLiteral at 107.12; stackHeight = 8
       lw $t0,4($sp) # Call at 107.3; stackHeight = 8
       beq $t0,$zero,nullPtrException # Call at 107.3; stackHeight = 8
       lw $t0,-12($t0) # Call at 107.3; stackHeight = 8
       lw $t0,24($t0) # Call at 107.3; stackHeight = 8
       jalr $t0 # printStr # Call at 107.3; stackHeight = 8
      # EXIT NODE # Call at 107.3; stackHeight = 0
    # EXIT NODE # CallStatement at 107.3; stackHeight = 0
    # ENTER NODE # CallStatement at 107.43; stackHeight = 0
      # ENTER NODE # Call at 107.43; stackHeight = 0
        # ENTER NODE # This at 107.43; stackHeight = 0
         subu $sp,$sp,4 # This at 107.43; stackHeight = 0
         sw $s2,($sp)#**"" # This at 107.43; stackHeight = 4
        # EXIT NODE # This at 107.43; stackHeight = 4
       lw $t0,0($sp) # Call at 107.43; stackHeight = 4
       beq $t0,$zero,nullPtrException # Call at 107.43; stackHeight = 4
       lw $t0,-12($t0) # Call at 107.43; stackHeight = 4
       lw $t0,84($t0) # Call at 107.43; stackHeight = 4
       jalr $t0 # divideAndRemainder # Call at 107.43; stackHeight = 4
      # EXIT NODE # Call at 107.43; stackHeight = 0
    # EXIT NODE # CallStatement at 107.43; stackHeight = 0
    # ENTER NODE # CallStatement at 108.3; stackHeight = 0
      # ENTER NODE # Call at 108.3; stackHeight = 0
        # ENTER NODE # This at 108.3; stackHeight = 0
         subu $sp,$sp,4 # This at 108.3; stackHeight = 0
         sw $s2,($sp)#**"" # This at 108.3; stackHeight = 4
        # EXIT NODE # This at 108.3; stackHeight = 4
        # ENTER NODE # StringLiteral at 108.12; stackHeight = 4
         subu $sp,$sp,4 # StringLiteral at 108.12; stackHeight = 4
         la $t0,strLit_419 # StringLiteral at 108.12; stackHeight = 8
         sw $t0,($sp)#**"strLit:====remainder===\?" # StringLiteral at 108.12; stackHeight = 8
        # EXIT NODE # StringLiteral at 108.12; stackHeight = 8
       lw $t0,4($sp) # Call at 108.3; stackHeight = 8
       beq $t0,$zero,nullPtrException # Call at 108.3; stackHeight = 8
       lw $t0,-12($t0) # Call at 108.3; stackHeight = 8
       lw $t0,24($t0) # Call at 108.3; stackHeight = 8
       jalr $t0 # printStr # Call at 108.3; stackHeight = 8
      # EXIT NODE # Call at 108.3; stackHeight = 0
    # EXIT NODE # CallStatement at 108.3; stackHeight = 0
    # ENTER NODE # CallStatement at 108.34; stackHeight = 0
      # ENTER NODE # Call at 108.34; stackHeight = 0
        # ENTER NODE # This at 108.34; stackHeight = 0
         subu $sp,$sp,4 # This at 108.34; stackHeight = 0
         sw $s2,($sp)#**"" # This at 108.34; stackHeight = 4
        # EXIT NODE # This at 108.34; stackHeight = 4
       lw $t0,0($sp) # Call at 108.34; stackHeight = 4
       beq $t0,$zero,nullPtrException # Call at 108.34; stackHeight = 4
       lw $t0,-12($t0) # Call at 108.34; stackHeight = 4
       lw $t0,120($t0) # Call at 108.34; stackHeight = 4
       jalr $t0 # remainder # Call at 108.34; stackHeight = 4
      # EXIT NODE # Call at 108.34; stackHeight = 0
    # EXIT NODE # CallStatement at 108.34; stackHeight = 0
    # ENTER NODE # CallStatement at 109.3; stackHeight = 0
      # ENTER NODE # Call at 109.3; stackHeight = 0
        # ENTER NODE # This at 109.3; stackHeight = 0
         subu $sp,$sp,4 # This at 109.3; stackHeight = 0
         sw $s2,($sp)#**"" # This at 109.3; stackHeight = 4
        # EXIT NODE # This at 109.3; stackHeight = 4
        # ENTER NODE # StringLiteral at 109.12; stackHeight = 4
         subu $sp,$sp,4 # StringLiteral at 109.12; stackHeight = 4
         la $t0,strLit_426 # StringLiteral at 109.12; stackHeight = 8
         sw $t0,($sp)#**"strLit:====hashCode===\?" # StringLiteral at 109.12; stackHeight = 8
        # EXIT NODE # StringLiteral at 109.12; stackHeight = 8
       lw $t0,4($sp) # Call at 109.3; stackHeight = 8
       beq $t0,$zero,nullPtrException # Call at 109.3; stackHeight = 8
       lw $t0,-12($t0) # Call at 109.3; stackHeight = 8
       lw $t0,24($t0) # Call at 109.3; stackHeight = 8
       jalr $t0 # printStr # Call at 109.3; stackHeight = 8
      # EXIT NODE # Call at 109.3; stackHeight = 0
    # EXIT NODE # CallStatement at 109.3; stackHeight = 0
    # ENTER NODE # CallStatement at 109.33; stackHeight = 0
      # ENTER NODE # Call at 109.33; stackHeight = 0
        # ENTER NODE # This at 109.33; stackHeight = 0
         subu $sp,$sp,4 # This at 109.33; stackHeight = 0
         sw $s2,($sp)#**"" # This at 109.33; stackHeight = 4
        # EXIT NODE # This at 109.33; stackHeight = 4
       lw $t0,0($sp) # Call at 109.33; stackHeight = 4
       beq $t0,$zero,nullPtrException # Call at 109.33; stackHeight = 4
       lw $t0,-12($t0) # Call at 109.33; stackHeight = 4
       lw $t0,92($t0) # Call at 109.33; stackHeight = 4
       jalr $t0 # hashCodeTest # Call at 109.33; stackHeight = 4
      # EXIT NODE # Call at 109.33; stackHeight = 0
    # EXIT NODE # CallStatement at 109.33; stackHeight = 0
   # stack height is 0 # MethodDeclVoid at 89.14; stackHeight = 0
   lw $ra,12($sp) # MethodDeclVoid at 89.14; stackHeight = 0
   lw $s2,0($sp) # MethodDeclVoid at 89.14; stackHeight = 0
   addu $sp,$sp,16 # MethodDeclVoid at 89.14; stackHeight = 0
  jr $ra # MethodDeclVoid at 89.14; stackHeight = -16
  # EXIT NODE # MethodDeclVoid at 89.14; stackHeight = -16
  # ENTER NODE # MethodDeclNonVoid at 112.16; stackHeight = -16
  .globl fcn_467_fact # MethodDeclNonVoid at 112.16; stackHeight = -16
  fcn_467_fact: # MethodDeclNonVoid at 112.16; stackHeight = -16
   subu $sp,$sp,4 # MethodDeclNonVoid at 112.16; stackHeight = -16
   sw $s2,($sp) #**"old this-ptr" # MethodDeclNonVoid at 112.16; stackHeight = -16
   lw $s2,12($sp) #**"this-ptr" # MethodDeclNonVoid at 112.16; stackHeight = -16
   sw $ra,12($sp) #**"RA:fact" # MethodDeclNonVoid at 112.16; stackHeight = -16
    # ENTER NODE # LocalVarDecl at 113.10; stackHeight = 0
      # ENTER NODE # Null at 113.19; stackHeight = 0
       subu $sp,$sp,4 # Null at 113.19; stackHeight = 0
       sw $zero,($sp)#**"" # Null at 113.19; stackHeight = 4
      # EXIT NODE # Null at 113.19; stackHeight = 4
    # EXIT NODE # LocalVarDecl at 113.10; stackHeight = 4
    # ENTER NODE # If at 114.3; stackHeight = 4
      # ENTER NODE # Not at 114.9; stackHeight = 4
        # ENTER NODE # GreaterThan at 114.9; stackHeight = 4
          # ENTER NODE # IdentifierExp at 114.7; stackHeight = 4
           lw $t0,8($sp) # local: stackHt=4,var-offset=4 # IdentifierExp at 114.7; stackHeight = 4
           subu $sp,$sp,8 # IdentifierExp at 114.7; stackHeight = 4
           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 114.7; stackHeight = 12
           sw $t0,($sp)#**"" # IdentifierExp at 114.7; stackHeight = 12
          # EXIT NODE # IdentifierExp at 114.7; stackHeight = 12
          # ENTER NODE # IntegerLiteral at 114.12; stackHeight = 12
           subu $sp,$sp,8 # IntegerLiteral at 114.12; stackHeight = 12
           sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 114.12; stackHeight = 20
           li $t0,1 # IntegerLiteral at 114.12; stackHeight = 20
           sw $t0,($sp) # IntegerLiteral at 114.12; stackHeight = 20
          # EXIT NODE # IntegerLiteral at 114.12; stackHeight = 20
         lw $t0,($sp) # GreaterThan at 114.9; stackHeight = 20
         lw $t1,8($sp) # GreaterThan at 114.9; stackHeight = 20
         sgt $t0,$t1,$t0 # GreaterThan at 114.9; stackHeight = 20
         addu $sp,$sp,12 # GreaterThan at 114.9; stackHeight = 20
         sw $t0,($sp)#**"" # GreaterThan at 114.9; stackHeight = 8
        # EXIT NODE # GreaterThan at 114.9; stackHeight = 8
       lw $t0,($sp) # Not at 114.9; stackHeight = 8
       xor $t0,$t0,1 # Not at 114.9; stackHeight = 8
       sw $t0,($sp)#**"" # Not at 114.9; stackHeight = 8
      # EXIT NODE # Not at 114.9; stackHeight = 8
     lw $t0,($sp) # If at 114.3; stackHeight = 8
     addu $sp,$sp,4 # If at 114.3; stackHeight = 8
     beq $t0,$zero,if_else_465 # If at 114.3; stackHeight = 4
      # ENTER NODE # Block at 114.15; stackHeight = 4
        # ENTER NODE # Assign at 115.11; stackHeight = 4
          # ENTER NODE # Call at 115.25; stackHeight = 4
            # ENTER NODE # Call at 115.13; stackHeight = 4
              # ENTER NODE # This at 115.13; stackHeight = 4
               subu $sp,$sp,4 # This at 115.13; stackHeight = 4
               sw $s2,($sp)#**"" # This at 115.13; stackHeight = 8
              # EXIT NODE # This at 115.13; stackHeight = 8
             lw $t0,0($sp) # Call at 115.13; stackHeight = 8
             beq $t0,$zero,nullPtrException # Call at 115.13; stackHeight = 8
             lw $t0,-12($t0) # Call at 115.13; stackHeight = 8
             lw $t0,44($t0) # Call at 115.13; stackHeight = 8
             jalr $t0 # newBigInt # Call at 115.13; stackHeight = 8
            # EXIT NODE # Call at 115.13; stackHeight = 8
            # ENTER NODE # IntegerLiteral at 115.30; stackHeight = 8
             subu $sp,$sp,8 # IntegerLiteral at 115.30; stackHeight = 8
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 115.30; stackHeight = 16
             li $t0,1 # IntegerLiteral at 115.30; stackHeight = 16
             sw $t0,($sp) # IntegerLiteral at 115.30; stackHeight = 16
            # EXIT NODE # IntegerLiteral at 115.30; stackHeight = 16
           lw $t0,8($sp) # Call at 115.25; stackHeight = 16
           beq $t0,$zero,nullPtrException # Call at 115.25; stackHeight = 16
           lw $t0,-12($t0) # Call at 115.25; stackHeight = 16
           lw $t0,12($t0) # Call at 115.25; stackHeight = 16
           jalr $t0 # init # Call at 115.25; stackHeight = 16
          # EXIT NODE # Call at 115.25; stackHeight = 8
         lw $t0,($sp) # Assign at 115.11; stackHeight = 8
         sw $t0,4($sp) # Assign at 115.11; stackHeight = 8
         addu $sp,$sp,4 # Assign at 115.11; stackHeight = 8
        # EXIT NODE # Assign at 115.11; stackHeight = 4
      # EXIT NODE # Block at 114.15; stackHeight = 4
    j if_done_465 # If at 114.3; stackHeight = 4
    if_else_465: # If at 114.3; stackHeight = 4
      # ENTER NODE # Block at 117.8; stackHeight = 4
        # ENTER NODE # Assign at 118.11; stackHeight = 4
          # ENTER NODE # Call at 118.33; stackHeight = 4
            # ENTER NODE # Call at 118.25; stackHeight = 4
              # ENTER NODE # Call at 118.13; stackHeight = 4
                # ENTER NODE # This at 118.13; stackHeight = 4
                 subu $sp,$sp,4 # This at 118.13; stackHeight = 4
                 sw $s2,($sp)#**"" # This at 118.13; stackHeight = 8
                # EXIT NODE # This at 118.13; stackHeight = 8
               lw $t0,0($sp) # Call at 118.13; stackHeight = 8
               beq $t0,$zero,nullPtrException # Call at 118.13; stackHeight = 8
               lw $t0,-12($t0) # Call at 118.13; stackHeight = 8
               lw $t0,44($t0) # Call at 118.13; stackHeight = 8
               jalr $t0 # newBigInt # Call at 118.13; stackHeight = 8
              # EXIT NODE # Call at 118.13; stackHeight = 8
              # ENTER NODE # IdentifierExp at 118.30; stackHeight = 8
               lw $t0,12($sp) # local: stackHt=8,var-offset=4 # IdentifierExp at 118.30; stackHeight = 8
               subu $sp,$sp,8 # IdentifierExp at 118.30; stackHeight = 8
               sw $s5,4($sp)#**"GC tag" # IdentifierExp at 118.30; stackHeight = 16
               sw $t0,($sp)#**"" # IdentifierExp at 118.30; stackHeight = 16
              # EXIT NODE # IdentifierExp at 118.30; stackHeight = 16
             lw $t0,8($sp) # Call at 118.25; stackHeight = 16
             beq $t0,$zero,nullPtrException # Call at 118.25; stackHeight = 16
             lw $t0,-12($t0) # Call at 118.25; stackHeight = 16
             lw $t0,12($t0) # Call at 118.25; stackHeight = 16
             jalr $t0 # init # Call at 118.25; stackHeight = 16
            # EXIT NODE # Call at 118.25; stackHeight = 8
            # ENTER NODE # Call at 118.42; stackHeight = 8
              # ENTER NODE # This at 118.42; stackHeight = 8
               subu $sp,$sp,4 # This at 118.42; stackHeight = 8
               sw $s2,($sp)#**"" # This at 118.42; stackHeight = 12
              # EXIT NODE # This at 118.42; stackHeight = 12
              # ENTER NODE # Minus at 118.48; stackHeight = 12
                # ENTER NODE # IdentifierExp at 118.47; stackHeight = 12
                 lw $t0,16($sp) # local: stackHt=12,var-offset=4 # IdentifierExp at 118.47; stackHeight = 12
                 subu $sp,$sp,8 # IdentifierExp at 118.47; stackHeight = 12
                 sw $s5,4($sp)#**"GC tag" # IdentifierExp at 118.47; stackHeight = 20
                 sw $t0,($sp)#**"" # IdentifierExp at 118.47; stackHeight = 20
                # EXIT NODE # IdentifierExp at 118.47; stackHeight = 20
                # ENTER NODE # IntegerLiteral at 118.49; stackHeight = 20
                 subu $sp,$sp,8 # IntegerLiteral at 118.49; stackHeight = 20
                 sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 118.49; stackHeight = 28
                 li $t0,1 # IntegerLiteral at 118.49; stackHeight = 28
                 sw $t0,($sp) # IntegerLiteral at 118.49; stackHeight = 28
                # EXIT NODE # IntegerLiteral at 118.49; stackHeight = 28
               lw $t0,($sp) # Minus at 118.48; stackHeight = 28
               lw $t1,8($sp) # Minus at 118.48; stackHeight = 28
               subu $t0,$t1,$t0 # Minus at 118.48; stackHeight = 28
               addu $sp,$sp,8 # Minus at 118.48; stackHeight = 28
               sw $t0,($sp)#**"" # Minus at 118.48; stackHeight = 20
              # EXIT NODE # Minus at 118.48; stackHeight = 20
             lw $t0,8($sp) # Call at 118.42; stackHeight = 20
             beq $t0,$zero,nullPtrException # Call at 118.42; stackHeight = 20
             lw $t0,-12($t0) # Call at 118.42; stackHeight = 20
             lw $t0,56($t0) # Call at 118.42; stackHeight = 20
             jalr $t0 # fact # Call at 118.42; stackHeight = 20
            # EXIT NODE # Call at 118.42; stackHeight = 12
           lw $t0,4($sp) # Call at 118.33; stackHeight = 12
           beq $t0,$zero,nullPtrException # Call at 118.33; stackHeight = 12
           lw $t0,-12($t0) # Call at 118.33; stackHeight = 12
           lw $t0,32($t0) # Call at 118.33; stackHeight = 12
           jalr $t0 # multiply # Call at 118.33; stackHeight = 12
          # EXIT NODE # Call at 118.33; stackHeight = 8
         lw $t0,($sp) # Assign at 118.11; stackHeight = 8
         sw $t0,4($sp) # Assign at 118.11; stackHeight = 8
         addu $sp,$sp,4 # Assign at 118.11; stackHeight = 8
        # EXIT NODE # Assign at 118.11; stackHeight = 4
      # EXIT NODE # Block at 117.8; stackHeight = 4
    if_done_465: # If at 114.3; stackHeight = 4
    # EXIT NODE # If at 114.3; stackHeight = 4
    # ENTER NODE # IdentifierExp at 120.10; stackHeight = 4
     lw $t0,0($sp) # local: stackHt=4,var-offset=-4 # IdentifierExp at 120.10; stackHeight = 4
     subu $sp,$sp,4 # IdentifierExp at 120.10; stackHeight = 4
     sw $t0,($sp)#**"" # IdentifierExp at 120.10; stackHeight = 8
    # EXIT NODE # IdentifierExp at 120.10; stackHeight = 8
   lw $ra,20($sp) # MethodDeclNonVoid at 112.16; stackHeight = 8
   lw $s2,8($sp) # MethodDeclNonVoid at 112.16; stackHeight = 8
   lw $t0,($sp) # MethodDeclNonVoid at 112.16; stackHeight = 8
   sw $t0,20($sp)#**"(return-val)" # MethodDeclNonVoid at 112.16; stackHeight = 8
   addu $sp,$sp,20 # MethodDeclNonVoid at 112.16; stackHeight = 8
  jr $ra # MethodDeclNonVoid at 112.16; stackHeight = -12
  # EXIT NODE # MethodDeclNonVoid at 112.16; stackHeight = -12
  # ENTER NODE # MethodDeclVoid at 123.14; stackHeight = -12
  .globl fcn_522_abs # MethodDeclVoid at 123.14; stackHeight = -12
  fcn_522_abs: # MethodDeclVoid at 123.14; stackHeight = -12
   subu $sp,$sp,4 # MethodDeclVoid at 123.14; stackHeight = -12
   sw $s2,($sp) #**"old this-ptr" # MethodDeclVoid at 123.14; stackHeight = -12
   lw $s2,4($sp) #**"this-ptr" # MethodDeclVoid at 123.14; stackHeight = -12
   sw $ra,4($sp) #**"RA:abs" # MethodDeclVoid at 123.14; stackHeight = -12
    # ENTER NODE # Block at 124.3; stackHeight = 0
      # ENTER NODE # LocalVarDecl at 124.12; stackHeight = 0
        # ENTER NODE # IntegerLiteral at 124.16; stackHeight = 0
         subu $sp,$sp,8 # IntegerLiteral at 124.16; stackHeight = 0
         sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 124.16; stackHeight = 8
         li $t0,0 # IntegerLiteral at 124.16; stackHeight = 8
         sw $t0,($sp) # IntegerLiteral at 124.16; stackHeight = 8
        # EXIT NODE # IntegerLiteral at 124.16; stackHeight = 8
      # EXIT NODE # LocalVarDecl at 124.12; stackHeight = 8
      # ENTER NODE # While at 124.3; stackHeight = 8
      j while_enter_493 # While at 124.3; stackHeight = 8
      while_top_493: # While at 124.3; stackHeight = 8
        # ENTER NODE # Block at 124.3; stackHeight = 8
          # ENTER NODE # Block at 124.41; stackHeight = 8
            # ENTER NODE # CallStatement at 125.4; stackHeight = 8
              # ENTER NODE # Call at 125.4; stackHeight = 8
                # ENTER NODE # This at 125.4; stackHeight = 8
                 subu $sp,$sp,4 # This at 125.4; stackHeight = 8
                 sw $s2,($sp)#**"" # This at 125.4; stackHeight = 12
                # EXIT NODE # This at 125.4; stackHeight = 12
                # ENTER NODE # Call at 125.38; stackHeight = 12
                  # ENTER NODE # Call at 125.27; stackHeight = 12
                    # ENTER NODE # Call at 125.21; stackHeight = 12
                      # ENTER NODE # IdentifierExp at 125.13; stackHeight = 12
                       lw $t0,0($s2) # inst-var # IdentifierExp at 125.13; stackHeight = 12
                       subu $sp,$sp,4 # IdentifierExp at 125.13; stackHeight = 12
                       sw $t0,($sp)#**"" # IdentifierExp at 125.13; stackHeight = 16
                      # EXIT NODE # IdentifierExp at 125.13; stackHeight = 16
                      # ENTER NODE # IdentifierExp at 125.18; stackHeight = 16
                       lw $t0,8($sp) # local: stackHt=16,var-offset=-8 # IdentifierExp at 125.18; stackHeight = 16
                       subu $sp,$sp,8 # IdentifierExp at 125.18; stackHeight = 16
                       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 125.18; stackHeight = 24
                       sw $t0,($sp)#**"" # IdentifierExp at 125.18; stackHeight = 24
                      # EXIT NODE # IdentifierExp at 125.18; stackHeight = 24
                     lw $t0,8($sp) # ArrayLookup at 125.17; stackHeight = 24
                     beq $t0,$zero,nullPtrException # ArrayLookup at 125.17; stackHeight = 24
                     lw $t1,-4($t0) # ArrayLookup at 125.17; stackHeight = 24
                     lw $t2,($sp) # ArrayLookup at 125.17; stackHeight = 24
                     bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 125.17; stackHeight = 24
                     sll $t2,$t2,2 # ArrayLookup at 125.17; stackHeight = 24
                     addu $t2,$t2,$t0 # ArrayLookup at 125.17; stackHeight = 24
                     lw $t0,($t2) # ArrayLookup at 125.17; stackHeight = 24
                     sw $t0,8($sp)#**"" # ArrayLookup at 125.17; stackHeight = 24
                     addu $sp,$sp,8 # ArrayLookup at 125.17; stackHeight = 24
                    # EXIT NODE # ArrayLookup at 125.17; stackHeight = 16
                   lw $t0,0($sp) # Call at 125.21; stackHeight = 16
                   beq $t0,$zero,nullPtrException # Call at 125.21; stackHeight = 16
                   lw $t0,-12($t0) # Call at 125.21; stackHeight = 16
                   lw $t0,40($t0) # Call at 125.21; stackHeight = 16
                   jalr $t0 # abs # Call at 125.21; stackHeight = 16
                  # EXIT NODE # Call at 125.21; stackHeight = 16
                 lw $t0,0($sp) # Call at 125.27; stackHeight = 16
                 beq $t0,$zero,nullPtrException # Call at 125.27; stackHeight = 16
                 lw $t0,-12($t0) # Call at 125.27; stackHeight = 16
                 lw $t0,8($t0) # Call at 125.27; stackHeight = 16
                 jalr $t0 # toString # Call at 125.27; stackHeight = 16
                # EXIT NODE # Call at 125.27; stackHeight = 16
                # ENTER NODE # StringLiteral at 125.45; stackHeight = 16
                 subu $sp,$sp,4 # StringLiteral at 125.45; stackHeight = 16
                 la $t0,strLit_486 # StringLiteral at 125.45; stackHeight = 20
                 sw $t0,($sp)#**"strLit:\?" # StringLiteral at 125.45; stackHeight = 20
                # EXIT NODE # StringLiteral at 125.45; stackHeight = 20
               lw $t0,4($sp) # Call at 125.38; stackHeight = 20
               beq $t0,$zero,nullPtrException # Call at 125.38; stackHeight = 20
               lw $t0,-12($t0) # Call at 125.38; stackHeight = 20
               lw $t0,12($t0) # Call at 125.38; stackHeight = 20
               jalr $t0 # concat # Call at 125.38; stackHeight = 20
              # EXIT NODE # Call at 125.38; stackHeight = 16
             lw $t0,4($sp) # Call at 125.4; stackHeight = 16
             beq $t0,$zero,nullPtrException # Call at 125.4; stackHeight = 16
             lw $t0,-12($t0) # Call at 125.4; stackHeight = 16
             lw $t0,24($t0) # Call at 125.4; stackHeight = 16
             jalr $t0 # printStr # Call at 125.4; stackHeight = 16
            # EXIT NODE # Call at 125.4; stackHeight = 8
          # EXIT NODE # CallStatement at 125.4; stackHeight = 8
        # EXIT NODE # Block at 124.41; stackHeight = 8
        # ENTER NODE # Assign at 124.36; stackHeight = 8
          # ENTER NODE # Plus at 124.37; stackHeight = 8
            # ENTER NODE # IdentifierExp at 124.36; stackHeight = 8
             lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 124.36; stackHeight = 8
             subu $sp,$sp,8 # IdentifierExp at 124.36; stackHeight = 8
             sw $s5,4($sp)#**"GC tag" # IdentifierExp at 124.36; stackHeight = 16
             sw $t0,($sp)#**"" # IdentifierExp at 124.36; stackHeight = 16
            # EXIT NODE # IdentifierExp at 124.36; stackHeight = 16
            # ENTER NODE # IntegerLiteral at 124.37; stackHeight = 16
             subu $sp,$sp,8 # IntegerLiteral at 124.37; stackHeight = 16
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 124.37; stackHeight = 24
             li $t0,1 # IntegerLiteral at 124.37; stackHeight = 24
             sw $t0,($sp) # IntegerLiteral at 124.37; stackHeight = 24
            # EXIT NODE # IntegerLiteral at 124.37; stackHeight = 24
           lw $t0,($sp) # Plus at 124.37; stackHeight = 24
           lw $t1,8($sp) # Plus at 124.37; stackHeight = 24
           addu $t0,$t0,$t1 # Plus at 124.37; stackHeight = 24
           addu $sp,$sp,8 # Plus at 124.37; stackHeight = 24
           sw $t0,($sp)#**"" # Plus at 124.37; stackHeight = 24
          # EXIT NODE # Plus at 124.37; stackHeight = 16
         lw $t0,($sp) # Assign at 124.36; stackHeight = 16
         sw $t0,8($sp) # Assign at 124.36; stackHeight = 16
         addu $sp,$sp,8 # Assign at 124.36; stackHeight = 16
        # EXIT NODE # Assign at 124.36; stackHeight = 8
      # EXIT NODE # Block at 124.3; stackHeight = 8
    while_enter_493: # While at 124.3; stackHeight = 8
      # ENTER NODE # LessThan at 124.21; stackHeight = 8
        # ENTER NODE # IdentifierExp at 124.19; stackHeight = 8
         lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 124.19; stackHeight = 8
         subu $sp,$sp,8 # IdentifierExp at 124.19; stackHeight = 8
         sw $s5,4($sp)#**"GC tag" # IdentifierExp at 124.19; stackHeight = 16
         sw $t0,($sp)#**"" # IdentifierExp at 124.19; stackHeight = 16
        # EXIT NODE # IdentifierExp at 124.19; stackHeight = 16
        # ENTER NODE # ArrayLength at 124.27; stackHeight = 16
          # ENTER NODE # IdentifierExp at 124.23; stackHeight = 16
           lw $t0,0($s2) # inst-var # IdentifierExp at 124.23; stackHeight = 16
           subu $sp,$sp,4 # IdentifierExp at 124.23; stackHeight = 16
           sw $t0,($sp)#**"" # IdentifierExp at 124.23; stackHeight = 20
          # EXIT NODE # IdentifierExp at 124.23; stackHeight = 20
         lw $t0,($sp) # ArrayLength at 124.27; stackHeight = 20
         beq $t0,$zero,nullPtrException # ArrayLength at 124.27; stackHeight = 20
         lw $t0,-4($t0) # ArrayLength at 124.27; stackHeight = 20
         sw $s5,($sp)#**"GC tag" # ArrayLength at 124.27; stackHeight = 20
         subu $sp,4 # ArrayLength at 124.27; stackHeight = 20
         sw $t0,($sp)#**"" # ArrayLength at 124.27; stackHeight = 20
        # EXIT NODE # ArrayLength at 124.27; stackHeight = 24
       lw $t0,($sp) # LessThan at 124.21; stackHeight = 24
       lw $t1,8($sp) # LessThan at 124.21; stackHeight = 24
       slt $t0,$t1,$t0 # LessThan at 124.21; stackHeight = 24
       addu $sp,$sp,12 # LessThan at 124.21; stackHeight = 24
       sw $t0,($sp)#**"" # LessThan at 124.21; stackHeight = 12
      # EXIT NODE # LessThan at 124.21; stackHeight = 12
     lw $t0,($sp) # While at 124.3; stackHeight = 12
     addu $sp,$sp,4 # While at 124.3; stackHeight = 12
    bne $t0,$zero,while_top_493 # While at 124.3; stackHeight = 8
    break_target_493: # While at 124.3; stackHeight = 8
    # EXIT NODE # While at 124.3; stackHeight = 8
   addu $sp,8 # Block at 124.3; stackHeight = 8
  # EXIT NODE # Block at 124.3; stackHeight = 0
  # ENTER NODE # Block at 127.3; stackHeight = 0
    # ENTER NODE # LocalVarDecl at 127.12; stackHeight = 0
      # ENTER NODE # IntegerLiteral at 127.16; stackHeight = 0
       subu $sp,$sp,8 # IntegerLiteral at 127.16; stackHeight = 0
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 127.16; stackHeight = 8
       li $t0,0 # IntegerLiteral at 127.16; stackHeight = 8
       sw $t0,($sp) # IntegerLiteral at 127.16; stackHeight = 8
      # EXIT NODE # IntegerLiteral at 127.16; stackHeight = 8
    # EXIT NODE # LocalVarDecl at 127.12; stackHeight = 8
    # ENTER NODE # While at 127.3; stackHeight = 8
    j while_enter_520 # While at 127.3; stackHeight = 8
    while_top_520: # While at 127.3; stackHeight = 8
      # ENTER NODE # Block at 127.3; stackHeight = 8
        # ENTER NODE # Block at 127.43; stackHeight = 8
          # ENTER NODE # CallStatement at 128.4; stackHeight = 8
            # ENTER NODE # Call at 128.4; stackHeight = 8
              # ENTER NODE # This at 128.4; stackHeight = 8
               subu $sp,$sp,4 # This at 128.4; stackHeight = 8
               sw $s2,($sp)#**"" # This at 128.4; stackHeight = 12
              # EXIT NODE # This at 128.4; stackHeight = 12
              # ENTER NODE # Call at 128.40; stackHeight = 12
                # ENTER NODE # Call at 128.29; stackHeight = 12
                  # ENTER NODE # Call at 128.23; stackHeight = 12
                    # ENTER NODE # IdentifierExp at 128.13; stackHeight = 12
                     lw $t0,4($s2) # inst-var # IdentifierExp at 128.13; stackHeight = 12
                     subu $sp,$sp,4 # IdentifierExp at 128.13; stackHeight = 12
                     sw $t0,($sp)#**"" # IdentifierExp at 128.13; stackHeight = 16
                    # EXIT NODE # IdentifierExp at 128.13; stackHeight = 16
                    # ENTER NODE # IdentifierExp at 128.20; stackHeight = 16
                     lw $t0,8($sp) # local: stackHt=16,var-offset=-8 # IdentifierExp at 128.20; stackHeight = 16
                     subu $sp,$sp,8 # IdentifierExp at 128.20; stackHeight = 16
                     sw $s5,4($sp)#**"GC tag" # IdentifierExp at 128.20; stackHeight = 24
                     sw $t0,($sp)#**"" # IdentifierExp at 128.20; stackHeight = 24
                    # EXIT NODE # IdentifierExp at 128.20; stackHeight = 24
                   lw $t0,8($sp) # ArrayLookup at 128.19; stackHeight = 24
                   beq $t0,$zero,nullPtrException # ArrayLookup at 128.19; stackHeight = 24
                   lw $t1,-4($t0) # ArrayLookup at 128.19; stackHeight = 24
                   lw $t2,($sp) # ArrayLookup at 128.19; stackHeight = 24
                   bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 128.19; stackHeight = 24
                   sll $t2,$t2,2 # ArrayLookup at 128.19; stackHeight = 24
                   addu $t2,$t2,$t0 # ArrayLookup at 128.19; stackHeight = 24
                   lw $t0,($t2) # ArrayLookup at 128.19; stackHeight = 24
                   sw $t0,8($sp)#**"" # ArrayLookup at 128.19; stackHeight = 24
                   addu $sp,$sp,8 # ArrayLookup at 128.19; stackHeight = 24
                  # EXIT NODE # ArrayLookup at 128.19; stackHeight = 16
                 lw $t0,0($sp) # Call at 128.23; stackHeight = 16
                 beq $t0,$zero,nullPtrException # Call at 128.23; stackHeight = 16
                 lw $t0,-12($t0) # Call at 128.23; stackHeight = 16
                 lw $t0,40($t0) # Call at 128.23; stackHeight = 16
                 jalr $t0 # abs # Call at 128.23; stackHeight = 16
                # EXIT NODE # Call at 128.23; stackHeight = 16
               lw $t0,0($sp) # Call at 128.29; stackHeight = 16
               beq $t0,$zero,nullPtrException # Call at 128.29; stackHeight = 16
               lw $t0,-12($t0) # Call at 128.29; stackHeight = 16
               lw $t0,8($t0) # Call at 128.29; stackHeight = 16
               jalr $t0 # toString # Call at 128.29; stackHeight = 16
              # EXIT NODE # Call at 128.29; stackHeight = 16
              # ENTER NODE # StringLiteral at 128.47; stackHeight = 16
               subu $sp,$sp,4 # StringLiteral at 128.47; stackHeight = 16
               la $t0,strLit_486 # StringLiteral at 128.47; stackHeight = 20
               sw $t0,($sp)#**"strLit:\?" # StringLiteral at 128.47; stackHeight = 20
              # EXIT NODE # StringLiteral at 128.47; stackHeight = 20
             lw $t0,4($sp) # Call at 128.40; stackHeight = 20
             beq $t0,$zero,nullPtrException # Call at 128.40; stackHeight = 20
             lw $t0,-12($t0) # Call at 128.40; stackHeight = 20
             lw $t0,12($t0) # Call at 128.40; stackHeight = 20
             jalr $t0 # concat # Call at 128.40; stackHeight = 20
            # EXIT NODE # Call at 128.40; stackHeight = 16
           lw $t0,4($sp) # Call at 128.4; stackHeight = 16
           beq $t0,$zero,nullPtrException # Call at 128.4; stackHeight = 16
           lw $t0,-12($t0) # Call at 128.4; stackHeight = 16
           lw $t0,24($t0) # Call at 128.4; stackHeight = 16
           jalr $t0 # printStr # Call at 128.4; stackHeight = 16
          # EXIT NODE # Call at 128.4; stackHeight = 8
        # EXIT NODE # CallStatement at 128.4; stackHeight = 8
      # EXIT NODE # Block at 127.43; stackHeight = 8
      # ENTER NODE # Assign at 127.38; stackHeight = 8
        # ENTER NODE # Plus at 127.39; stackHeight = 8
          # ENTER NODE # IdentifierExp at 127.38; stackHeight = 8
           lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 127.38; stackHeight = 8
           subu $sp,$sp,8 # IdentifierExp at 127.38; stackHeight = 8
           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 127.38; stackHeight = 16
           sw $t0,($sp)#**"" # IdentifierExp at 127.38; stackHeight = 16
          # EXIT NODE # IdentifierExp at 127.38; stackHeight = 16
          # ENTER NODE # IntegerLiteral at 127.39; stackHeight = 16
           subu $sp,$sp,8 # IntegerLiteral at 127.39; stackHeight = 16
           sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 127.39; stackHeight = 24
           li $t0,1 # IntegerLiteral at 127.39; stackHeight = 24
           sw $t0,($sp) # IntegerLiteral at 127.39; stackHeight = 24
          # EXIT NODE # IntegerLiteral at 127.39; stackHeight = 24
         lw $t0,($sp) # Plus at 127.39; stackHeight = 24
         lw $t1,8($sp) # Plus at 127.39; stackHeight = 24
         addu $t0,$t0,$t1 # Plus at 127.39; stackHeight = 24
         addu $sp,$sp,8 # Plus at 127.39; stackHeight = 24
         sw $t0,($sp)#**"" # Plus at 127.39; stackHeight = 24
        # EXIT NODE # Plus at 127.39; stackHeight = 16
       lw $t0,($sp) # Assign at 127.38; stackHeight = 16
       sw $t0,8($sp) # Assign at 127.38; stackHeight = 16
       addu $sp,$sp,8 # Assign at 127.38; stackHeight = 16
      # EXIT NODE # Assign at 127.38; stackHeight = 8
    # EXIT NODE # Block at 127.3; stackHeight = 8
  while_enter_520: # While at 127.3; stackHeight = 8
    # ENTER NODE # LessThan at 127.21; stackHeight = 8
      # ENTER NODE # IdentifierExp at 127.19; stackHeight = 8
       lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 127.19; stackHeight = 8
       subu $sp,$sp,8 # IdentifierExp at 127.19; stackHeight = 8
       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 127.19; stackHeight = 16
       sw $t0,($sp)#**"" # IdentifierExp at 127.19; stackHeight = 16
      # EXIT NODE # IdentifierExp at 127.19; stackHeight = 16
      # ENTER NODE # ArrayLength at 127.29; stackHeight = 16
        # ENTER NODE # IdentifierExp at 127.23; stackHeight = 16
         lw $t0,4($s2) # inst-var # IdentifierExp at 127.23; stackHeight = 16
         subu $sp,$sp,4 # IdentifierExp at 127.23; stackHeight = 16
         sw $t0,($sp)#**"" # IdentifierExp at 127.23; stackHeight = 20
        # EXIT NODE # IdentifierExp at 127.23; stackHeight = 20
       lw $t0,($sp) # ArrayLength at 127.29; stackHeight = 20
       beq $t0,$zero,nullPtrException # ArrayLength at 127.29; stackHeight = 20
       lw $t0,-4($t0) # ArrayLength at 127.29; stackHeight = 20
       sw $s5,($sp)#**"GC tag" # ArrayLength at 127.29; stackHeight = 20
       subu $sp,4 # ArrayLength at 127.29; stackHeight = 20
       sw $t0,($sp)#**"" # ArrayLength at 127.29; stackHeight = 20
      # EXIT NODE # ArrayLength at 127.29; stackHeight = 24
     lw $t0,($sp) # LessThan at 127.21; stackHeight = 24
     lw $t1,8($sp) # LessThan at 127.21; stackHeight = 24
     slt $t0,$t1,$t0 # LessThan at 127.21; stackHeight = 24
     addu $sp,$sp,12 # LessThan at 127.21; stackHeight = 24
     sw $t0,($sp)#**"" # LessThan at 127.21; stackHeight = 12
    # EXIT NODE # LessThan at 127.21; stackHeight = 12
   lw $t0,($sp) # While at 127.3; stackHeight = 12
   addu $sp,$sp,4 # While at 127.3; stackHeight = 12
  bne $t0,$zero,while_top_520 # While at 127.3; stackHeight = 8
  break_target_520: # While at 127.3; stackHeight = 8
  # EXIT NODE # While at 127.3; stackHeight = 8
 addu $sp,8 # Block at 127.3; stackHeight = 8
# EXIT NODE # Block at 127.3; stackHeight = 0
 # stack height is 0 # MethodDeclVoid at 123.14; stackHeight = 0
 lw $ra,4($sp) # MethodDeclVoid at 123.14; stackHeight = 0
 lw $s2,0($sp) # MethodDeclVoid at 123.14; stackHeight = 0
 addu $sp,$sp,8 # MethodDeclVoid at 123.14; stackHeight = 0
jr $ra # MethodDeclVoid at 123.14; stackHeight = -8
# EXIT NODE # MethodDeclVoid at 123.14; stackHeight = -8
  # ENTER NODE # MethodDeclVoid at 131.14; stackHeight = -8
  .globl fcn_677_add # MethodDeclVoid at 131.14; stackHeight = -8
  fcn_677_add: # MethodDeclVoid at 131.14; stackHeight = -8
   subu $sp,$sp,4 # MethodDeclVoid at 131.14; stackHeight = -8
   sw $s2,($sp) #**"old this-ptr" # MethodDeclVoid at 131.14; stackHeight = -8
   lw $s2,4($sp) #**"this-ptr" # MethodDeclVoid at 131.14; stackHeight = -8
   sw $ra,4($sp) #**"RA:add" # MethodDeclVoid at 131.14; stackHeight = -8
    # ENTER NODE # Block at 132.3; stackHeight = 0
      # ENTER NODE # LocalVarDecl at 132.12; stackHeight = 0
        # ENTER NODE # IntegerLiteral at 132.16; stackHeight = 0
         subu $sp,$sp,8 # IntegerLiteral at 132.16; stackHeight = 0
         sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 132.16; stackHeight = 8
         li $t0,0 # IntegerLiteral at 132.16; stackHeight = 8
         sw $t0,($sp) # IntegerLiteral at 132.16; stackHeight = 8
        # EXIT NODE # IntegerLiteral at 132.16; stackHeight = 8
      # EXIT NODE # LocalVarDecl at 132.12; stackHeight = 8
      # ENTER NODE # While at 132.3; stackHeight = 8
      j while_enter_598 # While at 132.3; stackHeight = 8
      while_top_598: # While at 132.3; stackHeight = 8
        # ENTER NODE # Block at 132.3; stackHeight = 8
          # ENTER NODE # Block at 132.41; stackHeight = 8
            # ENTER NODE # Block at 133.4; stackHeight = 8
              # ENTER NODE # LocalVarDecl at 133.13; stackHeight = 8
                # ENTER NODE # IntegerLiteral at 133.17; stackHeight = 8
                 subu $sp,$sp,8 # IntegerLiteral at 133.17; stackHeight = 8
                 sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 133.17; stackHeight = 16
                 li $t0,0 # IntegerLiteral at 133.17; stackHeight = 16
                 sw $t0,($sp) # IntegerLiteral at 133.17; stackHeight = 16
                # EXIT NODE # IntegerLiteral at 133.17; stackHeight = 16
              # EXIT NODE # LocalVarDecl at 133.13; stackHeight = 16
              # ENTER NODE # While at 133.4; stackHeight = 16
              j while_enter_564 # While at 133.4; stackHeight = 16
              while_top_564: # While at 133.4; stackHeight = 16
                # ENTER NODE # Block at 133.4; stackHeight = 16
                  # ENTER NODE # Block at 133.42; stackHeight = 16
                    # ENTER NODE # CallStatement at 134.5; stackHeight = 16
                      # ENTER NODE # Call at 134.5; stackHeight = 16
                        # ENTER NODE # This at 134.5; stackHeight = 16
                         subu $sp,$sp,4 # This at 134.5; stackHeight = 16
                         sw $s2,($sp)#**"" # This at 134.5; stackHeight = 20
                        # EXIT NODE # This at 134.5; stackHeight = 20
                        # ENTER NODE # Call at 134.46; stackHeight = 20
                          # ENTER NODE # Call at 134.35; stackHeight = 20
                            # ENTER NODE # Call at 134.22; stackHeight = 20
                              # ENTER NODE # IdentifierExp at 134.14; stackHeight = 20
                               lw $t0,0($s2) # inst-var # IdentifierExp at 134.14; stackHeight = 20
                               subu $sp,$sp,4 # IdentifierExp at 134.14; stackHeight = 20
                               sw $t0,($sp)#**"" # IdentifierExp at 134.14; stackHeight = 24
                              # EXIT NODE # IdentifierExp at 134.14; stackHeight = 24
                              # ENTER NODE # IdentifierExp at 134.19; stackHeight = 24
                               lw $t0,16($sp) # local: stackHt=24,var-offset=-8 # IdentifierExp at 134.19; stackHeight = 24
                               subu $sp,$sp,8 # IdentifierExp at 134.19; stackHeight = 24
                               sw $s5,4($sp)#**"GC tag" # IdentifierExp at 134.19; stackHeight = 32
                               sw $t0,($sp)#**"" # IdentifierExp at 134.19; stackHeight = 32
                              # EXIT NODE # IdentifierExp at 134.19; stackHeight = 32
                             lw $t0,8($sp) # ArrayLookup at 134.18; stackHeight = 32
                             beq $t0,$zero,nullPtrException # ArrayLookup at 134.18; stackHeight = 32
                             lw $t1,-4($t0) # ArrayLookup at 134.18; stackHeight = 32
                             lw $t2,($sp) # ArrayLookup at 134.18; stackHeight = 32
                             bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 134.18; stackHeight = 32
                             sll $t2,$t2,2 # ArrayLookup at 134.18; stackHeight = 32
                             addu $t2,$t2,$t0 # ArrayLookup at 134.18; stackHeight = 32
                             lw $t0,($t2) # ArrayLookup at 134.18; stackHeight = 32
                             sw $t0,8($sp)#**"" # ArrayLookup at 134.18; stackHeight = 32
                             addu $sp,$sp,8 # ArrayLookup at 134.18; stackHeight = 32
                            # EXIT NODE # ArrayLookup at 134.18; stackHeight = 24
                            # ENTER NODE # IdentifierExp at 134.26; stackHeight = 24
                             lw $t0,0($s2) # inst-var # IdentifierExp at 134.26; stackHeight = 24
                             subu $sp,$sp,4 # IdentifierExp at 134.26; stackHeight = 24
                             sw $t0,($sp)#**"" # IdentifierExp at 134.26; stackHeight = 28
                            # EXIT NODE # IdentifierExp at 134.26; stackHeight = 28
                            # ENTER NODE # IdentifierExp at 134.31; stackHeight = 28
                             lw $t0,12($sp) # local: stackHt=28,var-offset=-16 # IdentifierExp at 134.31; stackHeight = 28
                             subu $sp,$sp,8 # IdentifierExp at 134.31; stackHeight = 28
                             sw $s5,4($sp)#**"GC tag" # IdentifierExp at 134.31; stackHeight = 36
                             sw $t0,($sp)#**"" # IdentifierExp at 134.31; stackHeight = 36
                            # EXIT NODE # IdentifierExp at 134.31; stackHeight = 36
                           lw $t0,8($sp) # ArrayLookup at 134.30; stackHeight = 36
                           beq $t0,$zero,nullPtrException # ArrayLookup at 134.30; stackHeight = 36
                           lw $t1,-4($t0) # ArrayLookup at 134.30; stackHeight = 36
                           lw $t2,($sp) # ArrayLookup at 134.30; stackHeight = 36
                           bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 134.30; stackHeight = 36
                           sll $t2,$t2,2 # ArrayLookup at 134.30; stackHeight = 36
                           addu $t2,$t2,$t0 # ArrayLookup at 134.30; stackHeight = 36
                           lw $t0,($t2) # ArrayLookup at 134.30; stackHeight = 36
                           sw $t0,8($sp)#**"" # ArrayLookup at 134.30; stackHeight = 36
                           addu $sp,$sp,8 # ArrayLookup at 134.30; stackHeight = 36
                          # EXIT NODE # ArrayLookup at 134.30; stackHeight = 28
                         lw $t0,4($sp) # Call at 134.22; stackHeight = 28
                         beq $t0,$zero,nullPtrException # Call at 134.22; stackHeight = 28
                         lw $t0,-12($t0) # Call at 134.22; stackHeight = 28
                         lw $t0,20($t0) # Call at 134.22; stackHeight = 28
                         jalr $t0 # add # Call at 134.22; stackHeight = 28
                        # EXIT NODE # Call at 134.22; stackHeight = 24
                       lw $t0,0($sp) # Call at 134.35; stackHeight = 24
                       beq $t0,$zero,nullPtrException # Call at 134.35; stackHeight = 24
                       lw $t0,-12($t0) # Call at 134.35; stackHeight = 24
                       lw $t0,8($t0) # Call at 134.35; stackHeight = 24
                       jalr $t0 # toString # Call at 134.35; stackHeight = 24
                      # EXIT NODE # Call at 134.35; stackHeight = 24
                      # ENTER NODE # StringLiteral at 134.53; stackHeight = 24
                       subu $sp,$sp,4 # StringLiteral at 134.53; stackHeight = 24
                       la $t0,strLit_486 # StringLiteral at 134.53; stackHeight = 28
                       sw $t0,($sp)#**"strLit:\?" # StringLiteral at 134.53; stackHeight = 28
                      # EXIT NODE # StringLiteral at 134.53; stackHeight = 28
                     lw $t0,4($sp) # Call at 134.46; stackHeight = 28
                     beq $t0,$zero,nullPtrException # Call at 134.46; stackHeight = 28
                     lw $t0,-12($t0) # Call at 134.46; stackHeight = 28
                     lw $t0,12($t0) # Call at 134.46; stackHeight = 28
                     jalr $t0 # concat # Call at 134.46; stackHeight = 28
                    # EXIT NODE # Call at 134.46; stackHeight = 24
                   lw $t0,4($sp) # Call at 134.5; stackHeight = 24
                   beq $t0,$zero,nullPtrException # Call at 134.5; stackHeight = 24
                   lw $t0,-12($t0) # Call at 134.5; stackHeight = 24
                   lw $t0,24($t0) # Call at 134.5; stackHeight = 24
                   jalr $t0 # printStr # Call at 134.5; stackHeight = 24
                  # EXIT NODE # Call at 134.5; stackHeight = 16
                # EXIT NODE # CallStatement at 134.5; stackHeight = 16
              # EXIT NODE # Block at 133.42; stackHeight = 16
              # ENTER NODE # Assign at 133.37; stackHeight = 16
                # ENTER NODE # Plus at 133.38; stackHeight = 16
                  # ENTER NODE # IdentifierExp at 133.37; stackHeight = 16
                   lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 133.37; stackHeight = 16
                   subu $sp,$sp,8 # IdentifierExp at 133.37; stackHeight = 16
                   sw $s5,4($sp)#**"GC tag" # IdentifierExp at 133.37; stackHeight = 24
                   sw $t0,($sp)#**"" # IdentifierExp at 133.37; stackHeight = 24
                  # EXIT NODE # IdentifierExp at 133.37; stackHeight = 24
                  # ENTER NODE # IntegerLiteral at 133.38; stackHeight = 24
                   subu $sp,$sp,8 # IntegerLiteral at 133.38; stackHeight = 24
                   sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 133.38; stackHeight = 32
                   li $t0,1 # IntegerLiteral at 133.38; stackHeight = 32
                   sw $t0,($sp) # IntegerLiteral at 133.38; stackHeight = 32
                  # EXIT NODE # IntegerLiteral at 133.38; stackHeight = 32
                 lw $t0,($sp) # Plus at 133.38; stackHeight = 32
                 lw $t1,8($sp) # Plus at 133.38; stackHeight = 32
                 addu $t0,$t0,$t1 # Plus at 133.38; stackHeight = 32
                 addu $sp,$sp,8 # Plus at 133.38; stackHeight = 32
                 sw $t0,($sp)#**"" # Plus at 133.38; stackHeight = 32
                # EXIT NODE # Plus at 133.38; stackHeight = 24
               lw $t0,($sp) # Assign at 133.37; stackHeight = 24
               sw $t0,8($sp) # Assign at 133.37; stackHeight = 24
               addu $sp,$sp,8 # Assign at 133.37; stackHeight = 24
              # EXIT NODE # Assign at 133.37; stackHeight = 16
            # EXIT NODE # Block at 133.4; stackHeight = 16
          while_enter_564: # While at 133.4; stackHeight = 16
            # ENTER NODE # LessThan at 133.22; stackHeight = 16
              # ENTER NODE # IdentifierExp at 133.20; stackHeight = 16
               lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 133.20; stackHeight = 16
               subu $sp,$sp,8 # IdentifierExp at 133.20; stackHeight = 16
               sw $s5,4($sp)#**"GC tag" # IdentifierExp at 133.20; stackHeight = 24
               sw $t0,($sp)#**"" # IdentifierExp at 133.20; stackHeight = 24
              # EXIT NODE # IdentifierExp at 133.20; stackHeight = 24
              # ENTER NODE # ArrayLength at 133.28; stackHeight = 24
                # ENTER NODE # IdentifierExp at 133.24; stackHeight = 24
                 lw $t0,0($s2) # inst-var # IdentifierExp at 133.24; stackHeight = 24
                 subu $sp,$sp,4 # IdentifierExp at 133.24; stackHeight = 24
                 sw $t0,($sp)#**"" # IdentifierExp at 133.24; stackHeight = 28
                # EXIT NODE # IdentifierExp at 133.24; stackHeight = 28
               lw $t0,($sp) # ArrayLength at 133.28; stackHeight = 28
               beq $t0,$zero,nullPtrException # ArrayLength at 133.28; stackHeight = 28
               lw $t0,-4($t0) # ArrayLength at 133.28; stackHeight = 28
               sw $s5,($sp)#**"GC tag" # ArrayLength at 133.28; stackHeight = 28
               subu $sp,4 # ArrayLength at 133.28; stackHeight = 28
               sw $t0,($sp)#**"" # ArrayLength at 133.28; stackHeight = 28
              # EXIT NODE # ArrayLength at 133.28; stackHeight = 32
             lw $t0,($sp) # LessThan at 133.22; stackHeight = 32
             lw $t1,8($sp) # LessThan at 133.22; stackHeight = 32
             slt $t0,$t1,$t0 # LessThan at 133.22; stackHeight = 32
             addu $sp,$sp,12 # LessThan at 133.22; stackHeight = 32
             sw $t0,($sp)#**"" # LessThan at 133.22; stackHeight = 20
            # EXIT NODE # LessThan at 133.22; stackHeight = 20
           lw $t0,($sp) # While at 133.4; stackHeight = 20
           addu $sp,$sp,4 # While at 133.4; stackHeight = 20
          bne $t0,$zero,while_top_564 # While at 133.4; stackHeight = 16
          break_target_564: # While at 133.4; stackHeight = 16
          # EXIT NODE # While at 133.4; stackHeight = 16
         addu $sp,8 # Block at 133.4; stackHeight = 16
        # EXIT NODE # Block at 133.4; stackHeight = 8
        # ENTER NODE # Block at 136.4; stackHeight = 8
          # ENTER NODE # LocalVarDecl at 136.13; stackHeight = 8
            # ENTER NODE # IntegerLiteral at 136.17; stackHeight = 8
             subu $sp,$sp,8 # IntegerLiteral at 136.17; stackHeight = 8
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 136.17; stackHeight = 16
             li $t0,0 # IntegerLiteral at 136.17; stackHeight = 16
             sw $t0,($sp) # IntegerLiteral at 136.17; stackHeight = 16
            # EXIT NODE # IntegerLiteral at 136.17; stackHeight = 16
          # EXIT NODE # LocalVarDecl at 136.13; stackHeight = 16
          # ENTER NODE # While at 136.4; stackHeight = 16
          j while_enter_594 # While at 136.4; stackHeight = 16
          while_top_594: # While at 136.4; stackHeight = 16
            # ENTER NODE # Block at 136.4; stackHeight = 16
              # ENTER NODE # Block at 136.44; stackHeight = 16
                # ENTER NODE # CallStatement at 137.5; stackHeight = 16
                  # ENTER NODE # Call at 137.5; stackHeight = 16
                    # ENTER NODE # This at 137.5; stackHeight = 16
                     subu $sp,$sp,4 # This at 137.5; stackHeight = 16
                     sw $s2,($sp)#**"" # This at 137.5; stackHeight = 20
                    # EXIT NODE # This at 137.5; stackHeight = 20
                    # ENTER NODE # Call at 137.48; stackHeight = 20
                      # ENTER NODE # Call at 137.37; stackHeight = 20
                        # ENTER NODE # Call at 137.22; stackHeight = 20
                          # ENTER NODE # IdentifierExp at 137.14; stackHeight = 20
                           lw $t0,0($s2) # inst-var # IdentifierExp at 137.14; stackHeight = 20
                           subu $sp,$sp,4 # IdentifierExp at 137.14; stackHeight = 20
                           sw $t0,($sp)#**"" # IdentifierExp at 137.14; stackHeight = 24
                          # EXIT NODE # IdentifierExp at 137.14; stackHeight = 24
                          # ENTER NODE # IdentifierExp at 137.19; stackHeight = 24
                           lw $t0,16($sp) # local: stackHt=24,var-offset=-8 # IdentifierExp at 137.19; stackHeight = 24
                           subu $sp,$sp,8 # IdentifierExp at 137.19; stackHeight = 24
                           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 137.19; stackHeight = 32
                           sw $t0,($sp)#**"" # IdentifierExp at 137.19; stackHeight = 32
                          # EXIT NODE # IdentifierExp at 137.19; stackHeight = 32
                         lw $t0,8($sp) # ArrayLookup at 137.18; stackHeight = 32
                         beq $t0,$zero,nullPtrException # ArrayLookup at 137.18; stackHeight = 32
                         lw $t1,-4($t0) # ArrayLookup at 137.18; stackHeight = 32
                         lw $t2,($sp) # ArrayLookup at 137.18; stackHeight = 32
                         bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 137.18; stackHeight = 32
                         sll $t2,$t2,2 # ArrayLookup at 137.18; stackHeight = 32
                         addu $t2,$t2,$t0 # ArrayLookup at 137.18; stackHeight = 32
                         lw $t0,($t2) # ArrayLookup at 137.18; stackHeight = 32
                         sw $t0,8($sp)#**"" # ArrayLookup at 137.18; stackHeight = 32
                         addu $sp,$sp,8 # ArrayLookup at 137.18; stackHeight = 32
                        # EXIT NODE # ArrayLookup at 137.18; stackHeight = 24
                        # ENTER NODE # IdentifierExp at 137.26; stackHeight = 24
                         lw $t0,4($s2) # inst-var # IdentifierExp at 137.26; stackHeight = 24
                         subu $sp,$sp,4 # IdentifierExp at 137.26; stackHeight = 24
                         sw $t0,($sp)#**"" # IdentifierExp at 137.26; stackHeight = 28
                        # EXIT NODE # IdentifierExp at 137.26; stackHeight = 28
                        # ENTER NODE # IdentifierExp at 137.33; stackHeight = 28
                         lw $t0,12($sp) # local: stackHt=28,var-offset=-16 # IdentifierExp at 137.33; stackHeight = 28
                         subu $sp,$sp,8 # IdentifierExp at 137.33; stackHeight = 28
                         sw $s5,4($sp)#**"GC tag" # IdentifierExp at 137.33; stackHeight = 36
                         sw $t0,($sp)#**"" # IdentifierExp at 137.33; stackHeight = 36
                        # EXIT NODE # IdentifierExp at 137.33; stackHeight = 36
                       lw $t0,8($sp) # ArrayLookup at 137.32; stackHeight = 36
                       beq $t0,$zero,nullPtrException # ArrayLookup at 137.32; stackHeight = 36
                       lw $t1,-4($t0) # ArrayLookup at 137.32; stackHeight = 36
                       lw $t2,($sp) # ArrayLookup at 137.32; stackHeight = 36
                       bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 137.32; stackHeight = 36
                       sll $t2,$t2,2 # ArrayLookup at 137.32; stackHeight = 36
                       addu $t2,$t2,$t0 # ArrayLookup at 137.32; stackHeight = 36
                       lw $t0,($t2) # ArrayLookup at 137.32; stackHeight = 36
                       sw $t0,8($sp)#**"" # ArrayLookup at 137.32; stackHeight = 36
                       addu $sp,$sp,8 # ArrayLookup at 137.32; stackHeight = 36
                      # EXIT NODE # ArrayLookup at 137.32; stackHeight = 28
                     lw $t0,4($sp) # Call at 137.22; stackHeight = 28
                     beq $t0,$zero,nullPtrException # Call at 137.22; stackHeight = 28
                     lw $t0,-12($t0) # Call at 137.22; stackHeight = 28
                     lw $t0,20($t0) # Call at 137.22; stackHeight = 28
                     jalr $t0 # add # Call at 137.22; stackHeight = 28
                    # EXIT NODE # Call at 137.22; stackHeight = 24
                   lw $t0,0($sp) # Call at 137.37; stackHeight = 24
                   beq $t0,$zero,nullPtrException # Call at 137.37; stackHeight = 24
                   lw $t0,-12($t0) # Call at 137.37; stackHeight = 24
                   lw $t0,8($t0) # Call at 137.37; stackHeight = 24
                   jalr $t0 # toString # Call at 137.37; stackHeight = 24
                  # EXIT NODE # Call at 137.37; stackHeight = 24
                  # ENTER NODE # StringLiteral at 137.55; stackHeight = 24
                   subu $sp,$sp,4 # StringLiteral at 137.55; stackHeight = 24
                   la $t0,strLit_486 # StringLiteral at 137.55; stackHeight = 28
                   sw $t0,($sp)#**"strLit:\?" # StringLiteral at 137.55; stackHeight = 28
                  # EXIT NODE # StringLiteral at 137.55; stackHeight = 28
                 lw $t0,4($sp) # Call at 137.48; stackHeight = 28
                 beq $t0,$zero,nullPtrException # Call at 137.48; stackHeight = 28
                 lw $t0,-12($t0) # Call at 137.48; stackHeight = 28
                 lw $t0,12($t0) # Call at 137.48; stackHeight = 28
                 jalr $t0 # concat # Call at 137.48; stackHeight = 28
                # EXIT NODE # Call at 137.48; stackHeight = 24
               lw $t0,4($sp) # Call at 137.5; stackHeight = 24
               beq $t0,$zero,nullPtrException # Call at 137.5; stackHeight = 24
               lw $t0,-12($t0) # Call at 137.5; stackHeight = 24
               lw $t0,24($t0) # Call at 137.5; stackHeight = 24
               jalr $t0 # printStr # Call at 137.5; stackHeight = 24
              # EXIT NODE # Call at 137.5; stackHeight = 16
            # EXIT NODE # CallStatement at 137.5; stackHeight = 16
          # EXIT NODE # Block at 136.44; stackHeight = 16
          # ENTER NODE # Assign at 136.39; stackHeight = 16
            # ENTER NODE # Plus at 136.40; stackHeight = 16
              # ENTER NODE # IdentifierExp at 136.39; stackHeight = 16
               lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 136.39; stackHeight = 16
               subu $sp,$sp,8 # IdentifierExp at 136.39; stackHeight = 16
               sw $s5,4($sp)#**"GC tag" # IdentifierExp at 136.39; stackHeight = 24
               sw $t0,($sp)#**"" # IdentifierExp at 136.39; stackHeight = 24
              # EXIT NODE # IdentifierExp at 136.39; stackHeight = 24
              # ENTER NODE # IntegerLiteral at 136.40; stackHeight = 24
               subu $sp,$sp,8 # IntegerLiteral at 136.40; stackHeight = 24
               sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 136.40; stackHeight = 32
               li $t0,1 # IntegerLiteral at 136.40; stackHeight = 32
               sw $t0,($sp) # IntegerLiteral at 136.40; stackHeight = 32
              # EXIT NODE # IntegerLiteral at 136.40; stackHeight = 32
             lw $t0,($sp) # Plus at 136.40; stackHeight = 32
             lw $t1,8($sp) # Plus at 136.40; stackHeight = 32
             addu $t0,$t0,$t1 # Plus at 136.40; stackHeight = 32
             addu $sp,$sp,8 # Plus at 136.40; stackHeight = 32
             sw $t0,($sp)#**"" # Plus at 136.40; stackHeight = 32
            # EXIT NODE # Plus at 136.40; stackHeight = 24
           lw $t0,($sp) # Assign at 136.39; stackHeight = 24
           sw $t0,8($sp) # Assign at 136.39; stackHeight = 24
           addu $sp,$sp,8 # Assign at 136.39; stackHeight = 24
          # EXIT NODE # Assign at 136.39; stackHeight = 16
        # EXIT NODE # Block at 136.4; stackHeight = 16
      while_enter_594: # While at 136.4; stackHeight = 16
        # ENTER NODE # LessThan at 136.22; stackHeight = 16
          # ENTER NODE # IdentifierExp at 136.20; stackHeight = 16
           lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 136.20; stackHeight = 16
           subu $sp,$sp,8 # IdentifierExp at 136.20; stackHeight = 16
           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 136.20; stackHeight = 24
           sw $t0,($sp)#**"" # IdentifierExp at 136.20; stackHeight = 24
          # EXIT NODE # IdentifierExp at 136.20; stackHeight = 24
          # ENTER NODE # ArrayLength at 136.30; stackHeight = 24
            # ENTER NODE # IdentifierExp at 136.24; stackHeight = 24
             lw $t0,4($s2) # inst-var # IdentifierExp at 136.24; stackHeight = 24
             subu $sp,$sp,4 # IdentifierExp at 136.24; stackHeight = 24
             sw $t0,($sp)#**"" # IdentifierExp at 136.24; stackHeight = 28
            # EXIT NODE # IdentifierExp at 136.24; stackHeight = 28
           lw $t0,($sp) # ArrayLength at 136.30; stackHeight = 28
           beq $t0,$zero,nullPtrException # ArrayLength at 136.30; stackHeight = 28
           lw $t0,-4($t0) # ArrayLength at 136.30; stackHeight = 28
           sw $s5,($sp)#**"GC tag" # ArrayLength at 136.30; stackHeight = 28
           subu $sp,4 # ArrayLength at 136.30; stackHeight = 28
           sw $t0,($sp)#**"" # ArrayLength at 136.30; stackHeight = 28
          # EXIT NODE # ArrayLength at 136.30; stackHeight = 32
         lw $t0,($sp) # LessThan at 136.22; stackHeight = 32
         lw $t1,8($sp) # LessThan at 136.22; stackHeight = 32
         slt $t0,$t1,$t0 # LessThan at 136.22; stackHeight = 32
         addu $sp,$sp,12 # LessThan at 136.22; stackHeight = 32
         sw $t0,($sp)#**"" # LessThan at 136.22; stackHeight = 20
        # EXIT NODE # LessThan at 136.22; stackHeight = 20
       lw $t0,($sp) # While at 136.4; stackHeight = 20
       addu $sp,$sp,4 # While at 136.4; stackHeight = 20
      bne $t0,$zero,while_top_594 # While at 136.4; stackHeight = 16
      break_target_594: # While at 136.4; stackHeight = 16
      # EXIT NODE # While at 136.4; stackHeight = 16
     addu $sp,8 # Block at 136.4; stackHeight = 16
    # EXIT NODE # Block at 136.4; stackHeight = 8
  # EXIT NODE # Block at 132.41; stackHeight = 8
  # ENTER NODE # Assign at 132.36; stackHeight = 8
    # ENTER NODE # Plus at 132.37; stackHeight = 8
      # ENTER NODE # IdentifierExp at 132.36; stackHeight = 8
       lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 132.36; stackHeight = 8
       subu $sp,$sp,8 # IdentifierExp at 132.36; stackHeight = 8
       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 132.36; stackHeight = 16
       sw $t0,($sp)#**"" # IdentifierExp at 132.36; stackHeight = 16
      # EXIT NODE # IdentifierExp at 132.36; stackHeight = 16
      # ENTER NODE # IntegerLiteral at 132.37; stackHeight = 16
       subu $sp,$sp,8 # IntegerLiteral at 132.37; stackHeight = 16
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 132.37; stackHeight = 24
       li $t0,1 # IntegerLiteral at 132.37; stackHeight = 24
       sw $t0,($sp) # IntegerLiteral at 132.37; stackHeight = 24
      # EXIT NODE # IntegerLiteral at 132.37; stackHeight = 24
     lw $t0,($sp) # Plus at 132.37; stackHeight = 24
     lw $t1,8($sp) # Plus at 132.37; stackHeight = 24
     addu $t0,$t0,$t1 # Plus at 132.37; stackHeight = 24
     addu $sp,$sp,8 # Plus at 132.37; stackHeight = 24
     sw $t0,($sp)#**"" # Plus at 132.37; stackHeight = 24
    # EXIT NODE # Plus at 132.37; stackHeight = 16
   lw $t0,($sp) # Assign at 132.36; stackHeight = 16
   sw $t0,8($sp) # Assign at 132.36; stackHeight = 16
   addu $sp,$sp,8 # Assign at 132.36; stackHeight = 16
  # EXIT NODE # Assign at 132.36; stackHeight = 8
# EXIT NODE # Block at 132.3; stackHeight = 8
while_enter_598: # While at 132.3; stackHeight = 8
  # ENTER NODE # LessThan at 132.21; stackHeight = 8
    # ENTER NODE # IdentifierExp at 132.19; stackHeight = 8
     lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 132.19; stackHeight = 8
     subu $sp,$sp,8 # IdentifierExp at 132.19; stackHeight = 8
     sw $s5,4($sp)#**"GC tag" # IdentifierExp at 132.19; stackHeight = 16
     sw $t0,($sp)#**"" # IdentifierExp at 132.19; stackHeight = 16
    # EXIT NODE # IdentifierExp at 132.19; stackHeight = 16
    # ENTER NODE # ArrayLength at 132.27; stackHeight = 16
      # ENTER NODE # IdentifierExp at 132.23; stackHeight = 16
       lw $t0,0($s2) # inst-var # IdentifierExp at 132.23; stackHeight = 16
       subu $sp,$sp,4 # IdentifierExp at 132.23; stackHeight = 16
       sw $t0,($sp)#**"" # IdentifierExp at 132.23; stackHeight = 20
      # EXIT NODE # IdentifierExp at 132.23; stackHeight = 20
     lw $t0,($sp) # ArrayLength at 132.27; stackHeight = 20
     beq $t0,$zero,nullPtrException # ArrayLength at 132.27; stackHeight = 20
     lw $t0,-4($t0) # ArrayLength at 132.27; stackHeight = 20
     sw $s5,($sp)#**"GC tag" # ArrayLength at 132.27; stackHeight = 20
     subu $sp,4 # ArrayLength at 132.27; stackHeight = 20
     sw $t0,($sp)#**"" # ArrayLength at 132.27; stackHeight = 20
    # EXIT NODE # ArrayLength at 132.27; stackHeight = 24
   lw $t0,($sp) # LessThan at 132.21; stackHeight = 24
   lw $t1,8($sp) # LessThan at 132.21; stackHeight = 24
   slt $t0,$t1,$t0 # LessThan at 132.21; stackHeight = 24
   addu $sp,$sp,12 # LessThan at 132.21; stackHeight = 24
   sw $t0,($sp)#**"" # LessThan at 132.21; stackHeight = 12
  # EXIT NODE # LessThan at 132.21; stackHeight = 12
 lw $t0,($sp) # While at 132.3; stackHeight = 12
 addu $sp,$sp,4 # While at 132.3; stackHeight = 12
bne $t0,$zero,while_top_598 # While at 132.3; stackHeight = 8
break_target_598: # While at 132.3; stackHeight = 8
# EXIT NODE # While at 132.3; stackHeight = 8
 addu $sp,8 # Block at 132.3; stackHeight = 8
# EXIT NODE # Block at 132.3; stackHeight = 0
  # ENTER NODE # Block at 140.3; stackHeight = 0
    # ENTER NODE # LocalVarDecl at 140.12; stackHeight = 0
      # ENTER NODE # IntegerLiteral at 140.16; stackHeight = 0
       subu $sp,$sp,8 # IntegerLiteral at 140.16; stackHeight = 0
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 140.16; stackHeight = 8
       li $t0,0 # IntegerLiteral at 140.16; stackHeight = 8
       sw $t0,($sp) # IntegerLiteral at 140.16; stackHeight = 8
      # EXIT NODE # IntegerLiteral at 140.16; stackHeight = 8
    # EXIT NODE # LocalVarDecl at 140.12; stackHeight = 8
    # ENTER NODE # While at 140.3; stackHeight = 8
    j while_enter_675 # While at 140.3; stackHeight = 8
    while_top_675: # While at 140.3; stackHeight = 8
      # ENTER NODE # Block at 140.3; stackHeight = 8
        # ENTER NODE # Block at 140.43; stackHeight = 8
          # ENTER NODE # Block at 141.4; stackHeight = 8
            # ENTER NODE # LocalVarDecl at 141.13; stackHeight = 8
              # ENTER NODE # IntegerLiteral at 141.17; stackHeight = 8
               subu $sp,$sp,8 # IntegerLiteral at 141.17; stackHeight = 8
               sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 141.17; stackHeight = 16
               li $t0,0 # IntegerLiteral at 141.17; stackHeight = 16
               sw $t0,($sp) # IntegerLiteral at 141.17; stackHeight = 16
              # EXIT NODE # IntegerLiteral at 141.17; stackHeight = 16
            # EXIT NODE # LocalVarDecl at 141.13; stackHeight = 16
            # ENTER NODE # While at 141.4; stackHeight = 16
            j while_enter_641 # While at 141.4; stackHeight = 16
            while_top_641: # While at 141.4; stackHeight = 16
              # ENTER NODE # Block at 141.4; stackHeight = 16
                # ENTER NODE # Block at 141.42; stackHeight = 16
                  # ENTER NODE # CallStatement at 142.5; stackHeight = 16
                    # ENTER NODE # Call at 142.5; stackHeight = 16
                      # ENTER NODE # This at 142.5; stackHeight = 16
                       subu $sp,$sp,4 # This at 142.5; stackHeight = 16
                       sw $s2,($sp)#**"" # This at 142.5; stackHeight = 20
                      # EXIT NODE # This at 142.5; stackHeight = 20
                      # ENTER NODE # Call at 142.48; stackHeight = 20
                        # ENTER NODE # Call at 142.37; stackHeight = 20
                          # ENTER NODE # Call at 142.24; stackHeight = 20
                            # ENTER NODE # IdentifierExp at 142.14; stackHeight = 20
                             lw $t0,4($s2) # inst-var # IdentifierExp at 142.14; stackHeight = 20
                             subu $sp,$sp,4 # IdentifierExp at 142.14; stackHeight = 20
                             sw $t0,($sp)#**"" # IdentifierExp at 142.14; stackHeight = 24
                            # EXIT NODE # IdentifierExp at 142.14; stackHeight = 24
                            # ENTER NODE # IdentifierExp at 142.21; stackHeight = 24
                             lw $t0,16($sp) # local: stackHt=24,var-offset=-8 # IdentifierExp at 142.21; stackHeight = 24
                             subu $sp,$sp,8 # IdentifierExp at 142.21; stackHeight = 24
                             sw $s5,4($sp)#**"GC tag" # IdentifierExp at 142.21; stackHeight = 32
                             sw $t0,($sp)#**"" # IdentifierExp at 142.21; stackHeight = 32
                            # EXIT NODE # IdentifierExp at 142.21; stackHeight = 32
                           lw $t0,8($sp) # ArrayLookup at 142.20; stackHeight = 32
                           beq $t0,$zero,nullPtrException # ArrayLookup at 142.20; stackHeight = 32
                           lw $t1,-4($t0) # ArrayLookup at 142.20; stackHeight = 32
                           lw $t2,($sp) # ArrayLookup at 142.20; stackHeight = 32
                           bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 142.20; stackHeight = 32
                           sll $t2,$t2,2 # ArrayLookup at 142.20; stackHeight = 32
                           addu $t2,$t2,$t0 # ArrayLookup at 142.20; stackHeight = 32
                           lw $t0,($t2) # ArrayLookup at 142.20; stackHeight = 32
                           sw $t0,8($sp)#**"" # ArrayLookup at 142.20; stackHeight = 32
                           addu $sp,$sp,8 # ArrayLookup at 142.20; stackHeight = 32
                          # EXIT NODE # ArrayLookup at 142.20; stackHeight = 24
                          # ENTER NODE # IdentifierExp at 142.28; stackHeight = 24
                           lw $t0,0($s2) # inst-var # IdentifierExp at 142.28; stackHeight = 24
                           subu $sp,$sp,4 # IdentifierExp at 142.28; stackHeight = 24
                           sw $t0,($sp)#**"" # IdentifierExp at 142.28; stackHeight = 28
                          # EXIT NODE # IdentifierExp at 142.28; stackHeight = 28
                          # ENTER NODE # IdentifierExp at 142.33; stackHeight = 28
                           lw $t0,12($sp) # local: stackHt=28,var-offset=-16 # IdentifierExp at 142.33; stackHeight = 28
                           subu $sp,$sp,8 # IdentifierExp at 142.33; stackHeight = 28
                           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 142.33; stackHeight = 36
                           sw $t0,($sp)#**"" # IdentifierExp at 142.33; stackHeight = 36
                          # EXIT NODE # IdentifierExp at 142.33; stackHeight = 36
                         lw $t0,8($sp) # ArrayLookup at 142.32; stackHeight = 36
                         beq $t0,$zero,nullPtrException # ArrayLookup at 142.32; stackHeight = 36
                         lw $t1,-4($t0) # ArrayLookup at 142.32; stackHeight = 36
                         lw $t2,($sp) # ArrayLookup at 142.32; stackHeight = 36
                         bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 142.32; stackHeight = 36
                         sll $t2,$t2,2 # ArrayLookup at 142.32; stackHeight = 36
                         addu $t2,$t2,$t0 # ArrayLookup at 142.32; stackHeight = 36
                         lw $t0,($t2) # ArrayLookup at 142.32; stackHeight = 36
                         sw $t0,8($sp)#**"" # ArrayLookup at 142.32; stackHeight = 36
                         addu $sp,$sp,8 # ArrayLookup at 142.32; stackHeight = 36
                        # EXIT NODE # ArrayLookup at 142.32; stackHeight = 28
                       lw $t0,4($sp) # Call at 142.24; stackHeight = 28
                       beq $t0,$zero,nullPtrException # Call at 142.24; stackHeight = 28
                       lw $t0,-12($t0) # Call at 142.24; stackHeight = 28
                       lw $t0,20($t0) # Call at 142.24; stackHeight = 28
                       jalr $t0 # add # Call at 142.24; stackHeight = 28
                      # EXIT NODE # Call at 142.24; stackHeight = 24
                     lw $t0,0($sp) # Call at 142.37; stackHeight = 24
                     beq $t0,$zero,nullPtrException # Call at 142.37; stackHeight = 24
                     lw $t0,-12($t0) # Call at 142.37; stackHeight = 24
                     lw $t0,8($t0) # Call at 142.37; stackHeight = 24
                     jalr $t0 # toString # Call at 142.37; stackHeight = 24
                    # EXIT NODE # Call at 142.37; stackHeight = 24
                    # ENTER NODE # StringLiteral at 142.55; stackHeight = 24
                     subu $sp,$sp,4 # StringLiteral at 142.55; stackHeight = 24
                     la $t0,strLit_486 # StringLiteral at 142.55; stackHeight = 28
                     sw $t0,($sp)#**"strLit:\?" # StringLiteral at 142.55; stackHeight = 28
                    # EXIT NODE # StringLiteral at 142.55; stackHeight = 28
                   lw $t0,4($sp) # Call at 142.48; stackHeight = 28
                   beq $t0,$zero,nullPtrException # Call at 142.48; stackHeight = 28
                   lw $t0,-12($t0) # Call at 142.48; stackHeight = 28
                   lw $t0,12($t0) # Call at 142.48; stackHeight = 28
                   jalr $t0 # concat # Call at 142.48; stackHeight = 28
                  # EXIT NODE # Call at 142.48; stackHeight = 24
                 lw $t0,4($sp) # Call at 142.5; stackHeight = 24
                 beq $t0,$zero,nullPtrException # Call at 142.5; stackHeight = 24
                 lw $t0,-12($t0) # Call at 142.5; stackHeight = 24
                 lw $t0,24($t0) # Call at 142.5; stackHeight = 24
                 jalr $t0 # printStr # Call at 142.5; stackHeight = 24
                # EXIT NODE # Call at 142.5; stackHeight = 16
              # EXIT NODE # CallStatement at 142.5; stackHeight = 16
            # EXIT NODE # Block at 141.42; stackHeight = 16
            # ENTER NODE # Assign at 141.37; stackHeight = 16
              # ENTER NODE # Plus at 141.38; stackHeight = 16
                # ENTER NODE # IdentifierExp at 141.37; stackHeight = 16
                 lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 141.37; stackHeight = 16
                 subu $sp,$sp,8 # IdentifierExp at 141.37; stackHeight = 16
                 sw $s5,4($sp)#**"GC tag" # IdentifierExp at 141.37; stackHeight = 24
                 sw $t0,($sp)#**"" # IdentifierExp at 141.37; stackHeight = 24
                # EXIT NODE # IdentifierExp at 141.37; stackHeight = 24
                # ENTER NODE # IntegerLiteral at 141.38; stackHeight = 24
                 subu $sp,$sp,8 # IntegerLiteral at 141.38; stackHeight = 24
                 sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 141.38; stackHeight = 32
                 li $t0,1 # IntegerLiteral at 141.38; stackHeight = 32
                 sw $t0,($sp) # IntegerLiteral at 141.38; stackHeight = 32
                # EXIT NODE # IntegerLiteral at 141.38; stackHeight = 32
               lw $t0,($sp) # Plus at 141.38; stackHeight = 32
               lw $t1,8($sp) # Plus at 141.38; stackHeight = 32
               addu $t0,$t0,$t1 # Plus at 141.38; stackHeight = 32
               addu $sp,$sp,8 # Plus at 141.38; stackHeight = 32
               sw $t0,($sp)#**"" # Plus at 141.38; stackHeight = 32
              # EXIT NODE # Plus at 141.38; stackHeight = 24
             lw $t0,($sp) # Assign at 141.37; stackHeight = 24
             sw $t0,8($sp) # Assign at 141.37; stackHeight = 24
             addu $sp,$sp,8 # Assign at 141.37; stackHeight = 24
            # EXIT NODE # Assign at 141.37; stackHeight = 16
          # EXIT NODE # Block at 141.4; stackHeight = 16
        while_enter_641: # While at 141.4; stackHeight = 16
          # ENTER NODE # LessThan at 141.22; stackHeight = 16
            # ENTER NODE # IdentifierExp at 141.20; stackHeight = 16
             lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 141.20; stackHeight = 16
             subu $sp,$sp,8 # IdentifierExp at 141.20; stackHeight = 16
             sw $s5,4($sp)#**"GC tag" # IdentifierExp at 141.20; stackHeight = 24
             sw $t0,($sp)#**"" # IdentifierExp at 141.20; stackHeight = 24
            # EXIT NODE # IdentifierExp at 141.20; stackHeight = 24
            # ENTER NODE # ArrayLength at 141.28; stackHeight = 24
              # ENTER NODE # IdentifierExp at 141.24; stackHeight = 24
               lw $t0,0($s2) # inst-var # IdentifierExp at 141.24; stackHeight = 24
               subu $sp,$sp,4 # IdentifierExp at 141.24; stackHeight = 24
               sw $t0,($sp)#**"" # IdentifierExp at 141.24; stackHeight = 28
              # EXIT NODE # IdentifierExp at 141.24; stackHeight = 28
             lw $t0,($sp) # ArrayLength at 141.28; stackHeight = 28
             beq $t0,$zero,nullPtrException # ArrayLength at 141.28; stackHeight = 28
             lw $t0,-4($t0) # ArrayLength at 141.28; stackHeight = 28
             sw $s5,($sp)#**"GC tag" # ArrayLength at 141.28; stackHeight = 28
             subu $sp,4 # ArrayLength at 141.28; stackHeight = 28
             sw $t0,($sp)#**"" # ArrayLength at 141.28; stackHeight = 28
            # EXIT NODE # ArrayLength at 141.28; stackHeight = 32
           lw $t0,($sp) # LessThan at 141.22; stackHeight = 32
           lw $t1,8($sp) # LessThan at 141.22; stackHeight = 32
           slt $t0,$t1,$t0 # LessThan at 141.22; stackHeight = 32
           addu $sp,$sp,12 # LessThan at 141.22; stackHeight = 32
           sw $t0,($sp)#**"" # LessThan at 141.22; stackHeight = 20
          # EXIT NODE # LessThan at 141.22; stackHeight = 20
         lw $t0,($sp) # While at 141.4; stackHeight = 20
         addu $sp,$sp,4 # While at 141.4; stackHeight = 20
        bne $t0,$zero,while_top_641 # While at 141.4; stackHeight = 16
        break_target_641: # While at 141.4; stackHeight = 16
        # EXIT NODE # While at 141.4; stackHeight = 16
       addu $sp,8 # Block at 141.4; stackHeight = 16
      # EXIT NODE # Block at 141.4; stackHeight = 8
      # ENTER NODE # Block at 144.4; stackHeight = 8
        # ENTER NODE # LocalVarDecl at 144.13; stackHeight = 8
          # ENTER NODE # IntegerLiteral at 144.17; stackHeight = 8
           subu $sp,$sp,8 # IntegerLiteral at 144.17; stackHeight = 8
           sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 144.17; stackHeight = 16
           li $t0,0 # IntegerLiteral at 144.17; stackHeight = 16
           sw $t0,($sp) # IntegerLiteral at 144.17; stackHeight = 16
          # EXIT NODE # IntegerLiteral at 144.17; stackHeight = 16
        # EXIT NODE # LocalVarDecl at 144.13; stackHeight = 16
        # ENTER NODE # While at 144.4; stackHeight = 16
        j while_enter_671 # While at 144.4; stackHeight = 16
        while_top_671: # While at 144.4; stackHeight = 16
          # ENTER NODE # Block at 144.4; stackHeight = 16
            # ENTER NODE # Block at 144.44; stackHeight = 16
              # ENTER NODE # CallStatement at 145.5; stackHeight = 16
                # ENTER NODE # Call at 145.5; stackHeight = 16
                  # ENTER NODE # This at 145.5; stackHeight = 16
                   subu $sp,$sp,4 # This at 145.5; stackHeight = 16
                   sw $s2,($sp)#**"" # This at 145.5; stackHeight = 20
                  # EXIT NODE # This at 145.5; stackHeight = 20
                  # ENTER NODE # Call at 145.50; stackHeight = 20
                    # ENTER NODE # Call at 145.39; stackHeight = 20
                      # ENTER NODE # Call at 145.24; stackHeight = 20
                        # ENTER NODE # IdentifierExp at 145.14; stackHeight = 20
                         lw $t0,4($s2) # inst-var # IdentifierExp at 145.14; stackHeight = 20
                         subu $sp,$sp,4 # IdentifierExp at 145.14; stackHeight = 20
                         sw $t0,($sp)#**"" # IdentifierExp at 145.14; stackHeight = 24
                        # EXIT NODE # IdentifierExp at 145.14; stackHeight = 24
                        # ENTER NODE # IdentifierExp at 145.21; stackHeight = 24
                         lw $t0,16($sp) # local: stackHt=24,var-offset=-8 # IdentifierExp at 145.21; stackHeight = 24
                         subu $sp,$sp,8 # IdentifierExp at 145.21; stackHeight = 24
                         sw $s5,4($sp)#**"GC tag" # IdentifierExp at 145.21; stackHeight = 32
                         sw $t0,($sp)#**"" # IdentifierExp at 145.21; stackHeight = 32
                        # EXIT NODE # IdentifierExp at 145.21; stackHeight = 32
                       lw $t0,8($sp) # ArrayLookup at 145.20; stackHeight = 32
                       beq $t0,$zero,nullPtrException # ArrayLookup at 145.20; stackHeight = 32
                       lw $t1,-4($t0) # ArrayLookup at 145.20; stackHeight = 32
                       lw $t2,($sp) # ArrayLookup at 145.20; stackHeight = 32
                       bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 145.20; stackHeight = 32
                       sll $t2,$t2,2 # ArrayLookup at 145.20; stackHeight = 32
                       addu $t2,$t2,$t0 # ArrayLookup at 145.20; stackHeight = 32
                       lw $t0,($t2) # ArrayLookup at 145.20; stackHeight = 32
                       sw $t0,8($sp)#**"" # ArrayLookup at 145.20; stackHeight = 32
                       addu $sp,$sp,8 # ArrayLookup at 145.20; stackHeight = 32
                      # EXIT NODE # ArrayLookup at 145.20; stackHeight = 24
                      # ENTER NODE # IdentifierExp at 145.28; stackHeight = 24
                       lw $t0,4($s2) # inst-var # IdentifierExp at 145.28; stackHeight = 24
                       subu $sp,$sp,4 # IdentifierExp at 145.28; stackHeight = 24
                       sw $t0,($sp)#**"" # IdentifierExp at 145.28; stackHeight = 28
                      # EXIT NODE # IdentifierExp at 145.28; stackHeight = 28
                      # ENTER NODE # IdentifierExp at 145.35; stackHeight = 28
                       lw $t0,12($sp) # local: stackHt=28,var-offset=-16 # IdentifierExp at 145.35; stackHeight = 28
                       subu $sp,$sp,8 # IdentifierExp at 145.35; stackHeight = 28
                       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 145.35; stackHeight = 36
                       sw $t0,($sp)#**"" # IdentifierExp at 145.35; stackHeight = 36
                      # EXIT NODE # IdentifierExp at 145.35; stackHeight = 36
                     lw $t0,8($sp) # ArrayLookup at 145.34; stackHeight = 36
                     beq $t0,$zero,nullPtrException # ArrayLookup at 145.34; stackHeight = 36
                     lw $t1,-4($t0) # ArrayLookup at 145.34; stackHeight = 36
                     lw $t2,($sp) # ArrayLookup at 145.34; stackHeight = 36
                     bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 145.34; stackHeight = 36
                     sll $t2,$t2,2 # ArrayLookup at 145.34; stackHeight = 36
                     addu $t2,$t2,$t0 # ArrayLookup at 145.34; stackHeight = 36
                     lw $t0,($t2) # ArrayLookup at 145.34; stackHeight = 36
                     sw $t0,8($sp)#**"" # ArrayLookup at 145.34; stackHeight = 36
                     addu $sp,$sp,8 # ArrayLookup at 145.34; stackHeight = 36
                    # EXIT NODE # ArrayLookup at 145.34; stackHeight = 28
                   lw $t0,4($sp) # Call at 145.24; stackHeight = 28
                   beq $t0,$zero,nullPtrException # Call at 145.24; stackHeight = 28
                   lw $t0,-12($t0) # Call at 145.24; stackHeight = 28
                   lw $t0,20($t0) # Call at 145.24; stackHeight = 28
                   jalr $t0 # add # Call at 145.24; stackHeight = 28
                  # EXIT NODE # Call at 145.24; stackHeight = 24
                 lw $t0,0($sp) # Call at 145.39; stackHeight = 24
                 beq $t0,$zero,nullPtrException # Call at 145.39; stackHeight = 24
                 lw $t0,-12($t0) # Call at 145.39; stackHeight = 24
                 lw $t0,8($t0) # Call at 145.39; stackHeight = 24
                 jalr $t0 # toString # Call at 145.39; stackHeight = 24
                # EXIT NODE # Call at 145.39; stackHeight = 24
                # ENTER NODE # StringLiteral at 145.57; stackHeight = 24
                 subu $sp,$sp,4 # StringLiteral at 145.57; stackHeight = 24
                 la $t0,strLit_486 # StringLiteral at 145.57; stackHeight = 28
                 sw $t0,($sp)#**"strLit:\?" # StringLiteral at 145.57; stackHeight = 28
                # EXIT NODE # StringLiteral at 145.57; stackHeight = 28
               lw $t0,4($sp) # Call at 145.50; stackHeight = 28
               beq $t0,$zero,nullPtrException # Call at 145.50; stackHeight = 28
               lw $t0,-12($t0) # Call at 145.50; stackHeight = 28
               lw $t0,12($t0) # Call at 145.50; stackHeight = 28
               jalr $t0 # concat # Call at 145.50; stackHeight = 28
              # EXIT NODE # Call at 145.50; stackHeight = 24
             lw $t0,4($sp) # Call at 145.5; stackHeight = 24
             beq $t0,$zero,nullPtrException # Call at 145.5; stackHeight = 24
             lw $t0,-12($t0) # Call at 145.5; stackHeight = 24
             lw $t0,24($t0) # Call at 145.5; stackHeight = 24
             jalr $t0 # printStr # Call at 145.5; stackHeight = 24
            # EXIT NODE # Call at 145.5; stackHeight = 16
          # EXIT NODE # CallStatement at 145.5; stackHeight = 16
        # EXIT NODE # Block at 144.44; stackHeight = 16
        # ENTER NODE # Assign at 144.39; stackHeight = 16
          # ENTER NODE # Plus at 144.40; stackHeight = 16
            # ENTER NODE # IdentifierExp at 144.39; stackHeight = 16
             lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 144.39; stackHeight = 16
             subu $sp,$sp,8 # IdentifierExp at 144.39; stackHeight = 16
             sw $s5,4($sp)#**"GC tag" # IdentifierExp at 144.39; stackHeight = 24
             sw $t0,($sp)#**"" # IdentifierExp at 144.39; stackHeight = 24
            # EXIT NODE # IdentifierExp at 144.39; stackHeight = 24
            # ENTER NODE # IntegerLiteral at 144.40; stackHeight = 24
             subu $sp,$sp,8 # IntegerLiteral at 144.40; stackHeight = 24
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 144.40; stackHeight = 32
             li $t0,1 # IntegerLiteral at 144.40; stackHeight = 32
             sw $t0,($sp) # IntegerLiteral at 144.40; stackHeight = 32
            # EXIT NODE # IntegerLiteral at 144.40; stackHeight = 32
           lw $t0,($sp) # Plus at 144.40; stackHeight = 32
           lw $t1,8($sp) # Plus at 144.40; stackHeight = 32
           addu $t0,$t0,$t1 # Plus at 144.40; stackHeight = 32
           addu $sp,$sp,8 # Plus at 144.40; stackHeight = 32
           sw $t0,($sp)#**"" # Plus at 144.40; stackHeight = 32
          # EXIT NODE # Plus at 144.40; stackHeight = 24
         lw $t0,($sp) # Assign at 144.39; stackHeight = 24
         sw $t0,8($sp) # Assign at 144.39; stackHeight = 24
         addu $sp,$sp,8 # Assign at 144.39; stackHeight = 24
        # EXIT NODE # Assign at 144.39; stackHeight = 16
      # EXIT NODE # Block at 144.4; stackHeight = 16
    while_enter_671: # While at 144.4; stackHeight = 16
      # ENTER NODE # LessThan at 144.22; stackHeight = 16
        # ENTER NODE # IdentifierExp at 144.20; stackHeight = 16
         lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 144.20; stackHeight = 16
         subu $sp,$sp,8 # IdentifierExp at 144.20; stackHeight = 16
         sw $s5,4($sp)#**"GC tag" # IdentifierExp at 144.20; stackHeight = 24
         sw $t0,($sp)#**"" # IdentifierExp at 144.20; stackHeight = 24
        # EXIT NODE # IdentifierExp at 144.20; stackHeight = 24
        # ENTER NODE # ArrayLength at 144.30; stackHeight = 24
          # ENTER NODE # IdentifierExp at 144.24; stackHeight = 24
           lw $t0,4($s2) # inst-var # IdentifierExp at 144.24; stackHeight = 24
           subu $sp,$sp,4 # IdentifierExp at 144.24; stackHeight = 24
           sw $t0,($sp)#**"" # IdentifierExp at 144.24; stackHeight = 28
          # EXIT NODE # IdentifierExp at 144.24; stackHeight = 28
         lw $t0,($sp) # ArrayLength at 144.30; stackHeight = 28
         beq $t0,$zero,nullPtrException # ArrayLength at 144.30; stackHeight = 28
         lw $t0,-4($t0) # ArrayLength at 144.30; stackHeight = 28
         sw $s5,($sp)#**"GC tag" # ArrayLength at 144.30; stackHeight = 28
         subu $sp,4 # ArrayLength at 144.30; stackHeight = 28
         sw $t0,($sp)#**"" # ArrayLength at 144.30; stackHeight = 28
        # EXIT NODE # ArrayLength at 144.30; stackHeight = 32
       lw $t0,($sp) # LessThan at 144.22; stackHeight = 32
       lw $t1,8($sp) # LessThan at 144.22; stackHeight = 32
       slt $t0,$t1,$t0 # LessThan at 144.22; stackHeight = 32
       addu $sp,$sp,12 # LessThan at 144.22; stackHeight = 32
       sw $t0,($sp)#**"" # LessThan at 144.22; stackHeight = 20
      # EXIT NODE # LessThan at 144.22; stackHeight = 20
     lw $t0,($sp) # While at 144.4; stackHeight = 20
     addu $sp,$sp,4 # While at 144.4; stackHeight = 20
    bne $t0,$zero,while_top_671 # While at 144.4; stackHeight = 16
    break_target_671: # While at 144.4; stackHeight = 16
    # EXIT NODE # While at 144.4; stackHeight = 16
   addu $sp,8 # Block at 144.4; stackHeight = 16
  # EXIT NODE # Block at 144.4; stackHeight = 8
# EXIT NODE # Block at 140.43; stackHeight = 8
  # ENTER NODE # Assign at 140.38; stackHeight = 8
    # ENTER NODE # Plus at 140.39; stackHeight = 8
      # ENTER NODE # IdentifierExp at 140.38; stackHeight = 8
       lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 140.38; stackHeight = 8
       subu $sp,$sp,8 # IdentifierExp at 140.38; stackHeight = 8
       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 140.38; stackHeight = 16
       sw $t0,($sp)#**"" # IdentifierExp at 140.38; stackHeight = 16
      # EXIT NODE # IdentifierExp at 140.38; stackHeight = 16
      # ENTER NODE # IntegerLiteral at 140.39; stackHeight = 16
       subu $sp,$sp,8 # IntegerLiteral at 140.39; stackHeight = 16
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 140.39; stackHeight = 24
       li $t0,1 # IntegerLiteral at 140.39; stackHeight = 24
       sw $t0,($sp) # IntegerLiteral at 140.39; stackHeight = 24
      # EXIT NODE # IntegerLiteral at 140.39; stackHeight = 24
     lw $t0,($sp) # Plus at 140.39; stackHeight = 24
     lw $t1,8($sp) # Plus at 140.39; stackHeight = 24
     addu $t0,$t0,$t1 # Plus at 140.39; stackHeight = 24
     addu $sp,$sp,8 # Plus at 140.39; stackHeight = 24
     sw $t0,($sp)#**"" # Plus at 140.39; stackHeight = 24
    # EXIT NODE # Plus at 140.39; stackHeight = 16
   lw $t0,($sp) # Assign at 140.38; stackHeight = 16
   sw $t0,8($sp) # Assign at 140.38; stackHeight = 16
   addu $sp,$sp,8 # Assign at 140.38; stackHeight = 16
  # EXIT NODE # Assign at 140.38; stackHeight = 8
# EXIT NODE # Block at 140.3; stackHeight = 8
while_enter_675: # While at 140.3; stackHeight = 8
  # ENTER NODE # LessThan at 140.21; stackHeight = 8
    # ENTER NODE # IdentifierExp at 140.19; stackHeight = 8
     lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 140.19; stackHeight = 8
     subu $sp,$sp,8 # IdentifierExp at 140.19; stackHeight = 8
     sw $s5,4($sp)#**"GC tag" # IdentifierExp at 140.19; stackHeight = 16
     sw $t0,($sp)#**"" # IdentifierExp at 140.19; stackHeight = 16
    # EXIT NODE # IdentifierExp at 140.19; stackHeight = 16
    # ENTER NODE # ArrayLength at 140.29; stackHeight = 16
      # ENTER NODE # IdentifierExp at 140.23; stackHeight = 16
       lw $t0,4($s2) # inst-var # IdentifierExp at 140.23; stackHeight = 16
       subu $sp,$sp,4 # IdentifierExp at 140.23; stackHeight = 16
       sw $t0,($sp)#**"" # IdentifierExp at 140.23; stackHeight = 20
      # EXIT NODE # IdentifierExp at 140.23; stackHeight = 20
     lw $t0,($sp) # ArrayLength at 140.29; stackHeight = 20
     beq $t0,$zero,nullPtrException # ArrayLength at 140.29; stackHeight = 20
     lw $t0,-4($t0) # ArrayLength at 140.29; stackHeight = 20
     sw $s5,($sp)#**"GC tag" # ArrayLength at 140.29; stackHeight = 20
     subu $sp,4 # ArrayLength at 140.29; stackHeight = 20
     sw $t0,($sp)#**"" # ArrayLength at 140.29; stackHeight = 20
    # EXIT NODE # ArrayLength at 140.29; stackHeight = 24
   lw $t0,($sp) # LessThan at 140.21; stackHeight = 24
   lw $t1,8($sp) # LessThan at 140.21; stackHeight = 24
   slt $t0,$t1,$t0 # LessThan at 140.21; stackHeight = 24
   addu $sp,$sp,12 # LessThan at 140.21; stackHeight = 24
   sw $t0,($sp)#**"" # LessThan at 140.21; stackHeight = 12
  # EXIT NODE # LessThan at 140.21; stackHeight = 12
 lw $t0,($sp) # While at 140.3; stackHeight = 12
 addu $sp,$sp,4 # While at 140.3; stackHeight = 12
bne $t0,$zero,while_top_675 # While at 140.3; stackHeight = 8
break_target_675: # While at 140.3; stackHeight = 8
# EXIT NODE # While at 140.3; stackHeight = 8
 addu $sp,8 # Block at 140.3; stackHeight = 8
# EXIT NODE # Block at 140.3; stackHeight = 0
 # stack height is 0 # MethodDeclVoid at 131.14; stackHeight = 0
 lw $ra,4($sp) # MethodDeclVoid at 131.14; stackHeight = 0
 lw $s2,0($sp) # MethodDeclVoid at 131.14; stackHeight = 0
 addu $sp,$sp,8 # MethodDeclVoid at 131.14; stackHeight = 0
jr $ra # MethodDeclVoid at 131.14; stackHeight = -8
# EXIT NODE # MethodDeclVoid at 131.14; stackHeight = -8
  # ENTER NODE # MethodDeclVoid at 149.14; stackHeight = -8
  .globl fcn_836_compareTo # MethodDeclVoid at 149.14; stackHeight = -8
  fcn_836_compareTo: # MethodDeclVoid at 149.14; stackHeight = -8
   subu $sp,$sp,4 # MethodDeclVoid at 149.14; stackHeight = -8
   sw $s2,($sp) #**"old this-ptr" # MethodDeclVoid at 149.14; stackHeight = -8
   lw $s2,4($sp) #**"this-ptr" # MethodDeclVoid at 149.14; stackHeight = -8
   sw $ra,4($sp) #**"RA:compareTo" # MethodDeclVoid at 149.14; stackHeight = -8
    # ENTER NODE # Block at 150.3; stackHeight = 0
      # ENTER NODE # LocalVarDecl at 150.12; stackHeight = 0
        # ENTER NODE # IntegerLiteral at 150.16; stackHeight = 0
         subu $sp,$sp,8 # IntegerLiteral at 150.16; stackHeight = 0
         sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 150.16; stackHeight = 8
         li $t0,0 # IntegerLiteral at 150.16; stackHeight = 8
         sw $t0,($sp) # IntegerLiteral at 150.16; stackHeight = 8
        # EXIT NODE # IntegerLiteral at 150.16; stackHeight = 8
      # EXIT NODE # LocalVarDecl at 150.12; stackHeight = 8
      # ENTER NODE # While at 150.3; stackHeight = 8
      j while_enter_755 # While at 150.3; stackHeight = 8
      while_top_755: # While at 150.3; stackHeight = 8
        # ENTER NODE # Block at 150.3; stackHeight = 8
          # ENTER NODE # Block at 150.41; stackHeight = 8
            # ENTER NODE # Block at 151.4; stackHeight = 8
              # ENTER NODE # LocalVarDecl at 151.13; stackHeight = 8
                # ENTER NODE # IntegerLiteral at 151.17; stackHeight = 8
                 subu $sp,$sp,8 # IntegerLiteral at 151.17; stackHeight = 8
                 sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 151.17; stackHeight = 16
                 li $t0,0 # IntegerLiteral at 151.17; stackHeight = 16
                 sw $t0,($sp) # IntegerLiteral at 151.17; stackHeight = 16
                # EXIT NODE # IntegerLiteral at 151.17; stackHeight = 16
              # EXIT NODE # LocalVarDecl at 151.13; stackHeight = 16
              # ENTER NODE # While at 151.4; stackHeight = 16
              j while_enter_720 # While at 151.4; stackHeight = 16
              while_top_720: # While at 151.4; stackHeight = 16
                # ENTER NODE # Block at 151.4; stackHeight = 16
                  # ENTER NODE # Block at 151.42; stackHeight = 16
                    # ENTER NODE # CallStatement at 152.5; stackHeight = 16
                      # ENTER NODE # Call at 152.5; stackHeight = 16
                        # ENTER NODE # This at 152.5; stackHeight = 16
                         subu $sp,$sp,4 # This at 152.5; stackHeight = 16
                         sw $s2,($sp)#**"" # This at 152.5; stackHeight = 20
                        # EXIT NODE # This at 152.5; stackHeight = 20
                        # ENTER NODE # Call at 152.22; stackHeight = 20
                          # ENTER NODE # IdentifierExp at 152.14; stackHeight = 20
                           lw $t0,0($s2) # inst-var # IdentifierExp at 152.14; stackHeight = 20
                           subu $sp,$sp,4 # IdentifierExp at 152.14; stackHeight = 20
                           sw $t0,($sp)#**"" # IdentifierExp at 152.14; stackHeight = 24
                          # EXIT NODE # IdentifierExp at 152.14; stackHeight = 24
                          # ENTER NODE # IdentifierExp at 152.19; stackHeight = 24
                           lw $t0,16($sp) # local: stackHt=24,var-offset=-8 # IdentifierExp at 152.19; stackHeight = 24
                           subu $sp,$sp,8 # IdentifierExp at 152.19; stackHeight = 24
                           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 152.19; stackHeight = 32
                           sw $t0,($sp)#**"" # IdentifierExp at 152.19; stackHeight = 32
                          # EXIT NODE # IdentifierExp at 152.19; stackHeight = 32
                         lw $t0,8($sp) # ArrayLookup at 152.18; stackHeight = 32
                         beq $t0,$zero,nullPtrException # ArrayLookup at 152.18; stackHeight = 32
                         lw $t1,-4($t0) # ArrayLookup at 152.18; stackHeight = 32
                         lw $t2,($sp) # ArrayLookup at 152.18; stackHeight = 32
                         bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 152.18; stackHeight = 32
                         sll $t2,$t2,2 # ArrayLookup at 152.18; stackHeight = 32
                         addu $t2,$t2,$t0 # ArrayLookup at 152.18; stackHeight = 32
                         lw $t0,($t2) # ArrayLookup at 152.18; stackHeight = 32
                         sw $t0,8($sp)#**"" # ArrayLookup at 152.18; stackHeight = 32
                         addu $sp,$sp,8 # ArrayLookup at 152.18; stackHeight = 32
                        # EXIT NODE # ArrayLookup at 152.18; stackHeight = 24
                        # ENTER NODE # IdentifierExp at 152.32; stackHeight = 24
                         lw $t0,0($s2) # inst-var # IdentifierExp at 152.32; stackHeight = 24
                         subu $sp,$sp,4 # IdentifierExp at 152.32; stackHeight = 24
                         sw $t0,($sp)#**"" # IdentifierExp at 152.32; stackHeight = 28
                        # EXIT NODE # IdentifierExp at 152.32; stackHeight = 28
                        # ENTER NODE # IdentifierExp at 152.37; stackHeight = 28
                         lw $t0,12($sp) # local: stackHt=28,var-offset=-16 # IdentifierExp at 152.37; stackHeight = 28
                         subu $sp,$sp,8 # IdentifierExp at 152.37; stackHeight = 28
                         sw $s5,4($sp)#**"GC tag" # IdentifierExp at 152.37; stackHeight = 36
                         sw $t0,($sp)#**"" # IdentifierExp at 152.37; stackHeight = 36
                        # EXIT NODE # IdentifierExp at 152.37; stackHeight = 36
                       lw $t0,8($sp) # ArrayLookup at 152.36; stackHeight = 36
                       beq $t0,$zero,nullPtrException # ArrayLookup at 152.36; stackHeight = 36
                       lw $t1,-4($t0) # ArrayLookup at 152.36; stackHeight = 36
                       lw $t2,($sp) # ArrayLookup at 152.36; stackHeight = 36
                       bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 152.36; stackHeight = 36
                       sll $t2,$t2,2 # ArrayLookup at 152.36; stackHeight = 36
                       addu $t2,$t2,$t0 # ArrayLookup at 152.36; stackHeight = 36
                       lw $t0,($t2) # ArrayLookup at 152.36; stackHeight = 36
                       sw $t0,8($sp)#**"" # ArrayLookup at 152.36; stackHeight = 36
                       addu $sp,$sp,8 # ArrayLookup at 152.36; stackHeight = 36
                      # EXIT NODE # ArrayLookup at 152.36; stackHeight = 28
                     lw $t0,4($sp) # Call at 152.22; stackHeight = 28
                     beq $t0,$zero,nullPtrException # Call at 152.22; stackHeight = 28
                     lw $t0,-12($t0) # Call at 152.22; stackHeight = 28
                     lw $t0,44($t0) # Call at 152.22; stackHeight = 28
                     jalr $t0 # compareTo # Call at 152.22; stackHeight = 28
                    # EXIT NODE # Call at 152.22; stackHeight = 28
                   lw $t0,8($sp) # Call at 152.5; stackHeight = 28
                   beq $t0,$zero,nullPtrException # Call at 152.5; stackHeight = 28
                   lw $t0,-12($t0) # Call at 152.5; stackHeight = 28
                   lw $t0,32($t0) # Call at 152.5; stackHeight = 28
                   jalr $t0 # printInt # Call at 152.5; stackHeight = 28
                  # EXIT NODE # Call at 152.5; stackHeight = 16
                # EXIT NODE # CallStatement at 152.5; stackHeight = 16
                # ENTER NODE # CallStatement at 153.5; stackHeight = 16
                  # ENTER NODE # Call at 153.5; stackHeight = 16
                    # ENTER NODE # This at 153.5; stackHeight = 16
                     subu $sp,$sp,4 # This at 153.5; stackHeight = 16
                     sw $s2,($sp)#**"" # This at 153.5; stackHeight = 20
                    # EXIT NODE # This at 153.5; stackHeight = 20
                    # ENTER NODE # StringLiteral at 153.14; stackHeight = 20
                     subu $sp,$sp,4 # StringLiteral at 153.14; stackHeight = 20
                     la $t0,strLit_486 # StringLiteral at 153.14; stackHeight = 24
                     sw $t0,($sp)#**"strLit:\?" # StringLiteral at 153.14; stackHeight = 24
                    # EXIT NODE # StringLiteral at 153.14; stackHeight = 24
                   lw $t0,4($sp) # Call at 153.5; stackHeight = 24
                   beq $t0,$zero,nullPtrException # Call at 153.5; stackHeight = 24
                   lw $t0,-12($t0) # Call at 153.5; stackHeight = 24
                   lw $t0,24($t0) # Call at 153.5; stackHeight = 24
                   jalr $t0 # printStr # Call at 153.5; stackHeight = 24
                  # EXIT NODE # Call at 153.5; stackHeight = 16
                # EXIT NODE # CallStatement at 153.5; stackHeight = 16
              # EXIT NODE # Block at 151.42; stackHeight = 16
              # ENTER NODE # Assign at 151.37; stackHeight = 16
                # ENTER NODE # Plus at 151.38; stackHeight = 16
                  # ENTER NODE # IdentifierExp at 151.37; stackHeight = 16
                   lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 151.37; stackHeight = 16
                   subu $sp,$sp,8 # IdentifierExp at 151.37; stackHeight = 16
                   sw $s5,4($sp)#**"GC tag" # IdentifierExp at 151.37; stackHeight = 24
                   sw $t0,($sp)#**"" # IdentifierExp at 151.37; stackHeight = 24
                  # EXIT NODE # IdentifierExp at 151.37; stackHeight = 24
                  # ENTER NODE # IntegerLiteral at 151.38; stackHeight = 24
                   subu $sp,$sp,8 # IntegerLiteral at 151.38; stackHeight = 24
                   sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 151.38; stackHeight = 32
                   li $t0,1 # IntegerLiteral at 151.38; stackHeight = 32
                   sw $t0,($sp) # IntegerLiteral at 151.38; stackHeight = 32
                  # EXIT NODE # IntegerLiteral at 151.38; stackHeight = 32
                 lw $t0,($sp) # Plus at 151.38; stackHeight = 32
                 lw $t1,8($sp) # Plus at 151.38; stackHeight = 32
                 addu $t0,$t0,$t1 # Plus at 151.38; stackHeight = 32
                 addu $sp,$sp,8 # Plus at 151.38; stackHeight = 32
                 sw $t0,($sp)#**"" # Plus at 151.38; stackHeight = 32
                # EXIT NODE # Plus at 151.38; stackHeight = 24
               lw $t0,($sp) # Assign at 151.37; stackHeight = 24
               sw $t0,8($sp) # Assign at 151.37; stackHeight = 24
               addu $sp,$sp,8 # Assign at 151.37; stackHeight = 24
              # EXIT NODE # Assign at 151.37; stackHeight = 16
            # EXIT NODE # Block at 151.4; stackHeight = 16
          while_enter_720: # While at 151.4; stackHeight = 16
            # ENTER NODE # LessThan at 151.22; stackHeight = 16
              # ENTER NODE # IdentifierExp at 151.20; stackHeight = 16
               lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 151.20; stackHeight = 16
               subu $sp,$sp,8 # IdentifierExp at 151.20; stackHeight = 16
               sw $s5,4($sp)#**"GC tag" # IdentifierExp at 151.20; stackHeight = 24
               sw $t0,($sp)#**"" # IdentifierExp at 151.20; stackHeight = 24
              # EXIT NODE # IdentifierExp at 151.20; stackHeight = 24
              # ENTER NODE # ArrayLength at 151.28; stackHeight = 24
                # ENTER NODE # IdentifierExp at 151.24; stackHeight = 24
                 lw $t0,0($s2) # inst-var # IdentifierExp at 151.24; stackHeight = 24
                 subu $sp,$sp,4 # IdentifierExp at 151.24; stackHeight = 24
                 sw $t0,($sp)#**"" # IdentifierExp at 151.24; stackHeight = 28
                # EXIT NODE # IdentifierExp at 151.24; stackHeight = 28
               lw $t0,($sp) # ArrayLength at 151.28; stackHeight = 28
               beq $t0,$zero,nullPtrException # ArrayLength at 151.28; stackHeight = 28
               lw $t0,-4($t0) # ArrayLength at 151.28; stackHeight = 28
               sw $s5,($sp)#**"GC tag" # ArrayLength at 151.28; stackHeight = 28
               subu $sp,4 # ArrayLength at 151.28; stackHeight = 28
               sw $t0,($sp)#**"" # ArrayLength at 151.28; stackHeight = 28
              # EXIT NODE # ArrayLength at 151.28; stackHeight = 32
             lw $t0,($sp) # LessThan at 151.22; stackHeight = 32
             lw $t1,8($sp) # LessThan at 151.22; stackHeight = 32
             slt $t0,$t1,$t0 # LessThan at 151.22; stackHeight = 32
             addu $sp,$sp,12 # LessThan at 151.22; stackHeight = 32
             sw $t0,($sp)#**"" # LessThan at 151.22; stackHeight = 20
            # EXIT NODE # LessThan at 151.22; stackHeight = 20
           lw $t0,($sp) # While at 151.4; stackHeight = 20
           addu $sp,$sp,4 # While at 151.4; stackHeight = 20
          bne $t0,$zero,while_top_720 # While at 151.4; stackHeight = 16
          break_target_720: # While at 151.4; stackHeight = 16
          # EXIT NODE # While at 151.4; stackHeight = 16
         addu $sp,8 # Block at 151.4; stackHeight = 16
        # EXIT NODE # Block at 151.4; stackHeight = 8
        # ENTER NODE # Block at 155.4; stackHeight = 8
          # ENTER NODE # LocalVarDecl at 155.13; stackHeight = 8
            # ENTER NODE # IntegerLiteral at 155.17; stackHeight = 8
             subu $sp,$sp,8 # IntegerLiteral at 155.17; stackHeight = 8
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 155.17; stackHeight = 16
             li $t0,0 # IntegerLiteral at 155.17; stackHeight = 16
             sw $t0,($sp) # IntegerLiteral at 155.17; stackHeight = 16
            # EXIT NODE # IntegerLiteral at 155.17; stackHeight = 16
          # EXIT NODE # LocalVarDecl at 155.13; stackHeight = 16
          # ENTER NODE # While at 155.4; stackHeight = 16
          j while_enter_751 # While at 155.4; stackHeight = 16
          while_top_751: # While at 155.4; stackHeight = 16
            # ENTER NODE # Block at 155.4; stackHeight = 16
              # ENTER NODE # Block at 155.44; stackHeight = 16
                # ENTER NODE # CallStatement at 156.5; stackHeight = 16
                  # ENTER NODE # Call at 156.5; stackHeight = 16
                    # ENTER NODE # This at 156.5; stackHeight = 16
                     subu $sp,$sp,4 # This at 156.5; stackHeight = 16
                     sw $s2,($sp)#**"" # This at 156.5; stackHeight = 20
                    # EXIT NODE # This at 156.5; stackHeight = 20
                    # ENTER NODE # Call at 156.22; stackHeight = 20
                      # ENTER NODE # IdentifierExp at 156.14; stackHeight = 20
                       lw $t0,0($s2) # inst-var # IdentifierExp at 156.14; stackHeight = 20
                       subu $sp,$sp,4 # IdentifierExp at 156.14; stackHeight = 20
                       sw $t0,($sp)#**"" # IdentifierExp at 156.14; stackHeight = 24
                      # EXIT NODE # IdentifierExp at 156.14; stackHeight = 24
                      # ENTER NODE # IdentifierExp at 156.19; stackHeight = 24
                       lw $t0,16($sp) # local: stackHt=24,var-offset=-8 # IdentifierExp at 156.19; stackHeight = 24
                       subu $sp,$sp,8 # IdentifierExp at 156.19; stackHeight = 24
                       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 156.19; stackHeight = 32
                       sw $t0,($sp)#**"" # IdentifierExp at 156.19; stackHeight = 32
                      # EXIT NODE # IdentifierExp at 156.19; stackHeight = 32
                     lw $t0,8($sp) # ArrayLookup at 156.18; stackHeight = 32
                     beq $t0,$zero,nullPtrException # ArrayLookup at 156.18; stackHeight = 32
                     lw $t1,-4($t0) # ArrayLookup at 156.18; stackHeight = 32
                     lw $t2,($sp) # ArrayLookup at 156.18; stackHeight = 32
                     bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 156.18; stackHeight = 32
                     sll $t2,$t2,2 # ArrayLookup at 156.18; stackHeight = 32
                     addu $t2,$t2,$t0 # ArrayLookup at 156.18; stackHeight = 32
                     lw $t0,($t2) # ArrayLookup at 156.18; stackHeight = 32
                     sw $t0,8($sp)#**"" # ArrayLookup at 156.18; stackHeight = 32
                     addu $sp,$sp,8 # ArrayLookup at 156.18; stackHeight = 32
                    # EXIT NODE # ArrayLookup at 156.18; stackHeight = 24
                    # ENTER NODE # IdentifierExp at 156.32; stackHeight = 24
                     lw $t0,4($s2) # inst-var # IdentifierExp at 156.32; stackHeight = 24
                     subu $sp,$sp,4 # IdentifierExp at 156.32; stackHeight = 24
                     sw $t0,($sp)#**"" # IdentifierExp at 156.32; stackHeight = 28
                    # EXIT NODE # IdentifierExp at 156.32; stackHeight = 28
                    # ENTER NODE # IdentifierExp at 156.39; stackHeight = 28
                     lw $t0,12($sp) # local: stackHt=28,var-offset=-16 # IdentifierExp at 156.39; stackHeight = 28
                     subu $sp,$sp,8 # IdentifierExp at 156.39; stackHeight = 28
                     sw $s5,4($sp)#**"GC tag" # IdentifierExp at 156.39; stackHeight = 36
                     sw $t0,($sp)#**"" # IdentifierExp at 156.39; stackHeight = 36
                    # EXIT NODE # IdentifierExp at 156.39; stackHeight = 36
                   lw $t0,8($sp) # ArrayLookup at 156.38; stackHeight = 36
                   beq $t0,$zero,nullPtrException # ArrayLookup at 156.38; stackHeight = 36
                   lw $t1,-4($t0) # ArrayLookup at 156.38; stackHeight = 36
                   lw $t2,($sp) # ArrayLookup at 156.38; stackHeight = 36
                   bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 156.38; stackHeight = 36
                   sll $t2,$t2,2 # ArrayLookup at 156.38; stackHeight = 36
                   addu $t2,$t2,$t0 # ArrayLookup at 156.38; stackHeight = 36
                   lw $t0,($t2) # ArrayLookup at 156.38; stackHeight = 36
                   sw $t0,8($sp)#**"" # ArrayLookup at 156.38; stackHeight = 36
                   addu $sp,$sp,8 # ArrayLookup at 156.38; stackHeight = 36
                  # EXIT NODE # ArrayLookup at 156.38; stackHeight = 28
                 lw $t0,4($sp) # Call at 156.22; stackHeight = 28
                 beq $t0,$zero,nullPtrException # Call at 156.22; stackHeight = 28
                 lw $t0,-12($t0) # Call at 156.22; stackHeight = 28
                 lw $t0,44($t0) # Call at 156.22; stackHeight = 28
                 jalr $t0 # compareTo # Call at 156.22; stackHeight = 28
                # EXIT NODE # Call at 156.22; stackHeight = 28
               lw $t0,8($sp) # Call at 156.5; stackHeight = 28
               beq $t0,$zero,nullPtrException # Call at 156.5; stackHeight = 28
               lw $t0,-12($t0) # Call at 156.5; stackHeight = 28
               lw $t0,32($t0) # Call at 156.5; stackHeight = 28
               jalr $t0 # printInt # Call at 156.5; stackHeight = 28
              # EXIT NODE # Call at 156.5; stackHeight = 16
            # EXIT NODE # CallStatement at 156.5; stackHeight = 16
            # ENTER NODE # CallStatement at 157.5; stackHeight = 16
              # ENTER NODE # Call at 157.5; stackHeight = 16
                # ENTER NODE # This at 157.5; stackHeight = 16
                 subu $sp,$sp,4 # This at 157.5; stackHeight = 16
                 sw $s2,($sp)#**"" # This at 157.5; stackHeight = 20
                # EXIT NODE # This at 157.5; stackHeight = 20
                # ENTER NODE # StringLiteral at 157.14; stackHeight = 20
                 subu $sp,$sp,4 # StringLiteral at 157.14; stackHeight = 20
                 la $t0,strLit_486 # StringLiteral at 157.14; stackHeight = 24
                 sw $t0,($sp)#**"strLit:\?" # StringLiteral at 157.14; stackHeight = 24
                # EXIT NODE # StringLiteral at 157.14; stackHeight = 24
               lw $t0,4($sp) # Call at 157.5; stackHeight = 24
               beq $t0,$zero,nullPtrException # Call at 157.5; stackHeight = 24
               lw $t0,-12($t0) # Call at 157.5; stackHeight = 24
               lw $t0,24($t0) # Call at 157.5; stackHeight = 24
               jalr $t0 # printStr # Call at 157.5; stackHeight = 24
              # EXIT NODE # Call at 157.5; stackHeight = 16
            # EXIT NODE # CallStatement at 157.5; stackHeight = 16
          # EXIT NODE # Block at 155.44; stackHeight = 16
          # ENTER NODE # Assign at 155.39; stackHeight = 16
            # ENTER NODE # Plus at 155.40; stackHeight = 16
              # ENTER NODE # IdentifierExp at 155.39; stackHeight = 16
               lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 155.39; stackHeight = 16
               subu $sp,$sp,8 # IdentifierExp at 155.39; stackHeight = 16
               sw $s5,4($sp)#**"GC tag" # IdentifierExp at 155.39; stackHeight = 24
               sw $t0,($sp)#**"" # IdentifierExp at 155.39; stackHeight = 24
              # EXIT NODE # IdentifierExp at 155.39; stackHeight = 24
              # ENTER NODE # IntegerLiteral at 155.40; stackHeight = 24
               subu $sp,$sp,8 # IntegerLiteral at 155.40; stackHeight = 24
               sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 155.40; stackHeight = 32
               li $t0,1 # IntegerLiteral at 155.40; stackHeight = 32
               sw $t0,($sp) # IntegerLiteral at 155.40; stackHeight = 32
              # EXIT NODE # IntegerLiteral at 155.40; stackHeight = 32
             lw $t0,($sp) # Plus at 155.40; stackHeight = 32
             lw $t1,8($sp) # Plus at 155.40; stackHeight = 32
             addu $t0,$t0,$t1 # Plus at 155.40; stackHeight = 32
             addu $sp,$sp,8 # Plus at 155.40; stackHeight = 32
             sw $t0,($sp)#**"" # Plus at 155.40; stackHeight = 32
            # EXIT NODE # Plus at 155.40; stackHeight = 24
           lw $t0,($sp) # Assign at 155.39; stackHeight = 24
           sw $t0,8($sp) # Assign at 155.39; stackHeight = 24
           addu $sp,$sp,8 # Assign at 155.39; stackHeight = 24
          # EXIT NODE # Assign at 155.39; stackHeight = 16
        # EXIT NODE # Block at 155.4; stackHeight = 16
      while_enter_751: # While at 155.4; stackHeight = 16
        # ENTER NODE # LessThan at 155.22; stackHeight = 16
          # ENTER NODE # IdentifierExp at 155.20; stackHeight = 16
           lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 155.20; stackHeight = 16
           subu $sp,$sp,8 # IdentifierExp at 155.20; stackHeight = 16
           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 155.20; stackHeight = 24
           sw $t0,($sp)#**"" # IdentifierExp at 155.20; stackHeight = 24
          # EXIT NODE # IdentifierExp at 155.20; stackHeight = 24
          # ENTER NODE # ArrayLength at 155.30; stackHeight = 24
            # ENTER NODE # IdentifierExp at 155.24; stackHeight = 24
             lw $t0,4($s2) # inst-var # IdentifierExp at 155.24; stackHeight = 24
             subu $sp,$sp,4 # IdentifierExp at 155.24; stackHeight = 24
             sw $t0,($sp)#**"" # IdentifierExp at 155.24; stackHeight = 28
            # EXIT NODE # IdentifierExp at 155.24; stackHeight = 28
           lw $t0,($sp) # ArrayLength at 155.30; stackHeight = 28
           beq $t0,$zero,nullPtrException # ArrayLength at 155.30; stackHeight = 28
           lw $t0,-4($t0) # ArrayLength at 155.30; stackHeight = 28
           sw $s5,($sp)#**"GC tag" # ArrayLength at 155.30; stackHeight = 28
           subu $sp,4 # ArrayLength at 155.30; stackHeight = 28
           sw $t0,($sp)#**"" # ArrayLength at 155.30; stackHeight = 28
          # EXIT NODE # ArrayLength at 155.30; stackHeight = 32
         lw $t0,($sp) # LessThan at 155.22; stackHeight = 32
         lw $t1,8($sp) # LessThan at 155.22; stackHeight = 32
         slt $t0,$t1,$t0 # LessThan at 155.22; stackHeight = 32
         addu $sp,$sp,12 # LessThan at 155.22; stackHeight = 32
         sw $t0,($sp)#**"" # LessThan at 155.22; stackHeight = 20
        # EXIT NODE # LessThan at 155.22; stackHeight = 20
       lw $t0,($sp) # While at 155.4; stackHeight = 20
       addu $sp,$sp,4 # While at 155.4; stackHeight = 20
      bne $t0,$zero,while_top_751 # While at 155.4; stackHeight = 16
      break_target_751: # While at 155.4; stackHeight = 16
      # EXIT NODE # While at 155.4; stackHeight = 16
     addu $sp,8 # Block at 155.4; stackHeight = 16
    # EXIT NODE # Block at 155.4; stackHeight = 8
  # EXIT NODE # Block at 150.41; stackHeight = 8
  # ENTER NODE # Assign at 150.36; stackHeight = 8
    # ENTER NODE # Plus at 150.37; stackHeight = 8
      # ENTER NODE # IdentifierExp at 150.36; stackHeight = 8
       lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 150.36; stackHeight = 8
       subu $sp,$sp,8 # IdentifierExp at 150.36; stackHeight = 8
       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 150.36; stackHeight = 16
       sw $t0,($sp)#**"" # IdentifierExp at 150.36; stackHeight = 16
      # EXIT NODE # IdentifierExp at 150.36; stackHeight = 16
      # ENTER NODE # IntegerLiteral at 150.37; stackHeight = 16
       subu $sp,$sp,8 # IntegerLiteral at 150.37; stackHeight = 16
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 150.37; stackHeight = 24
       li $t0,1 # IntegerLiteral at 150.37; stackHeight = 24
       sw $t0,($sp) # IntegerLiteral at 150.37; stackHeight = 24
      # EXIT NODE # IntegerLiteral at 150.37; stackHeight = 24
     lw $t0,($sp) # Plus at 150.37; stackHeight = 24
     lw $t1,8($sp) # Plus at 150.37; stackHeight = 24
     addu $t0,$t0,$t1 # Plus at 150.37; stackHeight = 24
     addu $sp,$sp,8 # Plus at 150.37; stackHeight = 24
     sw $t0,($sp)#**"" # Plus at 150.37; stackHeight = 24
    # EXIT NODE # Plus at 150.37; stackHeight = 16
   lw $t0,($sp) # Assign at 150.36; stackHeight = 16
   sw $t0,8($sp) # Assign at 150.36; stackHeight = 16
   addu $sp,$sp,8 # Assign at 150.36; stackHeight = 16
  # EXIT NODE # Assign at 150.36; stackHeight = 8
# EXIT NODE # Block at 150.3; stackHeight = 8
while_enter_755: # While at 150.3; stackHeight = 8
  # ENTER NODE # LessThan at 150.21; stackHeight = 8
    # ENTER NODE # IdentifierExp at 150.19; stackHeight = 8
     lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 150.19; stackHeight = 8
     subu $sp,$sp,8 # IdentifierExp at 150.19; stackHeight = 8
     sw $s5,4($sp)#**"GC tag" # IdentifierExp at 150.19; stackHeight = 16
     sw $t0,($sp)#**"" # IdentifierExp at 150.19; stackHeight = 16
    # EXIT NODE # IdentifierExp at 150.19; stackHeight = 16
    # ENTER NODE # ArrayLength at 150.27; stackHeight = 16
      # ENTER NODE # IdentifierExp at 150.23; stackHeight = 16
       lw $t0,0($s2) # inst-var # IdentifierExp at 150.23; stackHeight = 16
       subu $sp,$sp,4 # IdentifierExp at 150.23; stackHeight = 16
       sw $t0,($sp)#**"" # IdentifierExp at 150.23; stackHeight = 20
      # EXIT NODE # IdentifierExp at 150.23; stackHeight = 20
     lw $t0,($sp) # ArrayLength at 150.27; stackHeight = 20
     beq $t0,$zero,nullPtrException # ArrayLength at 150.27; stackHeight = 20
     lw $t0,-4($t0) # ArrayLength at 150.27; stackHeight = 20
     sw $s5,($sp)#**"GC tag" # ArrayLength at 150.27; stackHeight = 20
     subu $sp,4 # ArrayLength at 150.27; stackHeight = 20
     sw $t0,($sp)#**"" # ArrayLength at 150.27; stackHeight = 20
    # EXIT NODE # ArrayLength at 150.27; stackHeight = 24
   lw $t0,($sp) # LessThan at 150.21; stackHeight = 24
   lw $t1,8($sp) # LessThan at 150.21; stackHeight = 24
   slt $t0,$t1,$t0 # LessThan at 150.21; stackHeight = 24
   addu $sp,$sp,12 # LessThan at 150.21; stackHeight = 24
   sw $t0,($sp)#**"" # LessThan at 150.21; stackHeight = 12
  # EXIT NODE # LessThan at 150.21; stackHeight = 12
 lw $t0,($sp) # While at 150.3; stackHeight = 12
 addu $sp,$sp,4 # While at 150.3; stackHeight = 12
bne $t0,$zero,while_top_755 # While at 150.3; stackHeight = 8
break_target_755: # While at 150.3; stackHeight = 8
# EXIT NODE # While at 150.3; stackHeight = 8
 addu $sp,8 # Block at 150.3; stackHeight = 8
# EXIT NODE # Block at 150.3; stackHeight = 0
  # ENTER NODE # Block at 160.3; stackHeight = 0
    # ENTER NODE # LocalVarDecl at 160.12; stackHeight = 0
      # ENTER NODE # IntegerLiteral at 160.16; stackHeight = 0
       subu $sp,$sp,8 # IntegerLiteral at 160.16; stackHeight = 0
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 160.16; stackHeight = 8
       li $t0,0 # IntegerLiteral at 160.16; stackHeight = 8
       sw $t0,($sp) # IntegerLiteral at 160.16; stackHeight = 8
      # EXIT NODE # IntegerLiteral at 160.16; stackHeight = 8
    # EXIT NODE # LocalVarDecl at 160.12; stackHeight = 8
    # ENTER NODE # While at 160.3; stackHeight = 8
    j while_enter_834 # While at 160.3; stackHeight = 8
    while_top_834: # While at 160.3; stackHeight = 8
      # ENTER NODE # Block at 160.3; stackHeight = 8
        # ENTER NODE # Block at 160.43; stackHeight = 8
          # ENTER NODE # Block at 161.4; stackHeight = 8
            # ENTER NODE # LocalVarDecl at 161.13; stackHeight = 8
              # ENTER NODE # IntegerLiteral at 161.17; stackHeight = 8
               subu $sp,$sp,8 # IntegerLiteral at 161.17; stackHeight = 8
               sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 161.17; stackHeight = 16
               li $t0,0 # IntegerLiteral at 161.17; stackHeight = 16
               sw $t0,($sp) # IntegerLiteral at 161.17; stackHeight = 16
              # EXIT NODE # IntegerLiteral at 161.17; stackHeight = 16
            # EXIT NODE # LocalVarDecl at 161.13; stackHeight = 16
            # ENTER NODE # While at 161.4; stackHeight = 16
            j while_enter_799 # While at 161.4; stackHeight = 16
            while_top_799: # While at 161.4; stackHeight = 16
              # ENTER NODE # Block at 161.4; stackHeight = 16
                # ENTER NODE # Block at 161.42; stackHeight = 16
                  # ENTER NODE # CallStatement at 162.5; stackHeight = 16
                    # ENTER NODE # Call at 162.5; stackHeight = 16
                      # ENTER NODE # This at 162.5; stackHeight = 16
                       subu $sp,$sp,4 # This at 162.5; stackHeight = 16
                       sw $s2,($sp)#**"" # This at 162.5; stackHeight = 20
                      # EXIT NODE # This at 162.5; stackHeight = 20
                      # ENTER NODE # Call at 162.24; stackHeight = 20
                        # ENTER NODE # IdentifierExp at 162.14; stackHeight = 20
                         lw $t0,4($s2) # inst-var # IdentifierExp at 162.14; stackHeight = 20
                         subu $sp,$sp,4 # IdentifierExp at 162.14; stackHeight = 20
                         sw $t0,($sp)#**"" # IdentifierExp at 162.14; stackHeight = 24
                        # EXIT NODE # IdentifierExp at 162.14; stackHeight = 24
                        # ENTER NODE # IdentifierExp at 162.21; stackHeight = 24
                         lw $t0,16($sp) # local: stackHt=24,var-offset=-8 # IdentifierExp at 162.21; stackHeight = 24
                         subu $sp,$sp,8 # IdentifierExp at 162.21; stackHeight = 24
                         sw $s5,4($sp)#**"GC tag" # IdentifierExp at 162.21; stackHeight = 32
                         sw $t0,($sp)#**"" # IdentifierExp at 162.21; stackHeight = 32
                        # EXIT NODE # IdentifierExp at 162.21; stackHeight = 32
                       lw $t0,8($sp) # ArrayLookup at 162.20; stackHeight = 32
                       beq $t0,$zero,nullPtrException # ArrayLookup at 162.20; stackHeight = 32
                       lw $t1,-4($t0) # ArrayLookup at 162.20; stackHeight = 32
                       lw $t2,($sp) # ArrayLookup at 162.20; stackHeight = 32
                       bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 162.20; stackHeight = 32
                       sll $t2,$t2,2 # ArrayLookup at 162.20; stackHeight = 32
                       addu $t2,$t2,$t0 # ArrayLookup at 162.20; stackHeight = 32
                       lw $t0,($t2) # ArrayLookup at 162.20; stackHeight = 32
                       sw $t0,8($sp)#**"" # ArrayLookup at 162.20; stackHeight = 32
                       addu $sp,$sp,8 # ArrayLookup at 162.20; stackHeight = 32
                      # EXIT NODE # ArrayLookup at 162.20; stackHeight = 24
                      # ENTER NODE # IdentifierExp at 162.34; stackHeight = 24
                       lw $t0,0($s2) # inst-var # IdentifierExp at 162.34; stackHeight = 24
                       subu $sp,$sp,4 # IdentifierExp at 162.34; stackHeight = 24
                       sw $t0,($sp)#**"" # IdentifierExp at 162.34; stackHeight = 28
                      # EXIT NODE # IdentifierExp at 162.34; stackHeight = 28
                      # ENTER NODE # IdentifierExp at 162.39; stackHeight = 28
                       lw $t0,12($sp) # local: stackHt=28,var-offset=-16 # IdentifierExp at 162.39; stackHeight = 28
                       subu $sp,$sp,8 # IdentifierExp at 162.39; stackHeight = 28
                       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 162.39; stackHeight = 36
                       sw $t0,($sp)#**"" # IdentifierExp at 162.39; stackHeight = 36
                      # EXIT NODE # IdentifierExp at 162.39; stackHeight = 36
                     lw $t0,8($sp) # ArrayLookup at 162.38; stackHeight = 36
                     beq $t0,$zero,nullPtrException # ArrayLookup at 162.38; stackHeight = 36
                     lw $t1,-4($t0) # ArrayLookup at 162.38; stackHeight = 36
                     lw $t2,($sp) # ArrayLookup at 162.38; stackHeight = 36
                     bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 162.38; stackHeight = 36
                     sll $t2,$t2,2 # ArrayLookup at 162.38; stackHeight = 36
                     addu $t2,$t2,$t0 # ArrayLookup at 162.38; stackHeight = 36
                     lw $t0,($t2) # ArrayLookup at 162.38; stackHeight = 36
                     sw $t0,8($sp)#**"" # ArrayLookup at 162.38; stackHeight = 36
                     addu $sp,$sp,8 # ArrayLookup at 162.38; stackHeight = 36
                    # EXIT NODE # ArrayLookup at 162.38; stackHeight = 28
                   lw $t0,4($sp) # Call at 162.24; stackHeight = 28
                   beq $t0,$zero,nullPtrException # Call at 162.24; stackHeight = 28
                   lw $t0,-12($t0) # Call at 162.24; stackHeight = 28
                   lw $t0,44($t0) # Call at 162.24; stackHeight = 28
                   jalr $t0 # compareTo # Call at 162.24; stackHeight = 28
                  # EXIT NODE # Call at 162.24; stackHeight = 28
                 lw $t0,8($sp) # Call at 162.5; stackHeight = 28
                 beq $t0,$zero,nullPtrException # Call at 162.5; stackHeight = 28
                 lw $t0,-12($t0) # Call at 162.5; stackHeight = 28
                 lw $t0,32($t0) # Call at 162.5; stackHeight = 28
                 jalr $t0 # printInt # Call at 162.5; stackHeight = 28
                # EXIT NODE # Call at 162.5; stackHeight = 16
              # EXIT NODE # CallStatement at 162.5; stackHeight = 16
              # ENTER NODE # CallStatement at 163.5; stackHeight = 16
                # ENTER NODE # Call at 163.5; stackHeight = 16
                  # ENTER NODE # This at 163.5; stackHeight = 16
                   subu $sp,$sp,4 # This at 163.5; stackHeight = 16
                   sw $s2,($sp)#**"" # This at 163.5; stackHeight = 20
                  # EXIT NODE # This at 163.5; stackHeight = 20
                  # ENTER NODE # StringLiteral at 163.14; stackHeight = 20
                   subu $sp,$sp,4 # StringLiteral at 163.14; stackHeight = 20
                   la $t0,strLit_486 # StringLiteral at 163.14; stackHeight = 24
                   sw $t0,($sp)#**"strLit:\?" # StringLiteral at 163.14; stackHeight = 24
                  # EXIT NODE # StringLiteral at 163.14; stackHeight = 24
                 lw $t0,4($sp) # Call at 163.5; stackHeight = 24
                 beq $t0,$zero,nullPtrException # Call at 163.5; stackHeight = 24
                 lw $t0,-12($t0) # Call at 163.5; stackHeight = 24
                 lw $t0,24($t0) # Call at 163.5; stackHeight = 24
                 jalr $t0 # printStr # Call at 163.5; stackHeight = 24
                # EXIT NODE # Call at 163.5; stackHeight = 16
              # EXIT NODE # CallStatement at 163.5; stackHeight = 16
            # EXIT NODE # Block at 161.42; stackHeight = 16
            # ENTER NODE # Assign at 161.37; stackHeight = 16
              # ENTER NODE # Plus at 161.38; stackHeight = 16
                # ENTER NODE # IdentifierExp at 161.37; stackHeight = 16
                 lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 161.37; stackHeight = 16
                 subu $sp,$sp,8 # IdentifierExp at 161.37; stackHeight = 16
                 sw $s5,4($sp)#**"GC tag" # IdentifierExp at 161.37; stackHeight = 24
                 sw $t0,($sp)#**"" # IdentifierExp at 161.37; stackHeight = 24
                # EXIT NODE # IdentifierExp at 161.37; stackHeight = 24
                # ENTER NODE # IntegerLiteral at 161.38; stackHeight = 24
                 subu $sp,$sp,8 # IntegerLiteral at 161.38; stackHeight = 24
                 sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 161.38; stackHeight = 32
                 li $t0,1 # IntegerLiteral at 161.38; stackHeight = 32
                 sw $t0,($sp) # IntegerLiteral at 161.38; stackHeight = 32
                # EXIT NODE # IntegerLiteral at 161.38; stackHeight = 32
               lw $t0,($sp) # Plus at 161.38; stackHeight = 32
               lw $t1,8($sp) # Plus at 161.38; stackHeight = 32
               addu $t0,$t0,$t1 # Plus at 161.38; stackHeight = 32
               addu $sp,$sp,8 # Plus at 161.38; stackHeight = 32
               sw $t0,($sp)#**"" # Plus at 161.38; stackHeight = 32
              # EXIT NODE # Plus at 161.38; stackHeight = 24
             lw $t0,($sp) # Assign at 161.37; stackHeight = 24
             sw $t0,8($sp) # Assign at 161.37; stackHeight = 24
             addu $sp,$sp,8 # Assign at 161.37; stackHeight = 24
            # EXIT NODE # Assign at 161.37; stackHeight = 16
          # EXIT NODE # Block at 161.4; stackHeight = 16
        while_enter_799: # While at 161.4; stackHeight = 16
          # ENTER NODE # LessThan at 161.22; stackHeight = 16
            # ENTER NODE # IdentifierExp at 161.20; stackHeight = 16
             lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 161.20; stackHeight = 16
             subu $sp,$sp,8 # IdentifierExp at 161.20; stackHeight = 16
             sw $s5,4($sp)#**"GC tag" # IdentifierExp at 161.20; stackHeight = 24
             sw $t0,($sp)#**"" # IdentifierExp at 161.20; stackHeight = 24
            # EXIT NODE # IdentifierExp at 161.20; stackHeight = 24
            # ENTER NODE # ArrayLength at 161.28; stackHeight = 24
              # ENTER NODE # IdentifierExp at 161.24; stackHeight = 24
               lw $t0,0($s2) # inst-var # IdentifierExp at 161.24; stackHeight = 24
               subu $sp,$sp,4 # IdentifierExp at 161.24; stackHeight = 24
               sw $t0,($sp)#**"" # IdentifierExp at 161.24; stackHeight = 28
              # EXIT NODE # IdentifierExp at 161.24; stackHeight = 28
             lw $t0,($sp) # ArrayLength at 161.28; stackHeight = 28
             beq $t0,$zero,nullPtrException # ArrayLength at 161.28; stackHeight = 28
             lw $t0,-4($t0) # ArrayLength at 161.28; stackHeight = 28
             sw $s5,($sp)#**"GC tag" # ArrayLength at 161.28; stackHeight = 28
             subu $sp,4 # ArrayLength at 161.28; stackHeight = 28
             sw $t0,($sp)#**"" # ArrayLength at 161.28; stackHeight = 28
            # EXIT NODE # ArrayLength at 161.28; stackHeight = 32
           lw $t0,($sp) # LessThan at 161.22; stackHeight = 32
           lw $t1,8($sp) # LessThan at 161.22; stackHeight = 32
           slt $t0,$t1,$t0 # LessThan at 161.22; stackHeight = 32
           addu $sp,$sp,12 # LessThan at 161.22; stackHeight = 32
           sw $t0,($sp)#**"" # LessThan at 161.22; stackHeight = 20
          # EXIT NODE # LessThan at 161.22; stackHeight = 20
         lw $t0,($sp) # While at 161.4; stackHeight = 20
         addu $sp,$sp,4 # While at 161.4; stackHeight = 20
        bne $t0,$zero,while_top_799 # While at 161.4; stackHeight = 16
        break_target_799: # While at 161.4; stackHeight = 16
        # EXIT NODE # While at 161.4; stackHeight = 16
       addu $sp,8 # Block at 161.4; stackHeight = 16
      # EXIT NODE # Block at 161.4; stackHeight = 8
      # ENTER NODE # Block at 165.4; stackHeight = 8
        # ENTER NODE # LocalVarDecl at 165.13; stackHeight = 8
          # ENTER NODE # IntegerLiteral at 165.17; stackHeight = 8
           subu $sp,$sp,8 # IntegerLiteral at 165.17; stackHeight = 8
           sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 165.17; stackHeight = 16
           li $t0,0 # IntegerLiteral at 165.17; stackHeight = 16
           sw $t0,($sp) # IntegerLiteral at 165.17; stackHeight = 16
          # EXIT NODE # IntegerLiteral at 165.17; stackHeight = 16
        # EXIT NODE # LocalVarDecl at 165.13; stackHeight = 16
        # ENTER NODE # While at 165.4; stackHeight = 16
        j while_enter_830 # While at 165.4; stackHeight = 16
        while_top_830: # While at 165.4; stackHeight = 16
          # ENTER NODE # Block at 165.4; stackHeight = 16
            # ENTER NODE # Block at 165.44; stackHeight = 16
              # ENTER NODE # CallStatement at 166.5; stackHeight = 16
                # ENTER NODE # Call at 166.5; stackHeight = 16
                  # ENTER NODE # This at 166.5; stackHeight = 16
                   subu $sp,$sp,4 # This at 166.5; stackHeight = 16
                   sw $s2,($sp)#**"" # This at 166.5; stackHeight = 20
                  # EXIT NODE # This at 166.5; stackHeight = 20
                  # ENTER NODE # Call at 166.24; stackHeight = 20
                    # ENTER NODE # IdentifierExp at 166.14; stackHeight = 20
                     lw $t0,4($s2) # inst-var # IdentifierExp at 166.14; stackHeight = 20
                     subu $sp,$sp,4 # IdentifierExp at 166.14; stackHeight = 20
                     sw $t0,($sp)#**"" # IdentifierExp at 166.14; stackHeight = 24
                    # EXIT NODE # IdentifierExp at 166.14; stackHeight = 24
                    # ENTER NODE # IdentifierExp at 166.21; stackHeight = 24
                     lw $t0,16($sp) # local: stackHt=24,var-offset=-8 # IdentifierExp at 166.21; stackHeight = 24
                     subu $sp,$sp,8 # IdentifierExp at 166.21; stackHeight = 24
                     sw $s5,4($sp)#**"GC tag" # IdentifierExp at 166.21; stackHeight = 32
                     sw $t0,($sp)#**"" # IdentifierExp at 166.21; stackHeight = 32
                    # EXIT NODE # IdentifierExp at 166.21; stackHeight = 32
                   lw $t0,8($sp) # ArrayLookup at 166.20; stackHeight = 32
                   beq $t0,$zero,nullPtrException # ArrayLookup at 166.20; stackHeight = 32
                   lw $t1,-4($t0) # ArrayLookup at 166.20; stackHeight = 32
                   lw $t2,($sp) # ArrayLookup at 166.20; stackHeight = 32
                   bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 166.20; stackHeight = 32
                   sll $t2,$t2,2 # ArrayLookup at 166.20; stackHeight = 32
                   addu $t2,$t2,$t0 # ArrayLookup at 166.20; stackHeight = 32
                   lw $t0,($t2) # ArrayLookup at 166.20; stackHeight = 32
                   sw $t0,8($sp)#**"" # ArrayLookup at 166.20; stackHeight = 32
                   addu $sp,$sp,8 # ArrayLookup at 166.20; stackHeight = 32
                  # EXIT NODE # ArrayLookup at 166.20; stackHeight = 24
                  # ENTER NODE # IdentifierExp at 166.34; stackHeight = 24
                   lw $t0,4($s2) # inst-var # IdentifierExp at 166.34; stackHeight = 24
                   subu $sp,$sp,4 # IdentifierExp at 166.34; stackHeight = 24
                   sw $t0,($sp)#**"" # IdentifierExp at 166.34; stackHeight = 28
                  # EXIT NODE # IdentifierExp at 166.34; stackHeight = 28
                  # ENTER NODE # IdentifierExp at 166.41; stackHeight = 28
                   lw $t0,12($sp) # local: stackHt=28,var-offset=-16 # IdentifierExp at 166.41; stackHeight = 28
                   subu $sp,$sp,8 # IdentifierExp at 166.41; stackHeight = 28
                   sw $s5,4($sp)#**"GC tag" # IdentifierExp at 166.41; stackHeight = 36
                   sw $t0,($sp)#**"" # IdentifierExp at 166.41; stackHeight = 36
                  # EXIT NODE # IdentifierExp at 166.41; stackHeight = 36
                 lw $t0,8($sp) # ArrayLookup at 166.40; stackHeight = 36
                 beq $t0,$zero,nullPtrException # ArrayLookup at 166.40; stackHeight = 36
                 lw $t1,-4($t0) # ArrayLookup at 166.40; stackHeight = 36
                 lw $t2,($sp) # ArrayLookup at 166.40; stackHeight = 36
                 bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 166.40; stackHeight = 36
                 sll $t2,$t2,2 # ArrayLookup at 166.40; stackHeight = 36
                 addu $t2,$t2,$t0 # ArrayLookup at 166.40; stackHeight = 36
                 lw $t0,($t2) # ArrayLookup at 166.40; stackHeight = 36
                 sw $t0,8($sp)#**"" # ArrayLookup at 166.40; stackHeight = 36
                 addu $sp,$sp,8 # ArrayLookup at 166.40; stackHeight = 36
                # EXIT NODE # ArrayLookup at 166.40; stackHeight = 28
               lw $t0,4($sp) # Call at 166.24; stackHeight = 28
               beq $t0,$zero,nullPtrException # Call at 166.24; stackHeight = 28
               lw $t0,-12($t0) # Call at 166.24; stackHeight = 28
               lw $t0,44($t0) # Call at 166.24; stackHeight = 28
               jalr $t0 # compareTo # Call at 166.24; stackHeight = 28
              # EXIT NODE # Call at 166.24; stackHeight = 28
             lw $t0,8($sp) # Call at 166.5; stackHeight = 28
             beq $t0,$zero,nullPtrException # Call at 166.5; stackHeight = 28
             lw $t0,-12($t0) # Call at 166.5; stackHeight = 28
             lw $t0,32($t0) # Call at 166.5; stackHeight = 28
             jalr $t0 # printInt # Call at 166.5; stackHeight = 28
            # EXIT NODE # Call at 166.5; stackHeight = 16
          # EXIT NODE # CallStatement at 166.5; stackHeight = 16
          # ENTER NODE # CallStatement at 167.5; stackHeight = 16
            # ENTER NODE # Call at 167.5; stackHeight = 16
              # ENTER NODE # This at 167.5; stackHeight = 16
               subu $sp,$sp,4 # This at 167.5; stackHeight = 16
               sw $s2,($sp)#**"" # This at 167.5; stackHeight = 20
              # EXIT NODE # This at 167.5; stackHeight = 20
              # ENTER NODE # StringLiteral at 167.14; stackHeight = 20
               subu $sp,$sp,4 # StringLiteral at 167.14; stackHeight = 20
               la $t0,strLit_486 # StringLiteral at 167.14; stackHeight = 24
               sw $t0,($sp)#**"strLit:\?" # StringLiteral at 167.14; stackHeight = 24
              # EXIT NODE # StringLiteral at 167.14; stackHeight = 24
             lw $t0,4($sp) # Call at 167.5; stackHeight = 24
             beq $t0,$zero,nullPtrException # Call at 167.5; stackHeight = 24
             lw $t0,-12($t0) # Call at 167.5; stackHeight = 24
             lw $t0,24($t0) # Call at 167.5; stackHeight = 24
             jalr $t0 # printStr # Call at 167.5; stackHeight = 24
            # EXIT NODE # Call at 167.5; stackHeight = 16
          # EXIT NODE # CallStatement at 167.5; stackHeight = 16
        # EXIT NODE # Block at 165.44; stackHeight = 16
        # ENTER NODE # Assign at 165.39; stackHeight = 16
          # ENTER NODE # Plus at 165.40; stackHeight = 16
            # ENTER NODE # IdentifierExp at 165.39; stackHeight = 16
             lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 165.39; stackHeight = 16
             subu $sp,$sp,8 # IdentifierExp at 165.39; stackHeight = 16
             sw $s5,4($sp)#**"GC tag" # IdentifierExp at 165.39; stackHeight = 24
             sw $t0,($sp)#**"" # IdentifierExp at 165.39; stackHeight = 24
            # EXIT NODE # IdentifierExp at 165.39; stackHeight = 24
            # ENTER NODE # IntegerLiteral at 165.40; stackHeight = 24
             subu $sp,$sp,8 # IntegerLiteral at 165.40; stackHeight = 24
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 165.40; stackHeight = 32
             li $t0,1 # IntegerLiteral at 165.40; stackHeight = 32
             sw $t0,($sp) # IntegerLiteral at 165.40; stackHeight = 32
            # EXIT NODE # IntegerLiteral at 165.40; stackHeight = 32
           lw $t0,($sp) # Plus at 165.40; stackHeight = 32
           lw $t1,8($sp) # Plus at 165.40; stackHeight = 32
           addu $t0,$t0,$t1 # Plus at 165.40; stackHeight = 32
           addu $sp,$sp,8 # Plus at 165.40; stackHeight = 32
           sw $t0,($sp)#**"" # Plus at 165.40; stackHeight = 32
          # EXIT NODE # Plus at 165.40; stackHeight = 24
         lw $t0,($sp) # Assign at 165.39; stackHeight = 24
         sw $t0,8($sp) # Assign at 165.39; stackHeight = 24
         addu $sp,$sp,8 # Assign at 165.39; stackHeight = 24
        # EXIT NODE # Assign at 165.39; stackHeight = 16
      # EXIT NODE # Block at 165.4; stackHeight = 16
    while_enter_830: # While at 165.4; stackHeight = 16
      # ENTER NODE # LessThan at 165.22; stackHeight = 16
        # ENTER NODE # IdentifierExp at 165.20; stackHeight = 16
         lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 165.20; stackHeight = 16
         subu $sp,$sp,8 # IdentifierExp at 165.20; stackHeight = 16
         sw $s5,4($sp)#**"GC tag" # IdentifierExp at 165.20; stackHeight = 24
         sw $t0,($sp)#**"" # IdentifierExp at 165.20; stackHeight = 24
        # EXIT NODE # IdentifierExp at 165.20; stackHeight = 24
        # ENTER NODE # ArrayLength at 165.30; stackHeight = 24
          # ENTER NODE # IdentifierExp at 165.24; stackHeight = 24
           lw $t0,4($s2) # inst-var # IdentifierExp at 165.24; stackHeight = 24
           subu $sp,$sp,4 # IdentifierExp at 165.24; stackHeight = 24
           sw $t0,($sp)#**"" # IdentifierExp at 165.24; stackHeight = 28
          # EXIT NODE # IdentifierExp at 165.24; stackHeight = 28
         lw $t0,($sp) # ArrayLength at 165.30; stackHeight = 28
         beq $t0,$zero,nullPtrException # ArrayLength at 165.30; stackHeight = 28
         lw $t0,-4($t0) # ArrayLength at 165.30; stackHeight = 28
         sw $s5,($sp)#**"GC tag" # ArrayLength at 165.30; stackHeight = 28
         subu $sp,4 # ArrayLength at 165.30; stackHeight = 28
         sw $t0,($sp)#**"" # ArrayLength at 165.30; stackHeight = 28
        # EXIT NODE # ArrayLength at 165.30; stackHeight = 32
       lw $t0,($sp) # LessThan at 165.22; stackHeight = 32
       lw $t1,8($sp) # LessThan at 165.22; stackHeight = 32
       slt $t0,$t1,$t0 # LessThan at 165.22; stackHeight = 32
       addu $sp,$sp,12 # LessThan at 165.22; stackHeight = 32
       sw $t0,($sp)#**"" # LessThan at 165.22; stackHeight = 20
      # EXIT NODE # LessThan at 165.22; stackHeight = 20
     lw $t0,($sp) # While at 165.4; stackHeight = 20
     addu $sp,$sp,4 # While at 165.4; stackHeight = 20
    bne $t0,$zero,while_top_830 # While at 165.4; stackHeight = 16
    break_target_830: # While at 165.4; stackHeight = 16
    # EXIT NODE # While at 165.4; stackHeight = 16
   addu $sp,8 # Block at 165.4; stackHeight = 16
  # EXIT NODE # Block at 165.4; stackHeight = 8
# EXIT NODE # Block at 160.43; stackHeight = 8
  # ENTER NODE # Assign at 160.38; stackHeight = 8
    # ENTER NODE # Plus at 160.39; stackHeight = 8
      # ENTER NODE # IdentifierExp at 160.38; stackHeight = 8
       lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 160.38; stackHeight = 8
       subu $sp,$sp,8 # IdentifierExp at 160.38; stackHeight = 8
       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 160.38; stackHeight = 16
       sw $t0,($sp)#**"" # IdentifierExp at 160.38; stackHeight = 16
      # EXIT NODE # IdentifierExp at 160.38; stackHeight = 16
      # ENTER NODE # IntegerLiteral at 160.39; stackHeight = 16
       subu $sp,$sp,8 # IntegerLiteral at 160.39; stackHeight = 16
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 160.39; stackHeight = 24
       li $t0,1 # IntegerLiteral at 160.39; stackHeight = 24
       sw $t0,($sp) # IntegerLiteral at 160.39; stackHeight = 24
      # EXIT NODE # IntegerLiteral at 160.39; stackHeight = 24
     lw $t0,($sp) # Plus at 160.39; stackHeight = 24
     lw $t1,8($sp) # Plus at 160.39; stackHeight = 24
     addu $t0,$t0,$t1 # Plus at 160.39; stackHeight = 24
     addu $sp,$sp,8 # Plus at 160.39; stackHeight = 24
     sw $t0,($sp)#**"" # Plus at 160.39; stackHeight = 24
    # EXIT NODE # Plus at 160.39; stackHeight = 16
   lw $t0,($sp) # Assign at 160.38; stackHeight = 16
   sw $t0,8($sp) # Assign at 160.38; stackHeight = 16
   addu $sp,$sp,8 # Assign at 160.38; stackHeight = 16
  # EXIT NODE # Assign at 160.38; stackHeight = 8
# EXIT NODE # Block at 160.3; stackHeight = 8
while_enter_834: # While at 160.3; stackHeight = 8
  # ENTER NODE # LessThan at 160.21; stackHeight = 8
    # ENTER NODE # IdentifierExp at 160.19; stackHeight = 8
     lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 160.19; stackHeight = 8
     subu $sp,$sp,8 # IdentifierExp at 160.19; stackHeight = 8
     sw $s5,4($sp)#**"GC tag" # IdentifierExp at 160.19; stackHeight = 16
     sw $t0,($sp)#**"" # IdentifierExp at 160.19; stackHeight = 16
    # EXIT NODE # IdentifierExp at 160.19; stackHeight = 16
    # ENTER NODE # ArrayLength at 160.29; stackHeight = 16
      # ENTER NODE # IdentifierExp at 160.23; stackHeight = 16
       lw $t0,4($s2) # inst-var # IdentifierExp at 160.23; stackHeight = 16
       subu $sp,$sp,4 # IdentifierExp at 160.23; stackHeight = 16
       sw $t0,($sp)#**"" # IdentifierExp at 160.23; stackHeight = 20
      # EXIT NODE # IdentifierExp at 160.23; stackHeight = 20
     lw $t0,($sp) # ArrayLength at 160.29; stackHeight = 20
     beq $t0,$zero,nullPtrException # ArrayLength at 160.29; stackHeight = 20
     lw $t0,-4($t0) # ArrayLength at 160.29; stackHeight = 20
     sw $s5,($sp)#**"GC tag" # ArrayLength at 160.29; stackHeight = 20
     subu $sp,4 # ArrayLength at 160.29; stackHeight = 20
     sw $t0,($sp)#**"" # ArrayLength at 160.29; stackHeight = 20
    # EXIT NODE # ArrayLength at 160.29; stackHeight = 24
   lw $t0,($sp) # LessThan at 160.21; stackHeight = 24
   lw $t1,8($sp) # LessThan at 160.21; stackHeight = 24
   slt $t0,$t1,$t0 # LessThan at 160.21; stackHeight = 24
   addu $sp,$sp,12 # LessThan at 160.21; stackHeight = 24
   sw $t0,($sp)#**"" # LessThan at 160.21; stackHeight = 12
  # EXIT NODE # LessThan at 160.21; stackHeight = 12
 lw $t0,($sp) # While at 160.3; stackHeight = 12
 addu $sp,$sp,4 # While at 160.3; stackHeight = 12
bne $t0,$zero,while_top_834 # While at 160.3; stackHeight = 8
break_target_834: # While at 160.3; stackHeight = 8
# EXIT NODE # While at 160.3; stackHeight = 8
 addu $sp,8 # Block at 160.3; stackHeight = 8
# EXIT NODE # Block at 160.3; stackHeight = 0
 # stack height is 0 # MethodDeclVoid at 149.14; stackHeight = 0
 lw $ra,4($sp) # MethodDeclVoid at 149.14; stackHeight = 0
 lw $s2,0($sp) # MethodDeclVoid at 149.14; stackHeight = 0
 addu $sp,$sp,8 # MethodDeclVoid at 149.14; stackHeight = 0
jr $ra # MethodDeclVoid at 149.14; stackHeight = -8
# EXIT NODE # MethodDeclVoid at 149.14; stackHeight = -8
  # ENTER NODE # MethodDeclNonVoid at 171.16; stackHeight = -8
  .globl fcn_860_helpDiv # MethodDeclNonVoid at 171.16; stackHeight = -8
  fcn_860_helpDiv: # MethodDeclNonVoid at 171.16; stackHeight = -8
   subu $sp,$sp,4 # MethodDeclNonVoid at 171.16; stackHeight = -8
   sw $s2,($sp) #**"old this-ptr" # MethodDeclNonVoid at 171.16; stackHeight = -8
   lw $s2,12($sp) #**"this-ptr" # MethodDeclNonVoid at 171.16; stackHeight = -8
   sw $ra,12($sp) #**"RA:helpDiv" # MethodDeclNonVoid at 171.16; stackHeight = -8
    # ENTER NODE # LocalVarDecl at 172.10; stackHeight = 0
      # ENTER NODE # StringLiteral at 172.19; stackHeight = 0
       subu $sp,$sp,4 # StringLiteral at 172.19; stackHeight = 0
       la $t0,strLit_843 # StringLiteral at 172.19; stackHeight = 4
       sw $t0,($sp)#**"strLit:**DIV-BY=ZERO**" # StringLiteral at 172.19; stackHeight = 4
      # EXIT NODE # StringLiteral at 172.19; stackHeight = 4
    # EXIT NODE # LocalVarDecl at 172.10; stackHeight = 4
    # ENTER NODE # If at 173.3; stackHeight = 4
      # ENTER NODE # Not at 173.7; stackHeight = 4
        # ENTER NODE # Call at 173.10; stackHeight = 4
          # ENTER NODE # IdentifierExp at 173.8; stackHeight = 4
           lw $t0,8($sp) # local: stackHt=4,var-offset=4 # IdentifierExp at 173.8; stackHeight = 4
           subu $sp,$sp,4 # IdentifierExp at 173.8; stackHeight = 4
           sw $t0,($sp)#**"" # IdentifierExp at 173.8; stackHeight = 8
          # EXIT NODE # IdentifierExp at 173.8; stackHeight = 8
          # ENTER NODE # IdentifierExp at 173.17; stackHeight = 8
           lw $t0,8($s2) # inst-var # IdentifierExp at 173.17; stackHeight = 8
           subu $sp,$sp,4 # IdentifierExp at 173.17; stackHeight = 8
           sw $t0,($sp)#**"" # IdentifierExp at 173.17; stackHeight = 12
          # EXIT NODE # IdentifierExp at 173.17; stackHeight = 12
         lw $t0,4($sp) # Call at 173.10; stackHeight = 12
         beq $t0,$zero,nullPtrException # Call at 173.10; stackHeight = 12
         lw $t0,-12($t0) # Call at 173.10; stackHeight = 12
         lw $t0,4($t0) # Call at 173.10; stackHeight = 12
         jalr $t0 # equals # Call at 173.10; stackHeight = 12
        # EXIT NODE # Call at 173.10; stackHeight = 8
       lw $t0,($sp) # Not at 173.7; stackHeight = 8
       xor $t0,$t0,1 # Not at 173.7; stackHeight = 8
       sw $t0,($sp)#**"" # Not at 173.7; stackHeight = 8
      # EXIT NODE # Not at 173.7; stackHeight = 8
     lw $t0,($sp) # If at 173.3; stackHeight = 8
     addu $sp,$sp,4 # If at 173.3; stackHeight = 8
     beq $t0,$zero,if_else_858 # If at 173.3; stackHeight = 4
      # ENTER NODE # Block at 173.24; stackHeight = 4
        # ENTER NODE # Assign at 174.11; stackHeight = 4
          # ENTER NODE # Call at 174.25; stackHeight = 4
            # ENTER NODE # Call at 174.15; stackHeight = 4
              # ENTER NODE # IdentifierExp at 174.13; stackHeight = 4
               lw $t0,12($sp) # local: stackHt=4,var-offset=8 # IdentifierExp at 174.13; stackHeight = 4
               subu $sp,$sp,4 # IdentifierExp at 174.13; stackHeight = 4
               sw $t0,($sp)#**"" # IdentifierExp at 174.13; stackHeight = 8
              # EXIT NODE # IdentifierExp at 174.13; stackHeight = 8
              # ENTER NODE # IdentifierExp at 174.22; stackHeight = 8
               lw $t0,12($sp) # local: stackHt=8,var-offset=4 # IdentifierExp at 174.22; stackHeight = 8
               subu $sp,$sp,4 # IdentifierExp at 174.22; stackHeight = 8
               sw $t0,($sp)#**"" # IdentifierExp at 174.22; stackHeight = 12
              # EXIT NODE # IdentifierExp at 174.22; stackHeight = 12
             lw $t0,4($sp) # Call at 174.15; stackHeight = 12
             beq $t0,$zero,nullPtrException # Call at 174.15; stackHeight = 12
             lw $t0,-12($t0) # Call at 174.15; stackHeight = 12
             lw $t0,36($t0) # Call at 174.15; stackHeight = 12
             jalr $t0 # divide # Call at 174.15; stackHeight = 12
            # EXIT NODE # Call at 174.15; stackHeight = 8
           lw $t0,0($sp) # Call at 174.25; stackHeight = 8
           beq $t0,$zero,nullPtrException # Call at 174.25; stackHeight = 8
           lw $t0,-12($t0) # Call at 174.25; stackHeight = 8
           lw $t0,8($t0) # Call at 174.25; stackHeight = 8
           jalr $t0 # toString # Call at 174.25; stackHeight = 8
          # EXIT NODE # Call at 174.25; stackHeight = 8
         lw $t0,($sp) # Assign at 174.11; stackHeight = 8
         sw $t0,4($sp) # Assign at 174.11; stackHeight = 8
         addu $sp,$sp,4 # Assign at 174.11; stackHeight = 8
        # EXIT NODE # Assign at 174.11; stackHeight = 4
      # EXIT NODE # Block at 173.24; stackHeight = 4
    j if_done_858 # If at 173.3; stackHeight = 4
    if_else_858: # If at 173.3; stackHeight = 4
      # ENTER NODE # Block at 176.3; stackHeight = 4
      # EXIT NODE # Block at 176.3; stackHeight = 4
    if_done_858: # If at 173.3; stackHeight = 4
    # EXIT NODE # If at 173.3; stackHeight = 4
    # ENTER NODE # IdentifierExp at 176.10; stackHeight = 4
     lw $t0,0($sp) # local: stackHt=4,var-offset=-4 # IdentifierExp at 176.10; stackHeight = 4
     subu $sp,$sp,4 # IdentifierExp at 176.10; stackHeight = 4
     sw $t0,($sp)#**"" # IdentifierExp at 176.10; stackHeight = 8
    # EXIT NODE # IdentifierExp at 176.10; stackHeight = 8
   lw $ra,20($sp) # MethodDeclNonVoid at 171.16; stackHeight = 8
   lw $s2,8($sp) # MethodDeclNonVoid at 171.16; stackHeight = 8
   lw $t0,($sp) # MethodDeclNonVoid at 171.16; stackHeight = 8
   sw $t0,20($sp)#**"(return-val)" # MethodDeclNonVoid at 171.16; stackHeight = 8
   addu $sp,$sp,20 # MethodDeclNonVoid at 171.16; stackHeight = 8
  jr $ra # MethodDeclNonVoid at 171.16; stackHeight = -12
  # EXIT NODE # MethodDeclNonVoid at 171.16; stackHeight = -12
  # ENTER NODE # MethodDeclVoid at 179.14; stackHeight = -12
  .globl fcn_1015_divide # MethodDeclVoid at 179.14; stackHeight = -12
  fcn_1015_divide: # MethodDeclVoid at 179.14; stackHeight = -12
   subu $sp,$sp,4 # MethodDeclVoid at 179.14; stackHeight = -12
   sw $s2,($sp) #**"old this-ptr" # MethodDeclVoid at 179.14; stackHeight = -12
   lw $s2,4($sp) #**"this-ptr" # MethodDeclVoid at 179.14; stackHeight = -12
   sw $ra,4($sp) #**"RA:divide" # MethodDeclVoid at 179.14; stackHeight = -12
    # ENTER NODE # Block at 180.3; stackHeight = 0
      # ENTER NODE # LocalVarDecl at 180.12; stackHeight = 0
        # ENTER NODE # IntegerLiteral at 180.16; stackHeight = 0
         subu $sp,$sp,8 # IntegerLiteral at 180.16; stackHeight = 0
         sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 180.16; stackHeight = 8
         li $t0,0 # IntegerLiteral at 180.16; stackHeight = 8
         sw $t0,($sp) # IntegerLiteral at 180.16; stackHeight = 8
        # EXIT NODE # IntegerLiteral at 180.16; stackHeight = 8
      # EXIT NODE # LocalVarDecl at 180.12; stackHeight = 8
      # ENTER NODE # While at 180.3; stackHeight = 8
      j while_enter_936 # While at 180.3; stackHeight = 8
      while_top_936: # While at 180.3; stackHeight = 8
        # ENTER NODE # Block at 180.3; stackHeight = 8
          # ENTER NODE # Block at 180.41; stackHeight = 8
            # ENTER NODE # Block at 181.4; stackHeight = 8
              # ENTER NODE # LocalVarDecl at 181.13; stackHeight = 8
                # ENTER NODE # IntegerLiteral at 181.17; stackHeight = 8
                 subu $sp,$sp,8 # IntegerLiteral at 181.17; stackHeight = 8
                 sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 181.17; stackHeight = 16
                 li $t0,0 # IntegerLiteral at 181.17; stackHeight = 16
                 sw $t0,($sp) # IntegerLiteral at 181.17; stackHeight = 16
                # EXIT NODE # IntegerLiteral at 181.17; stackHeight = 16
              # EXIT NODE # LocalVarDecl at 181.13; stackHeight = 16
              # ENTER NODE # While at 181.4; stackHeight = 16
              j while_enter_902 # While at 181.4; stackHeight = 16
              while_top_902: # While at 181.4; stackHeight = 16
                # ENTER NODE # Block at 181.4; stackHeight = 16
                  # ENTER NODE # Block at 181.42; stackHeight = 16
                    # ENTER NODE # CallStatement at 182.5; stackHeight = 16
                      # ENTER NODE # Call at 182.5; stackHeight = 16
                        # ENTER NODE # This at 182.5; stackHeight = 16
                         subu $sp,$sp,4 # This at 182.5; stackHeight = 16
                         sw $s2,($sp)#**"" # This at 182.5; stackHeight = 20
                        # EXIT NODE # This at 182.5; stackHeight = 20
                        # ENTER NODE # Call at 182.40; stackHeight = 20
                          # ENTER NODE # Call at 182.14; stackHeight = 20
                            # ENTER NODE # This at 182.14; stackHeight = 20
                             subu $sp,$sp,4 # This at 182.14; stackHeight = 20
                             sw $s2,($sp)#**"" # This at 182.14; stackHeight = 24
                            # EXIT NODE # This at 182.14; stackHeight = 24
                            # ENTER NODE # IdentifierExp at 182.22; stackHeight = 24
                             lw $t0,0($s2) # inst-var # IdentifierExp at 182.22; stackHeight = 24
                             subu $sp,$sp,4 # IdentifierExp at 182.22; stackHeight = 24
                             sw $t0,($sp)#**"" # IdentifierExp at 182.22; stackHeight = 28
                            # EXIT NODE # IdentifierExp at 182.22; stackHeight = 28
                            # ENTER NODE # IdentifierExp at 182.27; stackHeight = 28
                             lw $t0,20($sp) # local: stackHt=28,var-offset=-8 # IdentifierExp at 182.27; stackHeight = 28
                             subu $sp,$sp,8 # IdentifierExp at 182.27; stackHeight = 28
                             sw $s5,4($sp)#**"GC tag" # IdentifierExp at 182.27; stackHeight = 36
                             sw $t0,($sp)#**"" # IdentifierExp at 182.27; stackHeight = 36
                            # EXIT NODE # IdentifierExp at 182.27; stackHeight = 36
                           lw $t0,8($sp) # ArrayLookup at 182.26; stackHeight = 36
                           beq $t0,$zero,nullPtrException # ArrayLookup at 182.26; stackHeight = 36
                           lw $t1,-4($t0) # ArrayLookup at 182.26; stackHeight = 36
                           lw $t2,($sp) # ArrayLookup at 182.26; stackHeight = 36
                           bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 182.26; stackHeight = 36
                           sll $t2,$t2,2 # ArrayLookup at 182.26; stackHeight = 36
                           addu $t2,$t2,$t0 # ArrayLookup at 182.26; stackHeight = 36
                           lw $t0,($t2) # ArrayLookup at 182.26; stackHeight = 36
                           sw $t0,8($sp)#**"" # ArrayLookup at 182.26; stackHeight = 36
                           addu $sp,$sp,8 # ArrayLookup at 182.26; stackHeight = 36
                          # EXIT NODE # ArrayLookup at 182.26; stackHeight = 28
                          # ENTER NODE # IdentifierExp at 182.31; stackHeight = 28
                           lw $t0,0($s2) # inst-var # IdentifierExp at 182.31; stackHeight = 28
                           subu $sp,$sp,4 # IdentifierExp at 182.31; stackHeight = 28
                           sw $t0,($sp)#**"" # IdentifierExp at 182.31; stackHeight = 32
                          # EXIT NODE # IdentifierExp at 182.31; stackHeight = 32
                          # ENTER NODE # IdentifierExp at 182.36; stackHeight = 32
                           lw $t0,16($sp) # local: stackHt=32,var-offset=-16 # IdentifierExp at 182.36; stackHeight = 32
                           subu $sp,$sp,8 # IdentifierExp at 182.36; stackHeight = 32
                           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 182.36; stackHeight = 40
                           sw $t0,($sp)#**"" # IdentifierExp at 182.36; stackHeight = 40
                          # EXIT NODE # IdentifierExp at 182.36; stackHeight = 40
                         lw $t0,8($sp) # ArrayLookup at 182.35; stackHeight = 40
                         beq $t0,$zero,nullPtrException # ArrayLookup at 182.35; stackHeight = 40
                         lw $t1,-4($t0) # ArrayLookup at 182.35; stackHeight = 40
                         lw $t2,($sp) # ArrayLookup at 182.35; stackHeight = 40
                         bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 182.35; stackHeight = 40
                         sll $t2,$t2,2 # ArrayLookup at 182.35; stackHeight = 40
                         addu $t2,$t2,$t0 # ArrayLookup at 182.35; stackHeight = 40
                         lw $t0,($t2) # ArrayLookup at 182.35; stackHeight = 40
                         sw $t0,8($sp)#**"" # ArrayLookup at 182.35; stackHeight = 40
                         addu $sp,$sp,8 # ArrayLookup at 182.35; stackHeight = 40
                        # EXIT NODE # ArrayLookup at 182.35; stackHeight = 32
                       lw $t0,8($sp) # Call at 182.14; stackHeight = 32
                       beq $t0,$zero,nullPtrException # Call at 182.14; stackHeight = 32
                       lw $t0,-12($t0) # Call at 182.14; stackHeight = 32
                       lw $t0,72($t0) # Call at 182.14; stackHeight = 32
                       jalr $t0 # helpDiv # Call at 182.14; stackHeight = 32
                      # EXIT NODE # Call at 182.14; stackHeight = 24
                      # ENTER NODE # StringLiteral at 182.47; stackHeight = 24
                       subu $sp,$sp,4 # StringLiteral at 182.47; stackHeight = 24
                       la $t0,strLit_486 # StringLiteral at 182.47; stackHeight = 28
                       sw $t0,($sp)#**"strLit:\?" # StringLiteral at 182.47; stackHeight = 28
                      # EXIT NODE # StringLiteral at 182.47; stackHeight = 28
                     lw $t0,4($sp) # Call at 182.40; stackHeight = 28
                     beq $t0,$zero,nullPtrException # Call at 182.40; stackHeight = 28
                     lw $t0,-12($t0) # Call at 182.40; stackHeight = 28
                     lw $t0,12($t0) # Call at 182.40; stackHeight = 28
                     jalr $t0 # concat # Call at 182.40; stackHeight = 28
                    # EXIT NODE # Call at 182.40; stackHeight = 24
                   lw $t0,4($sp) # Call at 182.5; stackHeight = 24
                   beq $t0,$zero,nullPtrException # Call at 182.5; stackHeight = 24
                   lw $t0,-12($t0) # Call at 182.5; stackHeight = 24
                   lw $t0,24($t0) # Call at 182.5; stackHeight = 24
                   jalr $t0 # printStr # Call at 182.5; stackHeight = 24
                  # EXIT NODE # Call at 182.5; stackHeight = 16
                # EXIT NODE # CallStatement at 182.5; stackHeight = 16
              # EXIT NODE # Block at 181.42; stackHeight = 16
              # ENTER NODE # Assign at 181.37; stackHeight = 16
                # ENTER NODE # Plus at 181.38; stackHeight = 16
                  # ENTER NODE # IdentifierExp at 181.37; stackHeight = 16
                   lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 181.37; stackHeight = 16
                   subu $sp,$sp,8 # IdentifierExp at 181.37; stackHeight = 16
                   sw $s5,4($sp)#**"GC tag" # IdentifierExp at 181.37; stackHeight = 24
                   sw $t0,($sp)#**"" # IdentifierExp at 181.37; stackHeight = 24
                  # EXIT NODE # IdentifierExp at 181.37; stackHeight = 24
                  # ENTER NODE # IntegerLiteral at 181.38; stackHeight = 24
                   subu $sp,$sp,8 # IntegerLiteral at 181.38; stackHeight = 24
                   sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 181.38; stackHeight = 32
                   li $t0,1 # IntegerLiteral at 181.38; stackHeight = 32
                   sw $t0,($sp) # IntegerLiteral at 181.38; stackHeight = 32
                  # EXIT NODE # IntegerLiteral at 181.38; stackHeight = 32
                 lw $t0,($sp) # Plus at 181.38; stackHeight = 32
                 lw $t1,8($sp) # Plus at 181.38; stackHeight = 32
                 addu $t0,$t0,$t1 # Plus at 181.38; stackHeight = 32
                 addu $sp,$sp,8 # Plus at 181.38; stackHeight = 32
                 sw $t0,($sp)#**"" # Plus at 181.38; stackHeight = 32
                # EXIT NODE # Plus at 181.38; stackHeight = 24
               lw $t0,($sp) # Assign at 181.37; stackHeight = 24
               sw $t0,8($sp) # Assign at 181.37; stackHeight = 24
               addu $sp,$sp,8 # Assign at 181.37; stackHeight = 24
              # EXIT NODE # Assign at 181.37; stackHeight = 16
            # EXIT NODE # Block at 181.4; stackHeight = 16
          while_enter_902: # While at 181.4; stackHeight = 16
            # ENTER NODE # LessThan at 181.22; stackHeight = 16
              # ENTER NODE # IdentifierExp at 181.20; stackHeight = 16
               lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 181.20; stackHeight = 16
               subu $sp,$sp,8 # IdentifierExp at 181.20; stackHeight = 16
               sw $s5,4($sp)#**"GC tag" # IdentifierExp at 181.20; stackHeight = 24
               sw $t0,($sp)#**"" # IdentifierExp at 181.20; stackHeight = 24
              # EXIT NODE # IdentifierExp at 181.20; stackHeight = 24
              # ENTER NODE # ArrayLength at 181.28; stackHeight = 24
                # ENTER NODE # IdentifierExp at 181.24; stackHeight = 24
                 lw $t0,0($s2) # inst-var # IdentifierExp at 181.24; stackHeight = 24
                 subu $sp,$sp,4 # IdentifierExp at 181.24; stackHeight = 24
                 sw $t0,($sp)#**"" # IdentifierExp at 181.24; stackHeight = 28
                # EXIT NODE # IdentifierExp at 181.24; stackHeight = 28
               lw $t0,($sp) # ArrayLength at 181.28; stackHeight = 28
               beq $t0,$zero,nullPtrException # ArrayLength at 181.28; stackHeight = 28
               lw $t0,-4($t0) # ArrayLength at 181.28; stackHeight = 28
               sw $s5,($sp)#**"GC tag" # ArrayLength at 181.28; stackHeight = 28
               subu $sp,4 # ArrayLength at 181.28; stackHeight = 28
               sw $t0,($sp)#**"" # ArrayLength at 181.28; stackHeight = 28
              # EXIT NODE # ArrayLength at 181.28; stackHeight = 32
             lw $t0,($sp) # LessThan at 181.22; stackHeight = 32
             lw $t1,8($sp) # LessThan at 181.22; stackHeight = 32
             slt $t0,$t1,$t0 # LessThan at 181.22; stackHeight = 32
             addu $sp,$sp,12 # LessThan at 181.22; stackHeight = 32
             sw $t0,($sp)#**"" # LessThan at 181.22; stackHeight = 20
            # EXIT NODE # LessThan at 181.22; stackHeight = 20
           lw $t0,($sp) # While at 181.4; stackHeight = 20
           addu $sp,$sp,4 # While at 181.4; stackHeight = 20
          bne $t0,$zero,while_top_902 # While at 181.4; stackHeight = 16
          break_target_902: # While at 181.4; stackHeight = 16
          # EXIT NODE # While at 181.4; stackHeight = 16
         addu $sp,8 # Block at 181.4; stackHeight = 16
        # EXIT NODE # Block at 181.4; stackHeight = 8
        # ENTER NODE # Block at 184.4; stackHeight = 8
          # ENTER NODE # LocalVarDecl at 184.13; stackHeight = 8
            # ENTER NODE # IntegerLiteral at 184.17; stackHeight = 8
             subu $sp,$sp,8 # IntegerLiteral at 184.17; stackHeight = 8
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 184.17; stackHeight = 16
             li $t0,0 # IntegerLiteral at 184.17; stackHeight = 16
             sw $t0,($sp) # IntegerLiteral at 184.17; stackHeight = 16
            # EXIT NODE # IntegerLiteral at 184.17; stackHeight = 16
          # EXIT NODE # LocalVarDecl at 184.13; stackHeight = 16
          # ENTER NODE # While at 184.4; stackHeight = 16
          j while_enter_932 # While at 184.4; stackHeight = 16
          while_top_932: # While at 184.4; stackHeight = 16
            # ENTER NODE # Block at 184.4; stackHeight = 16
              # ENTER NODE # Block at 184.44; stackHeight = 16
                # ENTER NODE # CallStatement at 185.5; stackHeight = 16
                  # ENTER NODE # Call at 185.5; stackHeight = 16
                    # ENTER NODE # This at 185.5; stackHeight = 16
                     subu $sp,$sp,4 # This at 185.5; stackHeight = 16
                     sw $s2,($sp)#**"" # This at 185.5; stackHeight = 20
                    # EXIT NODE # This at 185.5; stackHeight = 20
                    # ENTER NODE # Call at 185.42; stackHeight = 20
                      # ENTER NODE # Call at 185.14; stackHeight = 20
                        # ENTER NODE # This at 185.14; stackHeight = 20
                         subu $sp,$sp,4 # This at 185.14; stackHeight = 20
                         sw $s2,($sp)#**"" # This at 185.14; stackHeight = 24
                        # EXIT NODE # This at 185.14; stackHeight = 24
                        # ENTER NODE # IdentifierExp at 185.22; stackHeight = 24
                         lw $t0,0($s2) # inst-var # IdentifierExp at 185.22; stackHeight = 24
                         subu $sp,$sp,4 # IdentifierExp at 185.22; stackHeight = 24
                         sw $t0,($sp)#**"" # IdentifierExp at 185.22; stackHeight = 28
                        # EXIT NODE # IdentifierExp at 185.22; stackHeight = 28
                        # ENTER NODE # IdentifierExp at 185.27; stackHeight = 28
                         lw $t0,20($sp) # local: stackHt=28,var-offset=-8 # IdentifierExp at 185.27; stackHeight = 28
                         subu $sp,$sp,8 # IdentifierExp at 185.27; stackHeight = 28
                         sw $s5,4($sp)#**"GC tag" # IdentifierExp at 185.27; stackHeight = 36
                         sw $t0,($sp)#**"" # IdentifierExp at 185.27; stackHeight = 36
                        # EXIT NODE # IdentifierExp at 185.27; stackHeight = 36
                       lw $t0,8($sp) # ArrayLookup at 185.26; stackHeight = 36
                       beq $t0,$zero,nullPtrException # ArrayLookup at 185.26; stackHeight = 36
                       lw $t1,-4($t0) # ArrayLookup at 185.26; stackHeight = 36
                       lw $t2,($sp) # ArrayLookup at 185.26; stackHeight = 36
                       bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 185.26; stackHeight = 36
                       sll $t2,$t2,2 # ArrayLookup at 185.26; stackHeight = 36
                       addu $t2,$t2,$t0 # ArrayLookup at 185.26; stackHeight = 36
                       lw $t0,($t2) # ArrayLookup at 185.26; stackHeight = 36
                       sw $t0,8($sp)#**"" # ArrayLookup at 185.26; stackHeight = 36
                       addu $sp,$sp,8 # ArrayLookup at 185.26; stackHeight = 36
                      # EXIT NODE # ArrayLookup at 185.26; stackHeight = 28
                      # ENTER NODE # IdentifierExp at 185.31; stackHeight = 28
                       lw $t0,4($s2) # inst-var # IdentifierExp at 185.31; stackHeight = 28
                       subu $sp,$sp,4 # IdentifierExp at 185.31; stackHeight = 28
                       sw $t0,($sp)#**"" # IdentifierExp at 185.31; stackHeight = 32
                      # EXIT NODE # IdentifierExp at 185.31; stackHeight = 32
                      # ENTER NODE # IdentifierExp at 185.38; stackHeight = 32
                       lw $t0,16($sp) # local: stackHt=32,var-offset=-16 # IdentifierExp at 185.38; stackHeight = 32
                       subu $sp,$sp,8 # IdentifierExp at 185.38; stackHeight = 32
                       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 185.38; stackHeight = 40
                       sw $t0,($sp)#**"" # IdentifierExp at 185.38; stackHeight = 40
                      # EXIT NODE # IdentifierExp at 185.38; stackHeight = 40
                     lw $t0,8($sp) # ArrayLookup at 185.37; stackHeight = 40
                     beq $t0,$zero,nullPtrException # ArrayLookup at 185.37; stackHeight = 40
                     lw $t1,-4($t0) # ArrayLookup at 185.37; stackHeight = 40
                     lw $t2,($sp) # ArrayLookup at 185.37; stackHeight = 40
                     bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 185.37; stackHeight = 40
                     sll $t2,$t2,2 # ArrayLookup at 185.37; stackHeight = 40
                     addu $t2,$t2,$t0 # ArrayLookup at 185.37; stackHeight = 40
                     lw $t0,($t2) # ArrayLookup at 185.37; stackHeight = 40
                     sw $t0,8($sp)#**"" # ArrayLookup at 185.37; stackHeight = 40
                     addu $sp,$sp,8 # ArrayLookup at 185.37; stackHeight = 40
                    # EXIT NODE # ArrayLookup at 185.37; stackHeight = 32
                   lw $t0,8($sp) # Call at 185.14; stackHeight = 32
                   beq $t0,$zero,nullPtrException # Call at 185.14; stackHeight = 32
                   lw $t0,-12($t0) # Call at 185.14; stackHeight = 32
                   lw $t0,72($t0) # Call at 185.14; stackHeight = 32
                   jalr $t0 # helpDiv # Call at 185.14; stackHeight = 32
                  # EXIT NODE # Call at 185.14; stackHeight = 24
                  # ENTER NODE # StringLiteral at 185.49; stackHeight = 24
                   subu $sp,$sp,4 # StringLiteral at 185.49; stackHeight = 24
                   la $t0,strLit_486 # StringLiteral at 185.49; stackHeight = 28
                   sw $t0,($sp)#**"strLit:\?" # StringLiteral at 185.49; stackHeight = 28
                  # EXIT NODE # StringLiteral at 185.49; stackHeight = 28
                 lw $t0,4($sp) # Call at 185.42; stackHeight = 28
                 beq $t0,$zero,nullPtrException # Call at 185.42; stackHeight = 28
                 lw $t0,-12($t0) # Call at 185.42; stackHeight = 28
                 lw $t0,12($t0) # Call at 185.42; stackHeight = 28
                 jalr $t0 # concat # Call at 185.42; stackHeight = 28
                # EXIT NODE # Call at 185.42; stackHeight = 24
               lw $t0,4($sp) # Call at 185.5; stackHeight = 24
               beq $t0,$zero,nullPtrException # Call at 185.5; stackHeight = 24
               lw $t0,-12($t0) # Call at 185.5; stackHeight = 24
               lw $t0,24($t0) # Call at 185.5; stackHeight = 24
               jalr $t0 # printStr # Call at 185.5; stackHeight = 24
              # EXIT NODE # Call at 185.5; stackHeight = 16
            # EXIT NODE # CallStatement at 185.5; stackHeight = 16
          # EXIT NODE # Block at 184.44; stackHeight = 16
          # ENTER NODE # Assign at 184.39; stackHeight = 16
            # ENTER NODE # Plus at 184.40; stackHeight = 16
              # ENTER NODE # IdentifierExp at 184.39; stackHeight = 16
               lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 184.39; stackHeight = 16
               subu $sp,$sp,8 # IdentifierExp at 184.39; stackHeight = 16
               sw $s5,4($sp)#**"GC tag" # IdentifierExp at 184.39; stackHeight = 24
               sw $t0,($sp)#**"" # IdentifierExp at 184.39; stackHeight = 24
              # EXIT NODE # IdentifierExp at 184.39; stackHeight = 24
              # ENTER NODE # IntegerLiteral at 184.40; stackHeight = 24
               subu $sp,$sp,8 # IntegerLiteral at 184.40; stackHeight = 24
               sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 184.40; stackHeight = 32
               li $t0,1 # IntegerLiteral at 184.40; stackHeight = 32
               sw $t0,($sp) # IntegerLiteral at 184.40; stackHeight = 32
              # EXIT NODE # IntegerLiteral at 184.40; stackHeight = 32
             lw $t0,($sp) # Plus at 184.40; stackHeight = 32
             lw $t1,8($sp) # Plus at 184.40; stackHeight = 32
             addu $t0,$t0,$t1 # Plus at 184.40; stackHeight = 32
             addu $sp,$sp,8 # Plus at 184.40; stackHeight = 32
             sw $t0,($sp)#**"" # Plus at 184.40; stackHeight = 32
            # EXIT NODE # Plus at 184.40; stackHeight = 24
           lw $t0,($sp) # Assign at 184.39; stackHeight = 24
           sw $t0,8($sp) # Assign at 184.39; stackHeight = 24
           addu $sp,$sp,8 # Assign at 184.39; stackHeight = 24
          # EXIT NODE # Assign at 184.39; stackHeight = 16
        # EXIT NODE # Block at 184.4; stackHeight = 16
      while_enter_932: # While at 184.4; stackHeight = 16
        # ENTER NODE # LessThan at 184.22; stackHeight = 16
          # ENTER NODE # IdentifierExp at 184.20; stackHeight = 16
           lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 184.20; stackHeight = 16
           subu $sp,$sp,8 # IdentifierExp at 184.20; stackHeight = 16
           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 184.20; stackHeight = 24
           sw $t0,($sp)#**"" # IdentifierExp at 184.20; stackHeight = 24
          # EXIT NODE # IdentifierExp at 184.20; stackHeight = 24
          # ENTER NODE # ArrayLength at 184.30; stackHeight = 24
            # ENTER NODE # IdentifierExp at 184.24; stackHeight = 24
             lw $t0,4($s2) # inst-var # IdentifierExp at 184.24; stackHeight = 24
             subu $sp,$sp,4 # IdentifierExp at 184.24; stackHeight = 24
             sw $t0,($sp)#**"" # IdentifierExp at 184.24; stackHeight = 28
            # EXIT NODE # IdentifierExp at 184.24; stackHeight = 28
           lw $t0,($sp) # ArrayLength at 184.30; stackHeight = 28
           beq $t0,$zero,nullPtrException # ArrayLength at 184.30; stackHeight = 28
           lw $t0,-4($t0) # ArrayLength at 184.30; stackHeight = 28
           sw $s5,($sp)#**"GC tag" # ArrayLength at 184.30; stackHeight = 28
           subu $sp,4 # ArrayLength at 184.30; stackHeight = 28
           sw $t0,($sp)#**"" # ArrayLength at 184.30; stackHeight = 28
          # EXIT NODE # ArrayLength at 184.30; stackHeight = 32
         lw $t0,($sp) # LessThan at 184.22; stackHeight = 32
         lw $t1,8($sp) # LessThan at 184.22; stackHeight = 32
         slt $t0,$t1,$t0 # LessThan at 184.22; stackHeight = 32
         addu $sp,$sp,12 # LessThan at 184.22; stackHeight = 32
         sw $t0,($sp)#**"" # LessThan at 184.22; stackHeight = 20
        # EXIT NODE # LessThan at 184.22; stackHeight = 20
       lw $t0,($sp) # While at 184.4; stackHeight = 20
       addu $sp,$sp,4 # While at 184.4; stackHeight = 20
      bne $t0,$zero,while_top_932 # While at 184.4; stackHeight = 16
      break_target_932: # While at 184.4; stackHeight = 16
      # EXIT NODE # While at 184.4; stackHeight = 16
     addu $sp,8 # Block at 184.4; stackHeight = 16
    # EXIT NODE # Block at 184.4; stackHeight = 8
  # EXIT NODE # Block at 180.41; stackHeight = 8
  # ENTER NODE # Assign at 180.36; stackHeight = 8
    # ENTER NODE # Plus at 180.37; stackHeight = 8
      # ENTER NODE # IdentifierExp at 180.36; stackHeight = 8
       lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 180.36; stackHeight = 8
       subu $sp,$sp,8 # IdentifierExp at 180.36; stackHeight = 8
       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 180.36; stackHeight = 16
       sw $t0,($sp)#**"" # IdentifierExp at 180.36; stackHeight = 16
      # EXIT NODE # IdentifierExp at 180.36; stackHeight = 16
      # ENTER NODE # IntegerLiteral at 180.37; stackHeight = 16
       subu $sp,$sp,8 # IntegerLiteral at 180.37; stackHeight = 16
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 180.37; stackHeight = 24
       li $t0,1 # IntegerLiteral at 180.37; stackHeight = 24
       sw $t0,($sp) # IntegerLiteral at 180.37; stackHeight = 24
      # EXIT NODE # IntegerLiteral at 180.37; stackHeight = 24
     lw $t0,($sp) # Plus at 180.37; stackHeight = 24
     lw $t1,8($sp) # Plus at 180.37; stackHeight = 24
     addu $t0,$t0,$t1 # Plus at 180.37; stackHeight = 24
     addu $sp,$sp,8 # Plus at 180.37; stackHeight = 24
     sw $t0,($sp)#**"" # Plus at 180.37; stackHeight = 24
    # EXIT NODE # Plus at 180.37; stackHeight = 16
   lw $t0,($sp) # Assign at 180.36; stackHeight = 16
   sw $t0,8($sp) # Assign at 180.36; stackHeight = 16
   addu $sp,$sp,8 # Assign at 180.36; stackHeight = 16
  # EXIT NODE # Assign at 180.36; stackHeight = 8
# EXIT NODE # Block at 180.3; stackHeight = 8
while_enter_936: # While at 180.3; stackHeight = 8
  # ENTER NODE # LessThan at 180.21; stackHeight = 8
    # ENTER NODE # IdentifierExp at 180.19; stackHeight = 8
     lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 180.19; stackHeight = 8
     subu $sp,$sp,8 # IdentifierExp at 180.19; stackHeight = 8
     sw $s5,4($sp)#**"GC tag" # IdentifierExp at 180.19; stackHeight = 16
     sw $t0,($sp)#**"" # IdentifierExp at 180.19; stackHeight = 16
    # EXIT NODE # IdentifierExp at 180.19; stackHeight = 16
    # ENTER NODE # ArrayLength at 180.27; stackHeight = 16
      # ENTER NODE # IdentifierExp at 180.23; stackHeight = 16
       lw $t0,0($s2) # inst-var # IdentifierExp at 180.23; stackHeight = 16
       subu $sp,$sp,4 # IdentifierExp at 180.23; stackHeight = 16
       sw $t0,($sp)#**"" # IdentifierExp at 180.23; stackHeight = 20
      # EXIT NODE # IdentifierExp at 180.23; stackHeight = 20
     lw $t0,($sp) # ArrayLength at 180.27; stackHeight = 20
     beq $t0,$zero,nullPtrException # ArrayLength at 180.27; stackHeight = 20
     lw $t0,-4($t0) # ArrayLength at 180.27; stackHeight = 20
     sw $s5,($sp)#**"GC tag" # ArrayLength at 180.27; stackHeight = 20
     subu $sp,4 # ArrayLength at 180.27; stackHeight = 20
     sw $t0,($sp)#**"" # ArrayLength at 180.27; stackHeight = 20
    # EXIT NODE # ArrayLength at 180.27; stackHeight = 24
   lw $t0,($sp) # LessThan at 180.21; stackHeight = 24
   lw $t1,8($sp) # LessThan at 180.21; stackHeight = 24
   slt $t0,$t1,$t0 # LessThan at 180.21; stackHeight = 24
   addu $sp,$sp,12 # LessThan at 180.21; stackHeight = 24
   sw $t0,($sp)#**"" # LessThan at 180.21; stackHeight = 12
  # EXIT NODE # LessThan at 180.21; stackHeight = 12
 lw $t0,($sp) # While at 180.3; stackHeight = 12
 addu $sp,$sp,4 # While at 180.3; stackHeight = 12
bne $t0,$zero,while_top_936 # While at 180.3; stackHeight = 8
break_target_936: # While at 180.3; stackHeight = 8
# EXIT NODE # While at 180.3; stackHeight = 8
 addu $sp,8 # Block at 180.3; stackHeight = 8
# EXIT NODE # Block at 180.3; stackHeight = 0
  # ENTER NODE # Block at 188.3; stackHeight = 0
    # ENTER NODE # LocalVarDecl at 188.12; stackHeight = 0
      # ENTER NODE # IntegerLiteral at 188.16; stackHeight = 0
       subu $sp,$sp,8 # IntegerLiteral at 188.16; stackHeight = 0
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 188.16; stackHeight = 8
       li $t0,0 # IntegerLiteral at 188.16; stackHeight = 8
       sw $t0,($sp) # IntegerLiteral at 188.16; stackHeight = 8
      # EXIT NODE # IntegerLiteral at 188.16; stackHeight = 8
    # EXIT NODE # LocalVarDecl at 188.12; stackHeight = 8
    # ENTER NODE # While at 188.3; stackHeight = 8
    j while_enter_1013 # While at 188.3; stackHeight = 8
    while_top_1013: # While at 188.3; stackHeight = 8
      # ENTER NODE # Block at 188.3; stackHeight = 8
        # ENTER NODE # Block at 188.43; stackHeight = 8
          # ENTER NODE # Block at 189.4; stackHeight = 8
            # ENTER NODE # LocalVarDecl at 189.13; stackHeight = 8
              # ENTER NODE # IntegerLiteral at 189.17; stackHeight = 8
               subu $sp,$sp,8 # IntegerLiteral at 189.17; stackHeight = 8
               sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 189.17; stackHeight = 16
               li $t0,0 # IntegerLiteral at 189.17; stackHeight = 16
               sw $t0,($sp) # IntegerLiteral at 189.17; stackHeight = 16
              # EXIT NODE # IntegerLiteral at 189.17; stackHeight = 16
            # EXIT NODE # LocalVarDecl at 189.13; stackHeight = 16
            # ENTER NODE # While at 189.4; stackHeight = 16
            j while_enter_979 # While at 189.4; stackHeight = 16
            while_top_979: # While at 189.4; stackHeight = 16
              # ENTER NODE # Block at 189.4; stackHeight = 16
                # ENTER NODE # Block at 189.42; stackHeight = 16
                  # ENTER NODE # CallStatement at 190.5; stackHeight = 16
                    # ENTER NODE # Call at 190.5; stackHeight = 16
                      # ENTER NODE # This at 190.5; stackHeight = 16
                       subu $sp,$sp,4 # This at 190.5; stackHeight = 16
                       sw $s2,($sp)#**"" # This at 190.5; stackHeight = 20
                      # EXIT NODE # This at 190.5; stackHeight = 20
                      # ENTER NODE # Call at 190.42; stackHeight = 20
                        # ENTER NODE # Call at 190.14; stackHeight = 20
                          # ENTER NODE # This at 190.14; stackHeight = 20
                           subu $sp,$sp,4 # This at 190.14; stackHeight = 20
                           sw $s2,($sp)#**"" # This at 190.14; stackHeight = 24
                          # EXIT NODE # This at 190.14; stackHeight = 24
                          # ENTER NODE # IdentifierExp at 190.22; stackHeight = 24
                           lw $t0,4($s2) # inst-var # IdentifierExp at 190.22; stackHeight = 24
                           subu $sp,$sp,4 # IdentifierExp at 190.22; stackHeight = 24
                           sw $t0,($sp)#**"" # IdentifierExp at 190.22; stackHeight = 28
                          # EXIT NODE # IdentifierExp at 190.22; stackHeight = 28
                          # ENTER NODE # IdentifierExp at 190.29; stackHeight = 28
                           lw $t0,20($sp) # local: stackHt=28,var-offset=-8 # IdentifierExp at 190.29; stackHeight = 28
                           subu $sp,$sp,8 # IdentifierExp at 190.29; stackHeight = 28
                           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 190.29; stackHeight = 36
                           sw $t0,($sp)#**"" # IdentifierExp at 190.29; stackHeight = 36
                          # EXIT NODE # IdentifierExp at 190.29; stackHeight = 36
                         lw $t0,8($sp) # ArrayLookup at 190.28; stackHeight = 36
                         beq $t0,$zero,nullPtrException # ArrayLookup at 190.28; stackHeight = 36
                         lw $t1,-4($t0) # ArrayLookup at 190.28; stackHeight = 36
                         lw $t2,($sp) # ArrayLookup at 190.28; stackHeight = 36
                         bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 190.28; stackHeight = 36
                         sll $t2,$t2,2 # ArrayLookup at 190.28; stackHeight = 36
                         addu $t2,$t2,$t0 # ArrayLookup at 190.28; stackHeight = 36
                         lw $t0,($t2) # ArrayLookup at 190.28; stackHeight = 36
                         sw $t0,8($sp)#**"" # ArrayLookup at 190.28; stackHeight = 36
                         addu $sp,$sp,8 # ArrayLookup at 190.28; stackHeight = 36
                        # EXIT NODE # ArrayLookup at 190.28; stackHeight = 28
                        # ENTER NODE # IdentifierExp at 190.33; stackHeight = 28
                         lw $t0,0($s2) # inst-var # IdentifierExp at 190.33; stackHeight = 28
                         subu $sp,$sp,4 # IdentifierExp at 190.33; stackHeight = 28
                         sw $t0,($sp)#**"" # IdentifierExp at 190.33; stackHeight = 32
                        # EXIT NODE # IdentifierExp at 190.33; stackHeight = 32
                        # ENTER NODE # IdentifierExp at 190.38; stackHeight = 32
                         lw $t0,16($sp) # local: stackHt=32,var-offset=-16 # IdentifierExp at 190.38; stackHeight = 32
                         subu $sp,$sp,8 # IdentifierExp at 190.38; stackHeight = 32
                         sw $s5,4($sp)#**"GC tag" # IdentifierExp at 190.38; stackHeight = 40
                         sw $t0,($sp)#**"" # IdentifierExp at 190.38; stackHeight = 40
                        # EXIT NODE # IdentifierExp at 190.38; stackHeight = 40
                       lw $t0,8($sp) # ArrayLookup at 190.37; stackHeight = 40
                       beq $t0,$zero,nullPtrException # ArrayLookup at 190.37; stackHeight = 40
                       lw $t1,-4($t0) # ArrayLookup at 190.37; stackHeight = 40
                       lw $t2,($sp) # ArrayLookup at 190.37; stackHeight = 40
                       bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 190.37; stackHeight = 40
                       sll $t2,$t2,2 # ArrayLookup at 190.37; stackHeight = 40
                       addu $t2,$t2,$t0 # ArrayLookup at 190.37; stackHeight = 40
                       lw $t0,($t2) # ArrayLookup at 190.37; stackHeight = 40
                       sw $t0,8($sp)#**"" # ArrayLookup at 190.37; stackHeight = 40
                       addu $sp,$sp,8 # ArrayLookup at 190.37; stackHeight = 40
                      # EXIT NODE # ArrayLookup at 190.37; stackHeight = 32
                     lw $t0,8($sp) # Call at 190.14; stackHeight = 32
                     beq $t0,$zero,nullPtrException # Call at 190.14; stackHeight = 32
                     lw $t0,-12($t0) # Call at 190.14; stackHeight = 32
                     lw $t0,72($t0) # Call at 190.14; stackHeight = 32
                     jalr $t0 # helpDiv # Call at 190.14; stackHeight = 32
                    # EXIT NODE # Call at 190.14; stackHeight = 24
                    # ENTER NODE # StringLiteral at 190.49; stackHeight = 24
                     subu $sp,$sp,4 # StringLiteral at 190.49; stackHeight = 24
                     la $t0,strLit_486 # StringLiteral at 190.49; stackHeight = 28
                     sw $t0,($sp)#**"strLit:\?" # StringLiteral at 190.49; stackHeight = 28
                    # EXIT NODE # StringLiteral at 190.49; stackHeight = 28
                   lw $t0,4($sp) # Call at 190.42; stackHeight = 28
                   beq $t0,$zero,nullPtrException # Call at 190.42; stackHeight = 28
                   lw $t0,-12($t0) # Call at 190.42; stackHeight = 28
                   lw $t0,12($t0) # Call at 190.42; stackHeight = 28
                   jalr $t0 # concat # Call at 190.42; stackHeight = 28
                  # EXIT NODE # Call at 190.42; stackHeight = 24
                 lw $t0,4($sp) # Call at 190.5; stackHeight = 24
                 beq $t0,$zero,nullPtrException # Call at 190.5; stackHeight = 24
                 lw $t0,-12($t0) # Call at 190.5; stackHeight = 24
                 lw $t0,24($t0) # Call at 190.5; stackHeight = 24
                 jalr $t0 # printStr # Call at 190.5; stackHeight = 24
                # EXIT NODE # Call at 190.5; stackHeight = 16
              # EXIT NODE # CallStatement at 190.5; stackHeight = 16
            # EXIT NODE # Block at 189.42; stackHeight = 16
            # ENTER NODE # Assign at 189.37; stackHeight = 16
              # ENTER NODE # Plus at 189.38; stackHeight = 16
                # ENTER NODE # IdentifierExp at 189.37; stackHeight = 16
                 lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 189.37; stackHeight = 16
                 subu $sp,$sp,8 # IdentifierExp at 189.37; stackHeight = 16
                 sw $s5,4($sp)#**"GC tag" # IdentifierExp at 189.37; stackHeight = 24
                 sw $t0,($sp)#**"" # IdentifierExp at 189.37; stackHeight = 24
                # EXIT NODE # IdentifierExp at 189.37; stackHeight = 24
                # ENTER NODE # IntegerLiteral at 189.38; stackHeight = 24
                 subu $sp,$sp,8 # IntegerLiteral at 189.38; stackHeight = 24
                 sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 189.38; stackHeight = 32
                 li $t0,1 # IntegerLiteral at 189.38; stackHeight = 32
                 sw $t0,($sp) # IntegerLiteral at 189.38; stackHeight = 32
                # EXIT NODE # IntegerLiteral at 189.38; stackHeight = 32
               lw $t0,($sp) # Plus at 189.38; stackHeight = 32
               lw $t1,8($sp) # Plus at 189.38; stackHeight = 32
               addu $t0,$t0,$t1 # Plus at 189.38; stackHeight = 32
               addu $sp,$sp,8 # Plus at 189.38; stackHeight = 32
               sw $t0,($sp)#**"" # Plus at 189.38; stackHeight = 32
              # EXIT NODE # Plus at 189.38; stackHeight = 24
             lw $t0,($sp) # Assign at 189.37; stackHeight = 24
             sw $t0,8($sp) # Assign at 189.37; stackHeight = 24
             addu $sp,$sp,8 # Assign at 189.37; stackHeight = 24
            # EXIT NODE # Assign at 189.37; stackHeight = 16
          # EXIT NODE # Block at 189.4; stackHeight = 16
        while_enter_979: # While at 189.4; stackHeight = 16
          # ENTER NODE # LessThan at 189.22; stackHeight = 16
            # ENTER NODE # IdentifierExp at 189.20; stackHeight = 16
             lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 189.20; stackHeight = 16
             subu $sp,$sp,8 # IdentifierExp at 189.20; stackHeight = 16
             sw $s5,4($sp)#**"GC tag" # IdentifierExp at 189.20; stackHeight = 24
             sw $t0,($sp)#**"" # IdentifierExp at 189.20; stackHeight = 24
            # EXIT NODE # IdentifierExp at 189.20; stackHeight = 24
            # ENTER NODE # ArrayLength at 189.28; stackHeight = 24
              # ENTER NODE # IdentifierExp at 189.24; stackHeight = 24
               lw $t0,0($s2) # inst-var # IdentifierExp at 189.24; stackHeight = 24
               subu $sp,$sp,4 # IdentifierExp at 189.24; stackHeight = 24
               sw $t0,($sp)#**"" # IdentifierExp at 189.24; stackHeight = 28
              # EXIT NODE # IdentifierExp at 189.24; stackHeight = 28
             lw $t0,($sp) # ArrayLength at 189.28; stackHeight = 28
             beq $t0,$zero,nullPtrException # ArrayLength at 189.28; stackHeight = 28
             lw $t0,-4($t0) # ArrayLength at 189.28; stackHeight = 28
             sw $s5,($sp)#**"GC tag" # ArrayLength at 189.28; stackHeight = 28
             subu $sp,4 # ArrayLength at 189.28; stackHeight = 28
             sw $t0,($sp)#**"" # ArrayLength at 189.28; stackHeight = 28
            # EXIT NODE # ArrayLength at 189.28; stackHeight = 32
           lw $t0,($sp) # LessThan at 189.22; stackHeight = 32
           lw $t1,8($sp) # LessThan at 189.22; stackHeight = 32
           slt $t0,$t1,$t0 # LessThan at 189.22; stackHeight = 32
           addu $sp,$sp,12 # LessThan at 189.22; stackHeight = 32
           sw $t0,($sp)#**"" # LessThan at 189.22; stackHeight = 20
          # EXIT NODE # LessThan at 189.22; stackHeight = 20
         lw $t0,($sp) # While at 189.4; stackHeight = 20
         addu $sp,$sp,4 # While at 189.4; stackHeight = 20
        bne $t0,$zero,while_top_979 # While at 189.4; stackHeight = 16
        break_target_979: # While at 189.4; stackHeight = 16
        # EXIT NODE # While at 189.4; stackHeight = 16
       addu $sp,8 # Block at 189.4; stackHeight = 16
      # EXIT NODE # Block at 189.4; stackHeight = 8
      # ENTER NODE # Block at 192.4; stackHeight = 8
        # ENTER NODE # LocalVarDecl at 192.13; stackHeight = 8
          # ENTER NODE # IntegerLiteral at 192.17; stackHeight = 8
           subu $sp,$sp,8 # IntegerLiteral at 192.17; stackHeight = 8
           sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 192.17; stackHeight = 16
           li $t0,0 # IntegerLiteral at 192.17; stackHeight = 16
           sw $t0,($sp) # IntegerLiteral at 192.17; stackHeight = 16
          # EXIT NODE # IntegerLiteral at 192.17; stackHeight = 16
        # EXIT NODE # LocalVarDecl at 192.13; stackHeight = 16
        # ENTER NODE # While at 192.4; stackHeight = 16
        j while_enter_1009 # While at 192.4; stackHeight = 16
        while_top_1009: # While at 192.4; stackHeight = 16
          # ENTER NODE # Block at 192.4; stackHeight = 16
            # ENTER NODE # Block at 192.44; stackHeight = 16
              # ENTER NODE # CallStatement at 193.5; stackHeight = 16
                # ENTER NODE # Call at 193.5; stackHeight = 16
                  # ENTER NODE # This at 193.5; stackHeight = 16
                   subu $sp,$sp,4 # This at 193.5; stackHeight = 16
                   sw $s2,($sp)#**"" # This at 193.5; stackHeight = 20
                  # EXIT NODE # This at 193.5; stackHeight = 20
                  # ENTER NODE # Call at 193.44; stackHeight = 20
                    # ENTER NODE # Call at 193.14; stackHeight = 20
                      # ENTER NODE # This at 193.14; stackHeight = 20
                       subu $sp,$sp,4 # This at 193.14; stackHeight = 20
                       sw $s2,($sp)#**"" # This at 193.14; stackHeight = 24
                      # EXIT NODE # This at 193.14; stackHeight = 24
                      # ENTER NODE # IdentifierExp at 193.22; stackHeight = 24
                       lw $t0,4($s2) # inst-var # IdentifierExp at 193.22; stackHeight = 24
                       subu $sp,$sp,4 # IdentifierExp at 193.22; stackHeight = 24
                       sw $t0,($sp)#**"" # IdentifierExp at 193.22; stackHeight = 28
                      # EXIT NODE # IdentifierExp at 193.22; stackHeight = 28
                      # ENTER NODE # IdentifierExp at 193.29; stackHeight = 28
                       lw $t0,20($sp) # local: stackHt=28,var-offset=-8 # IdentifierExp at 193.29; stackHeight = 28
                       subu $sp,$sp,8 # IdentifierExp at 193.29; stackHeight = 28
                       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 193.29; stackHeight = 36
                       sw $t0,($sp)#**"" # IdentifierExp at 193.29; stackHeight = 36
                      # EXIT NODE # IdentifierExp at 193.29; stackHeight = 36
                     lw $t0,8($sp) # ArrayLookup at 193.28; stackHeight = 36
                     beq $t0,$zero,nullPtrException # ArrayLookup at 193.28; stackHeight = 36
                     lw $t1,-4($t0) # ArrayLookup at 193.28; stackHeight = 36
                     lw $t2,($sp) # ArrayLookup at 193.28; stackHeight = 36
                     bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 193.28; stackHeight = 36
                     sll $t2,$t2,2 # ArrayLookup at 193.28; stackHeight = 36
                     addu $t2,$t2,$t0 # ArrayLookup at 193.28; stackHeight = 36
                     lw $t0,($t2) # ArrayLookup at 193.28; stackHeight = 36
                     sw $t0,8($sp)#**"" # ArrayLookup at 193.28; stackHeight = 36
                     addu $sp,$sp,8 # ArrayLookup at 193.28; stackHeight = 36
                    # EXIT NODE # ArrayLookup at 193.28; stackHeight = 28
                    # ENTER NODE # IdentifierExp at 193.33; stackHeight = 28
                     lw $t0,4($s2) # inst-var # IdentifierExp at 193.33; stackHeight = 28
                     subu $sp,$sp,4 # IdentifierExp at 193.33; stackHeight = 28
                     sw $t0,($sp)#**"" # IdentifierExp at 193.33; stackHeight = 32
                    # EXIT NODE # IdentifierExp at 193.33; stackHeight = 32
                    # ENTER NODE # IdentifierExp at 193.40; stackHeight = 32
                     lw $t0,16($sp) # local: stackHt=32,var-offset=-16 # IdentifierExp at 193.40; stackHeight = 32
                     subu $sp,$sp,8 # IdentifierExp at 193.40; stackHeight = 32
                     sw $s5,4($sp)#**"GC tag" # IdentifierExp at 193.40; stackHeight = 40
                     sw $t0,($sp)#**"" # IdentifierExp at 193.40; stackHeight = 40
                    # EXIT NODE # IdentifierExp at 193.40; stackHeight = 40
                   lw $t0,8($sp) # ArrayLookup at 193.39; stackHeight = 40
                   beq $t0,$zero,nullPtrException # ArrayLookup at 193.39; stackHeight = 40
                   lw $t1,-4($t0) # ArrayLookup at 193.39; stackHeight = 40
                   lw $t2,($sp) # ArrayLookup at 193.39; stackHeight = 40
                   bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 193.39; stackHeight = 40
                   sll $t2,$t2,2 # ArrayLookup at 193.39; stackHeight = 40
                   addu $t2,$t2,$t0 # ArrayLookup at 193.39; stackHeight = 40
                   lw $t0,($t2) # ArrayLookup at 193.39; stackHeight = 40
                   sw $t0,8($sp)#**"" # ArrayLookup at 193.39; stackHeight = 40
                   addu $sp,$sp,8 # ArrayLookup at 193.39; stackHeight = 40
                  # EXIT NODE # ArrayLookup at 193.39; stackHeight = 32
                 lw $t0,8($sp) # Call at 193.14; stackHeight = 32
                 beq $t0,$zero,nullPtrException # Call at 193.14; stackHeight = 32
                 lw $t0,-12($t0) # Call at 193.14; stackHeight = 32
                 lw $t0,72($t0) # Call at 193.14; stackHeight = 32
                 jalr $t0 # helpDiv # Call at 193.14; stackHeight = 32
                # EXIT NODE # Call at 193.14; stackHeight = 24
                # ENTER NODE # StringLiteral at 193.51; stackHeight = 24
                 subu $sp,$sp,4 # StringLiteral at 193.51; stackHeight = 24
                 la $t0,strLit_486 # StringLiteral at 193.51; stackHeight = 28
                 sw $t0,($sp)#**"strLit:\?" # StringLiteral at 193.51; stackHeight = 28
                # EXIT NODE # StringLiteral at 193.51; stackHeight = 28
               lw $t0,4($sp) # Call at 193.44; stackHeight = 28
               beq $t0,$zero,nullPtrException # Call at 193.44; stackHeight = 28
               lw $t0,-12($t0) # Call at 193.44; stackHeight = 28
               lw $t0,12($t0) # Call at 193.44; stackHeight = 28
               jalr $t0 # concat # Call at 193.44; stackHeight = 28
              # EXIT NODE # Call at 193.44; stackHeight = 24
             lw $t0,4($sp) # Call at 193.5; stackHeight = 24
             beq $t0,$zero,nullPtrException # Call at 193.5; stackHeight = 24
             lw $t0,-12($t0) # Call at 193.5; stackHeight = 24
             lw $t0,24($t0) # Call at 193.5; stackHeight = 24
             jalr $t0 # printStr # Call at 193.5; stackHeight = 24
            # EXIT NODE # Call at 193.5; stackHeight = 16
          # EXIT NODE # CallStatement at 193.5; stackHeight = 16
        # EXIT NODE # Block at 192.44; stackHeight = 16
        # ENTER NODE # Assign at 192.39; stackHeight = 16
          # ENTER NODE # Plus at 192.40; stackHeight = 16
            # ENTER NODE # IdentifierExp at 192.39; stackHeight = 16
             lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 192.39; stackHeight = 16
             subu $sp,$sp,8 # IdentifierExp at 192.39; stackHeight = 16
             sw $s5,4($sp)#**"GC tag" # IdentifierExp at 192.39; stackHeight = 24
             sw $t0,($sp)#**"" # IdentifierExp at 192.39; stackHeight = 24
            # EXIT NODE # IdentifierExp at 192.39; stackHeight = 24
            # ENTER NODE # IntegerLiteral at 192.40; stackHeight = 24
             subu $sp,$sp,8 # IntegerLiteral at 192.40; stackHeight = 24
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 192.40; stackHeight = 32
             li $t0,1 # IntegerLiteral at 192.40; stackHeight = 32
             sw $t0,($sp) # IntegerLiteral at 192.40; stackHeight = 32
            # EXIT NODE # IntegerLiteral at 192.40; stackHeight = 32
           lw $t0,($sp) # Plus at 192.40; stackHeight = 32
           lw $t1,8($sp) # Plus at 192.40; stackHeight = 32
           addu $t0,$t0,$t1 # Plus at 192.40; stackHeight = 32
           addu $sp,$sp,8 # Plus at 192.40; stackHeight = 32
           sw $t0,($sp)#**"" # Plus at 192.40; stackHeight = 32
          # EXIT NODE # Plus at 192.40; stackHeight = 24
         lw $t0,($sp) # Assign at 192.39; stackHeight = 24
         sw $t0,8($sp) # Assign at 192.39; stackHeight = 24
         addu $sp,$sp,8 # Assign at 192.39; stackHeight = 24
        # EXIT NODE # Assign at 192.39; stackHeight = 16
      # EXIT NODE # Block at 192.4; stackHeight = 16
    while_enter_1009: # While at 192.4; stackHeight = 16
      # ENTER NODE # LessThan at 192.22; stackHeight = 16
        # ENTER NODE # IdentifierExp at 192.20; stackHeight = 16
         lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 192.20; stackHeight = 16
         subu $sp,$sp,8 # IdentifierExp at 192.20; stackHeight = 16
         sw $s5,4($sp)#**"GC tag" # IdentifierExp at 192.20; stackHeight = 24
         sw $t0,($sp)#**"" # IdentifierExp at 192.20; stackHeight = 24
        # EXIT NODE # IdentifierExp at 192.20; stackHeight = 24
        # ENTER NODE # ArrayLength at 192.30; stackHeight = 24
          # ENTER NODE # IdentifierExp at 192.24; stackHeight = 24
           lw $t0,4($s2) # inst-var # IdentifierExp at 192.24; stackHeight = 24
           subu $sp,$sp,4 # IdentifierExp at 192.24; stackHeight = 24
           sw $t0,($sp)#**"" # IdentifierExp at 192.24; stackHeight = 28
          # EXIT NODE # IdentifierExp at 192.24; stackHeight = 28
         lw $t0,($sp) # ArrayLength at 192.30; stackHeight = 28
         beq $t0,$zero,nullPtrException # ArrayLength at 192.30; stackHeight = 28
         lw $t0,-4($t0) # ArrayLength at 192.30; stackHeight = 28
         sw $s5,($sp)#**"GC tag" # ArrayLength at 192.30; stackHeight = 28
         subu $sp,4 # ArrayLength at 192.30; stackHeight = 28
         sw $t0,($sp)#**"" # ArrayLength at 192.30; stackHeight = 28
        # EXIT NODE # ArrayLength at 192.30; stackHeight = 32
       lw $t0,($sp) # LessThan at 192.22; stackHeight = 32
       lw $t1,8($sp) # LessThan at 192.22; stackHeight = 32
       slt $t0,$t1,$t0 # LessThan at 192.22; stackHeight = 32
       addu $sp,$sp,12 # LessThan at 192.22; stackHeight = 32
       sw $t0,($sp)#**"" # LessThan at 192.22; stackHeight = 20
      # EXIT NODE # LessThan at 192.22; stackHeight = 20
     lw $t0,($sp) # While at 192.4; stackHeight = 20
     addu $sp,$sp,4 # While at 192.4; stackHeight = 20
    bne $t0,$zero,while_top_1009 # While at 192.4; stackHeight = 16
    break_target_1009: # While at 192.4; stackHeight = 16
    # EXIT NODE # While at 192.4; stackHeight = 16
   addu $sp,8 # Block at 192.4; stackHeight = 16
  # EXIT NODE # Block at 192.4; stackHeight = 8
# EXIT NODE # Block at 188.43; stackHeight = 8
  # ENTER NODE # Assign at 188.38; stackHeight = 8
    # ENTER NODE # Plus at 188.39; stackHeight = 8
      # ENTER NODE # IdentifierExp at 188.38; stackHeight = 8
       lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 188.38; stackHeight = 8
       subu $sp,$sp,8 # IdentifierExp at 188.38; stackHeight = 8
       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 188.38; stackHeight = 16
       sw $t0,($sp)#**"" # IdentifierExp at 188.38; stackHeight = 16
      # EXIT NODE # IdentifierExp at 188.38; stackHeight = 16
      # ENTER NODE # IntegerLiteral at 188.39; stackHeight = 16
       subu $sp,$sp,8 # IntegerLiteral at 188.39; stackHeight = 16
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 188.39; stackHeight = 24
       li $t0,1 # IntegerLiteral at 188.39; stackHeight = 24
       sw $t0,($sp) # IntegerLiteral at 188.39; stackHeight = 24
      # EXIT NODE # IntegerLiteral at 188.39; stackHeight = 24
     lw $t0,($sp) # Plus at 188.39; stackHeight = 24
     lw $t1,8($sp) # Plus at 188.39; stackHeight = 24
     addu $t0,$t0,$t1 # Plus at 188.39; stackHeight = 24
     addu $sp,$sp,8 # Plus at 188.39; stackHeight = 24
     sw $t0,($sp)#**"" # Plus at 188.39; stackHeight = 24
    # EXIT NODE # Plus at 188.39; stackHeight = 16
   lw $t0,($sp) # Assign at 188.38; stackHeight = 16
   sw $t0,8($sp) # Assign at 188.38; stackHeight = 16
   addu $sp,$sp,8 # Assign at 188.38; stackHeight = 16
  # EXIT NODE # Assign at 188.38; stackHeight = 8
# EXIT NODE # Block at 188.3; stackHeight = 8
while_enter_1013: # While at 188.3; stackHeight = 8
  # ENTER NODE # LessThan at 188.21; stackHeight = 8
    # ENTER NODE # IdentifierExp at 188.19; stackHeight = 8
     lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 188.19; stackHeight = 8
     subu $sp,$sp,8 # IdentifierExp at 188.19; stackHeight = 8
     sw $s5,4($sp)#**"GC tag" # IdentifierExp at 188.19; stackHeight = 16
     sw $t0,($sp)#**"" # IdentifierExp at 188.19; stackHeight = 16
    # EXIT NODE # IdentifierExp at 188.19; stackHeight = 16
    # ENTER NODE # ArrayLength at 188.29; stackHeight = 16
      # ENTER NODE # IdentifierExp at 188.23; stackHeight = 16
       lw $t0,4($s2) # inst-var # IdentifierExp at 188.23; stackHeight = 16
       subu $sp,$sp,4 # IdentifierExp at 188.23; stackHeight = 16
       sw $t0,($sp)#**"" # IdentifierExp at 188.23; stackHeight = 20
      # EXIT NODE # IdentifierExp at 188.23; stackHeight = 20
     lw $t0,($sp) # ArrayLength at 188.29; stackHeight = 20
     beq $t0,$zero,nullPtrException # ArrayLength at 188.29; stackHeight = 20
     lw $t0,-4($t0) # ArrayLength at 188.29; stackHeight = 20
     sw $s5,($sp)#**"GC tag" # ArrayLength at 188.29; stackHeight = 20
     subu $sp,4 # ArrayLength at 188.29; stackHeight = 20
     sw $t0,($sp)#**"" # ArrayLength at 188.29; stackHeight = 20
    # EXIT NODE # ArrayLength at 188.29; stackHeight = 24
   lw $t0,($sp) # LessThan at 188.21; stackHeight = 24
   lw $t1,8($sp) # LessThan at 188.21; stackHeight = 24
   slt $t0,$t1,$t0 # LessThan at 188.21; stackHeight = 24
   addu $sp,$sp,12 # LessThan at 188.21; stackHeight = 24
   sw $t0,($sp)#**"" # LessThan at 188.21; stackHeight = 12
  # EXIT NODE # LessThan at 188.21; stackHeight = 12
 lw $t0,($sp) # While at 188.3; stackHeight = 12
 addu $sp,$sp,4 # While at 188.3; stackHeight = 12
bne $t0,$zero,while_top_1013 # While at 188.3; stackHeight = 8
break_target_1013: # While at 188.3; stackHeight = 8
# EXIT NODE # While at 188.3; stackHeight = 8
 addu $sp,8 # Block at 188.3; stackHeight = 8
# EXIT NODE # Block at 188.3; stackHeight = 0
 # stack height is 0 # MethodDeclVoid at 179.14; stackHeight = 0
 lw $ra,4($sp) # MethodDeclVoid at 179.14; stackHeight = 0
 lw $s2,0($sp) # MethodDeclVoid at 179.14; stackHeight = 0
 addu $sp,$sp,8 # MethodDeclVoid at 179.14; stackHeight = 0
jr $ra # MethodDeclVoid at 179.14; stackHeight = -8
# EXIT NODE # MethodDeclVoid at 179.14; stackHeight = -8
  # ENTER NODE # MethodDeclNonVoid at 199.16; stackHeight = -8
  .globl fcn_1053_helpDivRem # MethodDeclNonVoid at 199.16; stackHeight = -8
  fcn_1053_helpDivRem: # MethodDeclNonVoid at 199.16; stackHeight = -8
   subu $sp,$sp,4 # MethodDeclNonVoid at 199.16; stackHeight = -8
   sw $s2,($sp) #**"old this-ptr" # MethodDeclNonVoid at 199.16; stackHeight = -8
   lw $s2,12($sp) #**"this-ptr" # MethodDeclNonVoid at 199.16; stackHeight = -8
   sw $ra,12($sp) #**"RA:helpDivRem" # MethodDeclNonVoid at 199.16; stackHeight = -8
    # ENTER NODE # LocalVarDecl at 200.10; stackHeight = 0
      # ENTER NODE # StringLiteral at 200.19; stackHeight = 0
       subu $sp,$sp,4 # StringLiteral at 200.19; stackHeight = 0
       la $t0,strLit_843 # StringLiteral at 200.19; stackHeight = 4
       sw $t0,($sp)#**"strLit:**DIV-BY=ZERO**" # StringLiteral at 200.19; stackHeight = 4
      # EXIT NODE # StringLiteral at 200.19; stackHeight = 4
    # EXIT NODE # LocalVarDecl at 200.10; stackHeight = 4
    # ENTER NODE # If at 201.3; stackHeight = 4
      # ENTER NODE # Not at 201.7; stackHeight = 4
        # ENTER NODE # Call at 201.10; stackHeight = 4
          # ENTER NODE # IdentifierExp at 201.8; stackHeight = 4
           lw $t0,8($sp) # local: stackHt=4,var-offset=4 # IdentifierExp at 201.8; stackHeight = 4
           subu $sp,$sp,4 # IdentifierExp at 201.8; stackHeight = 4
           sw $t0,($sp)#**"" # IdentifierExp at 201.8; stackHeight = 8
          # EXIT NODE # IdentifierExp at 201.8; stackHeight = 8
          # ENTER NODE # IdentifierExp at 201.17; stackHeight = 8
           lw $t0,8($s2) # inst-var # IdentifierExp at 201.17; stackHeight = 8
           subu $sp,$sp,4 # IdentifierExp at 201.17; stackHeight = 8
           sw $t0,($sp)#**"" # IdentifierExp at 201.17; stackHeight = 12
          # EXIT NODE # IdentifierExp at 201.17; stackHeight = 12
         lw $t0,4($sp) # Call at 201.10; stackHeight = 12
         beq $t0,$zero,nullPtrException # Call at 201.10; stackHeight = 12
         lw $t0,-12($t0) # Call at 201.10; stackHeight = 12
         lw $t0,4($t0) # Call at 201.10; stackHeight = 12
         jalr $t0 # equals # Call at 201.10; stackHeight = 12
        # EXIT NODE # Call at 201.10; stackHeight = 8
       lw $t0,($sp) # Not at 201.7; stackHeight = 8
       xor $t0,$t0,1 # Not at 201.7; stackHeight = 8
       sw $t0,($sp)#**"" # Not at 201.7; stackHeight = 8
      # EXIT NODE # Not at 201.7; stackHeight = 8
     lw $t0,($sp) # If at 201.3; stackHeight = 8
     addu $sp,$sp,4 # If at 201.3; stackHeight = 8
     beq $t0,$zero,if_else_1051 # If at 201.3; stackHeight = 4
      # ENTER NODE # Block at 201.24; stackHeight = 4
        # ENTER NODE # LocalVarDecl at 202.13; stackHeight = 4
          # ENTER NODE # Call at 202.22; stackHeight = 4
            # ENTER NODE # IdentifierExp at 202.20; stackHeight = 4
             lw $t0,12($sp) # local: stackHt=4,var-offset=8 # IdentifierExp at 202.20; stackHeight = 4
             subu $sp,$sp,4 # IdentifierExp at 202.20; stackHeight = 4
             sw $t0,($sp)#**"" # IdentifierExp at 202.20; stackHeight = 8
            # EXIT NODE # IdentifierExp at 202.20; stackHeight = 8
            # ENTER NODE # IdentifierExp at 202.41; stackHeight = 8
             lw $t0,12($sp) # local: stackHt=8,var-offset=4 # IdentifierExp at 202.41; stackHeight = 8
             subu $sp,$sp,4 # IdentifierExp at 202.41; stackHeight = 8
             sw $t0,($sp)#**"" # IdentifierExp at 202.41; stackHeight = 12
            # EXIT NODE # IdentifierExp at 202.41; stackHeight = 12
           lw $t0,4($sp) # Call at 202.22; stackHeight = 12
           beq $t0,$zero,nullPtrException # Call at 202.22; stackHeight = 12
           lw $t0,-12($t0) # Call at 202.22; stackHeight = 12
           lw $t0,76($t0) # Call at 202.22; stackHeight = 12
           jalr $t0 # divideAndRemainder # Call at 202.22; stackHeight = 12
          # EXIT NODE # Call at 202.22; stackHeight = 8
        # EXIT NODE # LocalVarDecl at 202.13; stackHeight = 8
        # ENTER NODE # Assign at 203.11; stackHeight = 8
          # ENTER NODE # Call at 203.44; stackHeight = 8
            # ENTER NODE # Call at 203.32; stackHeight = 8
              # ENTER NODE # Call at 203.21; stackHeight = 8
                # ENTER NODE # IdentifierExp at 203.13; stackHeight = 8
                 lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 203.13; stackHeight = 8
                 subu $sp,$sp,4 # IdentifierExp at 203.13; stackHeight = 8
                 sw $t0,($sp)#**"" # IdentifierExp at 203.13; stackHeight = 12
                # EXIT NODE # IdentifierExp at 203.13; stackHeight = 12
                # ENTER NODE # IntegerLiteral at 203.18; stackHeight = 12
                 subu $sp,$sp,8 # IntegerLiteral at 203.18; stackHeight = 12
                 sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 203.18; stackHeight = 20
                 li $t0,0 # IntegerLiteral at 203.18; stackHeight = 20
                 sw $t0,($sp) # IntegerLiteral at 203.18; stackHeight = 20
                # EXIT NODE # IntegerLiteral at 203.18; stackHeight = 20
               lw $t0,8($sp) # ArrayLookup at 203.17; stackHeight = 20
               beq $t0,$zero,nullPtrException # ArrayLookup at 203.17; stackHeight = 20
               lw $t1,-4($t0) # ArrayLookup at 203.17; stackHeight = 20
               lw $t2,($sp) # ArrayLookup at 203.17; stackHeight = 20
               bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 203.17; stackHeight = 20
               sll $t2,$t2,2 # ArrayLookup at 203.17; stackHeight = 20
               addu $t2,$t2,$t0 # ArrayLookup at 203.17; stackHeight = 20
               lw $t0,($t2) # ArrayLookup at 203.17; stackHeight = 20
               sw $t0,8($sp)#**"" # ArrayLookup at 203.17; stackHeight = 20
               addu $sp,$sp,8 # ArrayLookup at 203.17; stackHeight = 20
              # EXIT NODE # ArrayLookup at 203.17; stackHeight = 12
             lw $t0,0($sp) # Call at 203.21; stackHeight = 12
             beq $t0,$zero,nullPtrException # Call at 203.21; stackHeight = 12
             lw $t0,-12($t0) # Call at 203.21; stackHeight = 12
             lw $t0,8($t0) # Call at 203.21; stackHeight = 12
             jalr $t0 # toString # Call at 203.21; stackHeight = 12
            # EXIT NODE # Call at 203.21; stackHeight = 12
            # ENTER NODE # StringLiteral at 203.39; stackHeight = 12
             subu $sp,$sp,4 # StringLiteral at 203.39; stackHeight = 12
             la $t0,strLit_1041 # StringLiteral at 203.39; stackHeight = 16
             sw $t0,($sp)#**"strLit:," # StringLiteral at 203.39; stackHeight = 16
            # EXIT NODE # StringLiteral at 203.39; stackHeight = 16
           lw $t0,4($sp) # Call at 203.32; stackHeight = 16
           beq $t0,$zero,nullPtrException # Call at 203.32; stackHeight = 16
           lw $t0,-12($t0) # Call at 203.32; stackHeight = 16
           lw $t0,12($t0) # Call at 203.32; stackHeight = 16
           jalr $t0 # concat # Call at 203.32; stackHeight = 16
          # EXIT NODE # Call at 203.32; stackHeight = 12
          # ENTER NODE # Call at 203.59; stackHeight = 12
            # ENTER NODE # IdentifierExp at 203.51; stackHeight = 12
             lw $t0,4($sp) # local: stackHt=12,var-offset=-8 # IdentifierExp at 203.51; stackHeight = 12
             subu $sp,$sp,4 # IdentifierExp at 203.51; stackHeight = 12
             sw $t0,($sp)#**"" # IdentifierExp at 203.51; stackHeight = 16
            # EXIT NODE # IdentifierExp at 203.51; stackHeight = 16
            # ENTER NODE # IntegerLiteral at 203.56; stackHeight = 16
             subu $sp,$sp,8 # IntegerLiteral at 203.56; stackHeight = 16
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 203.56; stackHeight = 24
             li $t0,1 # IntegerLiteral at 203.56; stackHeight = 24
             sw $t0,($sp) # IntegerLiteral at 203.56; stackHeight = 24
            # EXIT NODE # IntegerLiteral at 203.56; stackHeight = 24
           lw $t0,8($sp) # ArrayLookup at 203.55; stackHeight = 24
           beq $t0,$zero,nullPtrException # ArrayLookup at 203.55; stackHeight = 24
           lw $t1,-4($t0) # ArrayLookup at 203.55; stackHeight = 24
           lw $t2,($sp) # ArrayLookup at 203.55; stackHeight = 24
           bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 203.55; stackHeight = 24
           sll $t2,$t2,2 # ArrayLookup at 203.55; stackHeight = 24
           addu $t2,$t2,$t0 # ArrayLookup at 203.55; stackHeight = 24
           lw $t0,($t2) # ArrayLookup at 203.55; stackHeight = 24
           sw $t0,8($sp)#**"" # ArrayLookup at 203.55; stackHeight = 24
           addu $sp,$sp,8 # ArrayLookup at 203.55; stackHeight = 24
          # EXIT NODE # ArrayLookup at 203.55; stackHeight = 16
         lw $t0,0($sp) # Call at 203.59; stackHeight = 16
         beq $t0,$zero,nullPtrException # Call at 203.59; stackHeight = 16
         lw $t0,-12($t0) # Call at 203.59; stackHeight = 16
         lw $t0,8($t0) # Call at 203.59; stackHeight = 16
         jalr $t0 # toString # Call at 203.59; stackHeight = 16
        # EXIT NODE # Call at 203.59; stackHeight = 16
       lw $t0,4($sp) # Call at 203.44; stackHeight = 16
       beq $t0,$zero,nullPtrException # Call at 203.44; stackHeight = 16
       lw $t0,-12($t0) # Call at 203.44; stackHeight = 16
       lw $t0,12($t0) # Call at 203.44; stackHeight = 16
       jalr $t0 # concat # Call at 203.44; stackHeight = 16
      # EXIT NODE # Call at 203.44; stackHeight = 12
     lw $t0,($sp) # Assign at 203.11; stackHeight = 12
     sw $t0,8($sp) # Assign at 203.11; stackHeight = 12
     addu $sp,$sp,4 # Assign at 203.11; stackHeight = 12
    # EXIT NODE # Assign at 203.11; stackHeight = 8
   addu $sp,4 # Block at 201.24; stackHeight = 8
  # EXIT NODE # Block at 201.24; stackHeight = 4
j if_done_1051 # If at 201.3; stackHeight = 4
if_else_1051: # If at 201.3; stackHeight = 4
  # ENTER NODE # Block at 205.3; stackHeight = 4
  # EXIT NODE # Block at 205.3; stackHeight = 4
if_done_1051: # If at 201.3; stackHeight = 4
# EXIT NODE # If at 201.3; stackHeight = 4
  # ENTER NODE # IdentifierExp at 205.10; stackHeight = 4
   lw $t0,0($sp) # local: stackHt=4,var-offset=-4 # IdentifierExp at 205.10; stackHeight = 4
   subu $sp,$sp,4 # IdentifierExp at 205.10; stackHeight = 4
   sw $t0,($sp)#**"" # IdentifierExp at 205.10; stackHeight = 8
  # EXIT NODE # IdentifierExp at 205.10; stackHeight = 8
 lw $ra,20($sp) # MethodDeclNonVoid at 199.16; stackHeight = 8
 lw $s2,8($sp) # MethodDeclNonVoid at 199.16; stackHeight = 8
 lw $t0,($sp) # MethodDeclNonVoid at 199.16; stackHeight = 8
 sw $t0,20($sp)#**"(return-val)" # MethodDeclNonVoid at 199.16; stackHeight = 8
 addu $sp,$sp,20 # MethodDeclNonVoid at 199.16; stackHeight = 8
jr $ra # MethodDeclNonVoid at 199.16; stackHeight = -12
# EXIT NODE # MethodDeclNonVoid at 199.16; stackHeight = -12
  # ENTER NODE # MethodDeclVoid at 208.14; stackHeight = -12
  .globl fcn_1208_divideAndRemainder # MethodDeclVoid at 208.14; stackHeight = -12
  fcn_1208_divideAndRemainder: # MethodDeclVoid at 208.14; stackHeight = -12
   subu $sp,$sp,4 # MethodDeclVoid at 208.14; stackHeight = -12
   sw $s2,($sp) #**"old this-ptr" # MethodDeclVoid at 208.14; stackHeight = -12
   lw $s2,4($sp) #**"this-ptr" # MethodDeclVoid at 208.14; stackHeight = -12
   sw $ra,4($sp) #**"RA:divideAndRemainder" # MethodDeclVoid at 208.14; stackHeight = -12
    # ENTER NODE # Block at 209.3; stackHeight = 0
      # ENTER NODE # LocalVarDecl at 209.12; stackHeight = 0
        # ENTER NODE # IntegerLiteral at 209.16; stackHeight = 0
         subu $sp,$sp,8 # IntegerLiteral at 209.16; stackHeight = 0
         sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 209.16; stackHeight = 8
         li $t0,0 # IntegerLiteral at 209.16; stackHeight = 8
         sw $t0,($sp) # IntegerLiteral at 209.16; stackHeight = 8
        # EXIT NODE # IntegerLiteral at 209.16; stackHeight = 8
      # EXIT NODE # LocalVarDecl at 209.12; stackHeight = 8
      # ENTER NODE # While at 209.3; stackHeight = 8
      j while_enter_1129 # While at 209.3; stackHeight = 8
      while_top_1129: # While at 209.3; stackHeight = 8
        # ENTER NODE # Block at 209.3; stackHeight = 8
          # ENTER NODE # Block at 209.41; stackHeight = 8
            # ENTER NODE # Block at 210.4; stackHeight = 8
              # ENTER NODE # LocalVarDecl at 210.13; stackHeight = 8
                # ENTER NODE # IntegerLiteral at 210.17; stackHeight = 8
                 subu $sp,$sp,8 # IntegerLiteral at 210.17; stackHeight = 8
                 sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 210.17; stackHeight = 16
                 li $t0,0 # IntegerLiteral at 210.17; stackHeight = 16
                 sw $t0,($sp) # IntegerLiteral at 210.17; stackHeight = 16
                # EXIT NODE # IntegerLiteral at 210.17; stackHeight = 16
              # EXIT NODE # LocalVarDecl at 210.13; stackHeight = 16
              # ENTER NODE # While at 210.4; stackHeight = 16
              j while_enter_1095 # While at 210.4; stackHeight = 16
              while_top_1095: # While at 210.4; stackHeight = 16
                # ENTER NODE # Block at 210.4; stackHeight = 16
                  # ENTER NODE # Block at 210.42; stackHeight = 16
                    # ENTER NODE # CallStatement at 211.5; stackHeight = 16
                      # ENTER NODE # Call at 211.5; stackHeight = 16
                        # ENTER NODE # This at 211.5; stackHeight = 16
                         subu $sp,$sp,4 # This at 211.5; stackHeight = 16
                         sw $s2,($sp)#**"" # This at 211.5; stackHeight = 20
                        # EXIT NODE # This at 211.5; stackHeight = 20
                        # ENTER NODE # Call at 211.43; stackHeight = 20
                          # ENTER NODE # Call at 211.14; stackHeight = 20
                            # ENTER NODE # This at 211.14; stackHeight = 20
                             subu $sp,$sp,4 # This at 211.14; stackHeight = 20
                             sw $s2,($sp)#**"" # This at 211.14; stackHeight = 24
                            # EXIT NODE # This at 211.14; stackHeight = 24
                            # ENTER NODE # IdentifierExp at 211.25; stackHeight = 24
                             lw $t0,0($s2) # inst-var # IdentifierExp at 211.25; stackHeight = 24
                             subu $sp,$sp,4 # IdentifierExp at 211.25; stackHeight = 24
                             sw $t0,($sp)#**"" # IdentifierExp at 211.25; stackHeight = 28
                            # EXIT NODE # IdentifierExp at 211.25; stackHeight = 28
                            # ENTER NODE # IdentifierExp at 211.30; stackHeight = 28
                             lw $t0,20($sp) # local: stackHt=28,var-offset=-8 # IdentifierExp at 211.30; stackHeight = 28
                             subu $sp,$sp,8 # IdentifierExp at 211.30; stackHeight = 28
                             sw $s5,4($sp)#**"GC tag" # IdentifierExp at 211.30; stackHeight = 36
                             sw $t0,($sp)#**"" # IdentifierExp at 211.30; stackHeight = 36
                            # EXIT NODE # IdentifierExp at 211.30; stackHeight = 36
                           lw $t0,8($sp) # ArrayLookup at 211.29; stackHeight = 36
                           beq $t0,$zero,nullPtrException # ArrayLookup at 211.29; stackHeight = 36
                           lw $t1,-4($t0) # ArrayLookup at 211.29; stackHeight = 36
                           lw $t2,($sp) # ArrayLookup at 211.29; stackHeight = 36
                           bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 211.29; stackHeight = 36
                           sll $t2,$t2,2 # ArrayLookup at 211.29; stackHeight = 36
                           addu $t2,$t2,$t0 # ArrayLookup at 211.29; stackHeight = 36
                           lw $t0,($t2) # ArrayLookup at 211.29; stackHeight = 36
                           sw $t0,8($sp)#**"" # ArrayLookup at 211.29; stackHeight = 36
                           addu $sp,$sp,8 # ArrayLookup at 211.29; stackHeight = 36
                          # EXIT NODE # ArrayLookup at 211.29; stackHeight = 28
                          # ENTER NODE # IdentifierExp at 211.34; stackHeight = 28
                           lw $t0,0($s2) # inst-var # IdentifierExp at 211.34; stackHeight = 28
                           subu $sp,$sp,4 # IdentifierExp at 211.34; stackHeight = 28
                           sw $t0,($sp)#**"" # IdentifierExp at 211.34; stackHeight = 32
                          # EXIT NODE # IdentifierExp at 211.34; stackHeight = 32
                          # ENTER NODE # IdentifierExp at 211.39; stackHeight = 32
                           lw $t0,16($sp) # local: stackHt=32,var-offset=-16 # IdentifierExp at 211.39; stackHeight = 32
                           subu $sp,$sp,8 # IdentifierExp at 211.39; stackHeight = 32
                           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 211.39; stackHeight = 40
                           sw $t0,($sp)#**"" # IdentifierExp at 211.39; stackHeight = 40
                          # EXIT NODE # IdentifierExp at 211.39; stackHeight = 40
                         lw $t0,8($sp) # ArrayLookup at 211.38; stackHeight = 40
                         beq $t0,$zero,nullPtrException # ArrayLookup at 211.38; stackHeight = 40
                         lw $t1,-4($t0) # ArrayLookup at 211.38; stackHeight = 40
                         lw $t2,($sp) # ArrayLookup at 211.38; stackHeight = 40
                         bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 211.38; stackHeight = 40
                         sll $t2,$t2,2 # ArrayLookup at 211.38; stackHeight = 40
                         addu $t2,$t2,$t0 # ArrayLookup at 211.38; stackHeight = 40
                         lw $t0,($t2) # ArrayLookup at 211.38; stackHeight = 40
                         sw $t0,8($sp)#**"" # ArrayLookup at 211.38; stackHeight = 40
                         addu $sp,$sp,8 # ArrayLookup at 211.38; stackHeight = 40
                        # EXIT NODE # ArrayLookup at 211.38; stackHeight = 32
                       lw $t0,8($sp) # Call at 211.14; stackHeight = 32
                       beq $t0,$zero,nullPtrException # Call at 211.14; stackHeight = 32
                       lw $t0,-12($t0) # Call at 211.14; stackHeight = 32
                       lw $t0,80($t0) # Call at 211.14; stackHeight = 32
                       jalr $t0 # helpDivRem # Call at 211.14; stackHeight = 32
                      # EXIT NODE # Call at 211.14; stackHeight = 24
                      # ENTER NODE # StringLiteral at 211.50; stackHeight = 24
                       subu $sp,$sp,4 # StringLiteral at 211.50; stackHeight = 24
                       la $t0,strLit_486 # StringLiteral at 211.50; stackHeight = 28
                       sw $t0,($sp)#**"strLit:\?" # StringLiteral at 211.50; stackHeight = 28
                      # EXIT NODE # StringLiteral at 211.50; stackHeight = 28
                     lw $t0,4($sp) # Call at 211.43; stackHeight = 28
                     beq $t0,$zero,nullPtrException # Call at 211.43; stackHeight = 28
                     lw $t0,-12($t0) # Call at 211.43; stackHeight = 28
                     lw $t0,12($t0) # Call at 211.43; stackHeight = 28
                     jalr $t0 # concat # Call at 211.43; stackHeight = 28
                    # EXIT NODE # Call at 211.43; stackHeight = 24
                   lw $t0,4($sp) # Call at 211.5; stackHeight = 24
                   beq $t0,$zero,nullPtrException # Call at 211.5; stackHeight = 24
                   lw $t0,-12($t0) # Call at 211.5; stackHeight = 24
                   lw $t0,24($t0) # Call at 211.5; stackHeight = 24
                   jalr $t0 # printStr # Call at 211.5; stackHeight = 24
                  # EXIT NODE # Call at 211.5; stackHeight = 16
                # EXIT NODE # CallStatement at 211.5; stackHeight = 16
              # EXIT NODE # Block at 210.42; stackHeight = 16
              # ENTER NODE # Assign at 210.37; stackHeight = 16
                # ENTER NODE # Plus at 210.38; stackHeight = 16
                  # ENTER NODE # IdentifierExp at 210.37; stackHeight = 16
                   lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 210.37; stackHeight = 16
                   subu $sp,$sp,8 # IdentifierExp at 210.37; stackHeight = 16
                   sw $s5,4($sp)#**"GC tag" # IdentifierExp at 210.37; stackHeight = 24
                   sw $t0,($sp)#**"" # IdentifierExp at 210.37; stackHeight = 24
                  # EXIT NODE # IdentifierExp at 210.37; stackHeight = 24
                  # ENTER NODE # IntegerLiteral at 210.38; stackHeight = 24
                   subu $sp,$sp,8 # IntegerLiteral at 210.38; stackHeight = 24
                   sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 210.38; stackHeight = 32
                   li $t0,1 # IntegerLiteral at 210.38; stackHeight = 32
                   sw $t0,($sp) # IntegerLiteral at 210.38; stackHeight = 32
                  # EXIT NODE # IntegerLiteral at 210.38; stackHeight = 32
                 lw $t0,($sp) # Plus at 210.38; stackHeight = 32
                 lw $t1,8($sp) # Plus at 210.38; stackHeight = 32
                 addu $t0,$t0,$t1 # Plus at 210.38; stackHeight = 32
                 addu $sp,$sp,8 # Plus at 210.38; stackHeight = 32
                 sw $t0,($sp)#**"" # Plus at 210.38; stackHeight = 32
                # EXIT NODE # Plus at 210.38; stackHeight = 24
               lw $t0,($sp) # Assign at 210.37; stackHeight = 24
               sw $t0,8($sp) # Assign at 210.37; stackHeight = 24
               addu $sp,$sp,8 # Assign at 210.37; stackHeight = 24
              # EXIT NODE # Assign at 210.37; stackHeight = 16
            # EXIT NODE # Block at 210.4; stackHeight = 16
          while_enter_1095: # While at 210.4; stackHeight = 16
            # ENTER NODE # LessThan at 210.22; stackHeight = 16
              # ENTER NODE # IdentifierExp at 210.20; stackHeight = 16
               lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 210.20; stackHeight = 16
               subu $sp,$sp,8 # IdentifierExp at 210.20; stackHeight = 16
               sw $s5,4($sp)#**"GC tag" # IdentifierExp at 210.20; stackHeight = 24
               sw $t0,($sp)#**"" # IdentifierExp at 210.20; stackHeight = 24
              # EXIT NODE # IdentifierExp at 210.20; stackHeight = 24
              # ENTER NODE # ArrayLength at 210.28; stackHeight = 24
                # ENTER NODE # IdentifierExp at 210.24; stackHeight = 24
                 lw $t0,0($s2) # inst-var # IdentifierExp at 210.24; stackHeight = 24
                 subu $sp,$sp,4 # IdentifierExp at 210.24; stackHeight = 24
                 sw $t0,($sp)#**"" # IdentifierExp at 210.24; stackHeight = 28
                # EXIT NODE # IdentifierExp at 210.24; stackHeight = 28
               lw $t0,($sp) # ArrayLength at 210.28; stackHeight = 28
               beq $t0,$zero,nullPtrException # ArrayLength at 210.28; stackHeight = 28
               lw $t0,-4($t0) # ArrayLength at 210.28; stackHeight = 28
               sw $s5,($sp)#**"GC tag" # ArrayLength at 210.28; stackHeight = 28
               subu $sp,4 # ArrayLength at 210.28; stackHeight = 28
               sw $t0,($sp)#**"" # ArrayLength at 210.28; stackHeight = 28
              # EXIT NODE # ArrayLength at 210.28; stackHeight = 32
             lw $t0,($sp) # LessThan at 210.22; stackHeight = 32
             lw $t1,8($sp) # LessThan at 210.22; stackHeight = 32
             slt $t0,$t1,$t0 # LessThan at 210.22; stackHeight = 32
             addu $sp,$sp,12 # LessThan at 210.22; stackHeight = 32
             sw $t0,($sp)#**"" # LessThan at 210.22; stackHeight = 20
            # EXIT NODE # LessThan at 210.22; stackHeight = 20
           lw $t0,($sp) # While at 210.4; stackHeight = 20
           addu $sp,$sp,4 # While at 210.4; stackHeight = 20
          bne $t0,$zero,while_top_1095 # While at 210.4; stackHeight = 16
          break_target_1095: # While at 210.4; stackHeight = 16
          # EXIT NODE # While at 210.4; stackHeight = 16
         addu $sp,8 # Block at 210.4; stackHeight = 16
        # EXIT NODE # Block at 210.4; stackHeight = 8
        # ENTER NODE # Block at 213.4; stackHeight = 8
          # ENTER NODE # LocalVarDecl at 213.13; stackHeight = 8
            # ENTER NODE # IntegerLiteral at 213.17; stackHeight = 8
             subu $sp,$sp,8 # IntegerLiteral at 213.17; stackHeight = 8
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 213.17; stackHeight = 16
             li $t0,0 # IntegerLiteral at 213.17; stackHeight = 16
             sw $t0,($sp) # IntegerLiteral at 213.17; stackHeight = 16
            # EXIT NODE # IntegerLiteral at 213.17; stackHeight = 16
          # EXIT NODE # LocalVarDecl at 213.13; stackHeight = 16
          # ENTER NODE # While at 213.4; stackHeight = 16
          j while_enter_1125 # While at 213.4; stackHeight = 16
          while_top_1125: # While at 213.4; stackHeight = 16
            # ENTER NODE # Block at 213.4; stackHeight = 16
              # ENTER NODE # Block at 213.44; stackHeight = 16
                # ENTER NODE # CallStatement at 214.5; stackHeight = 16
                  # ENTER NODE # Call at 214.5; stackHeight = 16
                    # ENTER NODE # This at 214.5; stackHeight = 16
                     subu $sp,$sp,4 # This at 214.5; stackHeight = 16
                     sw $s2,($sp)#**"" # This at 214.5; stackHeight = 20
                    # EXIT NODE # This at 214.5; stackHeight = 20
                    # ENTER NODE # Call at 214.45; stackHeight = 20
                      # ENTER NODE # Call at 214.14; stackHeight = 20
                        # ENTER NODE # This at 214.14; stackHeight = 20
                         subu $sp,$sp,4 # This at 214.14; stackHeight = 20
                         sw $s2,($sp)#**"" # This at 214.14; stackHeight = 24
                        # EXIT NODE # This at 214.14; stackHeight = 24
                        # ENTER NODE # IdentifierExp at 214.25; stackHeight = 24
                         lw $t0,0($s2) # inst-var # IdentifierExp at 214.25; stackHeight = 24
                         subu $sp,$sp,4 # IdentifierExp at 214.25; stackHeight = 24
                         sw $t0,($sp)#**"" # IdentifierExp at 214.25; stackHeight = 28
                        # EXIT NODE # IdentifierExp at 214.25; stackHeight = 28
                        # ENTER NODE # IdentifierExp at 214.30; stackHeight = 28
                         lw $t0,20($sp) # local: stackHt=28,var-offset=-8 # IdentifierExp at 214.30; stackHeight = 28
                         subu $sp,$sp,8 # IdentifierExp at 214.30; stackHeight = 28
                         sw $s5,4($sp)#**"GC tag" # IdentifierExp at 214.30; stackHeight = 36
                         sw $t0,($sp)#**"" # IdentifierExp at 214.30; stackHeight = 36
                        # EXIT NODE # IdentifierExp at 214.30; stackHeight = 36
                       lw $t0,8($sp) # ArrayLookup at 214.29; stackHeight = 36
                       beq $t0,$zero,nullPtrException # ArrayLookup at 214.29; stackHeight = 36
                       lw $t1,-4($t0) # ArrayLookup at 214.29; stackHeight = 36
                       lw $t2,($sp) # ArrayLookup at 214.29; stackHeight = 36
                       bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 214.29; stackHeight = 36
                       sll $t2,$t2,2 # ArrayLookup at 214.29; stackHeight = 36
                       addu $t2,$t2,$t0 # ArrayLookup at 214.29; stackHeight = 36
                       lw $t0,($t2) # ArrayLookup at 214.29; stackHeight = 36
                       sw $t0,8($sp)#**"" # ArrayLookup at 214.29; stackHeight = 36
                       addu $sp,$sp,8 # ArrayLookup at 214.29; stackHeight = 36
                      # EXIT NODE # ArrayLookup at 214.29; stackHeight = 28
                      # ENTER NODE # IdentifierExp at 214.34; stackHeight = 28
                       lw $t0,4($s2) # inst-var # IdentifierExp at 214.34; stackHeight = 28
                       subu $sp,$sp,4 # IdentifierExp at 214.34; stackHeight = 28
                       sw $t0,($sp)#**"" # IdentifierExp at 214.34; stackHeight = 32
                      # EXIT NODE # IdentifierExp at 214.34; stackHeight = 32
                      # ENTER NODE # IdentifierExp at 214.41; stackHeight = 32
                       lw $t0,16($sp) # local: stackHt=32,var-offset=-16 # IdentifierExp at 214.41; stackHeight = 32
                       subu $sp,$sp,8 # IdentifierExp at 214.41; stackHeight = 32
                       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 214.41; stackHeight = 40
                       sw $t0,($sp)#**"" # IdentifierExp at 214.41; stackHeight = 40
                      # EXIT NODE # IdentifierExp at 214.41; stackHeight = 40
                     lw $t0,8($sp) # ArrayLookup at 214.40; stackHeight = 40
                     beq $t0,$zero,nullPtrException # ArrayLookup at 214.40; stackHeight = 40
                     lw $t1,-4($t0) # ArrayLookup at 214.40; stackHeight = 40
                     lw $t2,($sp) # ArrayLookup at 214.40; stackHeight = 40
                     bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 214.40; stackHeight = 40
                     sll $t2,$t2,2 # ArrayLookup at 214.40; stackHeight = 40
                     addu $t2,$t2,$t0 # ArrayLookup at 214.40; stackHeight = 40
                     lw $t0,($t2) # ArrayLookup at 214.40; stackHeight = 40
                     sw $t0,8($sp)#**"" # ArrayLookup at 214.40; stackHeight = 40
                     addu $sp,$sp,8 # ArrayLookup at 214.40; stackHeight = 40
                    # EXIT NODE # ArrayLookup at 214.40; stackHeight = 32
                   lw $t0,8($sp) # Call at 214.14; stackHeight = 32
                   beq $t0,$zero,nullPtrException # Call at 214.14; stackHeight = 32
                   lw $t0,-12($t0) # Call at 214.14; stackHeight = 32
                   lw $t0,80($t0) # Call at 214.14; stackHeight = 32
                   jalr $t0 # helpDivRem # Call at 214.14; stackHeight = 32
                  # EXIT NODE # Call at 214.14; stackHeight = 24
                  # ENTER NODE # StringLiteral at 214.52; stackHeight = 24
                   subu $sp,$sp,4 # StringLiteral at 214.52; stackHeight = 24
                   la $t0,strLit_486 # StringLiteral at 214.52; stackHeight = 28
                   sw $t0,($sp)#**"strLit:\?" # StringLiteral at 214.52; stackHeight = 28
                  # EXIT NODE # StringLiteral at 214.52; stackHeight = 28
                 lw $t0,4($sp) # Call at 214.45; stackHeight = 28
                 beq $t0,$zero,nullPtrException # Call at 214.45; stackHeight = 28
                 lw $t0,-12($t0) # Call at 214.45; stackHeight = 28
                 lw $t0,12($t0) # Call at 214.45; stackHeight = 28
                 jalr $t0 # concat # Call at 214.45; stackHeight = 28
                # EXIT NODE # Call at 214.45; stackHeight = 24
               lw $t0,4($sp) # Call at 214.5; stackHeight = 24
               beq $t0,$zero,nullPtrException # Call at 214.5; stackHeight = 24
               lw $t0,-12($t0) # Call at 214.5; stackHeight = 24
               lw $t0,24($t0) # Call at 214.5; stackHeight = 24
               jalr $t0 # printStr # Call at 214.5; stackHeight = 24
              # EXIT NODE # Call at 214.5; stackHeight = 16
            # EXIT NODE # CallStatement at 214.5; stackHeight = 16
          # EXIT NODE # Block at 213.44; stackHeight = 16
          # ENTER NODE # Assign at 213.39; stackHeight = 16
            # ENTER NODE # Plus at 213.40; stackHeight = 16
              # ENTER NODE # IdentifierExp at 213.39; stackHeight = 16
               lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 213.39; stackHeight = 16
               subu $sp,$sp,8 # IdentifierExp at 213.39; stackHeight = 16
               sw $s5,4($sp)#**"GC tag" # IdentifierExp at 213.39; stackHeight = 24
               sw $t0,($sp)#**"" # IdentifierExp at 213.39; stackHeight = 24
              # EXIT NODE # IdentifierExp at 213.39; stackHeight = 24
              # ENTER NODE # IntegerLiteral at 213.40; stackHeight = 24
               subu $sp,$sp,8 # IntegerLiteral at 213.40; stackHeight = 24
               sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 213.40; stackHeight = 32
               li $t0,1 # IntegerLiteral at 213.40; stackHeight = 32
               sw $t0,($sp) # IntegerLiteral at 213.40; stackHeight = 32
              # EXIT NODE # IntegerLiteral at 213.40; stackHeight = 32
             lw $t0,($sp) # Plus at 213.40; stackHeight = 32
             lw $t1,8($sp) # Plus at 213.40; stackHeight = 32
             addu $t0,$t0,$t1 # Plus at 213.40; stackHeight = 32
             addu $sp,$sp,8 # Plus at 213.40; stackHeight = 32
             sw $t0,($sp)#**"" # Plus at 213.40; stackHeight = 32
            # EXIT NODE # Plus at 213.40; stackHeight = 24
           lw $t0,($sp) # Assign at 213.39; stackHeight = 24
           sw $t0,8($sp) # Assign at 213.39; stackHeight = 24
           addu $sp,$sp,8 # Assign at 213.39; stackHeight = 24
          # EXIT NODE # Assign at 213.39; stackHeight = 16
        # EXIT NODE # Block at 213.4; stackHeight = 16
      while_enter_1125: # While at 213.4; stackHeight = 16
        # ENTER NODE # LessThan at 213.22; stackHeight = 16
          # ENTER NODE # IdentifierExp at 213.20; stackHeight = 16
           lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 213.20; stackHeight = 16
           subu $sp,$sp,8 # IdentifierExp at 213.20; stackHeight = 16
           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 213.20; stackHeight = 24
           sw $t0,($sp)#**"" # IdentifierExp at 213.20; stackHeight = 24
          # EXIT NODE # IdentifierExp at 213.20; stackHeight = 24
          # ENTER NODE # ArrayLength at 213.30; stackHeight = 24
            # ENTER NODE # IdentifierExp at 213.24; stackHeight = 24
             lw $t0,4($s2) # inst-var # IdentifierExp at 213.24; stackHeight = 24
             subu $sp,$sp,4 # IdentifierExp at 213.24; stackHeight = 24
             sw $t0,($sp)#**"" # IdentifierExp at 213.24; stackHeight = 28
            # EXIT NODE # IdentifierExp at 213.24; stackHeight = 28
           lw $t0,($sp) # ArrayLength at 213.30; stackHeight = 28
           beq $t0,$zero,nullPtrException # ArrayLength at 213.30; stackHeight = 28
           lw $t0,-4($t0) # ArrayLength at 213.30; stackHeight = 28
           sw $s5,($sp)#**"GC tag" # ArrayLength at 213.30; stackHeight = 28
           subu $sp,4 # ArrayLength at 213.30; stackHeight = 28
           sw $t0,($sp)#**"" # ArrayLength at 213.30; stackHeight = 28
          # EXIT NODE # ArrayLength at 213.30; stackHeight = 32
         lw $t0,($sp) # LessThan at 213.22; stackHeight = 32
         lw $t1,8($sp) # LessThan at 213.22; stackHeight = 32
         slt $t0,$t1,$t0 # LessThan at 213.22; stackHeight = 32
         addu $sp,$sp,12 # LessThan at 213.22; stackHeight = 32
         sw $t0,($sp)#**"" # LessThan at 213.22; stackHeight = 20
        # EXIT NODE # LessThan at 213.22; stackHeight = 20
       lw $t0,($sp) # While at 213.4; stackHeight = 20
       addu $sp,$sp,4 # While at 213.4; stackHeight = 20
      bne $t0,$zero,while_top_1125 # While at 213.4; stackHeight = 16
      break_target_1125: # While at 213.4; stackHeight = 16
      # EXIT NODE # While at 213.4; stackHeight = 16
     addu $sp,8 # Block at 213.4; stackHeight = 16
    # EXIT NODE # Block at 213.4; stackHeight = 8
  # EXIT NODE # Block at 209.41; stackHeight = 8
  # ENTER NODE # Assign at 209.36; stackHeight = 8
    # ENTER NODE # Plus at 209.37; stackHeight = 8
      # ENTER NODE # IdentifierExp at 209.36; stackHeight = 8
       lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 209.36; stackHeight = 8
       subu $sp,$sp,8 # IdentifierExp at 209.36; stackHeight = 8
       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 209.36; stackHeight = 16
       sw $t0,($sp)#**"" # IdentifierExp at 209.36; stackHeight = 16
      # EXIT NODE # IdentifierExp at 209.36; stackHeight = 16
      # ENTER NODE # IntegerLiteral at 209.37; stackHeight = 16
       subu $sp,$sp,8 # IntegerLiteral at 209.37; stackHeight = 16
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 209.37; stackHeight = 24
       li $t0,1 # IntegerLiteral at 209.37; stackHeight = 24
       sw $t0,($sp) # IntegerLiteral at 209.37; stackHeight = 24
      # EXIT NODE # IntegerLiteral at 209.37; stackHeight = 24
     lw $t0,($sp) # Plus at 209.37; stackHeight = 24
     lw $t1,8($sp) # Plus at 209.37; stackHeight = 24
     addu $t0,$t0,$t1 # Plus at 209.37; stackHeight = 24
     addu $sp,$sp,8 # Plus at 209.37; stackHeight = 24
     sw $t0,($sp)#**"" # Plus at 209.37; stackHeight = 24
    # EXIT NODE # Plus at 209.37; stackHeight = 16
   lw $t0,($sp) # Assign at 209.36; stackHeight = 16
   sw $t0,8($sp) # Assign at 209.36; stackHeight = 16
   addu $sp,$sp,8 # Assign at 209.36; stackHeight = 16
  # EXIT NODE # Assign at 209.36; stackHeight = 8
# EXIT NODE # Block at 209.3; stackHeight = 8
while_enter_1129: # While at 209.3; stackHeight = 8
  # ENTER NODE # LessThan at 209.21; stackHeight = 8
    # ENTER NODE # IdentifierExp at 209.19; stackHeight = 8
     lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 209.19; stackHeight = 8
     subu $sp,$sp,8 # IdentifierExp at 209.19; stackHeight = 8
     sw $s5,4($sp)#**"GC tag" # IdentifierExp at 209.19; stackHeight = 16
     sw $t0,($sp)#**"" # IdentifierExp at 209.19; stackHeight = 16
    # EXIT NODE # IdentifierExp at 209.19; stackHeight = 16
    # ENTER NODE # ArrayLength at 209.27; stackHeight = 16
      # ENTER NODE # IdentifierExp at 209.23; stackHeight = 16
       lw $t0,0($s2) # inst-var # IdentifierExp at 209.23; stackHeight = 16
       subu $sp,$sp,4 # IdentifierExp at 209.23; stackHeight = 16
       sw $t0,($sp)#**"" # IdentifierExp at 209.23; stackHeight = 20
      # EXIT NODE # IdentifierExp at 209.23; stackHeight = 20
     lw $t0,($sp) # ArrayLength at 209.27; stackHeight = 20
     beq $t0,$zero,nullPtrException # ArrayLength at 209.27; stackHeight = 20
     lw $t0,-4($t0) # ArrayLength at 209.27; stackHeight = 20
     sw $s5,($sp)#**"GC tag" # ArrayLength at 209.27; stackHeight = 20
     subu $sp,4 # ArrayLength at 209.27; stackHeight = 20
     sw $t0,($sp)#**"" # ArrayLength at 209.27; stackHeight = 20
    # EXIT NODE # ArrayLength at 209.27; stackHeight = 24
   lw $t0,($sp) # LessThan at 209.21; stackHeight = 24
   lw $t1,8($sp) # LessThan at 209.21; stackHeight = 24
   slt $t0,$t1,$t0 # LessThan at 209.21; stackHeight = 24
   addu $sp,$sp,12 # LessThan at 209.21; stackHeight = 24
   sw $t0,($sp)#**"" # LessThan at 209.21; stackHeight = 12
  # EXIT NODE # LessThan at 209.21; stackHeight = 12
 lw $t0,($sp) # While at 209.3; stackHeight = 12
 addu $sp,$sp,4 # While at 209.3; stackHeight = 12
bne $t0,$zero,while_top_1129 # While at 209.3; stackHeight = 8
break_target_1129: # While at 209.3; stackHeight = 8
# EXIT NODE # While at 209.3; stackHeight = 8
 addu $sp,8 # Block at 209.3; stackHeight = 8
# EXIT NODE # Block at 209.3; stackHeight = 0
  # ENTER NODE # Block at 217.3; stackHeight = 0
    # ENTER NODE # LocalVarDecl at 217.12; stackHeight = 0
      # ENTER NODE # IntegerLiteral at 217.16; stackHeight = 0
       subu $sp,$sp,8 # IntegerLiteral at 217.16; stackHeight = 0
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 217.16; stackHeight = 8
       li $t0,0 # IntegerLiteral at 217.16; stackHeight = 8
       sw $t0,($sp) # IntegerLiteral at 217.16; stackHeight = 8
      # EXIT NODE # IntegerLiteral at 217.16; stackHeight = 8
    # EXIT NODE # LocalVarDecl at 217.12; stackHeight = 8
    # ENTER NODE # While at 217.3; stackHeight = 8
    j while_enter_1206 # While at 217.3; stackHeight = 8
    while_top_1206: # While at 217.3; stackHeight = 8
      # ENTER NODE # Block at 217.3; stackHeight = 8
        # ENTER NODE # Block at 217.43; stackHeight = 8
          # ENTER NODE # Block at 218.4; stackHeight = 8
            # ENTER NODE # LocalVarDecl at 218.13; stackHeight = 8
              # ENTER NODE # IntegerLiteral at 218.17; stackHeight = 8
               subu $sp,$sp,8 # IntegerLiteral at 218.17; stackHeight = 8
               sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 218.17; stackHeight = 16
               li $t0,0 # IntegerLiteral at 218.17; stackHeight = 16
               sw $t0,($sp) # IntegerLiteral at 218.17; stackHeight = 16
              # EXIT NODE # IntegerLiteral at 218.17; stackHeight = 16
            # EXIT NODE # LocalVarDecl at 218.13; stackHeight = 16
            # ENTER NODE # While at 218.4; stackHeight = 16
            j while_enter_1172 # While at 218.4; stackHeight = 16
            while_top_1172: # While at 218.4; stackHeight = 16
              # ENTER NODE # Block at 218.4; stackHeight = 16
                # ENTER NODE # Block at 218.42; stackHeight = 16
                  # ENTER NODE # CallStatement at 219.5; stackHeight = 16
                    # ENTER NODE # Call at 219.5; stackHeight = 16
                      # ENTER NODE # This at 219.5; stackHeight = 16
                       subu $sp,$sp,4 # This at 219.5; stackHeight = 16
                       sw $s2,($sp)#**"" # This at 219.5; stackHeight = 20
                      # EXIT NODE # This at 219.5; stackHeight = 20
                      # ENTER NODE # Call at 219.45; stackHeight = 20
                        # ENTER NODE # Call at 219.14; stackHeight = 20
                          # ENTER NODE # This at 219.14; stackHeight = 20
                           subu $sp,$sp,4 # This at 219.14; stackHeight = 20
                           sw $s2,($sp)#**"" # This at 219.14; stackHeight = 24
                          # EXIT NODE # This at 219.14; stackHeight = 24
                          # ENTER NODE # IdentifierExp at 219.25; stackHeight = 24
                           lw $t0,4($s2) # inst-var # IdentifierExp at 219.25; stackHeight = 24
                           subu $sp,$sp,4 # IdentifierExp at 219.25; stackHeight = 24
                           sw $t0,($sp)#**"" # IdentifierExp at 219.25; stackHeight = 28
                          # EXIT NODE # IdentifierExp at 219.25; stackHeight = 28
                          # ENTER NODE # IdentifierExp at 219.32; stackHeight = 28
                           lw $t0,20($sp) # local: stackHt=28,var-offset=-8 # IdentifierExp at 219.32; stackHeight = 28
                           subu $sp,$sp,8 # IdentifierExp at 219.32; stackHeight = 28
                           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 219.32; stackHeight = 36
                           sw $t0,($sp)#**"" # IdentifierExp at 219.32; stackHeight = 36
                          # EXIT NODE # IdentifierExp at 219.32; stackHeight = 36
                         lw $t0,8($sp) # ArrayLookup at 219.31; stackHeight = 36
                         beq $t0,$zero,nullPtrException # ArrayLookup at 219.31; stackHeight = 36
                         lw $t1,-4($t0) # ArrayLookup at 219.31; stackHeight = 36
                         lw $t2,($sp) # ArrayLookup at 219.31; stackHeight = 36
                         bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 219.31; stackHeight = 36
                         sll $t2,$t2,2 # ArrayLookup at 219.31; stackHeight = 36
                         addu $t2,$t2,$t0 # ArrayLookup at 219.31; stackHeight = 36
                         lw $t0,($t2) # ArrayLookup at 219.31; stackHeight = 36
                         sw $t0,8($sp)#**"" # ArrayLookup at 219.31; stackHeight = 36
                         addu $sp,$sp,8 # ArrayLookup at 219.31; stackHeight = 36
                        # EXIT NODE # ArrayLookup at 219.31; stackHeight = 28
                        # ENTER NODE # IdentifierExp at 219.36; stackHeight = 28
                         lw $t0,0($s2) # inst-var # IdentifierExp at 219.36; stackHeight = 28
                         subu $sp,$sp,4 # IdentifierExp at 219.36; stackHeight = 28
                         sw $t0,($sp)#**"" # IdentifierExp at 219.36; stackHeight = 32
                        # EXIT NODE # IdentifierExp at 219.36; stackHeight = 32
                        # ENTER NODE # IdentifierExp at 219.41; stackHeight = 32
                         lw $t0,16($sp) # local: stackHt=32,var-offset=-16 # IdentifierExp at 219.41; stackHeight = 32
                         subu $sp,$sp,8 # IdentifierExp at 219.41; stackHeight = 32
                         sw $s5,4($sp)#**"GC tag" # IdentifierExp at 219.41; stackHeight = 40
                         sw $t0,($sp)#**"" # IdentifierExp at 219.41; stackHeight = 40
                        # EXIT NODE # IdentifierExp at 219.41; stackHeight = 40
                       lw $t0,8($sp) # ArrayLookup at 219.40; stackHeight = 40
                       beq $t0,$zero,nullPtrException # ArrayLookup at 219.40; stackHeight = 40
                       lw $t1,-4($t0) # ArrayLookup at 219.40; stackHeight = 40
                       lw $t2,($sp) # ArrayLookup at 219.40; stackHeight = 40
                       bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 219.40; stackHeight = 40
                       sll $t2,$t2,2 # ArrayLookup at 219.40; stackHeight = 40
                       addu $t2,$t2,$t0 # ArrayLookup at 219.40; stackHeight = 40
                       lw $t0,($t2) # ArrayLookup at 219.40; stackHeight = 40
                       sw $t0,8($sp)#**"" # ArrayLookup at 219.40; stackHeight = 40
                       addu $sp,$sp,8 # ArrayLookup at 219.40; stackHeight = 40
                      # EXIT NODE # ArrayLookup at 219.40; stackHeight = 32
                     lw $t0,8($sp) # Call at 219.14; stackHeight = 32
                     beq $t0,$zero,nullPtrException # Call at 219.14; stackHeight = 32
                     lw $t0,-12($t0) # Call at 219.14; stackHeight = 32
                     lw $t0,80($t0) # Call at 219.14; stackHeight = 32
                     jalr $t0 # helpDivRem # Call at 219.14; stackHeight = 32
                    # EXIT NODE # Call at 219.14; stackHeight = 24
                    # ENTER NODE # StringLiteral at 219.52; stackHeight = 24
                     subu $sp,$sp,4 # StringLiteral at 219.52; stackHeight = 24
                     la $t0,strLit_486 # StringLiteral at 219.52; stackHeight = 28
                     sw $t0,($sp)#**"strLit:\?" # StringLiteral at 219.52; stackHeight = 28
                    # EXIT NODE # StringLiteral at 219.52; stackHeight = 28
                   lw $t0,4($sp) # Call at 219.45; stackHeight = 28
                   beq $t0,$zero,nullPtrException # Call at 219.45; stackHeight = 28
                   lw $t0,-12($t0) # Call at 219.45; stackHeight = 28
                   lw $t0,12($t0) # Call at 219.45; stackHeight = 28
                   jalr $t0 # concat # Call at 219.45; stackHeight = 28
                  # EXIT NODE # Call at 219.45; stackHeight = 24
                 lw $t0,4($sp) # Call at 219.5; stackHeight = 24
                 beq $t0,$zero,nullPtrException # Call at 219.5; stackHeight = 24
                 lw $t0,-12($t0) # Call at 219.5; stackHeight = 24
                 lw $t0,24($t0) # Call at 219.5; stackHeight = 24
                 jalr $t0 # printStr # Call at 219.5; stackHeight = 24
                # EXIT NODE # Call at 219.5; stackHeight = 16
              # EXIT NODE # CallStatement at 219.5; stackHeight = 16
            # EXIT NODE # Block at 218.42; stackHeight = 16
            # ENTER NODE # Assign at 218.37; stackHeight = 16
              # ENTER NODE # Plus at 218.38; stackHeight = 16
                # ENTER NODE # IdentifierExp at 218.37; stackHeight = 16
                 lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 218.37; stackHeight = 16
                 subu $sp,$sp,8 # IdentifierExp at 218.37; stackHeight = 16
                 sw $s5,4($sp)#**"GC tag" # IdentifierExp at 218.37; stackHeight = 24
                 sw $t0,($sp)#**"" # IdentifierExp at 218.37; stackHeight = 24
                # EXIT NODE # IdentifierExp at 218.37; stackHeight = 24
                # ENTER NODE # IntegerLiteral at 218.38; stackHeight = 24
                 subu $sp,$sp,8 # IntegerLiteral at 218.38; stackHeight = 24
                 sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 218.38; stackHeight = 32
                 li $t0,1 # IntegerLiteral at 218.38; stackHeight = 32
                 sw $t0,($sp) # IntegerLiteral at 218.38; stackHeight = 32
                # EXIT NODE # IntegerLiteral at 218.38; stackHeight = 32
               lw $t0,($sp) # Plus at 218.38; stackHeight = 32
               lw $t1,8($sp) # Plus at 218.38; stackHeight = 32
               addu $t0,$t0,$t1 # Plus at 218.38; stackHeight = 32
               addu $sp,$sp,8 # Plus at 218.38; stackHeight = 32
               sw $t0,($sp)#**"" # Plus at 218.38; stackHeight = 32
              # EXIT NODE # Plus at 218.38; stackHeight = 24
             lw $t0,($sp) # Assign at 218.37; stackHeight = 24
             sw $t0,8($sp) # Assign at 218.37; stackHeight = 24
             addu $sp,$sp,8 # Assign at 218.37; stackHeight = 24
            # EXIT NODE # Assign at 218.37; stackHeight = 16
          # EXIT NODE # Block at 218.4; stackHeight = 16
        while_enter_1172: # While at 218.4; stackHeight = 16
          # ENTER NODE # LessThan at 218.22; stackHeight = 16
            # ENTER NODE # IdentifierExp at 218.20; stackHeight = 16
             lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 218.20; stackHeight = 16
             subu $sp,$sp,8 # IdentifierExp at 218.20; stackHeight = 16
             sw $s5,4($sp)#**"GC tag" # IdentifierExp at 218.20; stackHeight = 24
             sw $t0,($sp)#**"" # IdentifierExp at 218.20; stackHeight = 24
            # EXIT NODE # IdentifierExp at 218.20; stackHeight = 24
            # ENTER NODE # ArrayLength at 218.28; stackHeight = 24
              # ENTER NODE # IdentifierExp at 218.24; stackHeight = 24
               lw $t0,0($s2) # inst-var # IdentifierExp at 218.24; stackHeight = 24
               subu $sp,$sp,4 # IdentifierExp at 218.24; stackHeight = 24
               sw $t0,($sp)#**"" # IdentifierExp at 218.24; stackHeight = 28
              # EXIT NODE # IdentifierExp at 218.24; stackHeight = 28
             lw $t0,($sp) # ArrayLength at 218.28; stackHeight = 28
             beq $t0,$zero,nullPtrException # ArrayLength at 218.28; stackHeight = 28
             lw $t0,-4($t0) # ArrayLength at 218.28; stackHeight = 28
             sw $s5,($sp)#**"GC tag" # ArrayLength at 218.28; stackHeight = 28
             subu $sp,4 # ArrayLength at 218.28; stackHeight = 28
             sw $t0,($sp)#**"" # ArrayLength at 218.28; stackHeight = 28
            # EXIT NODE # ArrayLength at 218.28; stackHeight = 32
           lw $t0,($sp) # LessThan at 218.22; stackHeight = 32
           lw $t1,8($sp) # LessThan at 218.22; stackHeight = 32
           slt $t0,$t1,$t0 # LessThan at 218.22; stackHeight = 32
           addu $sp,$sp,12 # LessThan at 218.22; stackHeight = 32
           sw $t0,($sp)#**"" # LessThan at 218.22; stackHeight = 20
          # EXIT NODE # LessThan at 218.22; stackHeight = 20
         lw $t0,($sp) # While at 218.4; stackHeight = 20
         addu $sp,$sp,4 # While at 218.4; stackHeight = 20
        bne $t0,$zero,while_top_1172 # While at 218.4; stackHeight = 16
        break_target_1172: # While at 218.4; stackHeight = 16
        # EXIT NODE # While at 218.4; stackHeight = 16
       addu $sp,8 # Block at 218.4; stackHeight = 16
      # EXIT NODE # Block at 218.4; stackHeight = 8
      # ENTER NODE # Block at 221.4; stackHeight = 8
        # ENTER NODE # LocalVarDecl at 221.13; stackHeight = 8
          # ENTER NODE # IntegerLiteral at 221.17; stackHeight = 8
           subu $sp,$sp,8 # IntegerLiteral at 221.17; stackHeight = 8
           sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 221.17; stackHeight = 16
           li $t0,0 # IntegerLiteral at 221.17; stackHeight = 16
           sw $t0,($sp) # IntegerLiteral at 221.17; stackHeight = 16
          # EXIT NODE # IntegerLiteral at 221.17; stackHeight = 16
        # EXIT NODE # LocalVarDecl at 221.13; stackHeight = 16
        # ENTER NODE # While at 221.4; stackHeight = 16
        j while_enter_1202 # While at 221.4; stackHeight = 16
        while_top_1202: # While at 221.4; stackHeight = 16
          # ENTER NODE # Block at 221.4; stackHeight = 16
            # ENTER NODE # Block at 221.44; stackHeight = 16
              # ENTER NODE # CallStatement at 222.5; stackHeight = 16
                # ENTER NODE # Call at 222.5; stackHeight = 16
                  # ENTER NODE # This at 222.5; stackHeight = 16
                   subu $sp,$sp,4 # This at 222.5; stackHeight = 16
                   sw $s2,($sp)#**"" # This at 222.5; stackHeight = 20
                  # EXIT NODE # This at 222.5; stackHeight = 20
                  # ENTER NODE # Call at 222.47; stackHeight = 20
                    # ENTER NODE # Call at 222.14; stackHeight = 20
                      # ENTER NODE # This at 222.14; stackHeight = 20
                       subu $sp,$sp,4 # This at 222.14; stackHeight = 20
                       sw $s2,($sp)#**"" # This at 222.14; stackHeight = 24
                      # EXIT NODE # This at 222.14; stackHeight = 24
                      # ENTER NODE # IdentifierExp at 222.25; stackHeight = 24
                       lw $t0,4($s2) # inst-var # IdentifierExp at 222.25; stackHeight = 24
                       subu $sp,$sp,4 # IdentifierExp at 222.25; stackHeight = 24
                       sw $t0,($sp)#**"" # IdentifierExp at 222.25; stackHeight = 28
                      # EXIT NODE # IdentifierExp at 222.25; stackHeight = 28
                      # ENTER NODE # IdentifierExp at 222.32; stackHeight = 28
                       lw $t0,20($sp) # local: stackHt=28,var-offset=-8 # IdentifierExp at 222.32; stackHeight = 28
                       subu $sp,$sp,8 # IdentifierExp at 222.32; stackHeight = 28
                       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 222.32; stackHeight = 36
                       sw $t0,($sp)#**"" # IdentifierExp at 222.32; stackHeight = 36
                      # EXIT NODE # IdentifierExp at 222.32; stackHeight = 36
                     lw $t0,8($sp) # ArrayLookup at 222.31; stackHeight = 36
                     beq $t0,$zero,nullPtrException # ArrayLookup at 222.31; stackHeight = 36
                     lw $t1,-4($t0) # ArrayLookup at 222.31; stackHeight = 36
                     lw $t2,($sp) # ArrayLookup at 222.31; stackHeight = 36
                     bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 222.31; stackHeight = 36
                     sll $t2,$t2,2 # ArrayLookup at 222.31; stackHeight = 36
                     addu $t2,$t2,$t0 # ArrayLookup at 222.31; stackHeight = 36
                     lw $t0,($t2) # ArrayLookup at 222.31; stackHeight = 36
                     sw $t0,8($sp)#**"" # ArrayLookup at 222.31; stackHeight = 36
                     addu $sp,$sp,8 # ArrayLookup at 222.31; stackHeight = 36
                    # EXIT NODE # ArrayLookup at 222.31; stackHeight = 28
                    # ENTER NODE # IdentifierExp at 222.36; stackHeight = 28
                     lw $t0,4($s2) # inst-var # IdentifierExp at 222.36; stackHeight = 28
                     subu $sp,$sp,4 # IdentifierExp at 222.36; stackHeight = 28
                     sw $t0,($sp)#**"" # IdentifierExp at 222.36; stackHeight = 32
                    # EXIT NODE # IdentifierExp at 222.36; stackHeight = 32
                    # ENTER NODE # IdentifierExp at 222.43; stackHeight = 32
                     lw $t0,16($sp) # local: stackHt=32,var-offset=-16 # IdentifierExp at 222.43; stackHeight = 32
                     subu $sp,$sp,8 # IdentifierExp at 222.43; stackHeight = 32
                     sw $s5,4($sp)#**"GC tag" # IdentifierExp at 222.43; stackHeight = 40
                     sw $t0,($sp)#**"" # IdentifierExp at 222.43; stackHeight = 40
                    # EXIT NODE # IdentifierExp at 222.43; stackHeight = 40
                   lw $t0,8($sp) # ArrayLookup at 222.42; stackHeight = 40
                   beq $t0,$zero,nullPtrException # ArrayLookup at 222.42; stackHeight = 40
                   lw $t1,-4($t0) # ArrayLookup at 222.42; stackHeight = 40
                   lw $t2,($sp) # ArrayLookup at 222.42; stackHeight = 40
                   bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 222.42; stackHeight = 40
                   sll $t2,$t2,2 # ArrayLookup at 222.42; stackHeight = 40
                   addu $t2,$t2,$t0 # ArrayLookup at 222.42; stackHeight = 40
                   lw $t0,($t2) # ArrayLookup at 222.42; stackHeight = 40
                   sw $t0,8($sp)#**"" # ArrayLookup at 222.42; stackHeight = 40
                   addu $sp,$sp,8 # ArrayLookup at 222.42; stackHeight = 40
                  # EXIT NODE # ArrayLookup at 222.42; stackHeight = 32
                 lw $t0,8($sp) # Call at 222.14; stackHeight = 32
                 beq $t0,$zero,nullPtrException # Call at 222.14; stackHeight = 32
                 lw $t0,-12($t0) # Call at 222.14; stackHeight = 32
                 lw $t0,80($t0) # Call at 222.14; stackHeight = 32
                 jalr $t0 # helpDivRem # Call at 222.14; stackHeight = 32
                # EXIT NODE # Call at 222.14; stackHeight = 24
                # ENTER NODE # StringLiteral at 222.54; stackHeight = 24
                 subu $sp,$sp,4 # StringLiteral at 222.54; stackHeight = 24
                 la $t0,strLit_486 # StringLiteral at 222.54; stackHeight = 28
                 sw $t0,($sp)#**"strLit:\?" # StringLiteral at 222.54; stackHeight = 28
                # EXIT NODE # StringLiteral at 222.54; stackHeight = 28
               lw $t0,4($sp) # Call at 222.47; stackHeight = 28
               beq $t0,$zero,nullPtrException # Call at 222.47; stackHeight = 28
               lw $t0,-12($t0) # Call at 222.47; stackHeight = 28
               lw $t0,12($t0) # Call at 222.47; stackHeight = 28
               jalr $t0 # concat # Call at 222.47; stackHeight = 28
              # EXIT NODE # Call at 222.47; stackHeight = 24
             lw $t0,4($sp) # Call at 222.5; stackHeight = 24
             beq $t0,$zero,nullPtrException # Call at 222.5; stackHeight = 24
             lw $t0,-12($t0) # Call at 222.5; stackHeight = 24
             lw $t0,24($t0) # Call at 222.5; stackHeight = 24
             jalr $t0 # printStr # Call at 222.5; stackHeight = 24
            # EXIT NODE # Call at 222.5; stackHeight = 16
          # EXIT NODE # CallStatement at 222.5; stackHeight = 16
        # EXIT NODE # Block at 221.44; stackHeight = 16
        # ENTER NODE # Assign at 221.39; stackHeight = 16
          # ENTER NODE # Plus at 221.40; stackHeight = 16
            # ENTER NODE # IdentifierExp at 221.39; stackHeight = 16
             lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 221.39; stackHeight = 16
             subu $sp,$sp,8 # IdentifierExp at 221.39; stackHeight = 16
             sw $s5,4($sp)#**"GC tag" # IdentifierExp at 221.39; stackHeight = 24
             sw $t0,($sp)#**"" # IdentifierExp at 221.39; stackHeight = 24
            # EXIT NODE # IdentifierExp at 221.39; stackHeight = 24
            # ENTER NODE # IntegerLiteral at 221.40; stackHeight = 24
             subu $sp,$sp,8 # IntegerLiteral at 221.40; stackHeight = 24
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 221.40; stackHeight = 32
             li $t0,1 # IntegerLiteral at 221.40; stackHeight = 32
             sw $t0,($sp) # IntegerLiteral at 221.40; stackHeight = 32
            # EXIT NODE # IntegerLiteral at 221.40; stackHeight = 32
           lw $t0,($sp) # Plus at 221.40; stackHeight = 32
           lw $t1,8($sp) # Plus at 221.40; stackHeight = 32
           addu $t0,$t0,$t1 # Plus at 221.40; stackHeight = 32
           addu $sp,$sp,8 # Plus at 221.40; stackHeight = 32
           sw $t0,($sp)#**"" # Plus at 221.40; stackHeight = 32
          # EXIT NODE # Plus at 221.40; stackHeight = 24
         lw $t0,($sp) # Assign at 221.39; stackHeight = 24
         sw $t0,8($sp) # Assign at 221.39; stackHeight = 24
         addu $sp,$sp,8 # Assign at 221.39; stackHeight = 24
        # EXIT NODE # Assign at 221.39; stackHeight = 16
      # EXIT NODE # Block at 221.4; stackHeight = 16
    while_enter_1202: # While at 221.4; stackHeight = 16
      # ENTER NODE # LessThan at 221.22; stackHeight = 16
        # ENTER NODE # IdentifierExp at 221.20; stackHeight = 16
         lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 221.20; stackHeight = 16
         subu $sp,$sp,8 # IdentifierExp at 221.20; stackHeight = 16
         sw $s5,4($sp)#**"GC tag" # IdentifierExp at 221.20; stackHeight = 24
         sw $t0,($sp)#**"" # IdentifierExp at 221.20; stackHeight = 24
        # EXIT NODE # IdentifierExp at 221.20; stackHeight = 24
        # ENTER NODE # ArrayLength at 221.30; stackHeight = 24
          # ENTER NODE # IdentifierExp at 221.24; stackHeight = 24
           lw $t0,4($s2) # inst-var # IdentifierExp at 221.24; stackHeight = 24
           subu $sp,$sp,4 # IdentifierExp at 221.24; stackHeight = 24
           sw $t0,($sp)#**"" # IdentifierExp at 221.24; stackHeight = 28
          # EXIT NODE # IdentifierExp at 221.24; stackHeight = 28
         lw $t0,($sp) # ArrayLength at 221.30; stackHeight = 28
         beq $t0,$zero,nullPtrException # ArrayLength at 221.30; stackHeight = 28
         lw $t0,-4($t0) # ArrayLength at 221.30; stackHeight = 28
         sw $s5,($sp)#**"GC tag" # ArrayLength at 221.30; stackHeight = 28
         subu $sp,4 # ArrayLength at 221.30; stackHeight = 28
         sw $t0,($sp)#**"" # ArrayLength at 221.30; stackHeight = 28
        # EXIT NODE # ArrayLength at 221.30; stackHeight = 32
       lw $t0,($sp) # LessThan at 221.22; stackHeight = 32
       lw $t1,8($sp) # LessThan at 221.22; stackHeight = 32
       slt $t0,$t1,$t0 # LessThan at 221.22; stackHeight = 32
       addu $sp,$sp,12 # LessThan at 221.22; stackHeight = 32
       sw $t0,($sp)#**"" # LessThan at 221.22; stackHeight = 20
      # EXIT NODE # LessThan at 221.22; stackHeight = 20
     lw $t0,($sp) # While at 221.4; stackHeight = 20
     addu $sp,$sp,4 # While at 221.4; stackHeight = 20
    bne $t0,$zero,while_top_1202 # While at 221.4; stackHeight = 16
    break_target_1202: # While at 221.4; stackHeight = 16
    # EXIT NODE # While at 221.4; stackHeight = 16
   addu $sp,8 # Block at 221.4; stackHeight = 16
  # EXIT NODE # Block at 221.4; stackHeight = 8
# EXIT NODE # Block at 217.43; stackHeight = 8
  # ENTER NODE # Assign at 217.38; stackHeight = 8
    # ENTER NODE # Plus at 217.39; stackHeight = 8
      # ENTER NODE # IdentifierExp at 217.38; stackHeight = 8
       lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 217.38; stackHeight = 8
       subu $sp,$sp,8 # IdentifierExp at 217.38; stackHeight = 8
       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 217.38; stackHeight = 16
       sw $t0,($sp)#**"" # IdentifierExp at 217.38; stackHeight = 16
      # EXIT NODE # IdentifierExp at 217.38; stackHeight = 16
      # ENTER NODE # IntegerLiteral at 217.39; stackHeight = 16
       subu $sp,$sp,8 # IntegerLiteral at 217.39; stackHeight = 16
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 217.39; stackHeight = 24
       li $t0,1 # IntegerLiteral at 217.39; stackHeight = 24
       sw $t0,($sp) # IntegerLiteral at 217.39; stackHeight = 24
      # EXIT NODE # IntegerLiteral at 217.39; stackHeight = 24
     lw $t0,($sp) # Plus at 217.39; stackHeight = 24
     lw $t1,8($sp) # Plus at 217.39; stackHeight = 24
     addu $t0,$t0,$t1 # Plus at 217.39; stackHeight = 24
     addu $sp,$sp,8 # Plus at 217.39; stackHeight = 24
     sw $t0,($sp)#**"" # Plus at 217.39; stackHeight = 24
    # EXIT NODE # Plus at 217.39; stackHeight = 16
   lw $t0,($sp) # Assign at 217.38; stackHeight = 16
   sw $t0,8($sp) # Assign at 217.38; stackHeight = 16
   addu $sp,$sp,8 # Assign at 217.38; stackHeight = 16
  # EXIT NODE # Assign at 217.38; stackHeight = 8
# EXIT NODE # Block at 217.3; stackHeight = 8
while_enter_1206: # While at 217.3; stackHeight = 8
  # ENTER NODE # LessThan at 217.21; stackHeight = 8
    # ENTER NODE # IdentifierExp at 217.19; stackHeight = 8
     lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 217.19; stackHeight = 8
     subu $sp,$sp,8 # IdentifierExp at 217.19; stackHeight = 8
     sw $s5,4($sp)#**"GC tag" # IdentifierExp at 217.19; stackHeight = 16
     sw $t0,($sp)#**"" # IdentifierExp at 217.19; stackHeight = 16
    # EXIT NODE # IdentifierExp at 217.19; stackHeight = 16
    # ENTER NODE # ArrayLength at 217.29; stackHeight = 16
      # ENTER NODE # IdentifierExp at 217.23; stackHeight = 16
       lw $t0,4($s2) # inst-var # IdentifierExp at 217.23; stackHeight = 16
       subu $sp,$sp,4 # IdentifierExp at 217.23; stackHeight = 16
       sw $t0,($sp)#**"" # IdentifierExp at 217.23; stackHeight = 20
      # EXIT NODE # IdentifierExp at 217.23; stackHeight = 20
     lw $t0,($sp) # ArrayLength at 217.29; stackHeight = 20
     beq $t0,$zero,nullPtrException # ArrayLength at 217.29; stackHeight = 20
     lw $t0,-4($t0) # ArrayLength at 217.29; stackHeight = 20
     sw $s5,($sp)#**"GC tag" # ArrayLength at 217.29; stackHeight = 20
     subu $sp,4 # ArrayLength at 217.29; stackHeight = 20
     sw $t0,($sp)#**"" # ArrayLength at 217.29; stackHeight = 20
    # EXIT NODE # ArrayLength at 217.29; stackHeight = 24
   lw $t0,($sp) # LessThan at 217.21; stackHeight = 24
   lw $t1,8($sp) # LessThan at 217.21; stackHeight = 24
   slt $t0,$t1,$t0 # LessThan at 217.21; stackHeight = 24
   addu $sp,$sp,12 # LessThan at 217.21; stackHeight = 24
   sw $t0,($sp)#**"" # LessThan at 217.21; stackHeight = 12
  # EXIT NODE # LessThan at 217.21; stackHeight = 12
 lw $t0,($sp) # While at 217.3; stackHeight = 12
 addu $sp,$sp,4 # While at 217.3; stackHeight = 12
bne $t0,$zero,while_top_1206 # While at 217.3; stackHeight = 8
break_target_1206: # While at 217.3; stackHeight = 8
# EXIT NODE # While at 217.3; stackHeight = 8
 addu $sp,8 # Block at 217.3; stackHeight = 8
# EXIT NODE # Block at 217.3; stackHeight = 0
 # stack height is 0 # MethodDeclVoid at 208.14; stackHeight = 0
 lw $ra,4($sp) # MethodDeclVoid at 208.14; stackHeight = 0
 lw $s2,0($sp) # MethodDeclVoid at 208.14; stackHeight = 0
 addu $sp,$sp,8 # MethodDeclVoid at 208.14; stackHeight = 0
jr $ra # MethodDeclVoid at 208.14; stackHeight = -8
# EXIT NODE # MethodDeclVoid at 208.14; stackHeight = -8
  # ENTER NODE # MethodDeclVoid at 227.14; stackHeight = -8
  .globl fcn_1367_equalsTest # MethodDeclVoid at 227.14; stackHeight = -8
  fcn_1367_equalsTest: # MethodDeclVoid at 227.14; stackHeight = -8
   subu $sp,$sp,4 # MethodDeclVoid at 227.14; stackHeight = -8
   sw $s2,($sp) #**"old this-ptr" # MethodDeclVoid at 227.14; stackHeight = -8
   lw $s2,4($sp) #**"this-ptr" # MethodDeclVoid at 227.14; stackHeight = -8
   sw $ra,4($sp) #**"RA:equalsTest" # MethodDeclVoid at 227.14; stackHeight = -8
    # ENTER NODE # Block at 228.3; stackHeight = 0
      # ENTER NODE # LocalVarDecl at 228.12; stackHeight = 0
        # ENTER NODE # IntegerLiteral at 228.16; stackHeight = 0
         subu $sp,$sp,8 # IntegerLiteral at 228.16; stackHeight = 0
         sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 228.16; stackHeight = 8
         li $t0,0 # IntegerLiteral at 228.16; stackHeight = 8
         sw $t0,($sp) # IntegerLiteral at 228.16; stackHeight = 8
        # EXIT NODE # IntegerLiteral at 228.16; stackHeight = 8
      # EXIT NODE # LocalVarDecl at 228.12; stackHeight = 8
      # ENTER NODE # While at 228.3; stackHeight = 8
      j while_enter_1286 # While at 228.3; stackHeight = 8
      while_top_1286: # While at 228.3; stackHeight = 8
        # ENTER NODE # Block at 228.3; stackHeight = 8
          # ENTER NODE # Block at 228.41; stackHeight = 8
            # ENTER NODE # Block at 229.4; stackHeight = 8
              # ENTER NODE # LocalVarDecl at 229.13; stackHeight = 8
                # ENTER NODE # IntegerLiteral at 229.17; stackHeight = 8
                 subu $sp,$sp,8 # IntegerLiteral at 229.17; stackHeight = 8
                 sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 229.17; stackHeight = 16
                 li $t0,0 # IntegerLiteral at 229.17; stackHeight = 16
                 sw $t0,($sp) # IntegerLiteral at 229.17; stackHeight = 16
                # EXIT NODE # IntegerLiteral at 229.17; stackHeight = 16
              # EXIT NODE # LocalVarDecl at 229.13; stackHeight = 16
              # ENTER NODE # While at 229.4; stackHeight = 16
              j while_enter_1251 # While at 229.4; stackHeight = 16
              while_top_1251: # While at 229.4; stackHeight = 16
                # ENTER NODE # Block at 229.4; stackHeight = 16
                  # ENTER NODE # Block at 229.42; stackHeight = 16
                    # ENTER NODE # CallStatement at 230.5; stackHeight = 16
                      # ENTER NODE # Call at 230.5; stackHeight = 16
                        # ENTER NODE # This at 230.5; stackHeight = 16
                         subu $sp,$sp,4 # This at 230.5; stackHeight = 16
                         sw $s2,($sp)#**"" # This at 230.5; stackHeight = 20
                        # EXIT NODE # This at 230.5; stackHeight = 20
                        # ENTER NODE # Call at 230.23; stackHeight = 20
                          # ENTER NODE # IdentifierExp at 230.15; stackHeight = 20
                           lw $t0,0($s2) # inst-var # IdentifierExp at 230.15; stackHeight = 20
                           subu $sp,$sp,4 # IdentifierExp at 230.15; stackHeight = 20
                           sw $t0,($sp)#**"" # IdentifierExp at 230.15; stackHeight = 24
                          # EXIT NODE # IdentifierExp at 230.15; stackHeight = 24
                          # ENTER NODE # IdentifierExp at 230.20; stackHeight = 24
                           lw $t0,16($sp) # local: stackHt=24,var-offset=-8 # IdentifierExp at 230.20; stackHeight = 24
                           subu $sp,$sp,8 # IdentifierExp at 230.20; stackHeight = 24
                           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 230.20; stackHeight = 32
                           sw $t0,($sp)#**"" # IdentifierExp at 230.20; stackHeight = 32
                          # EXIT NODE # IdentifierExp at 230.20; stackHeight = 32
                         lw $t0,8($sp) # ArrayLookup at 230.19; stackHeight = 32
                         beq $t0,$zero,nullPtrException # ArrayLookup at 230.19; stackHeight = 32
                         lw $t1,-4($t0) # ArrayLookup at 230.19; stackHeight = 32
                         lw $t2,($sp) # ArrayLookup at 230.19; stackHeight = 32
                         bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 230.19; stackHeight = 32
                         sll $t2,$t2,2 # ArrayLookup at 230.19; stackHeight = 32
                         addu $t2,$t2,$t0 # ArrayLookup at 230.19; stackHeight = 32
                         lw $t0,($t2) # ArrayLookup at 230.19; stackHeight = 32
                         sw $t0,8($sp)#**"" # ArrayLookup at 230.19; stackHeight = 32
                         addu $sp,$sp,8 # ArrayLookup at 230.19; stackHeight = 32
                        # EXIT NODE # ArrayLookup at 230.19; stackHeight = 24
                        # ENTER NODE # IdentifierExp at 230.30; stackHeight = 24
                         lw $t0,0($s2) # inst-var # IdentifierExp at 230.30; stackHeight = 24
                         subu $sp,$sp,4 # IdentifierExp at 230.30; stackHeight = 24
                         sw $t0,($sp)#**"" # IdentifierExp at 230.30; stackHeight = 28
                        # EXIT NODE # IdentifierExp at 230.30; stackHeight = 28
                        # ENTER NODE # IdentifierExp at 230.35; stackHeight = 28
                         lw $t0,12($sp) # local: stackHt=28,var-offset=-16 # IdentifierExp at 230.35; stackHeight = 28
                         subu $sp,$sp,8 # IdentifierExp at 230.35; stackHeight = 28
                         sw $s5,4($sp)#**"GC tag" # IdentifierExp at 230.35; stackHeight = 36
                         sw $t0,($sp)#**"" # IdentifierExp at 230.35; stackHeight = 36
                        # EXIT NODE # IdentifierExp at 230.35; stackHeight = 36
                       lw $t0,8($sp) # ArrayLookup at 230.34; stackHeight = 36
                       beq $t0,$zero,nullPtrException # ArrayLookup at 230.34; stackHeight = 36
                       lw $t1,-4($t0) # ArrayLookup at 230.34; stackHeight = 36
                       lw $t2,($sp) # ArrayLookup at 230.34; stackHeight = 36
                       bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 230.34; stackHeight = 36
                       sll $t2,$t2,2 # ArrayLookup at 230.34; stackHeight = 36
                       addu $t2,$t2,$t0 # ArrayLookup at 230.34; stackHeight = 36
                       lw $t0,($t2) # ArrayLookup at 230.34; stackHeight = 36
                       sw $t0,8($sp)#**"" # ArrayLookup at 230.34; stackHeight = 36
                       addu $sp,$sp,8 # ArrayLookup at 230.34; stackHeight = 36
                      # EXIT NODE # ArrayLookup at 230.34; stackHeight = 28
                     lw $t0,4($sp) # Call at 230.23; stackHeight = 28
                     beq $t0,$zero,nullPtrException # Call at 230.23; stackHeight = 28
                     lw $t0,-12($t0) # Call at 230.23; stackHeight = 28
                     lw $t0,4($t0) # Call at 230.23; stackHeight = 28
                     jalr $t0 # equals # Call at 230.23; stackHeight = 28
                    # EXIT NODE # Call at 230.23; stackHeight = 24
                   lw $t0,4($sp) # Call at 230.5; stackHeight = 24
                   beq $t0,$zero,nullPtrException # Call at 230.5; stackHeight = 24
                   lw $t0,-12($t0) # Call at 230.5; stackHeight = 24
                   lw $t0,28($t0) # Call at 230.5; stackHeight = 24
                   jalr $t0 # printBool # Call at 230.5; stackHeight = 24
                  # EXIT NODE # Call at 230.5; stackHeight = 16
                # EXIT NODE # CallStatement at 230.5; stackHeight = 16
                # ENTER NODE # CallStatement at 231.5; stackHeight = 16
                  # ENTER NODE # Call at 231.5; stackHeight = 16
                    # ENTER NODE # This at 231.5; stackHeight = 16
                     subu $sp,$sp,4 # This at 231.5; stackHeight = 16
                     sw $s2,($sp)#**"" # This at 231.5; stackHeight = 20
                    # EXIT NODE # This at 231.5; stackHeight = 20
                    # ENTER NODE # StringLiteral at 231.14; stackHeight = 20
                     subu $sp,$sp,4 # StringLiteral at 231.14; stackHeight = 20
                     la $t0,strLit_486 # StringLiteral at 231.14; stackHeight = 24
                     sw $t0,($sp)#**"strLit:\?" # StringLiteral at 231.14; stackHeight = 24
                    # EXIT NODE # StringLiteral at 231.14; stackHeight = 24
                   lw $t0,4($sp) # Call at 231.5; stackHeight = 24
                   beq $t0,$zero,nullPtrException # Call at 231.5; stackHeight = 24
                   lw $t0,-12($t0) # Call at 231.5; stackHeight = 24
                   lw $t0,24($t0) # Call at 231.5; stackHeight = 24
                   jalr $t0 # printStr # Call at 231.5; stackHeight = 24
                  # EXIT NODE # Call at 231.5; stackHeight = 16
                # EXIT NODE # CallStatement at 231.5; stackHeight = 16
              # EXIT NODE # Block at 229.42; stackHeight = 16
              # ENTER NODE # Assign at 229.37; stackHeight = 16
                # ENTER NODE # Plus at 229.38; stackHeight = 16
                  # ENTER NODE # IdentifierExp at 229.37; stackHeight = 16
                   lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 229.37; stackHeight = 16
                   subu $sp,$sp,8 # IdentifierExp at 229.37; stackHeight = 16
                   sw $s5,4($sp)#**"GC tag" # IdentifierExp at 229.37; stackHeight = 24
                   sw $t0,($sp)#**"" # IdentifierExp at 229.37; stackHeight = 24
                  # EXIT NODE # IdentifierExp at 229.37; stackHeight = 24
                  # ENTER NODE # IntegerLiteral at 229.38; stackHeight = 24
                   subu $sp,$sp,8 # IntegerLiteral at 229.38; stackHeight = 24
                   sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 229.38; stackHeight = 32
                   li $t0,1 # IntegerLiteral at 229.38; stackHeight = 32
                   sw $t0,($sp) # IntegerLiteral at 229.38; stackHeight = 32
                  # EXIT NODE # IntegerLiteral at 229.38; stackHeight = 32
                 lw $t0,($sp) # Plus at 229.38; stackHeight = 32
                 lw $t1,8($sp) # Plus at 229.38; stackHeight = 32
                 addu $t0,$t0,$t1 # Plus at 229.38; stackHeight = 32
                 addu $sp,$sp,8 # Plus at 229.38; stackHeight = 32
                 sw $t0,($sp)#**"" # Plus at 229.38; stackHeight = 32
                # EXIT NODE # Plus at 229.38; stackHeight = 24
               lw $t0,($sp) # Assign at 229.37; stackHeight = 24
               sw $t0,8($sp) # Assign at 229.37; stackHeight = 24
               addu $sp,$sp,8 # Assign at 229.37; stackHeight = 24
              # EXIT NODE # Assign at 229.37; stackHeight = 16
            # EXIT NODE # Block at 229.4; stackHeight = 16
          while_enter_1251: # While at 229.4; stackHeight = 16
            # ENTER NODE # LessThan at 229.22; stackHeight = 16
              # ENTER NODE # IdentifierExp at 229.20; stackHeight = 16
               lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 229.20; stackHeight = 16
               subu $sp,$sp,8 # IdentifierExp at 229.20; stackHeight = 16
               sw $s5,4($sp)#**"GC tag" # IdentifierExp at 229.20; stackHeight = 24
               sw $t0,($sp)#**"" # IdentifierExp at 229.20; stackHeight = 24
              # EXIT NODE # IdentifierExp at 229.20; stackHeight = 24
              # ENTER NODE # ArrayLength at 229.28; stackHeight = 24
                # ENTER NODE # IdentifierExp at 229.24; stackHeight = 24
                 lw $t0,0($s2) # inst-var # IdentifierExp at 229.24; stackHeight = 24
                 subu $sp,$sp,4 # IdentifierExp at 229.24; stackHeight = 24
                 sw $t0,($sp)#**"" # IdentifierExp at 229.24; stackHeight = 28
                # EXIT NODE # IdentifierExp at 229.24; stackHeight = 28
               lw $t0,($sp) # ArrayLength at 229.28; stackHeight = 28
               beq $t0,$zero,nullPtrException # ArrayLength at 229.28; stackHeight = 28
               lw $t0,-4($t0) # ArrayLength at 229.28; stackHeight = 28
               sw $s5,($sp)#**"GC tag" # ArrayLength at 229.28; stackHeight = 28
               subu $sp,4 # ArrayLength at 229.28; stackHeight = 28
               sw $t0,($sp)#**"" # ArrayLength at 229.28; stackHeight = 28
              # EXIT NODE # ArrayLength at 229.28; stackHeight = 32
             lw $t0,($sp) # LessThan at 229.22; stackHeight = 32
             lw $t1,8($sp) # LessThan at 229.22; stackHeight = 32
             slt $t0,$t1,$t0 # LessThan at 229.22; stackHeight = 32
             addu $sp,$sp,12 # LessThan at 229.22; stackHeight = 32
             sw $t0,($sp)#**"" # LessThan at 229.22; stackHeight = 20
            # EXIT NODE # LessThan at 229.22; stackHeight = 20
           lw $t0,($sp) # While at 229.4; stackHeight = 20
           addu $sp,$sp,4 # While at 229.4; stackHeight = 20
          bne $t0,$zero,while_top_1251 # While at 229.4; stackHeight = 16
          break_target_1251: # While at 229.4; stackHeight = 16
          # EXIT NODE # While at 229.4; stackHeight = 16
         addu $sp,8 # Block at 229.4; stackHeight = 16
        # EXIT NODE # Block at 229.4; stackHeight = 8
        # ENTER NODE # Block at 233.4; stackHeight = 8
          # ENTER NODE # LocalVarDecl at 233.13; stackHeight = 8
            # ENTER NODE # IntegerLiteral at 233.17; stackHeight = 8
             subu $sp,$sp,8 # IntegerLiteral at 233.17; stackHeight = 8
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 233.17; stackHeight = 16
             li $t0,0 # IntegerLiteral at 233.17; stackHeight = 16
             sw $t0,($sp) # IntegerLiteral at 233.17; stackHeight = 16
            # EXIT NODE # IntegerLiteral at 233.17; stackHeight = 16
          # EXIT NODE # LocalVarDecl at 233.13; stackHeight = 16
          # ENTER NODE # While at 233.4; stackHeight = 16
          j while_enter_1282 # While at 233.4; stackHeight = 16
          while_top_1282: # While at 233.4; stackHeight = 16
            # ENTER NODE # Block at 233.4; stackHeight = 16
              # ENTER NODE # Block at 233.44; stackHeight = 16
                # ENTER NODE # CallStatement at 234.5; stackHeight = 16
                  # ENTER NODE # Call at 234.5; stackHeight = 16
                    # ENTER NODE # This at 234.5; stackHeight = 16
                     subu $sp,$sp,4 # This at 234.5; stackHeight = 16
                     sw $s2,($sp)#**"" # This at 234.5; stackHeight = 20
                    # EXIT NODE # This at 234.5; stackHeight = 20
                    # ENTER NODE # Call at 234.23; stackHeight = 20
                      # ENTER NODE # IdentifierExp at 234.15; stackHeight = 20
                       lw $t0,0($s2) # inst-var # IdentifierExp at 234.15; stackHeight = 20
                       subu $sp,$sp,4 # IdentifierExp at 234.15; stackHeight = 20
                       sw $t0,($sp)#**"" # IdentifierExp at 234.15; stackHeight = 24
                      # EXIT NODE # IdentifierExp at 234.15; stackHeight = 24
                      # ENTER NODE # IdentifierExp at 234.20; stackHeight = 24
                       lw $t0,16($sp) # local: stackHt=24,var-offset=-8 # IdentifierExp at 234.20; stackHeight = 24
                       subu $sp,$sp,8 # IdentifierExp at 234.20; stackHeight = 24
                       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 234.20; stackHeight = 32
                       sw $t0,($sp)#**"" # IdentifierExp at 234.20; stackHeight = 32
                      # EXIT NODE # IdentifierExp at 234.20; stackHeight = 32
                     lw $t0,8($sp) # ArrayLookup at 234.19; stackHeight = 32
                     beq $t0,$zero,nullPtrException # ArrayLookup at 234.19; stackHeight = 32
                     lw $t1,-4($t0) # ArrayLookup at 234.19; stackHeight = 32
                     lw $t2,($sp) # ArrayLookup at 234.19; stackHeight = 32
                     bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 234.19; stackHeight = 32
                     sll $t2,$t2,2 # ArrayLookup at 234.19; stackHeight = 32
                     addu $t2,$t2,$t0 # ArrayLookup at 234.19; stackHeight = 32
                     lw $t0,($t2) # ArrayLookup at 234.19; stackHeight = 32
                     sw $t0,8($sp)#**"" # ArrayLookup at 234.19; stackHeight = 32
                     addu $sp,$sp,8 # ArrayLookup at 234.19; stackHeight = 32
                    # EXIT NODE # ArrayLookup at 234.19; stackHeight = 24
                    # ENTER NODE # IdentifierExp at 234.30; stackHeight = 24
                     lw $t0,4($s2) # inst-var # IdentifierExp at 234.30; stackHeight = 24
                     subu $sp,$sp,4 # IdentifierExp at 234.30; stackHeight = 24
                     sw $t0,($sp)#**"" # IdentifierExp at 234.30; stackHeight = 28
                    # EXIT NODE # IdentifierExp at 234.30; stackHeight = 28
                    # ENTER NODE # IdentifierExp at 234.37; stackHeight = 28
                     lw $t0,12($sp) # local: stackHt=28,var-offset=-16 # IdentifierExp at 234.37; stackHeight = 28
                     subu $sp,$sp,8 # IdentifierExp at 234.37; stackHeight = 28
                     sw $s5,4($sp)#**"GC tag" # IdentifierExp at 234.37; stackHeight = 36
                     sw $t0,($sp)#**"" # IdentifierExp at 234.37; stackHeight = 36
                    # EXIT NODE # IdentifierExp at 234.37; stackHeight = 36
                   lw $t0,8($sp) # ArrayLookup at 234.36; stackHeight = 36
                   beq $t0,$zero,nullPtrException # ArrayLookup at 234.36; stackHeight = 36
                   lw $t1,-4($t0) # ArrayLookup at 234.36; stackHeight = 36
                   lw $t2,($sp) # ArrayLookup at 234.36; stackHeight = 36
                   bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 234.36; stackHeight = 36
                   sll $t2,$t2,2 # ArrayLookup at 234.36; stackHeight = 36
                   addu $t2,$t2,$t0 # ArrayLookup at 234.36; stackHeight = 36
                   lw $t0,($t2) # ArrayLookup at 234.36; stackHeight = 36
                   sw $t0,8($sp)#**"" # ArrayLookup at 234.36; stackHeight = 36
                   addu $sp,$sp,8 # ArrayLookup at 234.36; stackHeight = 36
                  # EXIT NODE # ArrayLookup at 234.36; stackHeight = 28
                 lw $t0,4($sp) # Call at 234.23; stackHeight = 28
                 beq $t0,$zero,nullPtrException # Call at 234.23; stackHeight = 28
                 lw $t0,-12($t0) # Call at 234.23; stackHeight = 28
                 lw $t0,4($t0) # Call at 234.23; stackHeight = 28
                 jalr $t0 # equals # Call at 234.23; stackHeight = 28
                # EXIT NODE # Call at 234.23; stackHeight = 24
               lw $t0,4($sp) # Call at 234.5; stackHeight = 24
               beq $t0,$zero,nullPtrException # Call at 234.5; stackHeight = 24
               lw $t0,-12($t0) # Call at 234.5; stackHeight = 24
               lw $t0,28($t0) # Call at 234.5; stackHeight = 24
               jalr $t0 # printBool # Call at 234.5; stackHeight = 24
              # EXIT NODE # Call at 234.5; stackHeight = 16
            # EXIT NODE # CallStatement at 234.5; stackHeight = 16
            # ENTER NODE # CallStatement at 235.5; stackHeight = 16
              # ENTER NODE # Call at 235.5; stackHeight = 16
                # ENTER NODE # This at 235.5; stackHeight = 16
                 subu $sp,$sp,4 # This at 235.5; stackHeight = 16
                 sw $s2,($sp)#**"" # This at 235.5; stackHeight = 20
                # EXIT NODE # This at 235.5; stackHeight = 20
                # ENTER NODE # StringLiteral at 235.14; stackHeight = 20
                 subu $sp,$sp,4 # StringLiteral at 235.14; stackHeight = 20
                 la $t0,strLit_486 # StringLiteral at 235.14; stackHeight = 24
                 sw $t0,($sp)#**"strLit:\?" # StringLiteral at 235.14; stackHeight = 24
                # EXIT NODE # StringLiteral at 235.14; stackHeight = 24
               lw $t0,4($sp) # Call at 235.5; stackHeight = 24
               beq $t0,$zero,nullPtrException # Call at 235.5; stackHeight = 24
               lw $t0,-12($t0) # Call at 235.5; stackHeight = 24
               lw $t0,24($t0) # Call at 235.5; stackHeight = 24
               jalr $t0 # printStr # Call at 235.5; stackHeight = 24
              # EXIT NODE # Call at 235.5; stackHeight = 16
            # EXIT NODE # CallStatement at 235.5; stackHeight = 16
          # EXIT NODE # Block at 233.44; stackHeight = 16
          # ENTER NODE # Assign at 233.39; stackHeight = 16
            # ENTER NODE # Plus at 233.40; stackHeight = 16
              # ENTER NODE # IdentifierExp at 233.39; stackHeight = 16
               lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 233.39; stackHeight = 16
               subu $sp,$sp,8 # IdentifierExp at 233.39; stackHeight = 16
               sw $s5,4($sp)#**"GC tag" # IdentifierExp at 233.39; stackHeight = 24
               sw $t0,($sp)#**"" # IdentifierExp at 233.39; stackHeight = 24
              # EXIT NODE # IdentifierExp at 233.39; stackHeight = 24
              # ENTER NODE # IntegerLiteral at 233.40; stackHeight = 24
               subu $sp,$sp,8 # IntegerLiteral at 233.40; stackHeight = 24
               sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 233.40; stackHeight = 32
               li $t0,1 # IntegerLiteral at 233.40; stackHeight = 32
               sw $t0,($sp) # IntegerLiteral at 233.40; stackHeight = 32
              # EXIT NODE # IntegerLiteral at 233.40; stackHeight = 32
             lw $t0,($sp) # Plus at 233.40; stackHeight = 32
             lw $t1,8($sp) # Plus at 233.40; stackHeight = 32
             addu $t0,$t0,$t1 # Plus at 233.40; stackHeight = 32
             addu $sp,$sp,8 # Plus at 233.40; stackHeight = 32
             sw $t0,($sp)#**"" # Plus at 233.40; stackHeight = 32
            # EXIT NODE # Plus at 233.40; stackHeight = 24
           lw $t0,($sp) # Assign at 233.39; stackHeight = 24
           sw $t0,8($sp) # Assign at 233.39; stackHeight = 24
           addu $sp,$sp,8 # Assign at 233.39; stackHeight = 24
          # EXIT NODE # Assign at 233.39; stackHeight = 16
        # EXIT NODE # Block at 233.4; stackHeight = 16
      while_enter_1282: # While at 233.4; stackHeight = 16
        # ENTER NODE # LessThan at 233.22; stackHeight = 16
          # ENTER NODE # IdentifierExp at 233.20; stackHeight = 16
           lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 233.20; stackHeight = 16
           subu $sp,$sp,8 # IdentifierExp at 233.20; stackHeight = 16
           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 233.20; stackHeight = 24
           sw $t0,($sp)#**"" # IdentifierExp at 233.20; stackHeight = 24
          # EXIT NODE # IdentifierExp at 233.20; stackHeight = 24
          # ENTER NODE # ArrayLength at 233.30; stackHeight = 24
            # ENTER NODE # IdentifierExp at 233.24; stackHeight = 24
             lw $t0,4($s2) # inst-var # IdentifierExp at 233.24; stackHeight = 24
             subu $sp,$sp,4 # IdentifierExp at 233.24; stackHeight = 24
             sw $t0,($sp)#**"" # IdentifierExp at 233.24; stackHeight = 28
            # EXIT NODE # IdentifierExp at 233.24; stackHeight = 28
           lw $t0,($sp) # ArrayLength at 233.30; stackHeight = 28
           beq $t0,$zero,nullPtrException # ArrayLength at 233.30; stackHeight = 28
           lw $t0,-4($t0) # ArrayLength at 233.30; stackHeight = 28
           sw $s5,($sp)#**"GC tag" # ArrayLength at 233.30; stackHeight = 28
           subu $sp,4 # ArrayLength at 233.30; stackHeight = 28
           sw $t0,($sp)#**"" # ArrayLength at 233.30; stackHeight = 28
          # EXIT NODE # ArrayLength at 233.30; stackHeight = 32
         lw $t0,($sp) # LessThan at 233.22; stackHeight = 32
         lw $t1,8($sp) # LessThan at 233.22; stackHeight = 32
         slt $t0,$t1,$t0 # LessThan at 233.22; stackHeight = 32
         addu $sp,$sp,12 # LessThan at 233.22; stackHeight = 32
         sw $t0,($sp)#**"" # LessThan at 233.22; stackHeight = 20
        # EXIT NODE # LessThan at 233.22; stackHeight = 20
       lw $t0,($sp) # While at 233.4; stackHeight = 20
       addu $sp,$sp,4 # While at 233.4; stackHeight = 20
      bne $t0,$zero,while_top_1282 # While at 233.4; stackHeight = 16
      break_target_1282: # While at 233.4; stackHeight = 16
      # EXIT NODE # While at 233.4; stackHeight = 16
     addu $sp,8 # Block at 233.4; stackHeight = 16
    # EXIT NODE # Block at 233.4; stackHeight = 8
  # EXIT NODE # Block at 228.41; stackHeight = 8
  # ENTER NODE # Assign at 228.36; stackHeight = 8
    # ENTER NODE # Plus at 228.37; stackHeight = 8
      # ENTER NODE # IdentifierExp at 228.36; stackHeight = 8
       lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 228.36; stackHeight = 8
       subu $sp,$sp,8 # IdentifierExp at 228.36; stackHeight = 8
       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 228.36; stackHeight = 16
       sw $t0,($sp)#**"" # IdentifierExp at 228.36; stackHeight = 16
      # EXIT NODE # IdentifierExp at 228.36; stackHeight = 16
      # ENTER NODE # IntegerLiteral at 228.37; stackHeight = 16
       subu $sp,$sp,8 # IntegerLiteral at 228.37; stackHeight = 16
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 228.37; stackHeight = 24
       li $t0,1 # IntegerLiteral at 228.37; stackHeight = 24
       sw $t0,($sp) # IntegerLiteral at 228.37; stackHeight = 24
      # EXIT NODE # IntegerLiteral at 228.37; stackHeight = 24
     lw $t0,($sp) # Plus at 228.37; stackHeight = 24
     lw $t1,8($sp) # Plus at 228.37; stackHeight = 24
     addu $t0,$t0,$t1 # Plus at 228.37; stackHeight = 24
     addu $sp,$sp,8 # Plus at 228.37; stackHeight = 24
     sw $t0,($sp)#**"" # Plus at 228.37; stackHeight = 24
    # EXIT NODE # Plus at 228.37; stackHeight = 16
   lw $t0,($sp) # Assign at 228.36; stackHeight = 16
   sw $t0,8($sp) # Assign at 228.36; stackHeight = 16
   addu $sp,$sp,8 # Assign at 228.36; stackHeight = 16
  # EXIT NODE # Assign at 228.36; stackHeight = 8
# EXIT NODE # Block at 228.3; stackHeight = 8
while_enter_1286: # While at 228.3; stackHeight = 8
  # ENTER NODE # LessThan at 228.21; stackHeight = 8
    # ENTER NODE # IdentifierExp at 228.19; stackHeight = 8
     lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 228.19; stackHeight = 8
     subu $sp,$sp,8 # IdentifierExp at 228.19; stackHeight = 8
     sw $s5,4($sp)#**"GC tag" # IdentifierExp at 228.19; stackHeight = 16
     sw $t0,($sp)#**"" # IdentifierExp at 228.19; stackHeight = 16
    # EXIT NODE # IdentifierExp at 228.19; stackHeight = 16
    # ENTER NODE # ArrayLength at 228.27; stackHeight = 16
      # ENTER NODE # IdentifierExp at 228.23; stackHeight = 16
       lw $t0,0($s2) # inst-var # IdentifierExp at 228.23; stackHeight = 16
       subu $sp,$sp,4 # IdentifierExp at 228.23; stackHeight = 16
       sw $t0,($sp)#**"" # IdentifierExp at 228.23; stackHeight = 20
      # EXIT NODE # IdentifierExp at 228.23; stackHeight = 20
     lw $t0,($sp) # ArrayLength at 228.27; stackHeight = 20
     beq $t0,$zero,nullPtrException # ArrayLength at 228.27; stackHeight = 20
     lw $t0,-4($t0) # ArrayLength at 228.27; stackHeight = 20
     sw $s5,($sp)#**"GC tag" # ArrayLength at 228.27; stackHeight = 20
     subu $sp,4 # ArrayLength at 228.27; stackHeight = 20
     sw $t0,($sp)#**"" # ArrayLength at 228.27; stackHeight = 20
    # EXIT NODE # ArrayLength at 228.27; stackHeight = 24
   lw $t0,($sp) # LessThan at 228.21; stackHeight = 24
   lw $t1,8($sp) # LessThan at 228.21; stackHeight = 24
   slt $t0,$t1,$t0 # LessThan at 228.21; stackHeight = 24
   addu $sp,$sp,12 # LessThan at 228.21; stackHeight = 24
   sw $t0,($sp)#**"" # LessThan at 228.21; stackHeight = 12
  # EXIT NODE # LessThan at 228.21; stackHeight = 12
 lw $t0,($sp) # While at 228.3; stackHeight = 12
 addu $sp,$sp,4 # While at 228.3; stackHeight = 12
bne $t0,$zero,while_top_1286 # While at 228.3; stackHeight = 8
break_target_1286: # While at 228.3; stackHeight = 8
# EXIT NODE # While at 228.3; stackHeight = 8
 addu $sp,8 # Block at 228.3; stackHeight = 8
# EXIT NODE # Block at 228.3; stackHeight = 0
  # ENTER NODE # Block at 238.3; stackHeight = 0
    # ENTER NODE # LocalVarDecl at 238.12; stackHeight = 0
      # ENTER NODE # IntegerLiteral at 238.16; stackHeight = 0
       subu $sp,$sp,8 # IntegerLiteral at 238.16; stackHeight = 0
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 238.16; stackHeight = 8
       li $t0,0 # IntegerLiteral at 238.16; stackHeight = 8
       sw $t0,($sp) # IntegerLiteral at 238.16; stackHeight = 8
      # EXIT NODE # IntegerLiteral at 238.16; stackHeight = 8
    # EXIT NODE # LocalVarDecl at 238.12; stackHeight = 8
    # ENTER NODE # While at 238.3; stackHeight = 8
    j while_enter_1365 # While at 238.3; stackHeight = 8
    while_top_1365: # While at 238.3; stackHeight = 8
      # ENTER NODE # Block at 238.3; stackHeight = 8
        # ENTER NODE # Block at 238.43; stackHeight = 8
          # ENTER NODE # Block at 239.4; stackHeight = 8
            # ENTER NODE # LocalVarDecl at 239.13; stackHeight = 8
              # ENTER NODE # IntegerLiteral at 239.17; stackHeight = 8
               subu $sp,$sp,8 # IntegerLiteral at 239.17; stackHeight = 8
               sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 239.17; stackHeight = 16
               li $t0,0 # IntegerLiteral at 239.17; stackHeight = 16
               sw $t0,($sp) # IntegerLiteral at 239.17; stackHeight = 16
              # EXIT NODE # IntegerLiteral at 239.17; stackHeight = 16
            # EXIT NODE # LocalVarDecl at 239.13; stackHeight = 16
            # ENTER NODE # While at 239.4; stackHeight = 16
            j while_enter_1330 # While at 239.4; stackHeight = 16
            while_top_1330: # While at 239.4; stackHeight = 16
              # ENTER NODE # Block at 239.4; stackHeight = 16
                # ENTER NODE # Block at 239.42; stackHeight = 16
                  # ENTER NODE # CallStatement at 240.5; stackHeight = 16
                    # ENTER NODE # Call at 240.5; stackHeight = 16
                      # ENTER NODE # This at 240.5; stackHeight = 16
                       subu $sp,$sp,4 # This at 240.5; stackHeight = 16
                       sw $s2,($sp)#**"" # This at 240.5; stackHeight = 20
                      # EXIT NODE # This at 240.5; stackHeight = 20
                      # ENTER NODE # Call at 240.25; stackHeight = 20
                        # ENTER NODE # IdentifierExp at 240.15; stackHeight = 20
                         lw $t0,4($s2) # inst-var # IdentifierExp at 240.15; stackHeight = 20
                         subu $sp,$sp,4 # IdentifierExp at 240.15; stackHeight = 20
                         sw $t0,($sp)#**"" # IdentifierExp at 240.15; stackHeight = 24
                        # EXIT NODE # IdentifierExp at 240.15; stackHeight = 24
                        # ENTER NODE # IdentifierExp at 240.22; stackHeight = 24
                         lw $t0,16($sp) # local: stackHt=24,var-offset=-8 # IdentifierExp at 240.22; stackHeight = 24
                         subu $sp,$sp,8 # IdentifierExp at 240.22; stackHeight = 24
                         sw $s5,4($sp)#**"GC tag" # IdentifierExp at 240.22; stackHeight = 32
                         sw $t0,($sp)#**"" # IdentifierExp at 240.22; stackHeight = 32
                        # EXIT NODE # IdentifierExp at 240.22; stackHeight = 32
                       lw $t0,8($sp) # ArrayLookup at 240.21; stackHeight = 32
                       beq $t0,$zero,nullPtrException # ArrayLookup at 240.21; stackHeight = 32
                       lw $t1,-4($t0) # ArrayLookup at 240.21; stackHeight = 32
                       lw $t2,($sp) # ArrayLookup at 240.21; stackHeight = 32
                       bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 240.21; stackHeight = 32
                       sll $t2,$t2,2 # ArrayLookup at 240.21; stackHeight = 32
                       addu $t2,$t2,$t0 # ArrayLookup at 240.21; stackHeight = 32
                       lw $t0,($t2) # ArrayLookup at 240.21; stackHeight = 32
                       sw $t0,8($sp)#**"" # ArrayLookup at 240.21; stackHeight = 32
                       addu $sp,$sp,8 # ArrayLookup at 240.21; stackHeight = 32
                      # EXIT NODE # ArrayLookup at 240.21; stackHeight = 24
                      # ENTER NODE # IdentifierExp at 240.32; stackHeight = 24
                       lw $t0,0($s2) # inst-var # IdentifierExp at 240.32; stackHeight = 24
                       subu $sp,$sp,4 # IdentifierExp at 240.32; stackHeight = 24
                       sw $t0,($sp)#**"" # IdentifierExp at 240.32; stackHeight = 28
                      # EXIT NODE # IdentifierExp at 240.32; stackHeight = 28
                      # ENTER NODE # IdentifierExp at 240.37; stackHeight = 28
                       lw $t0,12($sp) # local: stackHt=28,var-offset=-16 # IdentifierExp at 240.37; stackHeight = 28
                       subu $sp,$sp,8 # IdentifierExp at 240.37; stackHeight = 28
                       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 240.37; stackHeight = 36
                       sw $t0,($sp)#**"" # IdentifierExp at 240.37; stackHeight = 36
                      # EXIT NODE # IdentifierExp at 240.37; stackHeight = 36
                     lw $t0,8($sp) # ArrayLookup at 240.36; stackHeight = 36
                     beq $t0,$zero,nullPtrException # ArrayLookup at 240.36; stackHeight = 36
                     lw $t1,-4($t0) # ArrayLookup at 240.36; stackHeight = 36
                     lw $t2,($sp) # ArrayLookup at 240.36; stackHeight = 36
                     bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 240.36; stackHeight = 36
                     sll $t2,$t2,2 # ArrayLookup at 240.36; stackHeight = 36
                     addu $t2,$t2,$t0 # ArrayLookup at 240.36; stackHeight = 36
                     lw $t0,($t2) # ArrayLookup at 240.36; stackHeight = 36
                     sw $t0,8($sp)#**"" # ArrayLookup at 240.36; stackHeight = 36
                     addu $sp,$sp,8 # ArrayLookup at 240.36; stackHeight = 36
                    # EXIT NODE # ArrayLookup at 240.36; stackHeight = 28
                   lw $t0,4($sp) # Call at 240.25; stackHeight = 28
                   beq $t0,$zero,nullPtrException # Call at 240.25; stackHeight = 28
                   lw $t0,-12($t0) # Call at 240.25; stackHeight = 28
                   lw $t0,4($t0) # Call at 240.25; stackHeight = 28
                   jalr $t0 # equals # Call at 240.25; stackHeight = 28
                  # EXIT NODE # Call at 240.25; stackHeight = 24
                 lw $t0,4($sp) # Call at 240.5; stackHeight = 24
                 beq $t0,$zero,nullPtrException # Call at 240.5; stackHeight = 24
                 lw $t0,-12($t0) # Call at 240.5; stackHeight = 24
                 lw $t0,28($t0) # Call at 240.5; stackHeight = 24
                 jalr $t0 # printBool # Call at 240.5; stackHeight = 24
                # EXIT NODE # Call at 240.5; stackHeight = 16
              # EXIT NODE # CallStatement at 240.5; stackHeight = 16
              # ENTER NODE # CallStatement at 241.5; stackHeight = 16
                # ENTER NODE # Call at 241.5; stackHeight = 16
                  # ENTER NODE # This at 241.5; stackHeight = 16
                   subu $sp,$sp,4 # This at 241.5; stackHeight = 16
                   sw $s2,($sp)#**"" # This at 241.5; stackHeight = 20
                  # EXIT NODE # This at 241.5; stackHeight = 20
                  # ENTER NODE # StringLiteral at 241.14; stackHeight = 20
                   subu $sp,$sp,4 # StringLiteral at 241.14; stackHeight = 20
                   la $t0,strLit_486 # StringLiteral at 241.14; stackHeight = 24
                   sw $t0,($sp)#**"strLit:\?" # StringLiteral at 241.14; stackHeight = 24
                  # EXIT NODE # StringLiteral at 241.14; stackHeight = 24
                 lw $t0,4($sp) # Call at 241.5; stackHeight = 24
                 beq $t0,$zero,nullPtrException # Call at 241.5; stackHeight = 24
                 lw $t0,-12($t0) # Call at 241.5; stackHeight = 24
                 lw $t0,24($t0) # Call at 241.5; stackHeight = 24
                 jalr $t0 # printStr # Call at 241.5; stackHeight = 24
                # EXIT NODE # Call at 241.5; stackHeight = 16
              # EXIT NODE # CallStatement at 241.5; stackHeight = 16
            # EXIT NODE # Block at 239.42; stackHeight = 16
            # ENTER NODE # Assign at 239.37; stackHeight = 16
              # ENTER NODE # Plus at 239.38; stackHeight = 16
                # ENTER NODE # IdentifierExp at 239.37; stackHeight = 16
                 lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 239.37; stackHeight = 16
                 subu $sp,$sp,8 # IdentifierExp at 239.37; stackHeight = 16
                 sw $s5,4($sp)#**"GC tag" # IdentifierExp at 239.37; stackHeight = 24
                 sw $t0,($sp)#**"" # IdentifierExp at 239.37; stackHeight = 24
                # EXIT NODE # IdentifierExp at 239.37; stackHeight = 24
                # ENTER NODE # IntegerLiteral at 239.38; stackHeight = 24
                 subu $sp,$sp,8 # IntegerLiteral at 239.38; stackHeight = 24
                 sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 239.38; stackHeight = 32
                 li $t0,1 # IntegerLiteral at 239.38; stackHeight = 32
                 sw $t0,($sp) # IntegerLiteral at 239.38; stackHeight = 32
                # EXIT NODE # IntegerLiteral at 239.38; stackHeight = 32
               lw $t0,($sp) # Plus at 239.38; stackHeight = 32
               lw $t1,8($sp) # Plus at 239.38; stackHeight = 32
               addu $t0,$t0,$t1 # Plus at 239.38; stackHeight = 32
               addu $sp,$sp,8 # Plus at 239.38; stackHeight = 32
               sw $t0,($sp)#**"" # Plus at 239.38; stackHeight = 32
              # EXIT NODE # Plus at 239.38; stackHeight = 24
             lw $t0,($sp) # Assign at 239.37; stackHeight = 24
             sw $t0,8($sp) # Assign at 239.37; stackHeight = 24
             addu $sp,$sp,8 # Assign at 239.37; stackHeight = 24
            # EXIT NODE # Assign at 239.37; stackHeight = 16
          # EXIT NODE # Block at 239.4; stackHeight = 16
        while_enter_1330: # While at 239.4; stackHeight = 16
          # ENTER NODE # LessThan at 239.22; stackHeight = 16
            # ENTER NODE # IdentifierExp at 239.20; stackHeight = 16
             lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 239.20; stackHeight = 16
             subu $sp,$sp,8 # IdentifierExp at 239.20; stackHeight = 16
             sw $s5,4($sp)#**"GC tag" # IdentifierExp at 239.20; stackHeight = 24
             sw $t0,($sp)#**"" # IdentifierExp at 239.20; stackHeight = 24
            # EXIT NODE # IdentifierExp at 239.20; stackHeight = 24
            # ENTER NODE # ArrayLength at 239.28; stackHeight = 24
              # ENTER NODE # IdentifierExp at 239.24; stackHeight = 24
               lw $t0,0($s2) # inst-var # IdentifierExp at 239.24; stackHeight = 24
               subu $sp,$sp,4 # IdentifierExp at 239.24; stackHeight = 24
               sw $t0,($sp)#**"" # IdentifierExp at 239.24; stackHeight = 28
              # EXIT NODE # IdentifierExp at 239.24; stackHeight = 28
             lw $t0,($sp) # ArrayLength at 239.28; stackHeight = 28
             beq $t0,$zero,nullPtrException # ArrayLength at 239.28; stackHeight = 28
             lw $t0,-4($t0) # ArrayLength at 239.28; stackHeight = 28
             sw $s5,($sp)#**"GC tag" # ArrayLength at 239.28; stackHeight = 28
             subu $sp,4 # ArrayLength at 239.28; stackHeight = 28
             sw $t0,($sp)#**"" # ArrayLength at 239.28; stackHeight = 28
            # EXIT NODE # ArrayLength at 239.28; stackHeight = 32
           lw $t0,($sp) # LessThan at 239.22; stackHeight = 32
           lw $t1,8($sp) # LessThan at 239.22; stackHeight = 32
           slt $t0,$t1,$t0 # LessThan at 239.22; stackHeight = 32
           addu $sp,$sp,12 # LessThan at 239.22; stackHeight = 32
           sw $t0,($sp)#**"" # LessThan at 239.22; stackHeight = 20
          # EXIT NODE # LessThan at 239.22; stackHeight = 20
         lw $t0,($sp) # While at 239.4; stackHeight = 20
         addu $sp,$sp,4 # While at 239.4; stackHeight = 20
        bne $t0,$zero,while_top_1330 # While at 239.4; stackHeight = 16
        break_target_1330: # While at 239.4; stackHeight = 16
        # EXIT NODE # While at 239.4; stackHeight = 16
       addu $sp,8 # Block at 239.4; stackHeight = 16
      # EXIT NODE # Block at 239.4; stackHeight = 8
      # ENTER NODE # Block at 243.4; stackHeight = 8
        # ENTER NODE # LocalVarDecl at 243.13; stackHeight = 8
          # ENTER NODE # IntegerLiteral at 243.17; stackHeight = 8
           subu $sp,$sp,8 # IntegerLiteral at 243.17; stackHeight = 8
           sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 243.17; stackHeight = 16
           li $t0,0 # IntegerLiteral at 243.17; stackHeight = 16
           sw $t0,($sp) # IntegerLiteral at 243.17; stackHeight = 16
          # EXIT NODE # IntegerLiteral at 243.17; stackHeight = 16
        # EXIT NODE # LocalVarDecl at 243.13; stackHeight = 16
        # ENTER NODE # While at 243.4; stackHeight = 16
        j while_enter_1361 # While at 243.4; stackHeight = 16
        while_top_1361: # While at 243.4; stackHeight = 16
          # ENTER NODE # Block at 243.4; stackHeight = 16
            # ENTER NODE # Block at 243.44; stackHeight = 16
              # ENTER NODE # CallStatement at 244.5; stackHeight = 16
                # ENTER NODE # Call at 244.5; stackHeight = 16
                  # ENTER NODE # This at 244.5; stackHeight = 16
                   subu $sp,$sp,4 # This at 244.5; stackHeight = 16
                   sw $s2,($sp)#**"" # This at 244.5; stackHeight = 20
                  # EXIT NODE # This at 244.5; stackHeight = 20
                  # ENTER NODE # Call at 244.25; stackHeight = 20
                    # ENTER NODE # IdentifierExp at 244.15; stackHeight = 20
                     lw $t0,4($s2) # inst-var # IdentifierExp at 244.15; stackHeight = 20
                     subu $sp,$sp,4 # IdentifierExp at 244.15; stackHeight = 20
                     sw $t0,($sp)#**"" # IdentifierExp at 244.15; stackHeight = 24
                    # EXIT NODE # IdentifierExp at 244.15; stackHeight = 24
                    # ENTER NODE # IdentifierExp at 244.22; stackHeight = 24
                     lw $t0,16($sp) # local: stackHt=24,var-offset=-8 # IdentifierExp at 244.22; stackHeight = 24
                     subu $sp,$sp,8 # IdentifierExp at 244.22; stackHeight = 24
                     sw $s5,4($sp)#**"GC tag" # IdentifierExp at 244.22; stackHeight = 32
                     sw $t0,($sp)#**"" # IdentifierExp at 244.22; stackHeight = 32
                    # EXIT NODE # IdentifierExp at 244.22; stackHeight = 32
                   lw $t0,8($sp) # ArrayLookup at 244.21; stackHeight = 32
                   beq $t0,$zero,nullPtrException # ArrayLookup at 244.21; stackHeight = 32
                   lw $t1,-4($t0) # ArrayLookup at 244.21; stackHeight = 32
                   lw $t2,($sp) # ArrayLookup at 244.21; stackHeight = 32
                   bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 244.21; stackHeight = 32
                   sll $t2,$t2,2 # ArrayLookup at 244.21; stackHeight = 32
                   addu $t2,$t2,$t0 # ArrayLookup at 244.21; stackHeight = 32
                   lw $t0,($t2) # ArrayLookup at 244.21; stackHeight = 32
                   sw $t0,8($sp)#**"" # ArrayLookup at 244.21; stackHeight = 32
                   addu $sp,$sp,8 # ArrayLookup at 244.21; stackHeight = 32
                  # EXIT NODE # ArrayLookup at 244.21; stackHeight = 24
                  # ENTER NODE # IdentifierExp at 244.32; stackHeight = 24
                   lw $t0,4($s2) # inst-var # IdentifierExp at 244.32; stackHeight = 24
                   subu $sp,$sp,4 # IdentifierExp at 244.32; stackHeight = 24
                   sw $t0,($sp)#**"" # IdentifierExp at 244.32; stackHeight = 28
                  # EXIT NODE # IdentifierExp at 244.32; stackHeight = 28
                  # ENTER NODE # IdentifierExp at 244.39; stackHeight = 28
                   lw $t0,12($sp) # local: stackHt=28,var-offset=-16 # IdentifierExp at 244.39; stackHeight = 28
                   subu $sp,$sp,8 # IdentifierExp at 244.39; stackHeight = 28
                   sw $s5,4($sp)#**"GC tag" # IdentifierExp at 244.39; stackHeight = 36
                   sw $t0,($sp)#**"" # IdentifierExp at 244.39; stackHeight = 36
                  # EXIT NODE # IdentifierExp at 244.39; stackHeight = 36
                 lw $t0,8($sp) # ArrayLookup at 244.38; stackHeight = 36
                 beq $t0,$zero,nullPtrException # ArrayLookup at 244.38; stackHeight = 36
                 lw $t1,-4($t0) # ArrayLookup at 244.38; stackHeight = 36
                 lw $t2,($sp) # ArrayLookup at 244.38; stackHeight = 36
                 bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 244.38; stackHeight = 36
                 sll $t2,$t2,2 # ArrayLookup at 244.38; stackHeight = 36
                 addu $t2,$t2,$t0 # ArrayLookup at 244.38; stackHeight = 36
                 lw $t0,($t2) # ArrayLookup at 244.38; stackHeight = 36
                 sw $t0,8($sp)#**"" # ArrayLookup at 244.38; stackHeight = 36
                 addu $sp,$sp,8 # ArrayLookup at 244.38; stackHeight = 36
                # EXIT NODE # ArrayLookup at 244.38; stackHeight = 28
               lw $t0,4($sp) # Call at 244.25; stackHeight = 28
               beq $t0,$zero,nullPtrException # Call at 244.25; stackHeight = 28
               lw $t0,-12($t0) # Call at 244.25; stackHeight = 28
               lw $t0,4($t0) # Call at 244.25; stackHeight = 28
               jalr $t0 # equals # Call at 244.25; stackHeight = 28
              # EXIT NODE # Call at 244.25; stackHeight = 24
             lw $t0,4($sp) # Call at 244.5; stackHeight = 24
             beq $t0,$zero,nullPtrException # Call at 244.5; stackHeight = 24
             lw $t0,-12($t0) # Call at 244.5; stackHeight = 24
             lw $t0,28($t0) # Call at 244.5; stackHeight = 24
             jalr $t0 # printBool # Call at 244.5; stackHeight = 24
            # EXIT NODE # Call at 244.5; stackHeight = 16
          # EXIT NODE # CallStatement at 244.5; stackHeight = 16
          # ENTER NODE # CallStatement at 245.5; stackHeight = 16
            # ENTER NODE # Call at 245.5; stackHeight = 16
              # ENTER NODE # This at 245.5; stackHeight = 16
               subu $sp,$sp,4 # This at 245.5; stackHeight = 16
               sw $s2,($sp)#**"" # This at 245.5; stackHeight = 20
              # EXIT NODE # This at 245.5; stackHeight = 20
              # ENTER NODE # StringLiteral at 245.14; stackHeight = 20
               subu $sp,$sp,4 # StringLiteral at 245.14; stackHeight = 20
               la $t0,strLit_486 # StringLiteral at 245.14; stackHeight = 24
               sw $t0,($sp)#**"strLit:\?" # StringLiteral at 245.14; stackHeight = 24
              # EXIT NODE # StringLiteral at 245.14; stackHeight = 24
             lw $t0,4($sp) # Call at 245.5; stackHeight = 24
             beq $t0,$zero,nullPtrException # Call at 245.5; stackHeight = 24
             lw $t0,-12($t0) # Call at 245.5; stackHeight = 24
             lw $t0,24($t0) # Call at 245.5; stackHeight = 24
             jalr $t0 # printStr # Call at 245.5; stackHeight = 24
            # EXIT NODE # Call at 245.5; stackHeight = 16
          # EXIT NODE # CallStatement at 245.5; stackHeight = 16
        # EXIT NODE # Block at 243.44; stackHeight = 16
        # ENTER NODE # Assign at 243.39; stackHeight = 16
          # ENTER NODE # Plus at 243.40; stackHeight = 16
            # ENTER NODE # IdentifierExp at 243.39; stackHeight = 16
             lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 243.39; stackHeight = 16
             subu $sp,$sp,8 # IdentifierExp at 243.39; stackHeight = 16
             sw $s5,4($sp)#**"GC tag" # IdentifierExp at 243.39; stackHeight = 24
             sw $t0,($sp)#**"" # IdentifierExp at 243.39; stackHeight = 24
            # EXIT NODE # IdentifierExp at 243.39; stackHeight = 24
            # ENTER NODE # IntegerLiteral at 243.40; stackHeight = 24
             subu $sp,$sp,8 # IntegerLiteral at 243.40; stackHeight = 24
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 243.40; stackHeight = 32
             li $t0,1 # IntegerLiteral at 243.40; stackHeight = 32
             sw $t0,($sp) # IntegerLiteral at 243.40; stackHeight = 32
            # EXIT NODE # IntegerLiteral at 243.40; stackHeight = 32
           lw $t0,($sp) # Plus at 243.40; stackHeight = 32
           lw $t1,8($sp) # Plus at 243.40; stackHeight = 32
           addu $t0,$t0,$t1 # Plus at 243.40; stackHeight = 32
           addu $sp,$sp,8 # Plus at 243.40; stackHeight = 32
           sw $t0,($sp)#**"" # Plus at 243.40; stackHeight = 32
          # EXIT NODE # Plus at 243.40; stackHeight = 24
         lw $t0,($sp) # Assign at 243.39; stackHeight = 24
         sw $t0,8($sp) # Assign at 243.39; stackHeight = 24
         addu $sp,$sp,8 # Assign at 243.39; stackHeight = 24
        # EXIT NODE # Assign at 243.39; stackHeight = 16
      # EXIT NODE # Block at 243.4; stackHeight = 16
    while_enter_1361: # While at 243.4; stackHeight = 16
      # ENTER NODE # LessThan at 243.22; stackHeight = 16
        # ENTER NODE # IdentifierExp at 243.20; stackHeight = 16
         lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 243.20; stackHeight = 16
         subu $sp,$sp,8 # IdentifierExp at 243.20; stackHeight = 16
         sw $s5,4($sp)#**"GC tag" # IdentifierExp at 243.20; stackHeight = 24
         sw $t0,($sp)#**"" # IdentifierExp at 243.20; stackHeight = 24
        # EXIT NODE # IdentifierExp at 243.20; stackHeight = 24
        # ENTER NODE # ArrayLength at 243.30; stackHeight = 24
          # ENTER NODE # IdentifierExp at 243.24; stackHeight = 24
           lw $t0,4($s2) # inst-var # IdentifierExp at 243.24; stackHeight = 24
           subu $sp,$sp,4 # IdentifierExp at 243.24; stackHeight = 24
           sw $t0,($sp)#**"" # IdentifierExp at 243.24; stackHeight = 28
          # EXIT NODE # IdentifierExp at 243.24; stackHeight = 28
         lw $t0,($sp) # ArrayLength at 243.30; stackHeight = 28
         beq $t0,$zero,nullPtrException # ArrayLength at 243.30; stackHeight = 28
         lw $t0,-4($t0) # ArrayLength at 243.30; stackHeight = 28
         sw $s5,($sp)#**"GC tag" # ArrayLength at 243.30; stackHeight = 28
         subu $sp,4 # ArrayLength at 243.30; stackHeight = 28
         sw $t0,($sp)#**"" # ArrayLength at 243.30; stackHeight = 28
        # EXIT NODE # ArrayLength at 243.30; stackHeight = 32
       lw $t0,($sp) # LessThan at 243.22; stackHeight = 32
       lw $t1,8($sp) # LessThan at 243.22; stackHeight = 32
       slt $t0,$t1,$t0 # LessThan at 243.22; stackHeight = 32
       addu $sp,$sp,12 # LessThan at 243.22; stackHeight = 32
       sw $t0,($sp)#**"" # LessThan at 243.22; stackHeight = 20
      # EXIT NODE # LessThan at 243.22; stackHeight = 20
     lw $t0,($sp) # While at 243.4; stackHeight = 20
     addu $sp,$sp,4 # While at 243.4; stackHeight = 20
    bne $t0,$zero,while_top_1361 # While at 243.4; stackHeight = 16
    break_target_1361: # While at 243.4; stackHeight = 16
    # EXIT NODE # While at 243.4; stackHeight = 16
   addu $sp,8 # Block at 243.4; stackHeight = 16
  # EXIT NODE # Block at 243.4; stackHeight = 8
# EXIT NODE # Block at 238.43; stackHeight = 8
  # ENTER NODE # Assign at 238.38; stackHeight = 8
    # ENTER NODE # Plus at 238.39; stackHeight = 8
      # ENTER NODE # IdentifierExp at 238.38; stackHeight = 8
       lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 238.38; stackHeight = 8
       subu $sp,$sp,8 # IdentifierExp at 238.38; stackHeight = 8
       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 238.38; stackHeight = 16
       sw $t0,($sp)#**"" # IdentifierExp at 238.38; stackHeight = 16
      # EXIT NODE # IdentifierExp at 238.38; stackHeight = 16
      # ENTER NODE # IntegerLiteral at 238.39; stackHeight = 16
       subu $sp,$sp,8 # IntegerLiteral at 238.39; stackHeight = 16
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 238.39; stackHeight = 24
       li $t0,1 # IntegerLiteral at 238.39; stackHeight = 24
       sw $t0,($sp) # IntegerLiteral at 238.39; stackHeight = 24
      # EXIT NODE # IntegerLiteral at 238.39; stackHeight = 24
     lw $t0,($sp) # Plus at 238.39; stackHeight = 24
     lw $t1,8($sp) # Plus at 238.39; stackHeight = 24
     addu $t0,$t0,$t1 # Plus at 238.39; stackHeight = 24
     addu $sp,$sp,8 # Plus at 238.39; stackHeight = 24
     sw $t0,($sp)#**"" # Plus at 238.39; stackHeight = 24
    # EXIT NODE # Plus at 238.39; stackHeight = 16
   lw $t0,($sp) # Assign at 238.38; stackHeight = 16
   sw $t0,8($sp) # Assign at 238.38; stackHeight = 16
   addu $sp,$sp,8 # Assign at 238.38; stackHeight = 16
  # EXIT NODE # Assign at 238.38; stackHeight = 8
# EXIT NODE # Block at 238.3; stackHeight = 8
while_enter_1365: # While at 238.3; stackHeight = 8
  # ENTER NODE # LessThan at 238.21; stackHeight = 8
    # ENTER NODE # IdentifierExp at 238.19; stackHeight = 8
     lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 238.19; stackHeight = 8
     subu $sp,$sp,8 # IdentifierExp at 238.19; stackHeight = 8
     sw $s5,4($sp)#**"GC tag" # IdentifierExp at 238.19; stackHeight = 16
     sw $t0,($sp)#**"" # IdentifierExp at 238.19; stackHeight = 16
    # EXIT NODE # IdentifierExp at 238.19; stackHeight = 16
    # ENTER NODE # ArrayLength at 238.29; stackHeight = 16
      # ENTER NODE # IdentifierExp at 238.23; stackHeight = 16
       lw $t0,4($s2) # inst-var # IdentifierExp at 238.23; stackHeight = 16
       subu $sp,$sp,4 # IdentifierExp at 238.23; stackHeight = 16
       sw $t0,($sp)#**"" # IdentifierExp at 238.23; stackHeight = 20
      # EXIT NODE # IdentifierExp at 238.23; stackHeight = 20
     lw $t0,($sp) # ArrayLength at 238.29; stackHeight = 20
     beq $t0,$zero,nullPtrException # ArrayLength at 238.29; stackHeight = 20
     lw $t0,-4($t0) # ArrayLength at 238.29; stackHeight = 20
     sw $s5,($sp)#**"GC tag" # ArrayLength at 238.29; stackHeight = 20
     subu $sp,4 # ArrayLength at 238.29; stackHeight = 20
     sw $t0,($sp)#**"" # ArrayLength at 238.29; stackHeight = 20
    # EXIT NODE # ArrayLength at 238.29; stackHeight = 24
   lw $t0,($sp) # LessThan at 238.21; stackHeight = 24
   lw $t1,8($sp) # LessThan at 238.21; stackHeight = 24
   slt $t0,$t1,$t0 # LessThan at 238.21; stackHeight = 24
   addu $sp,$sp,12 # LessThan at 238.21; stackHeight = 24
   sw $t0,($sp)#**"" # LessThan at 238.21; stackHeight = 12
  # EXIT NODE # LessThan at 238.21; stackHeight = 12
 lw $t0,($sp) # While at 238.3; stackHeight = 12
 addu $sp,$sp,4 # While at 238.3; stackHeight = 12
bne $t0,$zero,while_top_1365 # While at 238.3; stackHeight = 8
break_target_1365: # While at 238.3; stackHeight = 8
# EXIT NODE # While at 238.3; stackHeight = 8
 addu $sp,8 # Block at 238.3; stackHeight = 8
# EXIT NODE # Block at 238.3; stackHeight = 0
 # stack height is 0 # MethodDeclVoid at 227.14; stackHeight = 0
 lw $ra,4($sp) # MethodDeclVoid at 227.14; stackHeight = 0
 lw $s2,0($sp) # MethodDeclVoid at 227.14; stackHeight = 0
 addu $sp,$sp,8 # MethodDeclVoid at 227.14; stackHeight = 0
jr $ra # MethodDeclVoid at 227.14; stackHeight = -8
# EXIT NODE # MethodDeclVoid at 227.14; stackHeight = -8
  # ENTER NODE # MethodDeclVoid at 250.14; stackHeight = -8
  .globl fcn_1424_hashCodeTest # MethodDeclVoid at 250.14; stackHeight = -8
  fcn_1424_hashCodeTest: # MethodDeclVoid at 250.14; stackHeight = -8
   subu $sp,$sp,4 # MethodDeclVoid at 250.14; stackHeight = -8
   sw $s2,($sp) #**"old this-ptr" # MethodDeclVoid at 250.14; stackHeight = -8
   lw $s2,4($sp) #**"this-ptr" # MethodDeclVoid at 250.14; stackHeight = -8
   sw $ra,4($sp) #**"RA:hashCodeTest" # MethodDeclVoid at 250.14; stackHeight = -8
    # ENTER NODE # Block at 251.3; stackHeight = 0
      # ENTER NODE # LocalVarDecl at 251.12; stackHeight = 0
        # ENTER NODE # IntegerLiteral at 251.16; stackHeight = 0
         subu $sp,$sp,8 # IntegerLiteral at 251.16; stackHeight = 0
         sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 251.16; stackHeight = 8
         li $t0,0 # IntegerLiteral at 251.16; stackHeight = 8
         sw $t0,($sp) # IntegerLiteral at 251.16; stackHeight = 8
        # EXIT NODE # IntegerLiteral at 251.16; stackHeight = 8
      # EXIT NODE # LocalVarDecl at 251.12; stackHeight = 8
      # ENTER NODE # While at 251.3; stackHeight = 8
      j while_enter_1394 # While at 251.3; stackHeight = 8
      while_top_1394: # While at 251.3; stackHeight = 8
        # ENTER NODE # Block at 251.3; stackHeight = 8
          # ENTER NODE # Block at 251.41; stackHeight = 8
            # ENTER NODE # CallStatement at 252.4; stackHeight = 8
              # ENTER NODE # Call at 252.4; stackHeight = 8
                # ENTER NODE # This at 252.4; stackHeight = 8
                 subu $sp,$sp,4 # This at 252.4; stackHeight = 8
                 sw $s2,($sp)#**"" # This at 252.4; stackHeight = 12
                # EXIT NODE # This at 252.4; stackHeight = 12
                # ENTER NODE # Call at 252.21; stackHeight = 12
                  # ENTER NODE # IdentifierExp at 252.13; stackHeight = 12
                   lw $t0,0($s2) # inst-var # IdentifierExp at 252.13; stackHeight = 12
                   subu $sp,$sp,4 # IdentifierExp at 252.13; stackHeight = 12
                   sw $t0,($sp)#**"" # IdentifierExp at 252.13; stackHeight = 16
                  # EXIT NODE # IdentifierExp at 252.13; stackHeight = 16
                  # ENTER NODE # IdentifierExp at 252.18; stackHeight = 16
                   lw $t0,8($sp) # local: stackHt=16,var-offset=-8 # IdentifierExp at 252.18; stackHeight = 16
                   subu $sp,$sp,8 # IdentifierExp at 252.18; stackHeight = 16
                   sw $s5,4($sp)#**"GC tag" # IdentifierExp at 252.18; stackHeight = 24
                   sw $t0,($sp)#**"" # IdentifierExp at 252.18; stackHeight = 24
                  # EXIT NODE # IdentifierExp at 252.18; stackHeight = 24
                 lw $t0,8($sp) # ArrayLookup at 252.17; stackHeight = 24
                 beq $t0,$zero,nullPtrException # ArrayLookup at 252.17; stackHeight = 24
                 lw $t1,-4($t0) # ArrayLookup at 252.17; stackHeight = 24
                 lw $t2,($sp) # ArrayLookup at 252.17; stackHeight = 24
                 bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 252.17; stackHeight = 24
                 sll $t2,$t2,2 # ArrayLookup at 252.17; stackHeight = 24
                 addu $t2,$t2,$t0 # ArrayLookup at 252.17; stackHeight = 24
                 lw $t0,($t2) # ArrayLookup at 252.17; stackHeight = 24
                 sw $t0,8($sp)#**"" # ArrayLookup at 252.17; stackHeight = 24
                 addu $sp,$sp,8 # ArrayLookup at 252.17; stackHeight = 24
                # EXIT NODE # ArrayLookup at 252.17; stackHeight = 16
               lw $t0,0($sp) # Call at 252.21; stackHeight = 16
               beq $t0,$zero,nullPtrException # Call at 252.21; stackHeight = 16
               lw $t0,-12($t0) # Call at 252.21; stackHeight = 16
               lw $t0,0($t0) # Call at 252.21; stackHeight = 16
               jalr $t0 # hashCode # Call at 252.21; stackHeight = 16
              # EXIT NODE # Call at 252.21; stackHeight = 20
             lw $t0,8($sp) # Call at 252.4; stackHeight = 20
             beq $t0,$zero,nullPtrException # Call at 252.4; stackHeight = 20
             lw $t0,-12($t0) # Call at 252.4; stackHeight = 20
             lw $t0,32($t0) # Call at 252.4; stackHeight = 20
             jalr $t0 # printInt # Call at 252.4; stackHeight = 20
            # EXIT NODE # Call at 252.4; stackHeight = 8
          # EXIT NODE # CallStatement at 252.4; stackHeight = 8
          # ENTER NODE # CallStatement at 253.4; stackHeight = 8
            # ENTER NODE # Call at 253.4; stackHeight = 8
              # ENTER NODE # This at 253.4; stackHeight = 8
               subu $sp,$sp,4 # This at 253.4; stackHeight = 8
               sw $s2,($sp)#**"" # This at 253.4; stackHeight = 12
              # EXIT NODE # This at 253.4; stackHeight = 12
              # ENTER NODE # StringLiteral at 253.13; stackHeight = 12
               subu $sp,$sp,4 # StringLiteral at 253.13; stackHeight = 12
               la $t0,strLit_486 # StringLiteral at 253.13; stackHeight = 16
               sw $t0,($sp)#**"strLit:\?" # StringLiteral at 253.13; stackHeight = 16
              # EXIT NODE # StringLiteral at 253.13; stackHeight = 16
             lw $t0,4($sp) # Call at 253.4; stackHeight = 16
             beq $t0,$zero,nullPtrException # Call at 253.4; stackHeight = 16
             lw $t0,-12($t0) # Call at 253.4; stackHeight = 16
             lw $t0,24($t0) # Call at 253.4; stackHeight = 16
             jalr $t0 # printStr # Call at 253.4; stackHeight = 16
            # EXIT NODE # Call at 253.4; stackHeight = 8
          # EXIT NODE # CallStatement at 253.4; stackHeight = 8
        # EXIT NODE # Block at 251.41; stackHeight = 8
        # ENTER NODE # Assign at 251.36; stackHeight = 8
          # ENTER NODE # Plus at 251.37; stackHeight = 8
            # ENTER NODE # IdentifierExp at 251.36; stackHeight = 8
             lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 251.36; stackHeight = 8
             subu $sp,$sp,8 # IdentifierExp at 251.36; stackHeight = 8
             sw $s5,4($sp)#**"GC tag" # IdentifierExp at 251.36; stackHeight = 16
             sw $t0,($sp)#**"" # IdentifierExp at 251.36; stackHeight = 16
            # EXIT NODE # IdentifierExp at 251.36; stackHeight = 16
            # ENTER NODE # IntegerLiteral at 251.37; stackHeight = 16
             subu $sp,$sp,8 # IntegerLiteral at 251.37; stackHeight = 16
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 251.37; stackHeight = 24
             li $t0,1 # IntegerLiteral at 251.37; stackHeight = 24
             sw $t0,($sp) # IntegerLiteral at 251.37; stackHeight = 24
            # EXIT NODE # IntegerLiteral at 251.37; stackHeight = 24
           lw $t0,($sp) # Plus at 251.37; stackHeight = 24
           lw $t1,8($sp) # Plus at 251.37; stackHeight = 24
           addu $t0,$t0,$t1 # Plus at 251.37; stackHeight = 24
           addu $sp,$sp,8 # Plus at 251.37; stackHeight = 24
           sw $t0,($sp)#**"" # Plus at 251.37; stackHeight = 24
          # EXIT NODE # Plus at 251.37; stackHeight = 16
         lw $t0,($sp) # Assign at 251.36; stackHeight = 16
         sw $t0,8($sp) # Assign at 251.36; stackHeight = 16
         addu $sp,$sp,8 # Assign at 251.36; stackHeight = 16
        # EXIT NODE # Assign at 251.36; stackHeight = 8
      # EXIT NODE # Block at 251.3; stackHeight = 8
    while_enter_1394: # While at 251.3; stackHeight = 8
      # ENTER NODE # LessThan at 251.21; stackHeight = 8
        # ENTER NODE # IdentifierExp at 251.19; stackHeight = 8
         lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 251.19; stackHeight = 8
         subu $sp,$sp,8 # IdentifierExp at 251.19; stackHeight = 8
         sw $s5,4($sp)#**"GC tag" # IdentifierExp at 251.19; stackHeight = 16
         sw $t0,($sp)#**"" # IdentifierExp at 251.19; stackHeight = 16
        # EXIT NODE # IdentifierExp at 251.19; stackHeight = 16
        # ENTER NODE # ArrayLength at 251.27; stackHeight = 16
          # ENTER NODE # IdentifierExp at 251.23; stackHeight = 16
           lw $t0,0($s2) # inst-var # IdentifierExp at 251.23; stackHeight = 16
           subu $sp,$sp,4 # IdentifierExp at 251.23; stackHeight = 16
           sw $t0,($sp)#**"" # IdentifierExp at 251.23; stackHeight = 20
          # EXIT NODE # IdentifierExp at 251.23; stackHeight = 20
         lw $t0,($sp) # ArrayLength at 251.27; stackHeight = 20
         beq $t0,$zero,nullPtrException # ArrayLength at 251.27; stackHeight = 20
         lw $t0,-4($t0) # ArrayLength at 251.27; stackHeight = 20
         sw $s5,($sp)#**"GC tag" # ArrayLength at 251.27; stackHeight = 20
         subu $sp,4 # ArrayLength at 251.27; stackHeight = 20
         sw $t0,($sp)#**"" # ArrayLength at 251.27; stackHeight = 20
        # EXIT NODE # ArrayLength at 251.27; stackHeight = 24
       lw $t0,($sp) # LessThan at 251.21; stackHeight = 24
       lw $t1,8($sp) # LessThan at 251.21; stackHeight = 24
       slt $t0,$t1,$t0 # LessThan at 251.21; stackHeight = 24
       addu $sp,$sp,12 # LessThan at 251.21; stackHeight = 24
       sw $t0,($sp)#**"" # LessThan at 251.21; stackHeight = 12
      # EXIT NODE # LessThan at 251.21; stackHeight = 12
     lw $t0,($sp) # While at 251.3; stackHeight = 12
     addu $sp,$sp,4 # While at 251.3; stackHeight = 12
    bne $t0,$zero,while_top_1394 # While at 251.3; stackHeight = 8
    break_target_1394: # While at 251.3; stackHeight = 8
    # EXIT NODE # While at 251.3; stackHeight = 8
   addu $sp,8 # Block at 251.3; stackHeight = 8
  # EXIT NODE # Block at 251.3; stackHeight = 0
  # ENTER NODE # Block at 255.3; stackHeight = 0
    # ENTER NODE # LocalVarDecl at 255.12; stackHeight = 0
      # ENTER NODE # IntegerLiteral at 255.16; stackHeight = 0
       subu $sp,$sp,8 # IntegerLiteral at 255.16; stackHeight = 0
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 255.16; stackHeight = 8
       li $t0,0 # IntegerLiteral at 255.16; stackHeight = 8
       sw $t0,($sp) # IntegerLiteral at 255.16; stackHeight = 8
      # EXIT NODE # IntegerLiteral at 255.16; stackHeight = 8
    # EXIT NODE # LocalVarDecl at 255.12; stackHeight = 8
    # ENTER NODE # While at 255.3; stackHeight = 8
    j while_enter_1422 # While at 255.3; stackHeight = 8
    while_top_1422: # While at 255.3; stackHeight = 8
      # ENTER NODE # Block at 255.3; stackHeight = 8
        # ENTER NODE # Block at 255.43; stackHeight = 8
          # ENTER NODE # CallStatement at 256.4; stackHeight = 8
            # ENTER NODE # Call at 256.4; stackHeight = 8
              # ENTER NODE # This at 256.4; stackHeight = 8
               subu $sp,$sp,4 # This at 256.4; stackHeight = 8
               sw $s2,($sp)#**"" # This at 256.4; stackHeight = 12
              # EXIT NODE # This at 256.4; stackHeight = 12
              # ENTER NODE # Call at 256.23; stackHeight = 12
                # ENTER NODE # IdentifierExp at 256.13; stackHeight = 12
                 lw $t0,4($s2) # inst-var # IdentifierExp at 256.13; stackHeight = 12
                 subu $sp,$sp,4 # IdentifierExp at 256.13; stackHeight = 12
                 sw $t0,($sp)#**"" # IdentifierExp at 256.13; stackHeight = 16
                # EXIT NODE # IdentifierExp at 256.13; stackHeight = 16
                # ENTER NODE # IdentifierExp at 256.20; stackHeight = 16
                 lw $t0,8($sp) # local: stackHt=16,var-offset=-8 # IdentifierExp at 256.20; stackHeight = 16
                 subu $sp,$sp,8 # IdentifierExp at 256.20; stackHeight = 16
                 sw $s5,4($sp)#**"GC tag" # IdentifierExp at 256.20; stackHeight = 24
                 sw $t0,($sp)#**"" # IdentifierExp at 256.20; stackHeight = 24
                # EXIT NODE # IdentifierExp at 256.20; stackHeight = 24
               lw $t0,8($sp) # ArrayLookup at 256.19; stackHeight = 24
               beq $t0,$zero,nullPtrException # ArrayLookup at 256.19; stackHeight = 24
               lw $t1,-4($t0) # ArrayLookup at 256.19; stackHeight = 24
               lw $t2,($sp) # ArrayLookup at 256.19; stackHeight = 24
               bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 256.19; stackHeight = 24
               sll $t2,$t2,2 # ArrayLookup at 256.19; stackHeight = 24
               addu $t2,$t2,$t0 # ArrayLookup at 256.19; stackHeight = 24
               lw $t0,($t2) # ArrayLookup at 256.19; stackHeight = 24
               sw $t0,8($sp)#**"" # ArrayLookup at 256.19; stackHeight = 24
               addu $sp,$sp,8 # ArrayLookup at 256.19; stackHeight = 24
              # EXIT NODE # ArrayLookup at 256.19; stackHeight = 16
             lw $t0,0($sp) # Call at 256.23; stackHeight = 16
             beq $t0,$zero,nullPtrException # Call at 256.23; stackHeight = 16
             lw $t0,-12($t0) # Call at 256.23; stackHeight = 16
             lw $t0,0($t0) # Call at 256.23; stackHeight = 16
             jalr $t0 # hashCode # Call at 256.23; stackHeight = 16
            # EXIT NODE # Call at 256.23; stackHeight = 20
           lw $t0,8($sp) # Call at 256.4; stackHeight = 20
           beq $t0,$zero,nullPtrException # Call at 256.4; stackHeight = 20
           lw $t0,-12($t0) # Call at 256.4; stackHeight = 20
           lw $t0,32($t0) # Call at 256.4; stackHeight = 20
           jalr $t0 # printInt # Call at 256.4; stackHeight = 20
          # EXIT NODE # Call at 256.4; stackHeight = 8
        # EXIT NODE # CallStatement at 256.4; stackHeight = 8
        # ENTER NODE # CallStatement at 257.4; stackHeight = 8
          # ENTER NODE # Call at 257.4; stackHeight = 8
            # ENTER NODE # This at 257.4; stackHeight = 8
             subu $sp,$sp,4 # This at 257.4; stackHeight = 8
             sw $s2,($sp)#**"" # This at 257.4; stackHeight = 12
            # EXIT NODE # This at 257.4; stackHeight = 12
            # ENTER NODE # StringLiteral at 257.13; stackHeight = 12
             subu $sp,$sp,4 # StringLiteral at 257.13; stackHeight = 12
             la $t0,strLit_486 # StringLiteral at 257.13; stackHeight = 16
             sw $t0,($sp)#**"strLit:\?" # StringLiteral at 257.13; stackHeight = 16
            # EXIT NODE # StringLiteral at 257.13; stackHeight = 16
           lw $t0,4($sp) # Call at 257.4; stackHeight = 16
           beq $t0,$zero,nullPtrException # Call at 257.4; stackHeight = 16
           lw $t0,-12($t0) # Call at 257.4; stackHeight = 16
           lw $t0,24($t0) # Call at 257.4; stackHeight = 16
           jalr $t0 # printStr # Call at 257.4; stackHeight = 16
          # EXIT NODE # Call at 257.4; stackHeight = 8
        # EXIT NODE # CallStatement at 257.4; stackHeight = 8
      # EXIT NODE # Block at 255.43; stackHeight = 8
      # ENTER NODE # Assign at 255.38; stackHeight = 8
        # ENTER NODE # Plus at 255.39; stackHeight = 8
          # ENTER NODE # IdentifierExp at 255.38; stackHeight = 8
           lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 255.38; stackHeight = 8
           subu $sp,$sp,8 # IdentifierExp at 255.38; stackHeight = 8
           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 255.38; stackHeight = 16
           sw $t0,($sp)#**"" # IdentifierExp at 255.38; stackHeight = 16
          # EXIT NODE # IdentifierExp at 255.38; stackHeight = 16
          # ENTER NODE # IntegerLiteral at 255.39; stackHeight = 16
           subu $sp,$sp,8 # IntegerLiteral at 255.39; stackHeight = 16
           sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 255.39; stackHeight = 24
           li $t0,1 # IntegerLiteral at 255.39; stackHeight = 24
           sw $t0,($sp) # IntegerLiteral at 255.39; stackHeight = 24
          # EXIT NODE # IntegerLiteral at 255.39; stackHeight = 24
         lw $t0,($sp) # Plus at 255.39; stackHeight = 24
         lw $t1,8($sp) # Plus at 255.39; stackHeight = 24
         addu $t0,$t0,$t1 # Plus at 255.39; stackHeight = 24
         addu $sp,$sp,8 # Plus at 255.39; stackHeight = 24
         sw $t0,($sp)#**"" # Plus at 255.39; stackHeight = 24
        # EXIT NODE # Plus at 255.39; stackHeight = 16
       lw $t0,($sp) # Assign at 255.38; stackHeight = 16
       sw $t0,8($sp) # Assign at 255.38; stackHeight = 16
       addu $sp,$sp,8 # Assign at 255.38; stackHeight = 16
      # EXIT NODE # Assign at 255.38; stackHeight = 8
    # EXIT NODE # Block at 255.3; stackHeight = 8
  while_enter_1422: # While at 255.3; stackHeight = 8
    # ENTER NODE # LessThan at 255.21; stackHeight = 8
      # ENTER NODE # IdentifierExp at 255.19; stackHeight = 8
       lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 255.19; stackHeight = 8
       subu $sp,$sp,8 # IdentifierExp at 255.19; stackHeight = 8
       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 255.19; stackHeight = 16
       sw $t0,($sp)#**"" # IdentifierExp at 255.19; stackHeight = 16
      # EXIT NODE # IdentifierExp at 255.19; stackHeight = 16
      # ENTER NODE # ArrayLength at 255.29; stackHeight = 16
        # ENTER NODE # IdentifierExp at 255.23; stackHeight = 16
         lw $t0,4($s2) # inst-var # IdentifierExp at 255.23; stackHeight = 16
         subu $sp,$sp,4 # IdentifierExp at 255.23; stackHeight = 16
         sw $t0,($sp)#**"" # IdentifierExp at 255.23; stackHeight = 20
        # EXIT NODE # IdentifierExp at 255.23; stackHeight = 20
       lw $t0,($sp) # ArrayLength at 255.29; stackHeight = 20
       beq $t0,$zero,nullPtrException # ArrayLength at 255.29; stackHeight = 20
       lw $t0,-4($t0) # ArrayLength at 255.29; stackHeight = 20
       sw $s5,($sp)#**"GC tag" # ArrayLength at 255.29; stackHeight = 20
       subu $sp,4 # ArrayLength at 255.29; stackHeight = 20
       sw $t0,($sp)#**"" # ArrayLength at 255.29; stackHeight = 20
      # EXIT NODE # ArrayLength at 255.29; stackHeight = 24
     lw $t0,($sp) # LessThan at 255.21; stackHeight = 24
     lw $t1,8($sp) # LessThan at 255.21; stackHeight = 24
     slt $t0,$t1,$t0 # LessThan at 255.21; stackHeight = 24
     addu $sp,$sp,12 # LessThan at 255.21; stackHeight = 24
     sw $t0,($sp)#**"" # LessThan at 255.21; stackHeight = 12
    # EXIT NODE # LessThan at 255.21; stackHeight = 12
   lw $t0,($sp) # While at 255.3; stackHeight = 12
   addu $sp,$sp,4 # While at 255.3; stackHeight = 12
  bne $t0,$zero,while_top_1422 # While at 255.3; stackHeight = 8
  break_target_1422: # While at 255.3; stackHeight = 8
  # EXIT NODE # While at 255.3; stackHeight = 8
 addu $sp,8 # Block at 255.3; stackHeight = 8
# EXIT NODE # Block at 255.3; stackHeight = 0
 # stack height is 0 # MethodDeclVoid at 250.14; stackHeight = 0
 lw $ra,4($sp) # MethodDeclVoid at 250.14; stackHeight = 0
 lw $s2,0($sp) # MethodDeclVoid at 250.14; stackHeight = 0
 addu $sp,$sp,8 # MethodDeclVoid at 250.14; stackHeight = 0
jr $ra # MethodDeclVoid at 250.14; stackHeight = -8
# EXIT NODE # MethodDeclVoid at 250.14; stackHeight = -8
  # ENTER NODE # MethodDeclVoid at 261.14; stackHeight = -8
  .globl fcn_1481_intValue # MethodDeclVoid at 261.14; stackHeight = -8
  fcn_1481_intValue: # MethodDeclVoid at 261.14; stackHeight = -8
   subu $sp,$sp,4 # MethodDeclVoid at 261.14; stackHeight = -8
   sw $s2,($sp) #**"old this-ptr" # MethodDeclVoid at 261.14; stackHeight = -8
   lw $s2,4($sp) #**"this-ptr" # MethodDeclVoid at 261.14; stackHeight = -8
   sw $ra,4($sp) #**"RA:intValue" # MethodDeclVoid at 261.14; stackHeight = -8
    # ENTER NODE # Block at 262.3; stackHeight = 0
      # ENTER NODE # LocalVarDecl at 262.12; stackHeight = 0
        # ENTER NODE # IntegerLiteral at 262.16; stackHeight = 0
         subu $sp,$sp,8 # IntegerLiteral at 262.16; stackHeight = 0
         sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 262.16; stackHeight = 8
         li $t0,0 # IntegerLiteral at 262.16; stackHeight = 8
         sw $t0,($sp) # IntegerLiteral at 262.16; stackHeight = 8
        # EXIT NODE # IntegerLiteral at 262.16; stackHeight = 8
      # EXIT NODE # LocalVarDecl at 262.12; stackHeight = 8
      # ENTER NODE # While at 262.3; stackHeight = 8
      j while_enter_1451 # While at 262.3; stackHeight = 8
      while_top_1451: # While at 262.3; stackHeight = 8
        # ENTER NODE # Block at 262.3; stackHeight = 8
          # ENTER NODE # Block at 262.41; stackHeight = 8
            # ENTER NODE # CallStatement at 263.4; stackHeight = 8
              # ENTER NODE # Call at 263.4; stackHeight = 8
                # ENTER NODE # This at 263.4; stackHeight = 8
                 subu $sp,$sp,4 # This at 263.4; stackHeight = 8
                 sw $s2,($sp)#**"" # This at 263.4; stackHeight = 12
                # EXIT NODE # This at 263.4; stackHeight = 12
                # ENTER NODE # Call at 263.21; stackHeight = 12
                  # ENTER NODE # IdentifierExp at 263.13; stackHeight = 12
                   lw $t0,0($s2) # inst-var # IdentifierExp at 263.13; stackHeight = 12
                   subu $sp,$sp,4 # IdentifierExp at 263.13; stackHeight = 12
                   sw $t0,($sp)#**"" # IdentifierExp at 263.13; stackHeight = 16
                  # EXIT NODE # IdentifierExp at 263.13; stackHeight = 16
                  # ENTER NODE # IdentifierExp at 263.18; stackHeight = 16
                   lw $t0,8($sp) # local: stackHt=16,var-offset=-8 # IdentifierExp at 263.18; stackHeight = 16
                   subu $sp,$sp,8 # IdentifierExp at 263.18; stackHeight = 16
                   sw $s5,4($sp)#**"GC tag" # IdentifierExp at 263.18; stackHeight = 24
                   sw $t0,($sp)#**"" # IdentifierExp at 263.18; stackHeight = 24
                  # EXIT NODE # IdentifierExp at 263.18; stackHeight = 24
                 lw $t0,8($sp) # ArrayLookup at 263.17; stackHeight = 24
                 beq $t0,$zero,nullPtrException # ArrayLookup at 263.17; stackHeight = 24
                 lw $t1,-4($t0) # ArrayLookup at 263.17; stackHeight = 24
                 lw $t2,($sp) # ArrayLookup at 263.17; stackHeight = 24
                 bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 263.17; stackHeight = 24
                 sll $t2,$t2,2 # ArrayLookup at 263.17; stackHeight = 24
                 addu $t2,$t2,$t0 # ArrayLookup at 263.17; stackHeight = 24
                 lw $t0,($t2) # ArrayLookup at 263.17; stackHeight = 24
                 sw $t0,8($sp)#**"" # ArrayLookup at 263.17; stackHeight = 24
                 addu $sp,$sp,8 # ArrayLookup at 263.17; stackHeight = 24
                # EXIT NODE # ArrayLookup at 263.17; stackHeight = 16
               lw $t0,0($sp) # Call at 263.21; stackHeight = 16
               beq $t0,$zero,nullPtrException # Call at 263.21; stackHeight = 16
               lw $t0,-12($t0) # Call at 263.21; stackHeight = 16
               lw $t0,56($t0) # Call at 263.21; stackHeight = 16
               jalr $t0 # intValue # Call at 263.21; stackHeight = 16
              # EXIT NODE # Call at 263.21; stackHeight = 20
             lw $t0,8($sp) # Call at 263.4; stackHeight = 20
             beq $t0,$zero,nullPtrException # Call at 263.4; stackHeight = 20
             lw $t0,-12($t0) # Call at 263.4; stackHeight = 20
             lw $t0,32($t0) # Call at 263.4; stackHeight = 20
             jalr $t0 # printInt # Call at 263.4; stackHeight = 20
            # EXIT NODE # Call at 263.4; stackHeight = 8
          # EXIT NODE # CallStatement at 263.4; stackHeight = 8
          # ENTER NODE # CallStatement at 264.4; stackHeight = 8
            # ENTER NODE # Call at 264.4; stackHeight = 8
              # ENTER NODE # This at 264.4; stackHeight = 8
               subu $sp,$sp,4 # This at 264.4; stackHeight = 8
               sw $s2,($sp)#**"" # This at 264.4; stackHeight = 12
              # EXIT NODE # This at 264.4; stackHeight = 12
              # ENTER NODE # StringLiteral at 264.13; stackHeight = 12
               subu $sp,$sp,4 # StringLiteral at 264.13; stackHeight = 12
               la $t0,strLit_486 # StringLiteral at 264.13; stackHeight = 16
               sw $t0,($sp)#**"strLit:\?" # StringLiteral at 264.13; stackHeight = 16
              # EXIT NODE # StringLiteral at 264.13; stackHeight = 16
             lw $t0,4($sp) # Call at 264.4; stackHeight = 16
             beq $t0,$zero,nullPtrException # Call at 264.4; stackHeight = 16
             lw $t0,-12($t0) # Call at 264.4; stackHeight = 16
             lw $t0,24($t0) # Call at 264.4; stackHeight = 16
             jalr $t0 # printStr # Call at 264.4; stackHeight = 16
            # EXIT NODE # Call at 264.4; stackHeight = 8
          # EXIT NODE # CallStatement at 264.4; stackHeight = 8
        # EXIT NODE # Block at 262.41; stackHeight = 8
        # ENTER NODE # Assign at 262.36; stackHeight = 8
          # ENTER NODE # Plus at 262.37; stackHeight = 8
            # ENTER NODE # IdentifierExp at 262.36; stackHeight = 8
             lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 262.36; stackHeight = 8
             subu $sp,$sp,8 # IdentifierExp at 262.36; stackHeight = 8
             sw $s5,4($sp)#**"GC tag" # IdentifierExp at 262.36; stackHeight = 16
             sw $t0,($sp)#**"" # IdentifierExp at 262.36; stackHeight = 16
            # EXIT NODE # IdentifierExp at 262.36; stackHeight = 16
            # ENTER NODE # IntegerLiteral at 262.37; stackHeight = 16
             subu $sp,$sp,8 # IntegerLiteral at 262.37; stackHeight = 16
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 262.37; stackHeight = 24
             li $t0,1 # IntegerLiteral at 262.37; stackHeight = 24
             sw $t0,($sp) # IntegerLiteral at 262.37; stackHeight = 24
            # EXIT NODE # IntegerLiteral at 262.37; stackHeight = 24
           lw $t0,($sp) # Plus at 262.37; stackHeight = 24
           lw $t1,8($sp) # Plus at 262.37; stackHeight = 24
           addu $t0,$t0,$t1 # Plus at 262.37; stackHeight = 24
           addu $sp,$sp,8 # Plus at 262.37; stackHeight = 24
           sw $t0,($sp)#**"" # Plus at 262.37; stackHeight = 24
          # EXIT NODE # Plus at 262.37; stackHeight = 16
         lw $t0,($sp) # Assign at 262.36; stackHeight = 16
         sw $t0,8($sp) # Assign at 262.36; stackHeight = 16
         addu $sp,$sp,8 # Assign at 262.36; stackHeight = 16
        # EXIT NODE # Assign at 262.36; stackHeight = 8
      # EXIT NODE # Block at 262.3; stackHeight = 8
    while_enter_1451: # While at 262.3; stackHeight = 8
      # ENTER NODE # LessThan at 262.21; stackHeight = 8
        # ENTER NODE # IdentifierExp at 262.19; stackHeight = 8
         lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 262.19; stackHeight = 8
         subu $sp,$sp,8 # IdentifierExp at 262.19; stackHeight = 8
         sw $s5,4($sp)#**"GC tag" # IdentifierExp at 262.19; stackHeight = 16
         sw $t0,($sp)#**"" # IdentifierExp at 262.19; stackHeight = 16
        # EXIT NODE # IdentifierExp at 262.19; stackHeight = 16
        # ENTER NODE # ArrayLength at 262.27; stackHeight = 16
          # ENTER NODE # IdentifierExp at 262.23; stackHeight = 16
           lw $t0,0($s2) # inst-var # IdentifierExp at 262.23; stackHeight = 16
           subu $sp,$sp,4 # IdentifierExp at 262.23; stackHeight = 16
           sw $t0,($sp)#**"" # IdentifierExp at 262.23; stackHeight = 20
          # EXIT NODE # IdentifierExp at 262.23; stackHeight = 20
         lw $t0,($sp) # ArrayLength at 262.27; stackHeight = 20
         beq $t0,$zero,nullPtrException # ArrayLength at 262.27; stackHeight = 20
         lw $t0,-4($t0) # ArrayLength at 262.27; stackHeight = 20
         sw $s5,($sp)#**"GC tag" # ArrayLength at 262.27; stackHeight = 20
         subu $sp,4 # ArrayLength at 262.27; stackHeight = 20
         sw $t0,($sp)#**"" # ArrayLength at 262.27; stackHeight = 20
        # EXIT NODE # ArrayLength at 262.27; stackHeight = 24
       lw $t0,($sp) # LessThan at 262.21; stackHeight = 24
       lw $t1,8($sp) # LessThan at 262.21; stackHeight = 24
       slt $t0,$t1,$t0 # LessThan at 262.21; stackHeight = 24
       addu $sp,$sp,12 # LessThan at 262.21; stackHeight = 24
       sw $t0,($sp)#**"" # LessThan at 262.21; stackHeight = 12
      # EXIT NODE # LessThan at 262.21; stackHeight = 12
     lw $t0,($sp) # While at 262.3; stackHeight = 12
     addu $sp,$sp,4 # While at 262.3; stackHeight = 12
    bne $t0,$zero,while_top_1451 # While at 262.3; stackHeight = 8
    break_target_1451: # While at 262.3; stackHeight = 8
    # EXIT NODE # While at 262.3; stackHeight = 8
   addu $sp,8 # Block at 262.3; stackHeight = 8
  # EXIT NODE # Block at 262.3; stackHeight = 0
  # ENTER NODE # Block at 266.3; stackHeight = 0
    # ENTER NODE # LocalVarDecl at 266.12; stackHeight = 0
      # ENTER NODE # IntegerLiteral at 266.16; stackHeight = 0
       subu $sp,$sp,8 # IntegerLiteral at 266.16; stackHeight = 0
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 266.16; stackHeight = 8
       li $t0,0 # IntegerLiteral at 266.16; stackHeight = 8
       sw $t0,($sp) # IntegerLiteral at 266.16; stackHeight = 8
      # EXIT NODE # IntegerLiteral at 266.16; stackHeight = 8
    # EXIT NODE # LocalVarDecl at 266.12; stackHeight = 8
    # ENTER NODE # While at 266.3; stackHeight = 8
    j while_enter_1479 # While at 266.3; stackHeight = 8
    while_top_1479: # While at 266.3; stackHeight = 8
      # ENTER NODE # Block at 266.3; stackHeight = 8
        # ENTER NODE # Block at 266.43; stackHeight = 8
          # ENTER NODE # CallStatement at 267.4; stackHeight = 8
            # ENTER NODE # Call at 267.4; stackHeight = 8
              # ENTER NODE # This at 267.4; stackHeight = 8
               subu $sp,$sp,4 # This at 267.4; stackHeight = 8
               sw $s2,($sp)#**"" # This at 267.4; stackHeight = 12
              # EXIT NODE # This at 267.4; stackHeight = 12
              # ENTER NODE # Call at 267.23; stackHeight = 12
                # ENTER NODE # IdentifierExp at 267.13; stackHeight = 12
                 lw $t0,4($s2) # inst-var # IdentifierExp at 267.13; stackHeight = 12
                 subu $sp,$sp,4 # IdentifierExp at 267.13; stackHeight = 12
                 sw $t0,($sp)#**"" # IdentifierExp at 267.13; stackHeight = 16
                # EXIT NODE # IdentifierExp at 267.13; stackHeight = 16
                # ENTER NODE # IdentifierExp at 267.20; stackHeight = 16
                 lw $t0,8($sp) # local: stackHt=16,var-offset=-8 # IdentifierExp at 267.20; stackHeight = 16
                 subu $sp,$sp,8 # IdentifierExp at 267.20; stackHeight = 16
                 sw $s5,4($sp)#**"GC tag" # IdentifierExp at 267.20; stackHeight = 24
                 sw $t0,($sp)#**"" # IdentifierExp at 267.20; stackHeight = 24
                # EXIT NODE # IdentifierExp at 267.20; stackHeight = 24
               lw $t0,8($sp) # ArrayLookup at 267.19; stackHeight = 24
               beq $t0,$zero,nullPtrException # ArrayLookup at 267.19; stackHeight = 24
               lw $t1,-4($t0) # ArrayLookup at 267.19; stackHeight = 24
               lw $t2,($sp) # ArrayLookup at 267.19; stackHeight = 24
               bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 267.19; stackHeight = 24
               sll $t2,$t2,2 # ArrayLookup at 267.19; stackHeight = 24
               addu $t2,$t2,$t0 # ArrayLookup at 267.19; stackHeight = 24
               lw $t0,($t2) # ArrayLookup at 267.19; stackHeight = 24
               sw $t0,8($sp)#**"" # ArrayLookup at 267.19; stackHeight = 24
               addu $sp,$sp,8 # ArrayLookup at 267.19; stackHeight = 24
              # EXIT NODE # ArrayLookup at 267.19; stackHeight = 16
             lw $t0,0($sp) # Call at 267.23; stackHeight = 16
             beq $t0,$zero,nullPtrException # Call at 267.23; stackHeight = 16
             lw $t0,-12($t0) # Call at 267.23; stackHeight = 16
             lw $t0,56($t0) # Call at 267.23; stackHeight = 16
             jalr $t0 # intValue # Call at 267.23; stackHeight = 16
            # EXIT NODE # Call at 267.23; stackHeight = 20
           lw $t0,8($sp) # Call at 267.4; stackHeight = 20
           beq $t0,$zero,nullPtrException # Call at 267.4; stackHeight = 20
           lw $t0,-12($t0) # Call at 267.4; stackHeight = 20
           lw $t0,32($t0) # Call at 267.4; stackHeight = 20
           jalr $t0 # printInt # Call at 267.4; stackHeight = 20
          # EXIT NODE # Call at 267.4; stackHeight = 8
        # EXIT NODE # CallStatement at 267.4; stackHeight = 8
        # ENTER NODE # CallStatement at 268.4; stackHeight = 8
          # ENTER NODE # Call at 268.4; stackHeight = 8
            # ENTER NODE # This at 268.4; stackHeight = 8
             subu $sp,$sp,4 # This at 268.4; stackHeight = 8
             sw $s2,($sp)#**"" # This at 268.4; stackHeight = 12
            # EXIT NODE # This at 268.4; stackHeight = 12
            # ENTER NODE # StringLiteral at 268.13; stackHeight = 12
             subu $sp,$sp,4 # StringLiteral at 268.13; stackHeight = 12
             la $t0,strLit_486 # StringLiteral at 268.13; stackHeight = 16
             sw $t0,($sp)#**"strLit:\?" # StringLiteral at 268.13; stackHeight = 16
            # EXIT NODE # StringLiteral at 268.13; stackHeight = 16
           lw $t0,4($sp) # Call at 268.4; stackHeight = 16
           beq $t0,$zero,nullPtrException # Call at 268.4; stackHeight = 16
           lw $t0,-12($t0) # Call at 268.4; stackHeight = 16
           lw $t0,24($t0) # Call at 268.4; stackHeight = 16
           jalr $t0 # printStr # Call at 268.4; stackHeight = 16
          # EXIT NODE # Call at 268.4; stackHeight = 8
        # EXIT NODE # CallStatement at 268.4; stackHeight = 8
      # EXIT NODE # Block at 266.43; stackHeight = 8
      # ENTER NODE # Assign at 266.38; stackHeight = 8
        # ENTER NODE # Plus at 266.39; stackHeight = 8
          # ENTER NODE # IdentifierExp at 266.38; stackHeight = 8
           lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 266.38; stackHeight = 8
           subu $sp,$sp,8 # IdentifierExp at 266.38; stackHeight = 8
           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 266.38; stackHeight = 16
           sw $t0,($sp)#**"" # IdentifierExp at 266.38; stackHeight = 16
          # EXIT NODE # IdentifierExp at 266.38; stackHeight = 16
          # ENTER NODE # IntegerLiteral at 266.39; stackHeight = 16
           subu $sp,$sp,8 # IntegerLiteral at 266.39; stackHeight = 16
           sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 266.39; stackHeight = 24
           li $t0,1 # IntegerLiteral at 266.39; stackHeight = 24
           sw $t0,($sp) # IntegerLiteral at 266.39; stackHeight = 24
          # EXIT NODE # IntegerLiteral at 266.39; stackHeight = 24
         lw $t0,($sp) # Plus at 266.39; stackHeight = 24
         lw $t1,8($sp) # Plus at 266.39; stackHeight = 24
         addu $t0,$t0,$t1 # Plus at 266.39; stackHeight = 24
         addu $sp,$sp,8 # Plus at 266.39; stackHeight = 24
         sw $t0,($sp)#**"" # Plus at 266.39; stackHeight = 24
        # EXIT NODE # Plus at 266.39; stackHeight = 16
       lw $t0,($sp) # Assign at 266.38; stackHeight = 16
       sw $t0,8($sp) # Assign at 266.38; stackHeight = 16
       addu $sp,$sp,8 # Assign at 266.38; stackHeight = 16
      # EXIT NODE # Assign at 266.38; stackHeight = 8
    # EXIT NODE # Block at 266.3; stackHeight = 8
  while_enter_1479: # While at 266.3; stackHeight = 8
    # ENTER NODE # LessThan at 266.21; stackHeight = 8
      # ENTER NODE # IdentifierExp at 266.19; stackHeight = 8
       lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 266.19; stackHeight = 8
       subu $sp,$sp,8 # IdentifierExp at 266.19; stackHeight = 8
       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 266.19; stackHeight = 16
       sw $t0,($sp)#**"" # IdentifierExp at 266.19; stackHeight = 16
      # EXIT NODE # IdentifierExp at 266.19; stackHeight = 16
      # ENTER NODE # ArrayLength at 266.29; stackHeight = 16
        # ENTER NODE # IdentifierExp at 266.23; stackHeight = 16
         lw $t0,4($s2) # inst-var # IdentifierExp at 266.23; stackHeight = 16
         subu $sp,$sp,4 # IdentifierExp at 266.23; stackHeight = 16
         sw $t0,($sp)#**"" # IdentifierExp at 266.23; stackHeight = 20
        # EXIT NODE # IdentifierExp at 266.23; stackHeight = 20
       lw $t0,($sp) # ArrayLength at 266.29; stackHeight = 20
       beq $t0,$zero,nullPtrException # ArrayLength at 266.29; stackHeight = 20
       lw $t0,-4($t0) # ArrayLength at 266.29; stackHeight = 20
       sw $s5,($sp)#**"GC tag" # ArrayLength at 266.29; stackHeight = 20
       subu $sp,4 # ArrayLength at 266.29; stackHeight = 20
       sw $t0,($sp)#**"" # ArrayLength at 266.29; stackHeight = 20
      # EXIT NODE # ArrayLength at 266.29; stackHeight = 24
     lw $t0,($sp) # LessThan at 266.21; stackHeight = 24
     lw $t1,8($sp) # LessThan at 266.21; stackHeight = 24
     slt $t0,$t1,$t0 # LessThan at 266.21; stackHeight = 24
     addu $sp,$sp,12 # LessThan at 266.21; stackHeight = 24
     sw $t0,($sp)#**"" # LessThan at 266.21; stackHeight = 12
    # EXIT NODE # LessThan at 266.21; stackHeight = 12
   lw $t0,($sp) # While at 266.3; stackHeight = 12
   addu $sp,$sp,4 # While at 266.3; stackHeight = 12
  bne $t0,$zero,while_top_1479 # While at 266.3; stackHeight = 8
  break_target_1479: # While at 266.3; stackHeight = 8
  # EXIT NODE # While at 266.3; stackHeight = 8
 addu $sp,8 # Block at 266.3; stackHeight = 8
# EXIT NODE # Block at 266.3; stackHeight = 0
 # stack height is 0 # MethodDeclVoid at 261.14; stackHeight = 0
 lw $ra,4($sp) # MethodDeclVoid at 261.14; stackHeight = 0
 lw $s2,0($sp) # MethodDeclVoid at 261.14; stackHeight = 0
 addu $sp,$sp,8 # MethodDeclVoid at 261.14; stackHeight = 0
jr $ra # MethodDeclVoid at 261.14; stackHeight = -8
# EXIT NODE # MethodDeclVoid at 261.14; stackHeight = -8
  # ENTER NODE # MethodDeclVoid at 272.14; stackHeight = -8
  .globl fcn_1636_max # MethodDeclVoid at 272.14; stackHeight = -8
  fcn_1636_max: # MethodDeclVoid at 272.14; stackHeight = -8
   subu $sp,$sp,4 # MethodDeclVoid at 272.14; stackHeight = -8
   sw $s2,($sp) #**"old this-ptr" # MethodDeclVoid at 272.14; stackHeight = -8
   lw $s2,4($sp) #**"this-ptr" # MethodDeclVoid at 272.14; stackHeight = -8
   sw $ra,4($sp) #**"RA:max" # MethodDeclVoid at 272.14; stackHeight = -8
    # ENTER NODE # Block at 273.3; stackHeight = 0
      # ENTER NODE # LocalVarDecl at 273.12; stackHeight = 0
        # ENTER NODE # IntegerLiteral at 273.16; stackHeight = 0
         subu $sp,$sp,8 # IntegerLiteral at 273.16; stackHeight = 0
         sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 273.16; stackHeight = 8
         li $t0,0 # IntegerLiteral at 273.16; stackHeight = 8
         sw $t0,($sp) # IntegerLiteral at 273.16; stackHeight = 8
        # EXIT NODE # IntegerLiteral at 273.16; stackHeight = 8
      # EXIT NODE # LocalVarDecl at 273.12; stackHeight = 8
      # ENTER NODE # While at 273.3; stackHeight = 8
      j while_enter_1557 # While at 273.3; stackHeight = 8
      while_top_1557: # While at 273.3; stackHeight = 8
        # ENTER NODE # Block at 273.3; stackHeight = 8
          # ENTER NODE # Block at 273.41; stackHeight = 8
            # ENTER NODE # Block at 274.4; stackHeight = 8
              # ENTER NODE # LocalVarDecl at 274.13; stackHeight = 8
                # ENTER NODE # IntegerLiteral at 274.17; stackHeight = 8
                 subu $sp,$sp,8 # IntegerLiteral at 274.17; stackHeight = 8
                 sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 274.17; stackHeight = 16
                 li $t0,0 # IntegerLiteral at 274.17; stackHeight = 16
                 sw $t0,($sp) # IntegerLiteral at 274.17; stackHeight = 16
                # EXIT NODE # IntegerLiteral at 274.17; stackHeight = 16
              # EXIT NODE # LocalVarDecl at 274.13; stackHeight = 16
              # ENTER NODE # While at 274.4; stackHeight = 16
              j while_enter_1523 # While at 274.4; stackHeight = 16
              while_top_1523: # While at 274.4; stackHeight = 16
                # ENTER NODE # Block at 274.4; stackHeight = 16
                  # ENTER NODE # Block at 274.42; stackHeight = 16
                    # ENTER NODE # CallStatement at 275.5; stackHeight = 16
                      # ENTER NODE # Call at 275.5; stackHeight = 16
                        # ENTER NODE # This at 275.5; stackHeight = 16
                         subu $sp,$sp,4 # This at 275.5; stackHeight = 16
                         sw $s2,($sp)#**"" # This at 275.5; stackHeight = 20
                        # EXIT NODE # This at 275.5; stackHeight = 20
                        # ENTER NODE # Call at 275.46; stackHeight = 20
                          # ENTER NODE # Call at 275.35; stackHeight = 20
                            # ENTER NODE # Call at 275.22; stackHeight = 20
                              # ENTER NODE # IdentifierExp at 275.14; stackHeight = 20
                               lw $t0,0($s2) # inst-var # IdentifierExp at 275.14; stackHeight = 20
                               subu $sp,$sp,4 # IdentifierExp at 275.14; stackHeight = 20
                               sw $t0,($sp)#**"" # IdentifierExp at 275.14; stackHeight = 24
                              # EXIT NODE # IdentifierExp at 275.14; stackHeight = 24
                              # ENTER NODE # IdentifierExp at 275.19; stackHeight = 24
                               lw $t0,16($sp) # local: stackHt=24,var-offset=-8 # IdentifierExp at 275.19; stackHeight = 24
                               subu $sp,$sp,8 # IdentifierExp at 275.19; stackHeight = 24
                               sw $s5,4($sp)#**"GC tag" # IdentifierExp at 275.19; stackHeight = 32
                               sw $t0,($sp)#**"" # IdentifierExp at 275.19; stackHeight = 32
                              # EXIT NODE # IdentifierExp at 275.19; stackHeight = 32
                             lw $t0,8($sp) # ArrayLookup at 275.18; stackHeight = 32
                             beq $t0,$zero,nullPtrException # ArrayLookup at 275.18; stackHeight = 32
                             lw $t1,-4($t0) # ArrayLookup at 275.18; stackHeight = 32
                             lw $t2,($sp) # ArrayLookup at 275.18; stackHeight = 32
                             bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 275.18; stackHeight = 32
                             sll $t2,$t2,2 # ArrayLookup at 275.18; stackHeight = 32
                             addu $t2,$t2,$t0 # ArrayLookup at 275.18; stackHeight = 32
                             lw $t0,($t2) # ArrayLookup at 275.18; stackHeight = 32
                             sw $t0,8($sp)#**"" # ArrayLookup at 275.18; stackHeight = 32
                             addu $sp,$sp,8 # ArrayLookup at 275.18; stackHeight = 32
                            # EXIT NODE # ArrayLookup at 275.18; stackHeight = 24
                            # ENTER NODE # IdentifierExp at 275.26; stackHeight = 24
                             lw $t0,0($s2) # inst-var # IdentifierExp at 275.26; stackHeight = 24
                             subu $sp,$sp,4 # IdentifierExp at 275.26; stackHeight = 24
                             sw $t0,($sp)#**"" # IdentifierExp at 275.26; stackHeight = 28
                            # EXIT NODE # IdentifierExp at 275.26; stackHeight = 28
                            # ENTER NODE # IdentifierExp at 275.31; stackHeight = 28
                             lw $t0,12($sp) # local: stackHt=28,var-offset=-16 # IdentifierExp at 275.31; stackHeight = 28
                             subu $sp,$sp,8 # IdentifierExp at 275.31; stackHeight = 28
                             sw $s5,4($sp)#**"GC tag" # IdentifierExp at 275.31; stackHeight = 36
                             sw $t0,($sp)#**"" # IdentifierExp at 275.31; stackHeight = 36
                            # EXIT NODE # IdentifierExp at 275.31; stackHeight = 36
                           lw $t0,8($sp) # ArrayLookup at 275.30; stackHeight = 36
                           beq $t0,$zero,nullPtrException # ArrayLookup at 275.30; stackHeight = 36
                           lw $t1,-4($t0) # ArrayLookup at 275.30; stackHeight = 36
                           lw $t2,($sp) # ArrayLookup at 275.30; stackHeight = 36
                           bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 275.30; stackHeight = 36
                           sll $t2,$t2,2 # ArrayLookup at 275.30; stackHeight = 36
                           addu $t2,$t2,$t0 # ArrayLookup at 275.30; stackHeight = 36
                           lw $t0,($t2) # ArrayLookup at 275.30; stackHeight = 36
                           sw $t0,8($sp)#**"" # ArrayLookup at 275.30; stackHeight = 36
                           addu $sp,$sp,8 # ArrayLookup at 275.30; stackHeight = 36
                          # EXIT NODE # ArrayLookup at 275.30; stackHeight = 28
                         lw $t0,4($sp) # Call at 275.22; stackHeight = 28
                         beq $t0,$zero,nullPtrException # Call at 275.22; stackHeight = 28
                         lw $t0,-12($t0) # Call at 275.22; stackHeight = 28
                         lw $t0,60($t0) # Call at 275.22; stackHeight = 28
                         jalr $t0 # max # Call at 275.22; stackHeight = 28
                        # EXIT NODE # Call at 275.22; stackHeight = 24
                       lw $t0,0($sp) # Call at 275.35; stackHeight = 24
                       beq $t0,$zero,nullPtrException # Call at 275.35; stackHeight = 24
                       lw $t0,-12($t0) # Call at 275.35; stackHeight = 24
                       lw $t0,8($t0) # Call at 275.35; stackHeight = 24
                       jalr $t0 # toString # Call at 275.35; stackHeight = 24
                      # EXIT NODE # Call at 275.35; stackHeight = 24
                      # ENTER NODE # StringLiteral at 275.53; stackHeight = 24
                       subu $sp,$sp,4 # StringLiteral at 275.53; stackHeight = 24
                       la $t0,strLit_486 # StringLiteral at 275.53; stackHeight = 28
                       sw $t0,($sp)#**"strLit:\?" # StringLiteral at 275.53; stackHeight = 28
                      # EXIT NODE # StringLiteral at 275.53; stackHeight = 28
                     lw $t0,4($sp) # Call at 275.46; stackHeight = 28
                     beq $t0,$zero,nullPtrException # Call at 275.46; stackHeight = 28
                     lw $t0,-12($t0) # Call at 275.46; stackHeight = 28
                     lw $t0,12($t0) # Call at 275.46; stackHeight = 28
                     jalr $t0 # concat # Call at 275.46; stackHeight = 28
                    # EXIT NODE # Call at 275.46; stackHeight = 24
                   lw $t0,4($sp) # Call at 275.5; stackHeight = 24
                   beq $t0,$zero,nullPtrException # Call at 275.5; stackHeight = 24
                   lw $t0,-12($t0) # Call at 275.5; stackHeight = 24
                   lw $t0,24($t0) # Call at 275.5; stackHeight = 24
                   jalr $t0 # printStr # Call at 275.5; stackHeight = 24
                  # EXIT NODE # Call at 275.5; stackHeight = 16
                # EXIT NODE # CallStatement at 275.5; stackHeight = 16
              # EXIT NODE # Block at 274.42; stackHeight = 16
              # ENTER NODE # Assign at 274.37; stackHeight = 16
                # ENTER NODE # Plus at 274.38; stackHeight = 16
                  # ENTER NODE # IdentifierExp at 274.37; stackHeight = 16
                   lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 274.37; stackHeight = 16
                   subu $sp,$sp,8 # IdentifierExp at 274.37; stackHeight = 16
                   sw $s5,4($sp)#**"GC tag" # IdentifierExp at 274.37; stackHeight = 24
                   sw $t0,($sp)#**"" # IdentifierExp at 274.37; stackHeight = 24
                  # EXIT NODE # IdentifierExp at 274.37; stackHeight = 24
                  # ENTER NODE # IntegerLiteral at 274.38; stackHeight = 24
                   subu $sp,$sp,8 # IntegerLiteral at 274.38; stackHeight = 24
                   sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 274.38; stackHeight = 32
                   li $t0,1 # IntegerLiteral at 274.38; stackHeight = 32
                   sw $t0,($sp) # IntegerLiteral at 274.38; stackHeight = 32
                  # EXIT NODE # IntegerLiteral at 274.38; stackHeight = 32
                 lw $t0,($sp) # Plus at 274.38; stackHeight = 32
                 lw $t1,8($sp) # Plus at 274.38; stackHeight = 32
                 addu $t0,$t0,$t1 # Plus at 274.38; stackHeight = 32
                 addu $sp,$sp,8 # Plus at 274.38; stackHeight = 32
                 sw $t0,($sp)#**"" # Plus at 274.38; stackHeight = 32
                # EXIT NODE # Plus at 274.38; stackHeight = 24
               lw $t0,($sp) # Assign at 274.37; stackHeight = 24
               sw $t0,8($sp) # Assign at 274.37; stackHeight = 24
               addu $sp,$sp,8 # Assign at 274.37; stackHeight = 24
              # EXIT NODE # Assign at 274.37; stackHeight = 16
            # EXIT NODE # Block at 274.4; stackHeight = 16
          while_enter_1523: # While at 274.4; stackHeight = 16
            # ENTER NODE # LessThan at 274.22; stackHeight = 16
              # ENTER NODE # IdentifierExp at 274.20; stackHeight = 16
               lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 274.20; stackHeight = 16
               subu $sp,$sp,8 # IdentifierExp at 274.20; stackHeight = 16
               sw $s5,4($sp)#**"GC tag" # IdentifierExp at 274.20; stackHeight = 24
               sw $t0,($sp)#**"" # IdentifierExp at 274.20; stackHeight = 24
              # EXIT NODE # IdentifierExp at 274.20; stackHeight = 24
              # ENTER NODE # ArrayLength at 274.28; stackHeight = 24
                # ENTER NODE # IdentifierExp at 274.24; stackHeight = 24
                 lw $t0,0($s2) # inst-var # IdentifierExp at 274.24; stackHeight = 24
                 subu $sp,$sp,4 # IdentifierExp at 274.24; stackHeight = 24
                 sw $t0,($sp)#**"" # IdentifierExp at 274.24; stackHeight = 28
                # EXIT NODE # IdentifierExp at 274.24; stackHeight = 28
               lw $t0,($sp) # ArrayLength at 274.28; stackHeight = 28
               beq $t0,$zero,nullPtrException # ArrayLength at 274.28; stackHeight = 28
               lw $t0,-4($t0) # ArrayLength at 274.28; stackHeight = 28
               sw $s5,($sp)#**"GC tag" # ArrayLength at 274.28; stackHeight = 28
               subu $sp,4 # ArrayLength at 274.28; stackHeight = 28
               sw $t0,($sp)#**"" # ArrayLength at 274.28; stackHeight = 28
              # EXIT NODE # ArrayLength at 274.28; stackHeight = 32
             lw $t0,($sp) # LessThan at 274.22; stackHeight = 32
             lw $t1,8($sp) # LessThan at 274.22; stackHeight = 32
             slt $t0,$t1,$t0 # LessThan at 274.22; stackHeight = 32
             addu $sp,$sp,12 # LessThan at 274.22; stackHeight = 32
             sw $t0,($sp)#**"" # LessThan at 274.22; stackHeight = 20
            # EXIT NODE # LessThan at 274.22; stackHeight = 20
           lw $t0,($sp) # While at 274.4; stackHeight = 20
           addu $sp,$sp,4 # While at 274.4; stackHeight = 20
          bne $t0,$zero,while_top_1523 # While at 274.4; stackHeight = 16
          break_target_1523: # While at 274.4; stackHeight = 16
          # EXIT NODE # While at 274.4; stackHeight = 16
         addu $sp,8 # Block at 274.4; stackHeight = 16
        # EXIT NODE # Block at 274.4; stackHeight = 8
        # ENTER NODE # Block at 277.4; stackHeight = 8
          # ENTER NODE # LocalVarDecl at 277.13; stackHeight = 8
            # ENTER NODE # IntegerLiteral at 277.17; stackHeight = 8
             subu $sp,$sp,8 # IntegerLiteral at 277.17; stackHeight = 8
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 277.17; stackHeight = 16
             li $t0,0 # IntegerLiteral at 277.17; stackHeight = 16
             sw $t0,($sp) # IntegerLiteral at 277.17; stackHeight = 16
            # EXIT NODE # IntegerLiteral at 277.17; stackHeight = 16
          # EXIT NODE # LocalVarDecl at 277.13; stackHeight = 16
          # ENTER NODE # While at 277.4; stackHeight = 16
          j while_enter_1553 # While at 277.4; stackHeight = 16
          while_top_1553: # While at 277.4; stackHeight = 16
            # ENTER NODE # Block at 277.4; stackHeight = 16
              # ENTER NODE # Block at 277.44; stackHeight = 16
                # ENTER NODE # CallStatement at 278.5; stackHeight = 16
                  # ENTER NODE # Call at 278.5; stackHeight = 16
                    # ENTER NODE # This at 278.5; stackHeight = 16
                     subu $sp,$sp,4 # This at 278.5; stackHeight = 16
                     sw $s2,($sp)#**"" # This at 278.5; stackHeight = 20
                    # EXIT NODE # This at 278.5; stackHeight = 20
                    # ENTER NODE # Call at 278.48; stackHeight = 20
                      # ENTER NODE # Call at 278.37; stackHeight = 20
                        # ENTER NODE # Call at 278.22; stackHeight = 20
                          # ENTER NODE # IdentifierExp at 278.14; stackHeight = 20
                           lw $t0,0($s2) # inst-var # IdentifierExp at 278.14; stackHeight = 20
                           subu $sp,$sp,4 # IdentifierExp at 278.14; stackHeight = 20
                           sw $t0,($sp)#**"" # IdentifierExp at 278.14; stackHeight = 24
                          # EXIT NODE # IdentifierExp at 278.14; stackHeight = 24
                          # ENTER NODE # IdentifierExp at 278.19; stackHeight = 24
                           lw $t0,16($sp) # local: stackHt=24,var-offset=-8 # IdentifierExp at 278.19; stackHeight = 24
                           subu $sp,$sp,8 # IdentifierExp at 278.19; stackHeight = 24
                           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 278.19; stackHeight = 32
                           sw $t0,($sp)#**"" # IdentifierExp at 278.19; stackHeight = 32
                          # EXIT NODE # IdentifierExp at 278.19; stackHeight = 32
                         lw $t0,8($sp) # ArrayLookup at 278.18; stackHeight = 32
                         beq $t0,$zero,nullPtrException # ArrayLookup at 278.18; stackHeight = 32
                         lw $t1,-4($t0) # ArrayLookup at 278.18; stackHeight = 32
                         lw $t2,($sp) # ArrayLookup at 278.18; stackHeight = 32
                         bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 278.18; stackHeight = 32
                         sll $t2,$t2,2 # ArrayLookup at 278.18; stackHeight = 32
                         addu $t2,$t2,$t0 # ArrayLookup at 278.18; stackHeight = 32
                         lw $t0,($t2) # ArrayLookup at 278.18; stackHeight = 32
                         sw $t0,8($sp)#**"" # ArrayLookup at 278.18; stackHeight = 32
                         addu $sp,$sp,8 # ArrayLookup at 278.18; stackHeight = 32
                        # EXIT NODE # ArrayLookup at 278.18; stackHeight = 24
                        # ENTER NODE # IdentifierExp at 278.26; stackHeight = 24
                         lw $t0,4($s2) # inst-var # IdentifierExp at 278.26; stackHeight = 24
                         subu $sp,$sp,4 # IdentifierExp at 278.26; stackHeight = 24
                         sw $t0,($sp)#**"" # IdentifierExp at 278.26; stackHeight = 28
                        # EXIT NODE # IdentifierExp at 278.26; stackHeight = 28
                        # ENTER NODE # IdentifierExp at 278.33; stackHeight = 28
                         lw $t0,12($sp) # local: stackHt=28,var-offset=-16 # IdentifierExp at 278.33; stackHeight = 28
                         subu $sp,$sp,8 # IdentifierExp at 278.33; stackHeight = 28
                         sw $s5,4($sp)#**"GC tag" # IdentifierExp at 278.33; stackHeight = 36
                         sw $t0,($sp)#**"" # IdentifierExp at 278.33; stackHeight = 36
                        # EXIT NODE # IdentifierExp at 278.33; stackHeight = 36
                       lw $t0,8($sp) # ArrayLookup at 278.32; stackHeight = 36
                       beq $t0,$zero,nullPtrException # ArrayLookup at 278.32; stackHeight = 36
                       lw $t1,-4($t0) # ArrayLookup at 278.32; stackHeight = 36
                       lw $t2,($sp) # ArrayLookup at 278.32; stackHeight = 36
                       bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 278.32; stackHeight = 36
                       sll $t2,$t2,2 # ArrayLookup at 278.32; stackHeight = 36
                       addu $t2,$t2,$t0 # ArrayLookup at 278.32; stackHeight = 36
                       lw $t0,($t2) # ArrayLookup at 278.32; stackHeight = 36
                       sw $t0,8($sp)#**"" # ArrayLookup at 278.32; stackHeight = 36
                       addu $sp,$sp,8 # ArrayLookup at 278.32; stackHeight = 36
                      # EXIT NODE # ArrayLookup at 278.32; stackHeight = 28
                     lw $t0,4($sp) # Call at 278.22; stackHeight = 28
                     beq $t0,$zero,nullPtrException # Call at 278.22; stackHeight = 28
                     lw $t0,-12($t0) # Call at 278.22; stackHeight = 28
                     lw $t0,60($t0) # Call at 278.22; stackHeight = 28
                     jalr $t0 # max # Call at 278.22; stackHeight = 28
                    # EXIT NODE # Call at 278.22; stackHeight = 24
                   lw $t0,0($sp) # Call at 278.37; stackHeight = 24
                   beq $t0,$zero,nullPtrException # Call at 278.37; stackHeight = 24
                   lw $t0,-12($t0) # Call at 278.37; stackHeight = 24
                   lw $t0,8($t0) # Call at 278.37; stackHeight = 24
                   jalr $t0 # toString # Call at 278.37; stackHeight = 24
                  # EXIT NODE # Call at 278.37; stackHeight = 24
                  # ENTER NODE # StringLiteral at 278.55; stackHeight = 24
                   subu $sp,$sp,4 # StringLiteral at 278.55; stackHeight = 24
                   la $t0,strLit_486 # StringLiteral at 278.55; stackHeight = 28
                   sw $t0,($sp)#**"strLit:\?" # StringLiteral at 278.55; stackHeight = 28
                  # EXIT NODE # StringLiteral at 278.55; stackHeight = 28
                 lw $t0,4($sp) # Call at 278.48; stackHeight = 28
                 beq $t0,$zero,nullPtrException # Call at 278.48; stackHeight = 28
                 lw $t0,-12($t0) # Call at 278.48; stackHeight = 28
                 lw $t0,12($t0) # Call at 278.48; stackHeight = 28
                 jalr $t0 # concat # Call at 278.48; stackHeight = 28
                # EXIT NODE # Call at 278.48; stackHeight = 24
               lw $t0,4($sp) # Call at 278.5; stackHeight = 24
               beq $t0,$zero,nullPtrException # Call at 278.5; stackHeight = 24
               lw $t0,-12($t0) # Call at 278.5; stackHeight = 24
               lw $t0,24($t0) # Call at 278.5; stackHeight = 24
               jalr $t0 # printStr # Call at 278.5; stackHeight = 24
              # EXIT NODE # Call at 278.5; stackHeight = 16
            # EXIT NODE # CallStatement at 278.5; stackHeight = 16
          # EXIT NODE # Block at 277.44; stackHeight = 16
          # ENTER NODE # Assign at 277.39; stackHeight = 16
            # ENTER NODE # Plus at 277.40; stackHeight = 16
              # ENTER NODE # IdentifierExp at 277.39; stackHeight = 16
               lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 277.39; stackHeight = 16
               subu $sp,$sp,8 # IdentifierExp at 277.39; stackHeight = 16
               sw $s5,4($sp)#**"GC tag" # IdentifierExp at 277.39; stackHeight = 24
               sw $t0,($sp)#**"" # IdentifierExp at 277.39; stackHeight = 24
              # EXIT NODE # IdentifierExp at 277.39; stackHeight = 24
              # ENTER NODE # IntegerLiteral at 277.40; stackHeight = 24
               subu $sp,$sp,8 # IntegerLiteral at 277.40; stackHeight = 24
               sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 277.40; stackHeight = 32
               li $t0,1 # IntegerLiteral at 277.40; stackHeight = 32
               sw $t0,($sp) # IntegerLiteral at 277.40; stackHeight = 32
              # EXIT NODE # IntegerLiteral at 277.40; stackHeight = 32
             lw $t0,($sp) # Plus at 277.40; stackHeight = 32
             lw $t1,8($sp) # Plus at 277.40; stackHeight = 32
             addu $t0,$t0,$t1 # Plus at 277.40; stackHeight = 32
             addu $sp,$sp,8 # Plus at 277.40; stackHeight = 32
             sw $t0,($sp)#**"" # Plus at 277.40; stackHeight = 32
            # EXIT NODE # Plus at 277.40; stackHeight = 24
           lw $t0,($sp) # Assign at 277.39; stackHeight = 24
           sw $t0,8($sp) # Assign at 277.39; stackHeight = 24
           addu $sp,$sp,8 # Assign at 277.39; stackHeight = 24
          # EXIT NODE # Assign at 277.39; stackHeight = 16
        # EXIT NODE # Block at 277.4; stackHeight = 16
      while_enter_1553: # While at 277.4; stackHeight = 16
        # ENTER NODE # LessThan at 277.22; stackHeight = 16
          # ENTER NODE # IdentifierExp at 277.20; stackHeight = 16
           lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 277.20; stackHeight = 16
           subu $sp,$sp,8 # IdentifierExp at 277.20; stackHeight = 16
           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 277.20; stackHeight = 24
           sw $t0,($sp)#**"" # IdentifierExp at 277.20; stackHeight = 24
          # EXIT NODE # IdentifierExp at 277.20; stackHeight = 24
          # ENTER NODE # ArrayLength at 277.30; stackHeight = 24
            # ENTER NODE # IdentifierExp at 277.24; stackHeight = 24
             lw $t0,4($s2) # inst-var # IdentifierExp at 277.24; stackHeight = 24
             subu $sp,$sp,4 # IdentifierExp at 277.24; stackHeight = 24
             sw $t0,($sp)#**"" # IdentifierExp at 277.24; stackHeight = 28
            # EXIT NODE # IdentifierExp at 277.24; stackHeight = 28
           lw $t0,($sp) # ArrayLength at 277.30; stackHeight = 28
           beq $t0,$zero,nullPtrException # ArrayLength at 277.30; stackHeight = 28
           lw $t0,-4($t0) # ArrayLength at 277.30; stackHeight = 28
           sw $s5,($sp)#**"GC tag" # ArrayLength at 277.30; stackHeight = 28
           subu $sp,4 # ArrayLength at 277.30; stackHeight = 28
           sw $t0,($sp)#**"" # ArrayLength at 277.30; stackHeight = 28
          # EXIT NODE # ArrayLength at 277.30; stackHeight = 32
         lw $t0,($sp) # LessThan at 277.22; stackHeight = 32
         lw $t1,8($sp) # LessThan at 277.22; stackHeight = 32
         slt $t0,$t1,$t0 # LessThan at 277.22; stackHeight = 32
         addu $sp,$sp,12 # LessThan at 277.22; stackHeight = 32
         sw $t0,($sp)#**"" # LessThan at 277.22; stackHeight = 20
        # EXIT NODE # LessThan at 277.22; stackHeight = 20
       lw $t0,($sp) # While at 277.4; stackHeight = 20
       addu $sp,$sp,4 # While at 277.4; stackHeight = 20
      bne $t0,$zero,while_top_1553 # While at 277.4; stackHeight = 16
      break_target_1553: # While at 277.4; stackHeight = 16
      # EXIT NODE # While at 277.4; stackHeight = 16
     addu $sp,8 # Block at 277.4; stackHeight = 16
    # EXIT NODE # Block at 277.4; stackHeight = 8
  # EXIT NODE # Block at 273.41; stackHeight = 8
  # ENTER NODE # Assign at 273.36; stackHeight = 8
    # ENTER NODE # Plus at 273.37; stackHeight = 8
      # ENTER NODE # IdentifierExp at 273.36; stackHeight = 8
       lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 273.36; stackHeight = 8
       subu $sp,$sp,8 # IdentifierExp at 273.36; stackHeight = 8
       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 273.36; stackHeight = 16
       sw $t0,($sp)#**"" # IdentifierExp at 273.36; stackHeight = 16
      # EXIT NODE # IdentifierExp at 273.36; stackHeight = 16
      # ENTER NODE # IntegerLiteral at 273.37; stackHeight = 16
       subu $sp,$sp,8 # IntegerLiteral at 273.37; stackHeight = 16
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 273.37; stackHeight = 24
       li $t0,1 # IntegerLiteral at 273.37; stackHeight = 24
       sw $t0,($sp) # IntegerLiteral at 273.37; stackHeight = 24
      # EXIT NODE # IntegerLiteral at 273.37; stackHeight = 24
     lw $t0,($sp) # Plus at 273.37; stackHeight = 24
     lw $t1,8($sp) # Plus at 273.37; stackHeight = 24
     addu $t0,$t0,$t1 # Plus at 273.37; stackHeight = 24
     addu $sp,$sp,8 # Plus at 273.37; stackHeight = 24
     sw $t0,($sp)#**"" # Plus at 273.37; stackHeight = 24
    # EXIT NODE # Plus at 273.37; stackHeight = 16
   lw $t0,($sp) # Assign at 273.36; stackHeight = 16
   sw $t0,8($sp) # Assign at 273.36; stackHeight = 16
   addu $sp,$sp,8 # Assign at 273.36; stackHeight = 16
  # EXIT NODE # Assign at 273.36; stackHeight = 8
# EXIT NODE # Block at 273.3; stackHeight = 8
while_enter_1557: # While at 273.3; stackHeight = 8
  # ENTER NODE # LessThan at 273.21; stackHeight = 8
    # ENTER NODE # IdentifierExp at 273.19; stackHeight = 8
     lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 273.19; stackHeight = 8
     subu $sp,$sp,8 # IdentifierExp at 273.19; stackHeight = 8
     sw $s5,4($sp)#**"GC tag" # IdentifierExp at 273.19; stackHeight = 16
     sw $t0,($sp)#**"" # IdentifierExp at 273.19; stackHeight = 16
    # EXIT NODE # IdentifierExp at 273.19; stackHeight = 16
    # ENTER NODE # ArrayLength at 273.27; stackHeight = 16
      # ENTER NODE # IdentifierExp at 273.23; stackHeight = 16
       lw $t0,0($s2) # inst-var # IdentifierExp at 273.23; stackHeight = 16
       subu $sp,$sp,4 # IdentifierExp at 273.23; stackHeight = 16
       sw $t0,($sp)#**"" # IdentifierExp at 273.23; stackHeight = 20
      # EXIT NODE # IdentifierExp at 273.23; stackHeight = 20
     lw $t0,($sp) # ArrayLength at 273.27; stackHeight = 20
     beq $t0,$zero,nullPtrException # ArrayLength at 273.27; stackHeight = 20
     lw $t0,-4($t0) # ArrayLength at 273.27; stackHeight = 20
     sw $s5,($sp)#**"GC tag" # ArrayLength at 273.27; stackHeight = 20
     subu $sp,4 # ArrayLength at 273.27; stackHeight = 20
     sw $t0,($sp)#**"" # ArrayLength at 273.27; stackHeight = 20
    # EXIT NODE # ArrayLength at 273.27; stackHeight = 24
   lw $t0,($sp) # LessThan at 273.21; stackHeight = 24
   lw $t1,8($sp) # LessThan at 273.21; stackHeight = 24
   slt $t0,$t1,$t0 # LessThan at 273.21; stackHeight = 24
   addu $sp,$sp,12 # LessThan at 273.21; stackHeight = 24
   sw $t0,($sp)#**"" # LessThan at 273.21; stackHeight = 12
  # EXIT NODE # LessThan at 273.21; stackHeight = 12
 lw $t0,($sp) # While at 273.3; stackHeight = 12
 addu $sp,$sp,4 # While at 273.3; stackHeight = 12
bne $t0,$zero,while_top_1557 # While at 273.3; stackHeight = 8
break_target_1557: # While at 273.3; stackHeight = 8
# EXIT NODE # While at 273.3; stackHeight = 8
 addu $sp,8 # Block at 273.3; stackHeight = 8
# EXIT NODE # Block at 273.3; stackHeight = 0
  # ENTER NODE # Block at 281.3; stackHeight = 0
    # ENTER NODE # LocalVarDecl at 281.12; stackHeight = 0
      # ENTER NODE # IntegerLiteral at 281.16; stackHeight = 0
       subu $sp,$sp,8 # IntegerLiteral at 281.16; stackHeight = 0
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 281.16; stackHeight = 8
       li $t0,0 # IntegerLiteral at 281.16; stackHeight = 8
       sw $t0,($sp) # IntegerLiteral at 281.16; stackHeight = 8
      # EXIT NODE # IntegerLiteral at 281.16; stackHeight = 8
    # EXIT NODE # LocalVarDecl at 281.12; stackHeight = 8
    # ENTER NODE # While at 281.3; stackHeight = 8
    j while_enter_1634 # While at 281.3; stackHeight = 8
    while_top_1634: # While at 281.3; stackHeight = 8
      # ENTER NODE # Block at 281.3; stackHeight = 8
        # ENTER NODE # Block at 281.43; stackHeight = 8
          # ENTER NODE # Block at 282.4; stackHeight = 8
            # ENTER NODE # LocalVarDecl at 282.13; stackHeight = 8
              # ENTER NODE # IntegerLiteral at 282.17; stackHeight = 8
               subu $sp,$sp,8 # IntegerLiteral at 282.17; stackHeight = 8
               sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 282.17; stackHeight = 16
               li $t0,0 # IntegerLiteral at 282.17; stackHeight = 16
               sw $t0,($sp) # IntegerLiteral at 282.17; stackHeight = 16
              # EXIT NODE # IntegerLiteral at 282.17; stackHeight = 16
            # EXIT NODE # LocalVarDecl at 282.13; stackHeight = 16
            # ENTER NODE # While at 282.4; stackHeight = 16
            j while_enter_1600 # While at 282.4; stackHeight = 16
            while_top_1600: # While at 282.4; stackHeight = 16
              # ENTER NODE # Block at 282.4; stackHeight = 16
                # ENTER NODE # Block at 282.42; stackHeight = 16
                  # ENTER NODE # CallStatement at 283.5; stackHeight = 16
                    # ENTER NODE # Call at 283.5; stackHeight = 16
                      # ENTER NODE # This at 283.5; stackHeight = 16
                       subu $sp,$sp,4 # This at 283.5; stackHeight = 16
                       sw $s2,($sp)#**"" # This at 283.5; stackHeight = 20
                      # EXIT NODE # This at 283.5; stackHeight = 20
                      # ENTER NODE # Call at 283.48; stackHeight = 20
                        # ENTER NODE # Call at 283.37; stackHeight = 20
                          # ENTER NODE # Call at 283.24; stackHeight = 20
                            # ENTER NODE # IdentifierExp at 283.14; stackHeight = 20
                             lw $t0,4($s2) # inst-var # IdentifierExp at 283.14; stackHeight = 20
                             subu $sp,$sp,4 # IdentifierExp at 283.14; stackHeight = 20
                             sw $t0,($sp)#**"" # IdentifierExp at 283.14; stackHeight = 24
                            # EXIT NODE # IdentifierExp at 283.14; stackHeight = 24
                            # ENTER NODE # IdentifierExp at 283.21; stackHeight = 24
                             lw $t0,16($sp) # local: stackHt=24,var-offset=-8 # IdentifierExp at 283.21; stackHeight = 24
                             subu $sp,$sp,8 # IdentifierExp at 283.21; stackHeight = 24
                             sw $s5,4($sp)#**"GC tag" # IdentifierExp at 283.21; stackHeight = 32
                             sw $t0,($sp)#**"" # IdentifierExp at 283.21; stackHeight = 32
                            # EXIT NODE # IdentifierExp at 283.21; stackHeight = 32
                           lw $t0,8($sp) # ArrayLookup at 283.20; stackHeight = 32
                           beq $t0,$zero,nullPtrException # ArrayLookup at 283.20; stackHeight = 32
                           lw $t1,-4($t0) # ArrayLookup at 283.20; stackHeight = 32
                           lw $t2,($sp) # ArrayLookup at 283.20; stackHeight = 32
                           bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 283.20; stackHeight = 32
                           sll $t2,$t2,2 # ArrayLookup at 283.20; stackHeight = 32
                           addu $t2,$t2,$t0 # ArrayLookup at 283.20; stackHeight = 32
                           lw $t0,($t2) # ArrayLookup at 283.20; stackHeight = 32
                           sw $t0,8($sp)#**"" # ArrayLookup at 283.20; stackHeight = 32
                           addu $sp,$sp,8 # ArrayLookup at 283.20; stackHeight = 32
                          # EXIT NODE # ArrayLookup at 283.20; stackHeight = 24
                          # ENTER NODE # IdentifierExp at 283.28; stackHeight = 24
                           lw $t0,0($s2) # inst-var # IdentifierExp at 283.28; stackHeight = 24
                           subu $sp,$sp,4 # IdentifierExp at 283.28; stackHeight = 24
                           sw $t0,($sp)#**"" # IdentifierExp at 283.28; stackHeight = 28
                          # EXIT NODE # IdentifierExp at 283.28; stackHeight = 28
                          # ENTER NODE # IdentifierExp at 283.33; stackHeight = 28
                           lw $t0,12($sp) # local: stackHt=28,var-offset=-16 # IdentifierExp at 283.33; stackHeight = 28
                           subu $sp,$sp,8 # IdentifierExp at 283.33; stackHeight = 28
                           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 283.33; stackHeight = 36
                           sw $t0,($sp)#**"" # IdentifierExp at 283.33; stackHeight = 36
                          # EXIT NODE # IdentifierExp at 283.33; stackHeight = 36
                         lw $t0,8($sp) # ArrayLookup at 283.32; stackHeight = 36
                         beq $t0,$zero,nullPtrException # ArrayLookup at 283.32; stackHeight = 36
                         lw $t1,-4($t0) # ArrayLookup at 283.32; stackHeight = 36
                         lw $t2,($sp) # ArrayLookup at 283.32; stackHeight = 36
                         bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 283.32; stackHeight = 36
                         sll $t2,$t2,2 # ArrayLookup at 283.32; stackHeight = 36
                         addu $t2,$t2,$t0 # ArrayLookup at 283.32; stackHeight = 36
                         lw $t0,($t2) # ArrayLookup at 283.32; stackHeight = 36
                         sw $t0,8($sp)#**"" # ArrayLookup at 283.32; stackHeight = 36
                         addu $sp,$sp,8 # ArrayLookup at 283.32; stackHeight = 36
                        # EXIT NODE # ArrayLookup at 283.32; stackHeight = 28
                       lw $t0,4($sp) # Call at 283.24; stackHeight = 28
                       beq $t0,$zero,nullPtrException # Call at 283.24; stackHeight = 28
                       lw $t0,-12($t0) # Call at 283.24; stackHeight = 28
                       lw $t0,60($t0) # Call at 283.24; stackHeight = 28
                       jalr $t0 # max # Call at 283.24; stackHeight = 28
                      # EXIT NODE # Call at 283.24; stackHeight = 24
                     lw $t0,0($sp) # Call at 283.37; stackHeight = 24
                     beq $t0,$zero,nullPtrException # Call at 283.37; stackHeight = 24
                     lw $t0,-12($t0) # Call at 283.37; stackHeight = 24
                     lw $t0,8($t0) # Call at 283.37; stackHeight = 24
                     jalr $t0 # toString # Call at 283.37; stackHeight = 24
                    # EXIT NODE # Call at 283.37; stackHeight = 24
                    # ENTER NODE # StringLiteral at 283.55; stackHeight = 24
                     subu $sp,$sp,4 # StringLiteral at 283.55; stackHeight = 24
                     la $t0,strLit_486 # StringLiteral at 283.55; stackHeight = 28
                     sw $t0,($sp)#**"strLit:\?" # StringLiteral at 283.55; stackHeight = 28
                    # EXIT NODE # StringLiteral at 283.55; stackHeight = 28
                   lw $t0,4($sp) # Call at 283.48; stackHeight = 28
                   beq $t0,$zero,nullPtrException # Call at 283.48; stackHeight = 28
                   lw $t0,-12($t0) # Call at 283.48; stackHeight = 28
                   lw $t0,12($t0) # Call at 283.48; stackHeight = 28
                   jalr $t0 # concat # Call at 283.48; stackHeight = 28
                  # EXIT NODE # Call at 283.48; stackHeight = 24
                 lw $t0,4($sp) # Call at 283.5; stackHeight = 24
                 beq $t0,$zero,nullPtrException # Call at 283.5; stackHeight = 24
                 lw $t0,-12($t0) # Call at 283.5; stackHeight = 24
                 lw $t0,24($t0) # Call at 283.5; stackHeight = 24
                 jalr $t0 # printStr # Call at 283.5; stackHeight = 24
                # EXIT NODE # Call at 283.5; stackHeight = 16
              # EXIT NODE # CallStatement at 283.5; stackHeight = 16
            # EXIT NODE # Block at 282.42; stackHeight = 16
            # ENTER NODE # Assign at 282.37; stackHeight = 16
              # ENTER NODE # Plus at 282.38; stackHeight = 16
                # ENTER NODE # IdentifierExp at 282.37; stackHeight = 16
                 lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 282.37; stackHeight = 16
                 subu $sp,$sp,8 # IdentifierExp at 282.37; stackHeight = 16
                 sw $s5,4($sp)#**"GC tag" # IdentifierExp at 282.37; stackHeight = 24
                 sw $t0,($sp)#**"" # IdentifierExp at 282.37; stackHeight = 24
                # EXIT NODE # IdentifierExp at 282.37; stackHeight = 24
                # ENTER NODE # IntegerLiteral at 282.38; stackHeight = 24
                 subu $sp,$sp,8 # IntegerLiteral at 282.38; stackHeight = 24
                 sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 282.38; stackHeight = 32
                 li $t0,1 # IntegerLiteral at 282.38; stackHeight = 32
                 sw $t0,($sp) # IntegerLiteral at 282.38; stackHeight = 32
                # EXIT NODE # IntegerLiteral at 282.38; stackHeight = 32
               lw $t0,($sp) # Plus at 282.38; stackHeight = 32
               lw $t1,8($sp) # Plus at 282.38; stackHeight = 32
               addu $t0,$t0,$t1 # Plus at 282.38; stackHeight = 32
               addu $sp,$sp,8 # Plus at 282.38; stackHeight = 32
               sw $t0,($sp)#**"" # Plus at 282.38; stackHeight = 32
              # EXIT NODE # Plus at 282.38; stackHeight = 24
             lw $t0,($sp) # Assign at 282.37; stackHeight = 24
             sw $t0,8($sp) # Assign at 282.37; stackHeight = 24
             addu $sp,$sp,8 # Assign at 282.37; stackHeight = 24
            # EXIT NODE # Assign at 282.37; stackHeight = 16
          # EXIT NODE # Block at 282.4; stackHeight = 16
        while_enter_1600: # While at 282.4; stackHeight = 16
          # ENTER NODE # LessThan at 282.22; stackHeight = 16
            # ENTER NODE # IdentifierExp at 282.20; stackHeight = 16
             lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 282.20; stackHeight = 16
             subu $sp,$sp,8 # IdentifierExp at 282.20; stackHeight = 16
             sw $s5,4($sp)#**"GC tag" # IdentifierExp at 282.20; stackHeight = 24
             sw $t0,($sp)#**"" # IdentifierExp at 282.20; stackHeight = 24
            # EXIT NODE # IdentifierExp at 282.20; stackHeight = 24
            # ENTER NODE # ArrayLength at 282.28; stackHeight = 24
              # ENTER NODE # IdentifierExp at 282.24; stackHeight = 24
               lw $t0,0($s2) # inst-var # IdentifierExp at 282.24; stackHeight = 24
               subu $sp,$sp,4 # IdentifierExp at 282.24; stackHeight = 24
               sw $t0,($sp)#**"" # IdentifierExp at 282.24; stackHeight = 28
              # EXIT NODE # IdentifierExp at 282.24; stackHeight = 28
             lw $t0,($sp) # ArrayLength at 282.28; stackHeight = 28
             beq $t0,$zero,nullPtrException # ArrayLength at 282.28; stackHeight = 28
             lw $t0,-4($t0) # ArrayLength at 282.28; stackHeight = 28
             sw $s5,($sp)#**"GC tag" # ArrayLength at 282.28; stackHeight = 28
             subu $sp,4 # ArrayLength at 282.28; stackHeight = 28
             sw $t0,($sp)#**"" # ArrayLength at 282.28; stackHeight = 28
            # EXIT NODE # ArrayLength at 282.28; stackHeight = 32
           lw $t0,($sp) # LessThan at 282.22; stackHeight = 32
           lw $t1,8($sp) # LessThan at 282.22; stackHeight = 32
           slt $t0,$t1,$t0 # LessThan at 282.22; stackHeight = 32
           addu $sp,$sp,12 # LessThan at 282.22; stackHeight = 32
           sw $t0,($sp)#**"" # LessThan at 282.22; stackHeight = 20
          # EXIT NODE # LessThan at 282.22; stackHeight = 20
         lw $t0,($sp) # While at 282.4; stackHeight = 20
         addu $sp,$sp,4 # While at 282.4; stackHeight = 20
        bne $t0,$zero,while_top_1600 # While at 282.4; stackHeight = 16
        break_target_1600: # While at 282.4; stackHeight = 16
        # EXIT NODE # While at 282.4; stackHeight = 16
       addu $sp,8 # Block at 282.4; stackHeight = 16
      # EXIT NODE # Block at 282.4; stackHeight = 8
      # ENTER NODE # Block at 285.4; stackHeight = 8
        # ENTER NODE # LocalVarDecl at 285.13; stackHeight = 8
          # ENTER NODE # IntegerLiteral at 285.17; stackHeight = 8
           subu $sp,$sp,8 # IntegerLiteral at 285.17; stackHeight = 8
           sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 285.17; stackHeight = 16
           li $t0,0 # IntegerLiteral at 285.17; stackHeight = 16
           sw $t0,($sp) # IntegerLiteral at 285.17; stackHeight = 16
          # EXIT NODE # IntegerLiteral at 285.17; stackHeight = 16
        # EXIT NODE # LocalVarDecl at 285.13; stackHeight = 16
        # ENTER NODE # While at 285.4; stackHeight = 16
        j while_enter_1630 # While at 285.4; stackHeight = 16
        while_top_1630: # While at 285.4; stackHeight = 16
          # ENTER NODE # Block at 285.4; stackHeight = 16
            # ENTER NODE # Block at 285.44; stackHeight = 16
              # ENTER NODE # CallStatement at 286.5; stackHeight = 16
                # ENTER NODE # Call at 286.5; stackHeight = 16
                  # ENTER NODE # This at 286.5; stackHeight = 16
                   subu $sp,$sp,4 # This at 286.5; stackHeight = 16
                   sw $s2,($sp)#**"" # This at 286.5; stackHeight = 20
                  # EXIT NODE # This at 286.5; stackHeight = 20
                  # ENTER NODE # Call at 286.50; stackHeight = 20
                    # ENTER NODE # Call at 286.39; stackHeight = 20
                      # ENTER NODE # Call at 286.24; stackHeight = 20
                        # ENTER NODE # IdentifierExp at 286.14; stackHeight = 20
                         lw $t0,4($s2) # inst-var # IdentifierExp at 286.14; stackHeight = 20
                         subu $sp,$sp,4 # IdentifierExp at 286.14; stackHeight = 20
                         sw $t0,($sp)#**"" # IdentifierExp at 286.14; stackHeight = 24
                        # EXIT NODE # IdentifierExp at 286.14; stackHeight = 24
                        # ENTER NODE # IdentifierExp at 286.21; stackHeight = 24
                         lw $t0,16($sp) # local: stackHt=24,var-offset=-8 # IdentifierExp at 286.21; stackHeight = 24
                         subu $sp,$sp,8 # IdentifierExp at 286.21; stackHeight = 24
                         sw $s5,4($sp)#**"GC tag" # IdentifierExp at 286.21; stackHeight = 32
                         sw $t0,($sp)#**"" # IdentifierExp at 286.21; stackHeight = 32
                        # EXIT NODE # IdentifierExp at 286.21; stackHeight = 32
                       lw $t0,8($sp) # ArrayLookup at 286.20; stackHeight = 32
                       beq $t0,$zero,nullPtrException # ArrayLookup at 286.20; stackHeight = 32
                       lw $t1,-4($t0) # ArrayLookup at 286.20; stackHeight = 32
                       lw $t2,($sp) # ArrayLookup at 286.20; stackHeight = 32
                       bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 286.20; stackHeight = 32
                       sll $t2,$t2,2 # ArrayLookup at 286.20; stackHeight = 32
                       addu $t2,$t2,$t0 # ArrayLookup at 286.20; stackHeight = 32
                       lw $t0,($t2) # ArrayLookup at 286.20; stackHeight = 32
                       sw $t0,8($sp)#**"" # ArrayLookup at 286.20; stackHeight = 32
                       addu $sp,$sp,8 # ArrayLookup at 286.20; stackHeight = 32
                      # EXIT NODE # ArrayLookup at 286.20; stackHeight = 24
                      # ENTER NODE # IdentifierExp at 286.28; stackHeight = 24
                       lw $t0,4($s2) # inst-var # IdentifierExp at 286.28; stackHeight = 24
                       subu $sp,$sp,4 # IdentifierExp at 286.28; stackHeight = 24
                       sw $t0,($sp)#**"" # IdentifierExp at 286.28; stackHeight = 28
                      # EXIT NODE # IdentifierExp at 286.28; stackHeight = 28
                      # ENTER NODE # IdentifierExp at 286.35; stackHeight = 28
                       lw $t0,12($sp) # local: stackHt=28,var-offset=-16 # IdentifierExp at 286.35; stackHeight = 28
                       subu $sp,$sp,8 # IdentifierExp at 286.35; stackHeight = 28
                       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 286.35; stackHeight = 36
                       sw $t0,($sp)#**"" # IdentifierExp at 286.35; stackHeight = 36
                      # EXIT NODE # IdentifierExp at 286.35; stackHeight = 36
                     lw $t0,8($sp) # ArrayLookup at 286.34; stackHeight = 36
                     beq $t0,$zero,nullPtrException # ArrayLookup at 286.34; stackHeight = 36
                     lw $t1,-4($t0) # ArrayLookup at 286.34; stackHeight = 36
                     lw $t2,($sp) # ArrayLookup at 286.34; stackHeight = 36
                     bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 286.34; stackHeight = 36
                     sll $t2,$t2,2 # ArrayLookup at 286.34; stackHeight = 36
                     addu $t2,$t2,$t0 # ArrayLookup at 286.34; stackHeight = 36
                     lw $t0,($t2) # ArrayLookup at 286.34; stackHeight = 36
                     sw $t0,8($sp)#**"" # ArrayLookup at 286.34; stackHeight = 36
                     addu $sp,$sp,8 # ArrayLookup at 286.34; stackHeight = 36
                    # EXIT NODE # ArrayLookup at 286.34; stackHeight = 28
                   lw $t0,4($sp) # Call at 286.24; stackHeight = 28
                   beq $t0,$zero,nullPtrException # Call at 286.24; stackHeight = 28
                   lw $t0,-12($t0) # Call at 286.24; stackHeight = 28
                   lw $t0,60($t0) # Call at 286.24; stackHeight = 28
                   jalr $t0 # max # Call at 286.24; stackHeight = 28
                  # EXIT NODE # Call at 286.24; stackHeight = 24
                 lw $t0,0($sp) # Call at 286.39; stackHeight = 24
                 beq $t0,$zero,nullPtrException # Call at 286.39; stackHeight = 24
                 lw $t0,-12($t0) # Call at 286.39; stackHeight = 24
                 lw $t0,8($t0) # Call at 286.39; stackHeight = 24
                 jalr $t0 # toString # Call at 286.39; stackHeight = 24
                # EXIT NODE # Call at 286.39; stackHeight = 24
                # ENTER NODE # StringLiteral at 286.57; stackHeight = 24
                 subu $sp,$sp,4 # StringLiteral at 286.57; stackHeight = 24
                 la $t0,strLit_486 # StringLiteral at 286.57; stackHeight = 28
                 sw $t0,($sp)#**"strLit:\?" # StringLiteral at 286.57; stackHeight = 28
                # EXIT NODE # StringLiteral at 286.57; stackHeight = 28
               lw $t0,4($sp) # Call at 286.50; stackHeight = 28
               beq $t0,$zero,nullPtrException # Call at 286.50; stackHeight = 28
               lw $t0,-12($t0) # Call at 286.50; stackHeight = 28
               lw $t0,12($t0) # Call at 286.50; stackHeight = 28
               jalr $t0 # concat # Call at 286.50; stackHeight = 28
              # EXIT NODE # Call at 286.50; stackHeight = 24
             lw $t0,4($sp) # Call at 286.5; stackHeight = 24
             beq $t0,$zero,nullPtrException # Call at 286.5; stackHeight = 24
             lw $t0,-12($t0) # Call at 286.5; stackHeight = 24
             lw $t0,24($t0) # Call at 286.5; stackHeight = 24
             jalr $t0 # printStr # Call at 286.5; stackHeight = 24
            # EXIT NODE # Call at 286.5; stackHeight = 16
          # EXIT NODE # CallStatement at 286.5; stackHeight = 16
        # EXIT NODE # Block at 285.44; stackHeight = 16
        # ENTER NODE # Assign at 285.39; stackHeight = 16
          # ENTER NODE # Plus at 285.40; stackHeight = 16
            # ENTER NODE # IdentifierExp at 285.39; stackHeight = 16
             lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 285.39; stackHeight = 16
             subu $sp,$sp,8 # IdentifierExp at 285.39; stackHeight = 16
             sw $s5,4($sp)#**"GC tag" # IdentifierExp at 285.39; stackHeight = 24
             sw $t0,($sp)#**"" # IdentifierExp at 285.39; stackHeight = 24
            # EXIT NODE # IdentifierExp at 285.39; stackHeight = 24
            # ENTER NODE # IntegerLiteral at 285.40; stackHeight = 24
             subu $sp,$sp,8 # IntegerLiteral at 285.40; stackHeight = 24
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 285.40; stackHeight = 32
             li $t0,1 # IntegerLiteral at 285.40; stackHeight = 32
             sw $t0,($sp) # IntegerLiteral at 285.40; stackHeight = 32
            # EXIT NODE # IntegerLiteral at 285.40; stackHeight = 32
           lw $t0,($sp) # Plus at 285.40; stackHeight = 32
           lw $t1,8($sp) # Plus at 285.40; stackHeight = 32
           addu $t0,$t0,$t1 # Plus at 285.40; stackHeight = 32
           addu $sp,$sp,8 # Plus at 285.40; stackHeight = 32
           sw $t0,($sp)#**"" # Plus at 285.40; stackHeight = 32
          # EXIT NODE # Plus at 285.40; stackHeight = 24
         lw $t0,($sp) # Assign at 285.39; stackHeight = 24
         sw $t0,8($sp) # Assign at 285.39; stackHeight = 24
         addu $sp,$sp,8 # Assign at 285.39; stackHeight = 24
        # EXIT NODE # Assign at 285.39; stackHeight = 16
      # EXIT NODE # Block at 285.4; stackHeight = 16
    while_enter_1630: # While at 285.4; stackHeight = 16
      # ENTER NODE # LessThan at 285.22; stackHeight = 16
        # ENTER NODE # IdentifierExp at 285.20; stackHeight = 16
         lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 285.20; stackHeight = 16
         subu $sp,$sp,8 # IdentifierExp at 285.20; stackHeight = 16
         sw $s5,4($sp)#**"GC tag" # IdentifierExp at 285.20; stackHeight = 24
         sw $t0,($sp)#**"" # IdentifierExp at 285.20; stackHeight = 24
        # EXIT NODE # IdentifierExp at 285.20; stackHeight = 24
        # ENTER NODE # ArrayLength at 285.30; stackHeight = 24
          # ENTER NODE # IdentifierExp at 285.24; stackHeight = 24
           lw $t0,4($s2) # inst-var # IdentifierExp at 285.24; stackHeight = 24
           subu $sp,$sp,4 # IdentifierExp at 285.24; stackHeight = 24
           sw $t0,($sp)#**"" # IdentifierExp at 285.24; stackHeight = 28
          # EXIT NODE # IdentifierExp at 285.24; stackHeight = 28
         lw $t0,($sp) # ArrayLength at 285.30; stackHeight = 28
         beq $t0,$zero,nullPtrException # ArrayLength at 285.30; stackHeight = 28
         lw $t0,-4($t0) # ArrayLength at 285.30; stackHeight = 28
         sw $s5,($sp)#**"GC tag" # ArrayLength at 285.30; stackHeight = 28
         subu $sp,4 # ArrayLength at 285.30; stackHeight = 28
         sw $t0,($sp)#**"" # ArrayLength at 285.30; stackHeight = 28
        # EXIT NODE # ArrayLength at 285.30; stackHeight = 32
       lw $t0,($sp) # LessThan at 285.22; stackHeight = 32
       lw $t1,8($sp) # LessThan at 285.22; stackHeight = 32
       slt $t0,$t1,$t0 # LessThan at 285.22; stackHeight = 32
       addu $sp,$sp,12 # LessThan at 285.22; stackHeight = 32
       sw $t0,($sp)#**"" # LessThan at 285.22; stackHeight = 20
      # EXIT NODE # LessThan at 285.22; stackHeight = 20
     lw $t0,($sp) # While at 285.4; stackHeight = 20
     addu $sp,$sp,4 # While at 285.4; stackHeight = 20
    bne $t0,$zero,while_top_1630 # While at 285.4; stackHeight = 16
    break_target_1630: # While at 285.4; stackHeight = 16
    # EXIT NODE # While at 285.4; stackHeight = 16
   addu $sp,8 # Block at 285.4; stackHeight = 16
  # EXIT NODE # Block at 285.4; stackHeight = 8
# EXIT NODE # Block at 281.43; stackHeight = 8
  # ENTER NODE # Assign at 281.38; stackHeight = 8
    # ENTER NODE # Plus at 281.39; stackHeight = 8
      # ENTER NODE # IdentifierExp at 281.38; stackHeight = 8
       lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 281.38; stackHeight = 8
       subu $sp,$sp,8 # IdentifierExp at 281.38; stackHeight = 8
       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 281.38; stackHeight = 16
       sw $t0,($sp)#**"" # IdentifierExp at 281.38; stackHeight = 16
      # EXIT NODE # IdentifierExp at 281.38; stackHeight = 16
      # ENTER NODE # IntegerLiteral at 281.39; stackHeight = 16
       subu $sp,$sp,8 # IntegerLiteral at 281.39; stackHeight = 16
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 281.39; stackHeight = 24
       li $t0,1 # IntegerLiteral at 281.39; stackHeight = 24
       sw $t0,($sp) # IntegerLiteral at 281.39; stackHeight = 24
      # EXIT NODE # IntegerLiteral at 281.39; stackHeight = 24
     lw $t0,($sp) # Plus at 281.39; stackHeight = 24
     lw $t1,8($sp) # Plus at 281.39; stackHeight = 24
     addu $t0,$t0,$t1 # Plus at 281.39; stackHeight = 24
     addu $sp,$sp,8 # Plus at 281.39; stackHeight = 24
     sw $t0,($sp)#**"" # Plus at 281.39; stackHeight = 24
    # EXIT NODE # Plus at 281.39; stackHeight = 16
   lw $t0,($sp) # Assign at 281.38; stackHeight = 16
   sw $t0,8($sp) # Assign at 281.38; stackHeight = 16
   addu $sp,$sp,8 # Assign at 281.38; stackHeight = 16
  # EXIT NODE # Assign at 281.38; stackHeight = 8
# EXIT NODE # Block at 281.3; stackHeight = 8
while_enter_1634: # While at 281.3; stackHeight = 8
  # ENTER NODE # LessThan at 281.21; stackHeight = 8
    # ENTER NODE # IdentifierExp at 281.19; stackHeight = 8
     lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 281.19; stackHeight = 8
     subu $sp,$sp,8 # IdentifierExp at 281.19; stackHeight = 8
     sw $s5,4($sp)#**"GC tag" # IdentifierExp at 281.19; stackHeight = 16
     sw $t0,($sp)#**"" # IdentifierExp at 281.19; stackHeight = 16
    # EXIT NODE # IdentifierExp at 281.19; stackHeight = 16
    # ENTER NODE # ArrayLength at 281.29; stackHeight = 16
      # ENTER NODE # IdentifierExp at 281.23; stackHeight = 16
       lw $t0,4($s2) # inst-var # IdentifierExp at 281.23; stackHeight = 16
       subu $sp,$sp,4 # IdentifierExp at 281.23; stackHeight = 16
       sw $t0,($sp)#**"" # IdentifierExp at 281.23; stackHeight = 20
      # EXIT NODE # IdentifierExp at 281.23; stackHeight = 20
     lw $t0,($sp) # ArrayLength at 281.29; stackHeight = 20
     beq $t0,$zero,nullPtrException # ArrayLength at 281.29; stackHeight = 20
     lw $t0,-4($t0) # ArrayLength at 281.29; stackHeight = 20
     sw $s5,($sp)#**"GC tag" # ArrayLength at 281.29; stackHeight = 20
     subu $sp,4 # ArrayLength at 281.29; stackHeight = 20
     sw $t0,($sp)#**"" # ArrayLength at 281.29; stackHeight = 20
    # EXIT NODE # ArrayLength at 281.29; stackHeight = 24
   lw $t0,($sp) # LessThan at 281.21; stackHeight = 24
   lw $t1,8($sp) # LessThan at 281.21; stackHeight = 24
   slt $t0,$t1,$t0 # LessThan at 281.21; stackHeight = 24
   addu $sp,$sp,12 # LessThan at 281.21; stackHeight = 24
   sw $t0,($sp)#**"" # LessThan at 281.21; stackHeight = 12
  # EXIT NODE # LessThan at 281.21; stackHeight = 12
 lw $t0,($sp) # While at 281.3; stackHeight = 12
 addu $sp,$sp,4 # While at 281.3; stackHeight = 12
bne $t0,$zero,while_top_1634 # While at 281.3; stackHeight = 8
break_target_1634: # While at 281.3; stackHeight = 8
# EXIT NODE # While at 281.3; stackHeight = 8
 addu $sp,8 # Block at 281.3; stackHeight = 8
# EXIT NODE # Block at 281.3; stackHeight = 0
 # stack height is 0 # MethodDeclVoid at 272.14; stackHeight = 0
 lw $ra,4($sp) # MethodDeclVoid at 272.14; stackHeight = 0
 lw $s2,0($sp) # MethodDeclVoid at 272.14; stackHeight = 0
 addu $sp,$sp,8 # MethodDeclVoid at 272.14; stackHeight = 0
jr $ra # MethodDeclVoid at 272.14; stackHeight = -8
# EXIT NODE # MethodDeclVoid at 272.14; stackHeight = -8
  # ENTER NODE # MethodDeclVoid at 291.14; stackHeight = -8
  .globl fcn_1791_min # MethodDeclVoid at 291.14; stackHeight = -8
  fcn_1791_min: # MethodDeclVoid at 291.14; stackHeight = -8
   subu $sp,$sp,4 # MethodDeclVoid at 291.14; stackHeight = -8
   sw $s2,($sp) #**"old this-ptr" # MethodDeclVoid at 291.14; stackHeight = -8
   lw $s2,4($sp) #**"this-ptr" # MethodDeclVoid at 291.14; stackHeight = -8
   sw $ra,4($sp) #**"RA:min" # MethodDeclVoid at 291.14; stackHeight = -8
    # ENTER NODE # Block at 292.3; stackHeight = 0
      # ENTER NODE # LocalVarDecl at 292.12; stackHeight = 0
        # ENTER NODE # IntegerLiteral at 292.16; stackHeight = 0
         subu $sp,$sp,8 # IntegerLiteral at 292.16; stackHeight = 0
         sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 292.16; stackHeight = 8
         li $t0,0 # IntegerLiteral at 292.16; stackHeight = 8
         sw $t0,($sp) # IntegerLiteral at 292.16; stackHeight = 8
        # EXIT NODE # IntegerLiteral at 292.16; stackHeight = 8
      # EXIT NODE # LocalVarDecl at 292.12; stackHeight = 8
      # ENTER NODE # While at 292.3; stackHeight = 8
      j while_enter_1712 # While at 292.3; stackHeight = 8
      while_top_1712: # While at 292.3; stackHeight = 8
        # ENTER NODE # Block at 292.3; stackHeight = 8
          # ENTER NODE # Block at 292.41; stackHeight = 8
            # ENTER NODE # Block at 293.4; stackHeight = 8
              # ENTER NODE # LocalVarDecl at 293.13; stackHeight = 8
                # ENTER NODE # IntegerLiteral at 293.17; stackHeight = 8
                 subu $sp,$sp,8 # IntegerLiteral at 293.17; stackHeight = 8
                 sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 293.17; stackHeight = 16
                 li $t0,0 # IntegerLiteral at 293.17; stackHeight = 16
                 sw $t0,($sp) # IntegerLiteral at 293.17; stackHeight = 16
                # EXIT NODE # IntegerLiteral at 293.17; stackHeight = 16
              # EXIT NODE # LocalVarDecl at 293.13; stackHeight = 16
              # ENTER NODE # While at 293.4; stackHeight = 16
              j while_enter_1678 # While at 293.4; stackHeight = 16
              while_top_1678: # While at 293.4; stackHeight = 16
                # ENTER NODE # Block at 293.4; stackHeight = 16
                  # ENTER NODE # Block at 293.42; stackHeight = 16
                    # ENTER NODE # CallStatement at 294.5; stackHeight = 16
                      # ENTER NODE # Call at 294.5; stackHeight = 16
                        # ENTER NODE # This at 294.5; stackHeight = 16
                         subu $sp,$sp,4 # This at 294.5; stackHeight = 16
                         sw $s2,($sp)#**"" # This at 294.5; stackHeight = 20
                        # EXIT NODE # This at 294.5; stackHeight = 20
                        # ENTER NODE # Call at 294.46; stackHeight = 20
                          # ENTER NODE # Call at 294.35; stackHeight = 20
                            # ENTER NODE # Call at 294.22; stackHeight = 20
                              # ENTER NODE # IdentifierExp at 294.14; stackHeight = 20
                               lw $t0,0($s2) # inst-var # IdentifierExp at 294.14; stackHeight = 20
                               subu $sp,$sp,4 # IdentifierExp at 294.14; stackHeight = 20
                               sw $t0,($sp)#**"" # IdentifierExp at 294.14; stackHeight = 24
                              # EXIT NODE # IdentifierExp at 294.14; stackHeight = 24
                              # ENTER NODE # IdentifierExp at 294.19; stackHeight = 24
                               lw $t0,16($sp) # local: stackHt=24,var-offset=-8 # IdentifierExp at 294.19; stackHeight = 24
                               subu $sp,$sp,8 # IdentifierExp at 294.19; stackHeight = 24
                               sw $s5,4($sp)#**"GC tag" # IdentifierExp at 294.19; stackHeight = 32
                               sw $t0,($sp)#**"" # IdentifierExp at 294.19; stackHeight = 32
                              # EXIT NODE # IdentifierExp at 294.19; stackHeight = 32
                             lw $t0,8($sp) # ArrayLookup at 294.18; stackHeight = 32
                             beq $t0,$zero,nullPtrException # ArrayLookup at 294.18; stackHeight = 32
                             lw $t1,-4($t0) # ArrayLookup at 294.18; stackHeight = 32
                             lw $t2,($sp) # ArrayLookup at 294.18; stackHeight = 32
                             bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 294.18; stackHeight = 32
                             sll $t2,$t2,2 # ArrayLookup at 294.18; stackHeight = 32
                             addu $t2,$t2,$t0 # ArrayLookup at 294.18; stackHeight = 32
                             lw $t0,($t2) # ArrayLookup at 294.18; stackHeight = 32
                             sw $t0,8($sp)#**"" # ArrayLookup at 294.18; stackHeight = 32
                             addu $sp,$sp,8 # ArrayLookup at 294.18; stackHeight = 32
                            # EXIT NODE # ArrayLookup at 294.18; stackHeight = 24
                            # ENTER NODE # IdentifierExp at 294.26; stackHeight = 24
                             lw $t0,0($s2) # inst-var # IdentifierExp at 294.26; stackHeight = 24
                             subu $sp,$sp,4 # IdentifierExp at 294.26; stackHeight = 24
                             sw $t0,($sp)#**"" # IdentifierExp at 294.26; stackHeight = 28
                            # EXIT NODE # IdentifierExp at 294.26; stackHeight = 28
                            # ENTER NODE # IdentifierExp at 294.31; stackHeight = 28
                             lw $t0,12($sp) # local: stackHt=28,var-offset=-16 # IdentifierExp at 294.31; stackHeight = 28
                             subu $sp,$sp,8 # IdentifierExp at 294.31; stackHeight = 28
                             sw $s5,4($sp)#**"GC tag" # IdentifierExp at 294.31; stackHeight = 36
                             sw $t0,($sp)#**"" # IdentifierExp at 294.31; stackHeight = 36
                            # EXIT NODE # IdentifierExp at 294.31; stackHeight = 36
                           lw $t0,8($sp) # ArrayLookup at 294.30; stackHeight = 36
                           beq $t0,$zero,nullPtrException # ArrayLookup at 294.30; stackHeight = 36
                           lw $t1,-4($t0) # ArrayLookup at 294.30; stackHeight = 36
                           lw $t2,($sp) # ArrayLookup at 294.30; stackHeight = 36
                           bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 294.30; stackHeight = 36
                           sll $t2,$t2,2 # ArrayLookup at 294.30; stackHeight = 36
                           addu $t2,$t2,$t0 # ArrayLookup at 294.30; stackHeight = 36
                           lw $t0,($t2) # ArrayLookup at 294.30; stackHeight = 36
                           sw $t0,8($sp)#**"" # ArrayLookup at 294.30; stackHeight = 36
                           addu $sp,$sp,8 # ArrayLookup at 294.30; stackHeight = 36
                          # EXIT NODE # ArrayLookup at 294.30; stackHeight = 28
                         lw $t0,4($sp) # Call at 294.22; stackHeight = 28
                         beq $t0,$zero,nullPtrException # Call at 294.22; stackHeight = 28
                         lw $t0,-12($t0) # Call at 294.22; stackHeight = 28
                         lw $t0,64($t0) # Call at 294.22; stackHeight = 28
                         jalr $t0 # min # Call at 294.22; stackHeight = 28
                        # EXIT NODE # Call at 294.22; stackHeight = 24
                       lw $t0,0($sp) # Call at 294.35; stackHeight = 24
                       beq $t0,$zero,nullPtrException # Call at 294.35; stackHeight = 24
                       lw $t0,-12($t0) # Call at 294.35; stackHeight = 24
                       lw $t0,8($t0) # Call at 294.35; stackHeight = 24
                       jalr $t0 # toString # Call at 294.35; stackHeight = 24
                      # EXIT NODE # Call at 294.35; stackHeight = 24
                      # ENTER NODE # StringLiteral at 294.53; stackHeight = 24
                       subu $sp,$sp,4 # StringLiteral at 294.53; stackHeight = 24
                       la $t0,strLit_486 # StringLiteral at 294.53; stackHeight = 28
                       sw $t0,($sp)#**"strLit:\?" # StringLiteral at 294.53; stackHeight = 28
                      # EXIT NODE # StringLiteral at 294.53; stackHeight = 28
                     lw $t0,4($sp) # Call at 294.46; stackHeight = 28
                     beq $t0,$zero,nullPtrException # Call at 294.46; stackHeight = 28
                     lw $t0,-12($t0) # Call at 294.46; stackHeight = 28
                     lw $t0,12($t0) # Call at 294.46; stackHeight = 28
                     jalr $t0 # concat # Call at 294.46; stackHeight = 28
                    # EXIT NODE # Call at 294.46; stackHeight = 24
                   lw $t0,4($sp) # Call at 294.5; stackHeight = 24
                   beq $t0,$zero,nullPtrException # Call at 294.5; stackHeight = 24
                   lw $t0,-12($t0) # Call at 294.5; stackHeight = 24
                   lw $t0,24($t0) # Call at 294.5; stackHeight = 24
                   jalr $t0 # printStr # Call at 294.5; stackHeight = 24
                  # EXIT NODE # Call at 294.5; stackHeight = 16
                # EXIT NODE # CallStatement at 294.5; stackHeight = 16
              # EXIT NODE # Block at 293.42; stackHeight = 16
              # ENTER NODE # Assign at 293.37; stackHeight = 16
                # ENTER NODE # Plus at 293.38; stackHeight = 16
                  # ENTER NODE # IdentifierExp at 293.37; stackHeight = 16
                   lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 293.37; stackHeight = 16
                   subu $sp,$sp,8 # IdentifierExp at 293.37; stackHeight = 16
                   sw $s5,4($sp)#**"GC tag" # IdentifierExp at 293.37; stackHeight = 24
                   sw $t0,($sp)#**"" # IdentifierExp at 293.37; stackHeight = 24
                  # EXIT NODE # IdentifierExp at 293.37; stackHeight = 24
                  # ENTER NODE # IntegerLiteral at 293.38; stackHeight = 24
                   subu $sp,$sp,8 # IntegerLiteral at 293.38; stackHeight = 24
                   sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 293.38; stackHeight = 32
                   li $t0,1 # IntegerLiteral at 293.38; stackHeight = 32
                   sw $t0,($sp) # IntegerLiteral at 293.38; stackHeight = 32
                  # EXIT NODE # IntegerLiteral at 293.38; stackHeight = 32
                 lw $t0,($sp) # Plus at 293.38; stackHeight = 32
                 lw $t1,8($sp) # Plus at 293.38; stackHeight = 32
                 addu $t0,$t0,$t1 # Plus at 293.38; stackHeight = 32
                 addu $sp,$sp,8 # Plus at 293.38; stackHeight = 32
                 sw $t0,($sp)#**"" # Plus at 293.38; stackHeight = 32
                # EXIT NODE # Plus at 293.38; stackHeight = 24
               lw $t0,($sp) # Assign at 293.37; stackHeight = 24
               sw $t0,8($sp) # Assign at 293.37; stackHeight = 24
               addu $sp,$sp,8 # Assign at 293.37; stackHeight = 24
              # EXIT NODE # Assign at 293.37; stackHeight = 16
            # EXIT NODE # Block at 293.4; stackHeight = 16
          while_enter_1678: # While at 293.4; stackHeight = 16
            # ENTER NODE # LessThan at 293.22; stackHeight = 16
              # ENTER NODE # IdentifierExp at 293.20; stackHeight = 16
               lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 293.20; stackHeight = 16
               subu $sp,$sp,8 # IdentifierExp at 293.20; stackHeight = 16
               sw $s5,4($sp)#**"GC tag" # IdentifierExp at 293.20; stackHeight = 24
               sw $t0,($sp)#**"" # IdentifierExp at 293.20; stackHeight = 24
              # EXIT NODE # IdentifierExp at 293.20; stackHeight = 24
              # ENTER NODE # ArrayLength at 293.28; stackHeight = 24
                # ENTER NODE # IdentifierExp at 293.24; stackHeight = 24
                 lw $t0,0($s2) # inst-var # IdentifierExp at 293.24; stackHeight = 24
                 subu $sp,$sp,4 # IdentifierExp at 293.24; stackHeight = 24
                 sw $t0,($sp)#**"" # IdentifierExp at 293.24; stackHeight = 28
                # EXIT NODE # IdentifierExp at 293.24; stackHeight = 28
               lw $t0,($sp) # ArrayLength at 293.28; stackHeight = 28
               beq $t0,$zero,nullPtrException # ArrayLength at 293.28; stackHeight = 28
               lw $t0,-4($t0) # ArrayLength at 293.28; stackHeight = 28
               sw $s5,($sp)#**"GC tag" # ArrayLength at 293.28; stackHeight = 28
               subu $sp,4 # ArrayLength at 293.28; stackHeight = 28
               sw $t0,($sp)#**"" # ArrayLength at 293.28; stackHeight = 28
              # EXIT NODE # ArrayLength at 293.28; stackHeight = 32
             lw $t0,($sp) # LessThan at 293.22; stackHeight = 32
             lw $t1,8($sp) # LessThan at 293.22; stackHeight = 32
             slt $t0,$t1,$t0 # LessThan at 293.22; stackHeight = 32
             addu $sp,$sp,12 # LessThan at 293.22; stackHeight = 32
             sw $t0,($sp)#**"" # LessThan at 293.22; stackHeight = 20
            # EXIT NODE # LessThan at 293.22; stackHeight = 20
           lw $t0,($sp) # While at 293.4; stackHeight = 20
           addu $sp,$sp,4 # While at 293.4; stackHeight = 20
          bne $t0,$zero,while_top_1678 # While at 293.4; stackHeight = 16
          break_target_1678: # While at 293.4; stackHeight = 16
          # EXIT NODE # While at 293.4; stackHeight = 16
         addu $sp,8 # Block at 293.4; stackHeight = 16
        # EXIT NODE # Block at 293.4; stackHeight = 8
        # ENTER NODE # Block at 296.4; stackHeight = 8
          # ENTER NODE # LocalVarDecl at 296.13; stackHeight = 8
            # ENTER NODE # IntegerLiteral at 296.17; stackHeight = 8
             subu $sp,$sp,8 # IntegerLiteral at 296.17; stackHeight = 8
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 296.17; stackHeight = 16
             li $t0,0 # IntegerLiteral at 296.17; stackHeight = 16
             sw $t0,($sp) # IntegerLiteral at 296.17; stackHeight = 16
            # EXIT NODE # IntegerLiteral at 296.17; stackHeight = 16
          # EXIT NODE # LocalVarDecl at 296.13; stackHeight = 16
          # ENTER NODE # While at 296.4; stackHeight = 16
          j while_enter_1708 # While at 296.4; stackHeight = 16
          while_top_1708: # While at 296.4; stackHeight = 16
            # ENTER NODE # Block at 296.4; stackHeight = 16
              # ENTER NODE # Block at 296.44; stackHeight = 16
                # ENTER NODE # CallStatement at 297.5; stackHeight = 16
                  # ENTER NODE # Call at 297.5; stackHeight = 16
                    # ENTER NODE # This at 297.5; stackHeight = 16
                     subu $sp,$sp,4 # This at 297.5; stackHeight = 16
                     sw $s2,($sp)#**"" # This at 297.5; stackHeight = 20
                    # EXIT NODE # This at 297.5; stackHeight = 20
                    # ENTER NODE # Call at 297.48; stackHeight = 20
                      # ENTER NODE # Call at 297.37; stackHeight = 20
                        # ENTER NODE # Call at 297.22; stackHeight = 20
                          # ENTER NODE # IdentifierExp at 297.14; stackHeight = 20
                           lw $t0,0($s2) # inst-var # IdentifierExp at 297.14; stackHeight = 20
                           subu $sp,$sp,4 # IdentifierExp at 297.14; stackHeight = 20
                           sw $t0,($sp)#**"" # IdentifierExp at 297.14; stackHeight = 24
                          # EXIT NODE # IdentifierExp at 297.14; stackHeight = 24
                          # ENTER NODE # IdentifierExp at 297.19; stackHeight = 24
                           lw $t0,16($sp) # local: stackHt=24,var-offset=-8 # IdentifierExp at 297.19; stackHeight = 24
                           subu $sp,$sp,8 # IdentifierExp at 297.19; stackHeight = 24
                           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 297.19; stackHeight = 32
                           sw $t0,($sp)#**"" # IdentifierExp at 297.19; stackHeight = 32
                          # EXIT NODE # IdentifierExp at 297.19; stackHeight = 32
                         lw $t0,8($sp) # ArrayLookup at 297.18; stackHeight = 32
                         beq $t0,$zero,nullPtrException # ArrayLookup at 297.18; stackHeight = 32
                         lw $t1,-4($t0) # ArrayLookup at 297.18; stackHeight = 32
                         lw $t2,($sp) # ArrayLookup at 297.18; stackHeight = 32
                         bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 297.18; stackHeight = 32
                         sll $t2,$t2,2 # ArrayLookup at 297.18; stackHeight = 32
                         addu $t2,$t2,$t0 # ArrayLookup at 297.18; stackHeight = 32
                         lw $t0,($t2) # ArrayLookup at 297.18; stackHeight = 32
                         sw $t0,8($sp)#**"" # ArrayLookup at 297.18; stackHeight = 32
                         addu $sp,$sp,8 # ArrayLookup at 297.18; stackHeight = 32
                        # EXIT NODE # ArrayLookup at 297.18; stackHeight = 24
                        # ENTER NODE # IdentifierExp at 297.26; stackHeight = 24
                         lw $t0,4($s2) # inst-var # IdentifierExp at 297.26; stackHeight = 24
                         subu $sp,$sp,4 # IdentifierExp at 297.26; stackHeight = 24
                         sw $t0,($sp)#**"" # IdentifierExp at 297.26; stackHeight = 28
                        # EXIT NODE # IdentifierExp at 297.26; stackHeight = 28
                        # ENTER NODE # IdentifierExp at 297.33; stackHeight = 28
                         lw $t0,12($sp) # local: stackHt=28,var-offset=-16 # IdentifierExp at 297.33; stackHeight = 28
                         subu $sp,$sp,8 # IdentifierExp at 297.33; stackHeight = 28
                         sw $s5,4($sp)#**"GC tag" # IdentifierExp at 297.33; stackHeight = 36
                         sw $t0,($sp)#**"" # IdentifierExp at 297.33; stackHeight = 36
                        # EXIT NODE # IdentifierExp at 297.33; stackHeight = 36
                       lw $t0,8($sp) # ArrayLookup at 297.32; stackHeight = 36
                       beq $t0,$zero,nullPtrException # ArrayLookup at 297.32; stackHeight = 36
                       lw $t1,-4($t0) # ArrayLookup at 297.32; stackHeight = 36
                       lw $t2,($sp) # ArrayLookup at 297.32; stackHeight = 36
                       bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 297.32; stackHeight = 36
                       sll $t2,$t2,2 # ArrayLookup at 297.32; stackHeight = 36
                       addu $t2,$t2,$t0 # ArrayLookup at 297.32; stackHeight = 36
                       lw $t0,($t2) # ArrayLookup at 297.32; stackHeight = 36
                       sw $t0,8($sp)#**"" # ArrayLookup at 297.32; stackHeight = 36
                       addu $sp,$sp,8 # ArrayLookup at 297.32; stackHeight = 36
                      # EXIT NODE # ArrayLookup at 297.32; stackHeight = 28
                     lw $t0,4($sp) # Call at 297.22; stackHeight = 28
                     beq $t0,$zero,nullPtrException # Call at 297.22; stackHeight = 28
                     lw $t0,-12($t0) # Call at 297.22; stackHeight = 28
                     lw $t0,64($t0) # Call at 297.22; stackHeight = 28
                     jalr $t0 # min # Call at 297.22; stackHeight = 28
                    # EXIT NODE # Call at 297.22; stackHeight = 24
                   lw $t0,0($sp) # Call at 297.37; stackHeight = 24
                   beq $t0,$zero,nullPtrException # Call at 297.37; stackHeight = 24
                   lw $t0,-12($t0) # Call at 297.37; stackHeight = 24
                   lw $t0,8($t0) # Call at 297.37; stackHeight = 24
                   jalr $t0 # toString # Call at 297.37; stackHeight = 24
                  # EXIT NODE # Call at 297.37; stackHeight = 24
                  # ENTER NODE # StringLiteral at 297.55; stackHeight = 24
                   subu $sp,$sp,4 # StringLiteral at 297.55; stackHeight = 24
                   la $t0,strLit_486 # StringLiteral at 297.55; stackHeight = 28
                   sw $t0,($sp)#**"strLit:\?" # StringLiteral at 297.55; stackHeight = 28
                  # EXIT NODE # StringLiteral at 297.55; stackHeight = 28
                 lw $t0,4($sp) # Call at 297.48; stackHeight = 28
                 beq $t0,$zero,nullPtrException # Call at 297.48; stackHeight = 28
                 lw $t0,-12($t0) # Call at 297.48; stackHeight = 28
                 lw $t0,12($t0) # Call at 297.48; stackHeight = 28
                 jalr $t0 # concat # Call at 297.48; stackHeight = 28
                # EXIT NODE # Call at 297.48; stackHeight = 24
               lw $t0,4($sp) # Call at 297.5; stackHeight = 24
               beq $t0,$zero,nullPtrException # Call at 297.5; stackHeight = 24
               lw $t0,-12($t0) # Call at 297.5; stackHeight = 24
               lw $t0,24($t0) # Call at 297.5; stackHeight = 24
               jalr $t0 # printStr # Call at 297.5; stackHeight = 24
              # EXIT NODE # Call at 297.5; stackHeight = 16
            # EXIT NODE # CallStatement at 297.5; stackHeight = 16
          # EXIT NODE # Block at 296.44; stackHeight = 16
          # ENTER NODE # Assign at 296.39; stackHeight = 16
            # ENTER NODE # Plus at 296.40; stackHeight = 16
              # ENTER NODE # IdentifierExp at 296.39; stackHeight = 16
               lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 296.39; stackHeight = 16
               subu $sp,$sp,8 # IdentifierExp at 296.39; stackHeight = 16
               sw $s5,4($sp)#**"GC tag" # IdentifierExp at 296.39; stackHeight = 24
               sw $t0,($sp)#**"" # IdentifierExp at 296.39; stackHeight = 24
              # EXIT NODE # IdentifierExp at 296.39; stackHeight = 24
              # ENTER NODE # IntegerLiteral at 296.40; stackHeight = 24
               subu $sp,$sp,8 # IntegerLiteral at 296.40; stackHeight = 24
               sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 296.40; stackHeight = 32
               li $t0,1 # IntegerLiteral at 296.40; stackHeight = 32
               sw $t0,($sp) # IntegerLiteral at 296.40; stackHeight = 32
              # EXIT NODE # IntegerLiteral at 296.40; stackHeight = 32
             lw $t0,($sp) # Plus at 296.40; stackHeight = 32
             lw $t1,8($sp) # Plus at 296.40; stackHeight = 32
             addu $t0,$t0,$t1 # Plus at 296.40; stackHeight = 32
             addu $sp,$sp,8 # Plus at 296.40; stackHeight = 32
             sw $t0,($sp)#**"" # Plus at 296.40; stackHeight = 32
            # EXIT NODE # Plus at 296.40; stackHeight = 24
           lw $t0,($sp) # Assign at 296.39; stackHeight = 24
           sw $t0,8($sp) # Assign at 296.39; stackHeight = 24
           addu $sp,$sp,8 # Assign at 296.39; stackHeight = 24
          # EXIT NODE # Assign at 296.39; stackHeight = 16
        # EXIT NODE # Block at 296.4; stackHeight = 16
      while_enter_1708: # While at 296.4; stackHeight = 16
        # ENTER NODE # LessThan at 296.22; stackHeight = 16
          # ENTER NODE # IdentifierExp at 296.20; stackHeight = 16
           lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 296.20; stackHeight = 16
           subu $sp,$sp,8 # IdentifierExp at 296.20; stackHeight = 16
           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 296.20; stackHeight = 24
           sw $t0,($sp)#**"" # IdentifierExp at 296.20; stackHeight = 24
          # EXIT NODE # IdentifierExp at 296.20; stackHeight = 24
          # ENTER NODE # ArrayLength at 296.30; stackHeight = 24
            # ENTER NODE # IdentifierExp at 296.24; stackHeight = 24
             lw $t0,4($s2) # inst-var # IdentifierExp at 296.24; stackHeight = 24
             subu $sp,$sp,4 # IdentifierExp at 296.24; stackHeight = 24
             sw $t0,($sp)#**"" # IdentifierExp at 296.24; stackHeight = 28
            # EXIT NODE # IdentifierExp at 296.24; stackHeight = 28
           lw $t0,($sp) # ArrayLength at 296.30; stackHeight = 28
           beq $t0,$zero,nullPtrException # ArrayLength at 296.30; stackHeight = 28
           lw $t0,-4($t0) # ArrayLength at 296.30; stackHeight = 28
           sw $s5,($sp)#**"GC tag" # ArrayLength at 296.30; stackHeight = 28
           subu $sp,4 # ArrayLength at 296.30; stackHeight = 28
           sw $t0,($sp)#**"" # ArrayLength at 296.30; stackHeight = 28
          # EXIT NODE # ArrayLength at 296.30; stackHeight = 32
         lw $t0,($sp) # LessThan at 296.22; stackHeight = 32
         lw $t1,8($sp) # LessThan at 296.22; stackHeight = 32
         slt $t0,$t1,$t0 # LessThan at 296.22; stackHeight = 32
         addu $sp,$sp,12 # LessThan at 296.22; stackHeight = 32
         sw $t0,($sp)#**"" # LessThan at 296.22; stackHeight = 20
        # EXIT NODE # LessThan at 296.22; stackHeight = 20
       lw $t0,($sp) # While at 296.4; stackHeight = 20
       addu $sp,$sp,4 # While at 296.4; stackHeight = 20
      bne $t0,$zero,while_top_1708 # While at 296.4; stackHeight = 16
      break_target_1708: # While at 296.4; stackHeight = 16
      # EXIT NODE # While at 296.4; stackHeight = 16
     addu $sp,8 # Block at 296.4; stackHeight = 16
    # EXIT NODE # Block at 296.4; stackHeight = 8
  # EXIT NODE # Block at 292.41; stackHeight = 8
  # ENTER NODE # Assign at 292.36; stackHeight = 8
    # ENTER NODE # Plus at 292.37; stackHeight = 8
      # ENTER NODE # IdentifierExp at 292.36; stackHeight = 8
       lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 292.36; stackHeight = 8
       subu $sp,$sp,8 # IdentifierExp at 292.36; stackHeight = 8
       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 292.36; stackHeight = 16
       sw $t0,($sp)#**"" # IdentifierExp at 292.36; stackHeight = 16
      # EXIT NODE # IdentifierExp at 292.36; stackHeight = 16
      # ENTER NODE # IntegerLiteral at 292.37; stackHeight = 16
       subu $sp,$sp,8 # IntegerLiteral at 292.37; stackHeight = 16
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 292.37; stackHeight = 24
       li $t0,1 # IntegerLiteral at 292.37; stackHeight = 24
       sw $t0,($sp) # IntegerLiteral at 292.37; stackHeight = 24
      # EXIT NODE # IntegerLiteral at 292.37; stackHeight = 24
     lw $t0,($sp) # Plus at 292.37; stackHeight = 24
     lw $t1,8($sp) # Plus at 292.37; stackHeight = 24
     addu $t0,$t0,$t1 # Plus at 292.37; stackHeight = 24
     addu $sp,$sp,8 # Plus at 292.37; stackHeight = 24
     sw $t0,($sp)#**"" # Plus at 292.37; stackHeight = 24
    # EXIT NODE # Plus at 292.37; stackHeight = 16
   lw $t0,($sp) # Assign at 292.36; stackHeight = 16
   sw $t0,8($sp) # Assign at 292.36; stackHeight = 16
   addu $sp,$sp,8 # Assign at 292.36; stackHeight = 16
  # EXIT NODE # Assign at 292.36; stackHeight = 8
# EXIT NODE # Block at 292.3; stackHeight = 8
while_enter_1712: # While at 292.3; stackHeight = 8
  # ENTER NODE # LessThan at 292.21; stackHeight = 8
    # ENTER NODE # IdentifierExp at 292.19; stackHeight = 8
     lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 292.19; stackHeight = 8
     subu $sp,$sp,8 # IdentifierExp at 292.19; stackHeight = 8
     sw $s5,4($sp)#**"GC tag" # IdentifierExp at 292.19; stackHeight = 16
     sw $t0,($sp)#**"" # IdentifierExp at 292.19; stackHeight = 16
    # EXIT NODE # IdentifierExp at 292.19; stackHeight = 16
    # ENTER NODE # ArrayLength at 292.27; stackHeight = 16
      # ENTER NODE # IdentifierExp at 292.23; stackHeight = 16
       lw $t0,0($s2) # inst-var # IdentifierExp at 292.23; stackHeight = 16
       subu $sp,$sp,4 # IdentifierExp at 292.23; stackHeight = 16
       sw $t0,($sp)#**"" # IdentifierExp at 292.23; stackHeight = 20
      # EXIT NODE # IdentifierExp at 292.23; stackHeight = 20
     lw $t0,($sp) # ArrayLength at 292.27; stackHeight = 20
     beq $t0,$zero,nullPtrException # ArrayLength at 292.27; stackHeight = 20
     lw $t0,-4($t0) # ArrayLength at 292.27; stackHeight = 20
     sw $s5,($sp)#**"GC tag" # ArrayLength at 292.27; stackHeight = 20
     subu $sp,4 # ArrayLength at 292.27; stackHeight = 20
     sw $t0,($sp)#**"" # ArrayLength at 292.27; stackHeight = 20
    # EXIT NODE # ArrayLength at 292.27; stackHeight = 24
   lw $t0,($sp) # LessThan at 292.21; stackHeight = 24
   lw $t1,8($sp) # LessThan at 292.21; stackHeight = 24
   slt $t0,$t1,$t0 # LessThan at 292.21; stackHeight = 24
   addu $sp,$sp,12 # LessThan at 292.21; stackHeight = 24
   sw $t0,($sp)#**"" # LessThan at 292.21; stackHeight = 12
  # EXIT NODE # LessThan at 292.21; stackHeight = 12
 lw $t0,($sp) # While at 292.3; stackHeight = 12
 addu $sp,$sp,4 # While at 292.3; stackHeight = 12
bne $t0,$zero,while_top_1712 # While at 292.3; stackHeight = 8
break_target_1712: # While at 292.3; stackHeight = 8
# EXIT NODE # While at 292.3; stackHeight = 8
 addu $sp,8 # Block at 292.3; stackHeight = 8
# EXIT NODE # Block at 292.3; stackHeight = 0
  # ENTER NODE # Block at 300.3; stackHeight = 0
    # ENTER NODE # LocalVarDecl at 300.12; stackHeight = 0
      # ENTER NODE # IntegerLiteral at 300.16; stackHeight = 0
       subu $sp,$sp,8 # IntegerLiteral at 300.16; stackHeight = 0
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 300.16; stackHeight = 8
       li $t0,0 # IntegerLiteral at 300.16; stackHeight = 8
       sw $t0,($sp) # IntegerLiteral at 300.16; stackHeight = 8
      # EXIT NODE # IntegerLiteral at 300.16; stackHeight = 8
    # EXIT NODE # LocalVarDecl at 300.12; stackHeight = 8
    # ENTER NODE # While at 300.3; stackHeight = 8
    j while_enter_1789 # While at 300.3; stackHeight = 8
    while_top_1789: # While at 300.3; stackHeight = 8
      # ENTER NODE # Block at 300.3; stackHeight = 8
        # ENTER NODE # Block at 300.43; stackHeight = 8
          # ENTER NODE # Block at 301.4; stackHeight = 8
            # ENTER NODE # LocalVarDecl at 301.13; stackHeight = 8
              # ENTER NODE # IntegerLiteral at 301.17; stackHeight = 8
               subu $sp,$sp,8 # IntegerLiteral at 301.17; stackHeight = 8
               sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 301.17; stackHeight = 16
               li $t0,0 # IntegerLiteral at 301.17; stackHeight = 16
               sw $t0,($sp) # IntegerLiteral at 301.17; stackHeight = 16
              # EXIT NODE # IntegerLiteral at 301.17; stackHeight = 16
            # EXIT NODE # LocalVarDecl at 301.13; stackHeight = 16
            # ENTER NODE # While at 301.4; stackHeight = 16
            j while_enter_1755 # While at 301.4; stackHeight = 16
            while_top_1755: # While at 301.4; stackHeight = 16
              # ENTER NODE # Block at 301.4; stackHeight = 16
                # ENTER NODE # Block at 301.42; stackHeight = 16
                  # ENTER NODE # CallStatement at 302.5; stackHeight = 16
                    # ENTER NODE # Call at 302.5; stackHeight = 16
                      # ENTER NODE # This at 302.5; stackHeight = 16
                       subu $sp,$sp,4 # This at 302.5; stackHeight = 16
                       sw $s2,($sp)#**"" # This at 302.5; stackHeight = 20
                      # EXIT NODE # This at 302.5; stackHeight = 20
                      # ENTER NODE # Call at 302.48; stackHeight = 20
                        # ENTER NODE # Call at 302.37; stackHeight = 20
                          # ENTER NODE # Call at 302.24; stackHeight = 20
                            # ENTER NODE # IdentifierExp at 302.14; stackHeight = 20
                             lw $t0,4($s2) # inst-var # IdentifierExp at 302.14; stackHeight = 20
                             subu $sp,$sp,4 # IdentifierExp at 302.14; stackHeight = 20
                             sw $t0,($sp)#**"" # IdentifierExp at 302.14; stackHeight = 24
                            # EXIT NODE # IdentifierExp at 302.14; stackHeight = 24
                            # ENTER NODE # IdentifierExp at 302.21; stackHeight = 24
                             lw $t0,16($sp) # local: stackHt=24,var-offset=-8 # IdentifierExp at 302.21; stackHeight = 24
                             subu $sp,$sp,8 # IdentifierExp at 302.21; stackHeight = 24
                             sw $s5,4($sp)#**"GC tag" # IdentifierExp at 302.21; stackHeight = 32
                             sw $t0,($sp)#**"" # IdentifierExp at 302.21; stackHeight = 32
                            # EXIT NODE # IdentifierExp at 302.21; stackHeight = 32
                           lw $t0,8($sp) # ArrayLookup at 302.20; stackHeight = 32
                           beq $t0,$zero,nullPtrException # ArrayLookup at 302.20; stackHeight = 32
                           lw $t1,-4($t0) # ArrayLookup at 302.20; stackHeight = 32
                           lw $t2,($sp) # ArrayLookup at 302.20; stackHeight = 32
                           bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 302.20; stackHeight = 32
                           sll $t2,$t2,2 # ArrayLookup at 302.20; stackHeight = 32
                           addu $t2,$t2,$t0 # ArrayLookup at 302.20; stackHeight = 32
                           lw $t0,($t2) # ArrayLookup at 302.20; stackHeight = 32
                           sw $t0,8($sp)#**"" # ArrayLookup at 302.20; stackHeight = 32
                           addu $sp,$sp,8 # ArrayLookup at 302.20; stackHeight = 32
                          # EXIT NODE # ArrayLookup at 302.20; stackHeight = 24
                          # ENTER NODE # IdentifierExp at 302.28; stackHeight = 24
                           lw $t0,0($s2) # inst-var # IdentifierExp at 302.28; stackHeight = 24
                           subu $sp,$sp,4 # IdentifierExp at 302.28; stackHeight = 24
                           sw $t0,($sp)#**"" # IdentifierExp at 302.28; stackHeight = 28
                          # EXIT NODE # IdentifierExp at 302.28; stackHeight = 28
                          # ENTER NODE # IdentifierExp at 302.33; stackHeight = 28
                           lw $t0,12($sp) # local: stackHt=28,var-offset=-16 # IdentifierExp at 302.33; stackHeight = 28
                           subu $sp,$sp,8 # IdentifierExp at 302.33; stackHeight = 28
                           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 302.33; stackHeight = 36
                           sw $t0,($sp)#**"" # IdentifierExp at 302.33; stackHeight = 36
                          # EXIT NODE # IdentifierExp at 302.33; stackHeight = 36
                         lw $t0,8($sp) # ArrayLookup at 302.32; stackHeight = 36
                         beq $t0,$zero,nullPtrException # ArrayLookup at 302.32; stackHeight = 36
                         lw $t1,-4($t0) # ArrayLookup at 302.32; stackHeight = 36
                         lw $t2,($sp) # ArrayLookup at 302.32; stackHeight = 36
                         bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 302.32; stackHeight = 36
                         sll $t2,$t2,2 # ArrayLookup at 302.32; stackHeight = 36
                         addu $t2,$t2,$t0 # ArrayLookup at 302.32; stackHeight = 36
                         lw $t0,($t2) # ArrayLookup at 302.32; stackHeight = 36
                         sw $t0,8($sp)#**"" # ArrayLookup at 302.32; stackHeight = 36
                         addu $sp,$sp,8 # ArrayLookup at 302.32; stackHeight = 36
                        # EXIT NODE # ArrayLookup at 302.32; stackHeight = 28
                       lw $t0,4($sp) # Call at 302.24; stackHeight = 28
                       beq $t0,$zero,nullPtrException # Call at 302.24; stackHeight = 28
                       lw $t0,-12($t0) # Call at 302.24; stackHeight = 28
                       lw $t0,64($t0) # Call at 302.24; stackHeight = 28
                       jalr $t0 # min # Call at 302.24; stackHeight = 28
                      # EXIT NODE # Call at 302.24; stackHeight = 24
                     lw $t0,0($sp) # Call at 302.37; stackHeight = 24
                     beq $t0,$zero,nullPtrException # Call at 302.37; stackHeight = 24
                     lw $t0,-12($t0) # Call at 302.37; stackHeight = 24
                     lw $t0,8($t0) # Call at 302.37; stackHeight = 24
                     jalr $t0 # toString # Call at 302.37; stackHeight = 24
                    # EXIT NODE # Call at 302.37; stackHeight = 24
                    # ENTER NODE # StringLiteral at 302.55; stackHeight = 24
                     subu $sp,$sp,4 # StringLiteral at 302.55; stackHeight = 24
                     la $t0,strLit_486 # StringLiteral at 302.55; stackHeight = 28
                     sw $t0,($sp)#**"strLit:\?" # StringLiteral at 302.55; stackHeight = 28
                    # EXIT NODE # StringLiteral at 302.55; stackHeight = 28
                   lw $t0,4($sp) # Call at 302.48; stackHeight = 28
                   beq $t0,$zero,nullPtrException # Call at 302.48; stackHeight = 28
                   lw $t0,-12($t0) # Call at 302.48; stackHeight = 28
                   lw $t0,12($t0) # Call at 302.48; stackHeight = 28
                   jalr $t0 # concat # Call at 302.48; stackHeight = 28
                  # EXIT NODE # Call at 302.48; stackHeight = 24
                 lw $t0,4($sp) # Call at 302.5; stackHeight = 24
                 beq $t0,$zero,nullPtrException # Call at 302.5; stackHeight = 24
                 lw $t0,-12($t0) # Call at 302.5; stackHeight = 24
                 lw $t0,24($t0) # Call at 302.5; stackHeight = 24
                 jalr $t0 # printStr # Call at 302.5; stackHeight = 24
                # EXIT NODE # Call at 302.5; stackHeight = 16
              # EXIT NODE # CallStatement at 302.5; stackHeight = 16
            # EXIT NODE # Block at 301.42; stackHeight = 16
            # ENTER NODE # Assign at 301.37; stackHeight = 16
              # ENTER NODE # Plus at 301.38; stackHeight = 16
                # ENTER NODE # IdentifierExp at 301.37; stackHeight = 16
                 lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 301.37; stackHeight = 16
                 subu $sp,$sp,8 # IdentifierExp at 301.37; stackHeight = 16
                 sw $s5,4($sp)#**"GC tag" # IdentifierExp at 301.37; stackHeight = 24
                 sw $t0,($sp)#**"" # IdentifierExp at 301.37; stackHeight = 24
                # EXIT NODE # IdentifierExp at 301.37; stackHeight = 24
                # ENTER NODE # IntegerLiteral at 301.38; stackHeight = 24
                 subu $sp,$sp,8 # IntegerLiteral at 301.38; stackHeight = 24
                 sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 301.38; stackHeight = 32
                 li $t0,1 # IntegerLiteral at 301.38; stackHeight = 32
                 sw $t0,($sp) # IntegerLiteral at 301.38; stackHeight = 32
                # EXIT NODE # IntegerLiteral at 301.38; stackHeight = 32
               lw $t0,($sp) # Plus at 301.38; stackHeight = 32
               lw $t1,8($sp) # Plus at 301.38; stackHeight = 32
               addu $t0,$t0,$t1 # Plus at 301.38; stackHeight = 32
               addu $sp,$sp,8 # Plus at 301.38; stackHeight = 32
               sw $t0,($sp)#**"" # Plus at 301.38; stackHeight = 32
              # EXIT NODE # Plus at 301.38; stackHeight = 24
             lw $t0,($sp) # Assign at 301.37; stackHeight = 24
             sw $t0,8($sp) # Assign at 301.37; stackHeight = 24
             addu $sp,$sp,8 # Assign at 301.37; stackHeight = 24
            # EXIT NODE # Assign at 301.37; stackHeight = 16
          # EXIT NODE # Block at 301.4; stackHeight = 16
        while_enter_1755: # While at 301.4; stackHeight = 16
          # ENTER NODE # LessThan at 301.22; stackHeight = 16
            # ENTER NODE # IdentifierExp at 301.20; stackHeight = 16
             lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 301.20; stackHeight = 16
             subu $sp,$sp,8 # IdentifierExp at 301.20; stackHeight = 16
             sw $s5,4($sp)#**"GC tag" # IdentifierExp at 301.20; stackHeight = 24
             sw $t0,($sp)#**"" # IdentifierExp at 301.20; stackHeight = 24
            # EXIT NODE # IdentifierExp at 301.20; stackHeight = 24
            # ENTER NODE # ArrayLength at 301.28; stackHeight = 24
              # ENTER NODE # IdentifierExp at 301.24; stackHeight = 24
               lw $t0,0($s2) # inst-var # IdentifierExp at 301.24; stackHeight = 24
               subu $sp,$sp,4 # IdentifierExp at 301.24; stackHeight = 24
               sw $t0,($sp)#**"" # IdentifierExp at 301.24; stackHeight = 28
              # EXIT NODE # IdentifierExp at 301.24; stackHeight = 28
             lw $t0,($sp) # ArrayLength at 301.28; stackHeight = 28
             beq $t0,$zero,nullPtrException # ArrayLength at 301.28; stackHeight = 28
             lw $t0,-4($t0) # ArrayLength at 301.28; stackHeight = 28
             sw $s5,($sp)#**"GC tag" # ArrayLength at 301.28; stackHeight = 28
             subu $sp,4 # ArrayLength at 301.28; stackHeight = 28
             sw $t0,($sp)#**"" # ArrayLength at 301.28; stackHeight = 28
            # EXIT NODE # ArrayLength at 301.28; stackHeight = 32
           lw $t0,($sp) # LessThan at 301.22; stackHeight = 32
           lw $t1,8($sp) # LessThan at 301.22; stackHeight = 32
           slt $t0,$t1,$t0 # LessThan at 301.22; stackHeight = 32
           addu $sp,$sp,12 # LessThan at 301.22; stackHeight = 32
           sw $t0,($sp)#**"" # LessThan at 301.22; stackHeight = 20
          # EXIT NODE # LessThan at 301.22; stackHeight = 20
         lw $t0,($sp) # While at 301.4; stackHeight = 20
         addu $sp,$sp,4 # While at 301.4; stackHeight = 20
        bne $t0,$zero,while_top_1755 # While at 301.4; stackHeight = 16
        break_target_1755: # While at 301.4; stackHeight = 16
        # EXIT NODE # While at 301.4; stackHeight = 16
       addu $sp,8 # Block at 301.4; stackHeight = 16
      # EXIT NODE # Block at 301.4; stackHeight = 8
      # ENTER NODE # Block at 304.4; stackHeight = 8
        # ENTER NODE # LocalVarDecl at 304.13; stackHeight = 8
          # ENTER NODE # IntegerLiteral at 304.17; stackHeight = 8
           subu $sp,$sp,8 # IntegerLiteral at 304.17; stackHeight = 8
           sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 304.17; stackHeight = 16
           li $t0,0 # IntegerLiteral at 304.17; stackHeight = 16
           sw $t0,($sp) # IntegerLiteral at 304.17; stackHeight = 16
          # EXIT NODE # IntegerLiteral at 304.17; stackHeight = 16
        # EXIT NODE # LocalVarDecl at 304.13; stackHeight = 16
        # ENTER NODE # While at 304.4; stackHeight = 16
        j while_enter_1785 # While at 304.4; stackHeight = 16
        while_top_1785: # While at 304.4; stackHeight = 16
          # ENTER NODE # Block at 304.4; stackHeight = 16
            # ENTER NODE # Block at 304.44; stackHeight = 16
              # ENTER NODE # CallStatement at 305.5; stackHeight = 16
                # ENTER NODE # Call at 305.5; stackHeight = 16
                  # ENTER NODE # This at 305.5; stackHeight = 16
                   subu $sp,$sp,4 # This at 305.5; stackHeight = 16
                   sw $s2,($sp)#**"" # This at 305.5; stackHeight = 20
                  # EXIT NODE # This at 305.5; stackHeight = 20
                  # ENTER NODE # Call at 305.50; stackHeight = 20
                    # ENTER NODE # Call at 305.39; stackHeight = 20
                      # ENTER NODE # Call at 305.24; stackHeight = 20
                        # ENTER NODE # IdentifierExp at 305.14; stackHeight = 20
                         lw $t0,4($s2) # inst-var # IdentifierExp at 305.14; stackHeight = 20
                         subu $sp,$sp,4 # IdentifierExp at 305.14; stackHeight = 20
                         sw $t0,($sp)#**"" # IdentifierExp at 305.14; stackHeight = 24
                        # EXIT NODE # IdentifierExp at 305.14; stackHeight = 24
                        # ENTER NODE # IdentifierExp at 305.21; stackHeight = 24
                         lw $t0,16($sp) # local: stackHt=24,var-offset=-8 # IdentifierExp at 305.21; stackHeight = 24
                         subu $sp,$sp,8 # IdentifierExp at 305.21; stackHeight = 24
                         sw $s5,4($sp)#**"GC tag" # IdentifierExp at 305.21; stackHeight = 32
                         sw $t0,($sp)#**"" # IdentifierExp at 305.21; stackHeight = 32
                        # EXIT NODE # IdentifierExp at 305.21; stackHeight = 32
                       lw $t0,8($sp) # ArrayLookup at 305.20; stackHeight = 32
                       beq $t0,$zero,nullPtrException # ArrayLookup at 305.20; stackHeight = 32
                       lw $t1,-4($t0) # ArrayLookup at 305.20; stackHeight = 32
                       lw $t2,($sp) # ArrayLookup at 305.20; stackHeight = 32
                       bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 305.20; stackHeight = 32
                       sll $t2,$t2,2 # ArrayLookup at 305.20; stackHeight = 32
                       addu $t2,$t2,$t0 # ArrayLookup at 305.20; stackHeight = 32
                       lw $t0,($t2) # ArrayLookup at 305.20; stackHeight = 32
                       sw $t0,8($sp)#**"" # ArrayLookup at 305.20; stackHeight = 32
                       addu $sp,$sp,8 # ArrayLookup at 305.20; stackHeight = 32
                      # EXIT NODE # ArrayLookup at 305.20; stackHeight = 24
                      # ENTER NODE # IdentifierExp at 305.28; stackHeight = 24
                       lw $t0,4($s2) # inst-var # IdentifierExp at 305.28; stackHeight = 24
                       subu $sp,$sp,4 # IdentifierExp at 305.28; stackHeight = 24
                       sw $t0,($sp)#**"" # IdentifierExp at 305.28; stackHeight = 28
                      # EXIT NODE # IdentifierExp at 305.28; stackHeight = 28
                      # ENTER NODE # IdentifierExp at 305.35; stackHeight = 28
                       lw $t0,12($sp) # local: stackHt=28,var-offset=-16 # IdentifierExp at 305.35; stackHeight = 28
                       subu $sp,$sp,8 # IdentifierExp at 305.35; stackHeight = 28
                       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 305.35; stackHeight = 36
                       sw $t0,($sp)#**"" # IdentifierExp at 305.35; stackHeight = 36
                      # EXIT NODE # IdentifierExp at 305.35; stackHeight = 36
                     lw $t0,8($sp) # ArrayLookup at 305.34; stackHeight = 36
                     beq $t0,$zero,nullPtrException # ArrayLookup at 305.34; stackHeight = 36
                     lw $t1,-4($t0) # ArrayLookup at 305.34; stackHeight = 36
                     lw $t2,($sp) # ArrayLookup at 305.34; stackHeight = 36
                     bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 305.34; stackHeight = 36
                     sll $t2,$t2,2 # ArrayLookup at 305.34; stackHeight = 36
                     addu $t2,$t2,$t0 # ArrayLookup at 305.34; stackHeight = 36
                     lw $t0,($t2) # ArrayLookup at 305.34; stackHeight = 36
                     sw $t0,8($sp)#**"" # ArrayLookup at 305.34; stackHeight = 36
                     addu $sp,$sp,8 # ArrayLookup at 305.34; stackHeight = 36
                    # EXIT NODE # ArrayLookup at 305.34; stackHeight = 28
                   lw $t0,4($sp) # Call at 305.24; stackHeight = 28
                   beq $t0,$zero,nullPtrException # Call at 305.24; stackHeight = 28
                   lw $t0,-12($t0) # Call at 305.24; stackHeight = 28
                   lw $t0,64($t0) # Call at 305.24; stackHeight = 28
                   jalr $t0 # min # Call at 305.24; stackHeight = 28
                  # EXIT NODE # Call at 305.24; stackHeight = 24
                 lw $t0,0($sp) # Call at 305.39; stackHeight = 24
                 beq $t0,$zero,nullPtrException # Call at 305.39; stackHeight = 24
                 lw $t0,-12($t0) # Call at 305.39; stackHeight = 24
                 lw $t0,8($t0) # Call at 305.39; stackHeight = 24
                 jalr $t0 # toString # Call at 305.39; stackHeight = 24
                # EXIT NODE # Call at 305.39; stackHeight = 24
                # ENTER NODE # StringLiteral at 305.57; stackHeight = 24
                 subu $sp,$sp,4 # StringLiteral at 305.57; stackHeight = 24
                 la $t0,strLit_486 # StringLiteral at 305.57; stackHeight = 28
                 sw $t0,($sp)#**"strLit:\?" # StringLiteral at 305.57; stackHeight = 28
                # EXIT NODE # StringLiteral at 305.57; stackHeight = 28
               lw $t0,4($sp) # Call at 305.50; stackHeight = 28
               beq $t0,$zero,nullPtrException # Call at 305.50; stackHeight = 28
               lw $t0,-12($t0) # Call at 305.50; stackHeight = 28
               lw $t0,12($t0) # Call at 305.50; stackHeight = 28
               jalr $t0 # concat # Call at 305.50; stackHeight = 28
              # EXIT NODE # Call at 305.50; stackHeight = 24
             lw $t0,4($sp) # Call at 305.5; stackHeight = 24
             beq $t0,$zero,nullPtrException # Call at 305.5; stackHeight = 24
             lw $t0,-12($t0) # Call at 305.5; stackHeight = 24
             lw $t0,24($t0) # Call at 305.5; stackHeight = 24
             jalr $t0 # printStr # Call at 305.5; stackHeight = 24
            # EXIT NODE # Call at 305.5; stackHeight = 16
          # EXIT NODE # CallStatement at 305.5; stackHeight = 16
        # EXIT NODE # Block at 304.44; stackHeight = 16
        # ENTER NODE # Assign at 304.39; stackHeight = 16
          # ENTER NODE # Plus at 304.40; stackHeight = 16
            # ENTER NODE # IdentifierExp at 304.39; stackHeight = 16
             lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 304.39; stackHeight = 16
             subu $sp,$sp,8 # IdentifierExp at 304.39; stackHeight = 16
             sw $s5,4($sp)#**"GC tag" # IdentifierExp at 304.39; stackHeight = 24
             sw $t0,($sp)#**"" # IdentifierExp at 304.39; stackHeight = 24
            # EXIT NODE # IdentifierExp at 304.39; stackHeight = 24
            # ENTER NODE # IntegerLiteral at 304.40; stackHeight = 24
             subu $sp,$sp,8 # IntegerLiteral at 304.40; stackHeight = 24
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 304.40; stackHeight = 32
             li $t0,1 # IntegerLiteral at 304.40; stackHeight = 32
             sw $t0,($sp) # IntegerLiteral at 304.40; stackHeight = 32
            # EXIT NODE # IntegerLiteral at 304.40; stackHeight = 32
           lw $t0,($sp) # Plus at 304.40; stackHeight = 32
           lw $t1,8($sp) # Plus at 304.40; stackHeight = 32
           addu $t0,$t0,$t1 # Plus at 304.40; stackHeight = 32
           addu $sp,$sp,8 # Plus at 304.40; stackHeight = 32
           sw $t0,($sp)#**"" # Plus at 304.40; stackHeight = 32
          # EXIT NODE # Plus at 304.40; stackHeight = 24
         lw $t0,($sp) # Assign at 304.39; stackHeight = 24
         sw $t0,8($sp) # Assign at 304.39; stackHeight = 24
         addu $sp,$sp,8 # Assign at 304.39; stackHeight = 24
        # EXIT NODE # Assign at 304.39; stackHeight = 16
      # EXIT NODE # Block at 304.4; stackHeight = 16
    while_enter_1785: # While at 304.4; stackHeight = 16
      # ENTER NODE # LessThan at 304.22; stackHeight = 16
        # ENTER NODE # IdentifierExp at 304.20; stackHeight = 16
         lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 304.20; stackHeight = 16
         subu $sp,$sp,8 # IdentifierExp at 304.20; stackHeight = 16
         sw $s5,4($sp)#**"GC tag" # IdentifierExp at 304.20; stackHeight = 24
         sw $t0,($sp)#**"" # IdentifierExp at 304.20; stackHeight = 24
        # EXIT NODE # IdentifierExp at 304.20; stackHeight = 24
        # ENTER NODE # ArrayLength at 304.30; stackHeight = 24
          # ENTER NODE # IdentifierExp at 304.24; stackHeight = 24
           lw $t0,4($s2) # inst-var # IdentifierExp at 304.24; stackHeight = 24
           subu $sp,$sp,4 # IdentifierExp at 304.24; stackHeight = 24
           sw $t0,($sp)#**"" # IdentifierExp at 304.24; stackHeight = 28
          # EXIT NODE # IdentifierExp at 304.24; stackHeight = 28
         lw $t0,($sp) # ArrayLength at 304.30; stackHeight = 28
         beq $t0,$zero,nullPtrException # ArrayLength at 304.30; stackHeight = 28
         lw $t0,-4($t0) # ArrayLength at 304.30; stackHeight = 28
         sw $s5,($sp)#**"GC tag" # ArrayLength at 304.30; stackHeight = 28
         subu $sp,4 # ArrayLength at 304.30; stackHeight = 28
         sw $t0,($sp)#**"" # ArrayLength at 304.30; stackHeight = 28
        # EXIT NODE # ArrayLength at 304.30; stackHeight = 32
       lw $t0,($sp) # LessThan at 304.22; stackHeight = 32
       lw $t1,8($sp) # LessThan at 304.22; stackHeight = 32
       slt $t0,$t1,$t0 # LessThan at 304.22; stackHeight = 32
       addu $sp,$sp,12 # LessThan at 304.22; stackHeight = 32
       sw $t0,($sp)#**"" # LessThan at 304.22; stackHeight = 20
      # EXIT NODE # LessThan at 304.22; stackHeight = 20
     lw $t0,($sp) # While at 304.4; stackHeight = 20
     addu $sp,$sp,4 # While at 304.4; stackHeight = 20
    bne $t0,$zero,while_top_1785 # While at 304.4; stackHeight = 16
    break_target_1785: # While at 304.4; stackHeight = 16
    # EXIT NODE # While at 304.4; stackHeight = 16
   addu $sp,8 # Block at 304.4; stackHeight = 16
  # EXIT NODE # Block at 304.4; stackHeight = 8
# EXIT NODE # Block at 300.43; stackHeight = 8
  # ENTER NODE # Assign at 300.38; stackHeight = 8
    # ENTER NODE # Plus at 300.39; stackHeight = 8
      # ENTER NODE # IdentifierExp at 300.38; stackHeight = 8
       lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 300.38; stackHeight = 8
       subu $sp,$sp,8 # IdentifierExp at 300.38; stackHeight = 8
       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 300.38; stackHeight = 16
       sw $t0,($sp)#**"" # IdentifierExp at 300.38; stackHeight = 16
      # EXIT NODE # IdentifierExp at 300.38; stackHeight = 16
      # ENTER NODE # IntegerLiteral at 300.39; stackHeight = 16
       subu $sp,$sp,8 # IntegerLiteral at 300.39; stackHeight = 16
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 300.39; stackHeight = 24
       li $t0,1 # IntegerLiteral at 300.39; stackHeight = 24
       sw $t0,($sp) # IntegerLiteral at 300.39; stackHeight = 24
      # EXIT NODE # IntegerLiteral at 300.39; stackHeight = 24
     lw $t0,($sp) # Plus at 300.39; stackHeight = 24
     lw $t1,8($sp) # Plus at 300.39; stackHeight = 24
     addu $t0,$t0,$t1 # Plus at 300.39; stackHeight = 24
     addu $sp,$sp,8 # Plus at 300.39; stackHeight = 24
     sw $t0,($sp)#**"" # Plus at 300.39; stackHeight = 24
    # EXIT NODE # Plus at 300.39; stackHeight = 16
   lw $t0,($sp) # Assign at 300.38; stackHeight = 16
   sw $t0,8($sp) # Assign at 300.38; stackHeight = 16
   addu $sp,$sp,8 # Assign at 300.38; stackHeight = 16
  # EXIT NODE # Assign at 300.38; stackHeight = 8
# EXIT NODE # Block at 300.3; stackHeight = 8
while_enter_1789: # While at 300.3; stackHeight = 8
  # ENTER NODE # LessThan at 300.21; stackHeight = 8
    # ENTER NODE # IdentifierExp at 300.19; stackHeight = 8
     lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 300.19; stackHeight = 8
     subu $sp,$sp,8 # IdentifierExp at 300.19; stackHeight = 8
     sw $s5,4($sp)#**"GC tag" # IdentifierExp at 300.19; stackHeight = 16
     sw $t0,($sp)#**"" # IdentifierExp at 300.19; stackHeight = 16
    # EXIT NODE # IdentifierExp at 300.19; stackHeight = 16
    # ENTER NODE # ArrayLength at 300.29; stackHeight = 16
      # ENTER NODE # IdentifierExp at 300.23; stackHeight = 16
       lw $t0,4($s2) # inst-var # IdentifierExp at 300.23; stackHeight = 16
       subu $sp,$sp,4 # IdentifierExp at 300.23; stackHeight = 16
       sw $t0,($sp)#**"" # IdentifierExp at 300.23; stackHeight = 20
      # EXIT NODE # IdentifierExp at 300.23; stackHeight = 20
     lw $t0,($sp) # ArrayLength at 300.29; stackHeight = 20
     beq $t0,$zero,nullPtrException # ArrayLength at 300.29; stackHeight = 20
     lw $t0,-4($t0) # ArrayLength at 300.29; stackHeight = 20
     sw $s5,($sp)#**"GC tag" # ArrayLength at 300.29; stackHeight = 20
     subu $sp,4 # ArrayLength at 300.29; stackHeight = 20
     sw $t0,($sp)#**"" # ArrayLength at 300.29; stackHeight = 20
    # EXIT NODE # ArrayLength at 300.29; stackHeight = 24
   lw $t0,($sp) # LessThan at 300.21; stackHeight = 24
   lw $t1,8($sp) # LessThan at 300.21; stackHeight = 24
   slt $t0,$t1,$t0 # LessThan at 300.21; stackHeight = 24
   addu $sp,$sp,12 # LessThan at 300.21; stackHeight = 24
   sw $t0,($sp)#**"" # LessThan at 300.21; stackHeight = 12
  # EXIT NODE # LessThan at 300.21; stackHeight = 12
 lw $t0,($sp) # While at 300.3; stackHeight = 12
 addu $sp,$sp,4 # While at 300.3; stackHeight = 12
bne $t0,$zero,while_top_1789 # While at 300.3; stackHeight = 8
break_target_1789: # While at 300.3; stackHeight = 8
# EXIT NODE # While at 300.3; stackHeight = 8
 addu $sp,8 # Block at 300.3; stackHeight = 8
# EXIT NODE # Block at 300.3; stackHeight = 0
 # stack height is 0 # MethodDeclVoid at 291.14; stackHeight = 0
 lw $ra,4($sp) # MethodDeclVoid at 291.14; stackHeight = 0
 lw $s2,0($sp) # MethodDeclVoid at 291.14; stackHeight = 0
 addu $sp,$sp,8 # MethodDeclVoid at 291.14; stackHeight = 0
jr $ra # MethodDeclVoid at 291.14; stackHeight = -8
# EXIT NODE # MethodDeclVoid at 291.14; stackHeight = -8
  # ENTER NODE # MethodDeclVoid at 310.14; stackHeight = -8
  .globl fcn_1946_multiply # MethodDeclVoid at 310.14; stackHeight = -8
  fcn_1946_multiply: # MethodDeclVoid at 310.14; stackHeight = -8
   subu $sp,$sp,4 # MethodDeclVoid at 310.14; stackHeight = -8
   sw $s2,($sp) #**"old this-ptr" # MethodDeclVoid at 310.14; stackHeight = -8
   lw $s2,4($sp) #**"this-ptr" # MethodDeclVoid at 310.14; stackHeight = -8
   sw $ra,4($sp) #**"RA:multiply" # MethodDeclVoid at 310.14; stackHeight = -8
    # ENTER NODE # Block at 311.3; stackHeight = 0
      # ENTER NODE # LocalVarDecl at 311.12; stackHeight = 0
        # ENTER NODE # IntegerLiteral at 311.16; stackHeight = 0
         subu $sp,$sp,8 # IntegerLiteral at 311.16; stackHeight = 0
         sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 311.16; stackHeight = 8
         li $t0,0 # IntegerLiteral at 311.16; stackHeight = 8
         sw $t0,($sp) # IntegerLiteral at 311.16; stackHeight = 8
        # EXIT NODE # IntegerLiteral at 311.16; stackHeight = 8
      # EXIT NODE # LocalVarDecl at 311.12; stackHeight = 8
      # ENTER NODE # While at 311.3; stackHeight = 8
      j while_enter_1867 # While at 311.3; stackHeight = 8
      while_top_1867: # While at 311.3; stackHeight = 8
        # ENTER NODE # Block at 311.3; stackHeight = 8
          # ENTER NODE # Block at 311.41; stackHeight = 8
            # ENTER NODE # Block at 312.4; stackHeight = 8
              # ENTER NODE # LocalVarDecl at 312.13; stackHeight = 8
                # ENTER NODE # IntegerLiteral at 312.17; stackHeight = 8
                 subu $sp,$sp,8 # IntegerLiteral at 312.17; stackHeight = 8
                 sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 312.17; stackHeight = 16
                 li $t0,0 # IntegerLiteral at 312.17; stackHeight = 16
                 sw $t0,($sp) # IntegerLiteral at 312.17; stackHeight = 16
                # EXIT NODE # IntegerLiteral at 312.17; stackHeight = 16
              # EXIT NODE # LocalVarDecl at 312.13; stackHeight = 16
              # ENTER NODE # While at 312.4; stackHeight = 16
              j while_enter_1833 # While at 312.4; stackHeight = 16
              while_top_1833: # While at 312.4; stackHeight = 16
                # ENTER NODE # Block at 312.4; stackHeight = 16
                  # ENTER NODE # Block at 312.42; stackHeight = 16
                    # ENTER NODE # CallStatement at 313.5; stackHeight = 16
                      # ENTER NODE # Call at 313.5; stackHeight = 16
                        # ENTER NODE # This at 313.5; stackHeight = 16
                         subu $sp,$sp,4 # This at 313.5; stackHeight = 16
                         sw $s2,($sp)#**"" # This at 313.5; stackHeight = 20
                        # EXIT NODE # This at 313.5; stackHeight = 20
                        # ENTER NODE # Call at 313.51; stackHeight = 20
                          # ENTER NODE # Call at 313.40; stackHeight = 20
                            # ENTER NODE # Call at 313.22; stackHeight = 20
                              # ENTER NODE # IdentifierExp at 313.14; stackHeight = 20
                               lw $t0,0($s2) # inst-var # IdentifierExp at 313.14; stackHeight = 20
                               subu $sp,$sp,4 # IdentifierExp at 313.14; stackHeight = 20
                               sw $t0,($sp)#**"" # IdentifierExp at 313.14; stackHeight = 24
                              # EXIT NODE # IdentifierExp at 313.14; stackHeight = 24
                              # ENTER NODE # IdentifierExp at 313.19; stackHeight = 24
                               lw $t0,16($sp) # local: stackHt=24,var-offset=-8 # IdentifierExp at 313.19; stackHeight = 24
                               subu $sp,$sp,8 # IdentifierExp at 313.19; stackHeight = 24
                               sw $s5,4($sp)#**"GC tag" # IdentifierExp at 313.19; stackHeight = 32
                               sw $t0,($sp)#**"" # IdentifierExp at 313.19; stackHeight = 32
                              # EXIT NODE # IdentifierExp at 313.19; stackHeight = 32
                             lw $t0,8($sp) # ArrayLookup at 313.18; stackHeight = 32
                             beq $t0,$zero,nullPtrException # ArrayLookup at 313.18; stackHeight = 32
                             lw $t1,-4($t0) # ArrayLookup at 313.18; stackHeight = 32
                             lw $t2,($sp) # ArrayLookup at 313.18; stackHeight = 32
                             bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 313.18; stackHeight = 32
                             sll $t2,$t2,2 # ArrayLookup at 313.18; stackHeight = 32
                             addu $t2,$t2,$t0 # ArrayLookup at 313.18; stackHeight = 32
                             lw $t0,($t2) # ArrayLookup at 313.18; stackHeight = 32
                             sw $t0,8($sp)#**"" # ArrayLookup at 313.18; stackHeight = 32
                             addu $sp,$sp,8 # ArrayLookup at 313.18; stackHeight = 32
                            # EXIT NODE # ArrayLookup at 313.18; stackHeight = 24
                            # ENTER NODE # IdentifierExp at 313.31; stackHeight = 24
                             lw $t0,0($s2) # inst-var # IdentifierExp at 313.31; stackHeight = 24
                             subu $sp,$sp,4 # IdentifierExp at 313.31; stackHeight = 24
                             sw $t0,($sp)#**"" # IdentifierExp at 313.31; stackHeight = 28
                            # EXIT NODE # IdentifierExp at 313.31; stackHeight = 28
                            # ENTER NODE # IdentifierExp at 313.36; stackHeight = 28
                             lw $t0,12($sp) # local: stackHt=28,var-offset=-16 # IdentifierExp at 313.36; stackHeight = 28
                             subu $sp,$sp,8 # IdentifierExp at 313.36; stackHeight = 28
                             sw $s5,4($sp)#**"GC tag" # IdentifierExp at 313.36; stackHeight = 36
                             sw $t0,($sp)#**"" # IdentifierExp at 313.36; stackHeight = 36
                            # EXIT NODE # IdentifierExp at 313.36; stackHeight = 36
                           lw $t0,8($sp) # ArrayLookup at 313.35; stackHeight = 36
                           beq $t0,$zero,nullPtrException # ArrayLookup at 313.35; stackHeight = 36
                           lw $t1,-4($t0) # ArrayLookup at 313.35; stackHeight = 36
                           lw $t2,($sp) # ArrayLookup at 313.35; stackHeight = 36
                           bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 313.35; stackHeight = 36
                           sll $t2,$t2,2 # ArrayLookup at 313.35; stackHeight = 36
                           addu $t2,$t2,$t0 # ArrayLookup at 313.35; stackHeight = 36
                           lw $t0,($t2) # ArrayLookup at 313.35; stackHeight = 36
                           sw $t0,8($sp)#**"" # ArrayLookup at 313.35; stackHeight = 36
                           addu $sp,$sp,8 # ArrayLookup at 313.35; stackHeight = 36
                          # EXIT NODE # ArrayLookup at 313.35; stackHeight = 28
                         lw $t0,4($sp) # Call at 313.22; stackHeight = 28
                         beq $t0,$zero,nullPtrException # Call at 313.22; stackHeight = 28
                         lw $t0,-12($t0) # Call at 313.22; stackHeight = 28
                         lw $t0,32($t0) # Call at 313.22; stackHeight = 28
                         jalr $t0 # multiply # Call at 313.22; stackHeight = 28
                        # EXIT NODE # Call at 313.22; stackHeight = 24
                       lw $t0,0($sp) # Call at 313.40; stackHeight = 24
                       beq $t0,$zero,nullPtrException # Call at 313.40; stackHeight = 24
                       lw $t0,-12($t0) # Call at 313.40; stackHeight = 24
                       lw $t0,8($t0) # Call at 313.40; stackHeight = 24
                       jalr $t0 # toString # Call at 313.40; stackHeight = 24
                      # EXIT NODE # Call at 313.40; stackHeight = 24
                      # ENTER NODE # StringLiteral at 313.58; stackHeight = 24
                       subu $sp,$sp,4 # StringLiteral at 313.58; stackHeight = 24
                       la $t0,strLit_486 # StringLiteral at 313.58; stackHeight = 28
                       sw $t0,($sp)#**"strLit:\?" # StringLiteral at 313.58; stackHeight = 28
                      # EXIT NODE # StringLiteral at 313.58; stackHeight = 28
                     lw $t0,4($sp) # Call at 313.51; stackHeight = 28
                     beq $t0,$zero,nullPtrException # Call at 313.51; stackHeight = 28
                     lw $t0,-12($t0) # Call at 313.51; stackHeight = 28
                     lw $t0,12($t0) # Call at 313.51; stackHeight = 28
                     jalr $t0 # concat # Call at 313.51; stackHeight = 28
                    # EXIT NODE # Call at 313.51; stackHeight = 24
                   lw $t0,4($sp) # Call at 313.5; stackHeight = 24
                   beq $t0,$zero,nullPtrException # Call at 313.5; stackHeight = 24
                   lw $t0,-12($t0) # Call at 313.5; stackHeight = 24
                   lw $t0,24($t0) # Call at 313.5; stackHeight = 24
                   jalr $t0 # printStr # Call at 313.5; stackHeight = 24
                  # EXIT NODE # Call at 313.5; stackHeight = 16
                # EXIT NODE # CallStatement at 313.5; stackHeight = 16
              # EXIT NODE # Block at 312.42; stackHeight = 16
              # ENTER NODE # Assign at 312.37; stackHeight = 16
                # ENTER NODE # Plus at 312.38; stackHeight = 16
                  # ENTER NODE # IdentifierExp at 312.37; stackHeight = 16
                   lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 312.37; stackHeight = 16
                   subu $sp,$sp,8 # IdentifierExp at 312.37; stackHeight = 16
                   sw $s5,4($sp)#**"GC tag" # IdentifierExp at 312.37; stackHeight = 24
                   sw $t0,($sp)#**"" # IdentifierExp at 312.37; stackHeight = 24
                  # EXIT NODE # IdentifierExp at 312.37; stackHeight = 24
                  # ENTER NODE # IntegerLiteral at 312.38; stackHeight = 24
                   subu $sp,$sp,8 # IntegerLiteral at 312.38; stackHeight = 24
                   sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 312.38; stackHeight = 32
                   li $t0,1 # IntegerLiteral at 312.38; stackHeight = 32
                   sw $t0,($sp) # IntegerLiteral at 312.38; stackHeight = 32
                  # EXIT NODE # IntegerLiteral at 312.38; stackHeight = 32
                 lw $t0,($sp) # Plus at 312.38; stackHeight = 32
                 lw $t1,8($sp) # Plus at 312.38; stackHeight = 32
                 addu $t0,$t0,$t1 # Plus at 312.38; stackHeight = 32
                 addu $sp,$sp,8 # Plus at 312.38; stackHeight = 32
                 sw $t0,($sp)#**"" # Plus at 312.38; stackHeight = 32
                # EXIT NODE # Plus at 312.38; stackHeight = 24
               lw $t0,($sp) # Assign at 312.37; stackHeight = 24
               sw $t0,8($sp) # Assign at 312.37; stackHeight = 24
               addu $sp,$sp,8 # Assign at 312.37; stackHeight = 24
              # EXIT NODE # Assign at 312.37; stackHeight = 16
            # EXIT NODE # Block at 312.4; stackHeight = 16
          while_enter_1833: # While at 312.4; stackHeight = 16
            # ENTER NODE # LessThan at 312.22; stackHeight = 16
              # ENTER NODE # IdentifierExp at 312.20; stackHeight = 16
               lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 312.20; stackHeight = 16
               subu $sp,$sp,8 # IdentifierExp at 312.20; stackHeight = 16
               sw $s5,4($sp)#**"GC tag" # IdentifierExp at 312.20; stackHeight = 24
               sw $t0,($sp)#**"" # IdentifierExp at 312.20; stackHeight = 24
              # EXIT NODE # IdentifierExp at 312.20; stackHeight = 24
              # ENTER NODE # ArrayLength at 312.28; stackHeight = 24
                # ENTER NODE # IdentifierExp at 312.24; stackHeight = 24
                 lw $t0,0($s2) # inst-var # IdentifierExp at 312.24; stackHeight = 24
                 subu $sp,$sp,4 # IdentifierExp at 312.24; stackHeight = 24
                 sw $t0,($sp)#**"" # IdentifierExp at 312.24; stackHeight = 28
                # EXIT NODE # IdentifierExp at 312.24; stackHeight = 28
               lw $t0,($sp) # ArrayLength at 312.28; stackHeight = 28
               beq $t0,$zero,nullPtrException # ArrayLength at 312.28; stackHeight = 28
               lw $t0,-4($t0) # ArrayLength at 312.28; stackHeight = 28
               sw $s5,($sp)#**"GC tag" # ArrayLength at 312.28; stackHeight = 28
               subu $sp,4 # ArrayLength at 312.28; stackHeight = 28
               sw $t0,($sp)#**"" # ArrayLength at 312.28; stackHeight = 28
              # EXIT NODE # ArrayLength at 312.28; stackHeight = 32
             lw $t0,($sp) # LessThan at 312.22; stackHeight = 32
             lw $t1,8($sp) # LessThan at 312.22; stackHeight = 32
             slt $t0,$t1,$t0 # LessThan at 312.22; stackHeight = 32
             addu $sp,$sp,12 # LessThan at 312.22; stackHeight = 32
             sw $t0,($sp)#**"" # LessThan at 312.22; stackHeight = 20
            # EXIT NODE # LessThan at 312.22; stackHeight = 20
           lw $t0,($sp) # While at 312.4; stackHeight = 20
           addu $sp,$sp,4 # While at 312.4; stackHeight = 20
          bne $t0,$zero,while_top_1833 # While at 312.4; stackHeight = 16
          break_target_1833: # While at 312.4; stackHeight = 16
          # EXIT NODE # While at 312.4; stackHeight = 16
         addu $sp,8 # Block at 312.4; stackHeight = 16
        # EXIT NODE # Block at 312.4; stackHeight = 8
        # ENTER NODE # Block at 315.4; stackHeight = 8
          # ENTER NODE # LocalVarDecl at 315.13; stackHeight = 8
            # ENTER NODE # IntegerLiteral at 315.17; stackHeight = 8
             subu $sp,$sp,8 # IntegerLiteral at 315.17; stackHeight = 8
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 315.17; stackHeight = 16
             li $t0,0 # IntegerLiteral at 315.17; stackHeight = 16
             sw $t0,($sp) # IntegerLiteral at 315.17; stackHeight = 16
            # EXIT NODE # IntegerLiteral at 315.17; stackHeight = 16
          # EXIT NODE # LocalVarDecl at 315.13; stackHeight = 16
          # ENTER NODE # While at 315.4; stackHeight = 16
          j while_enter_1863 # While at 315.4; stackHeight = 16
          while_top_1863: # While at 315.4; stackHeight = 16
            # ENTER NODE # Block at 315.4; stackHeight = 16
              # ENTER NODE # Block at 315.44; stackHeight = 16
                # ENTER NODE # CallStatement at 316.5; stackHeight = 16
                  # ENTER NODE # Call at 316.5; stackHeight = 16
                    # ENTER NODE # This at 316.5; stackHeight = 16
                     subu $sp,$sp,4 # This at 316.5; stackHeight = 16
                     sw $s2,($sp)#**"" # This at 316.5; stackHeight = 20
                    # EXIT NODE # This at 316.5; stackHeight = 20
                    # ENTER NODE # Call at 316.53; stackHeight = 20
                      # ENTER NODE # Call at 316.42; stackHeight = 20
                        # ENTER NODE # Call at 316.22; stackHeight = 20
                          # ENTER NODE # IdentifierExp at 316.14; stackHeight = 20
                           lw $t0,0($s2) # inst-var # IdentifierExp at 316.14; stackHeight = 20
                           subu $sp,$sp,4 # IdentifierExp at 316.14; stackHeight = 20
                           sw $t0,($sp)#**"" # IdentifierExp at 316.14; stackHeight = 24
                          # EXIT NODE # IdentifierExp at 316.14; stackHeight = 24
                          # ENTER NODE # IdentifierExp at 316.19; stackHeight = 24
                           lw $t0,16($sp) # local: stackHt=24,var-offset=-8 # IdentifierExp at 316.19; stackHeight = 24
                           subu $sp,$sp,8 # IdentifierExp at 316.19; stackHeight = 24
                           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 316.19; stackHeight = 32
                           sw $t0,($sp)#**"" # IdentifierExp at 316.19; stackHeight = 32
                          # EXIT NODE # IdentifierExp at 316.19; stackHeight = 32
                         lw $t0,8($sp) # ArrayLookup at 316.18; stackHeight = 32
                         beq $t0,$zero,nullPtrException # ArrayLookup at 316.18; stackHeight = 32
                         lw $t1,-4($t0) # ArrayLookup at 316.18; stackHeight = 32
                         lw $t2,($sp) # ArrayLookup at 316.18; stackHeight = 32
                         bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 316.18; stackHeight = 32
                         sll $t2,$t2,2 # ArrayLookup at 316.18; stackHeight = 32
                         addu $t2,$t2,$t0 # ArrayLookup at 316.18; stackHeight = 32
                         lw $t0,($t2) # ArrayLookup at 316.18; stackHeight = 32
                         sw $t0,8($sp)#**"" # ArrayLookup at 316.18; stackHeight = 32
                         addu $sp,$sp,8 # ArrayLookup at 316.18; stackHeight = 32
                        # EXIT NODE # ArrayLookup at 316.18; stackHeight = 24
                        # ENTER NODE # IdentifierExp at 316.31; stackHeight = 24
                         lw $t0,4($s2) # inst-var # IdentifierExp at 316.31; stackHeight = 24
                         subu $sp,$sp,4 # IdentifierExp at 316.31; stackHeight = 24
                         sw $t0,($sp)#**"" # IdentifierExp at 316.31; stackHeight = 28
                        # EXIT NODE # IdentifierExp at 316.31; stackHeight = 28
                        # ENTER NODE # IdentifierExp at 316.38; stackHeight = 28
                         lw $t0,12($sp) # local: stackHt=28,var-offset=-16 # IdentifierExp at 316.38; stackHeight = 28
                         subu $sp,$sp,8 # IdentifierExp at 316.38; stackHeight = 28
                         sw $s5,4($sp)#**"GC tag" # IdentifierExp at 316.38; stackHeight = 36
                         sw $t0,($sp)#**"" # IdentifierExp at 316.38; stackHeight = 36
                        # EXIT NODE # IdentifierExp at 316.38; stackHeight = 36
                       lw $t0,8($sp) # ArrayLookup at 316.37; stackHeight = 36
                       beq $t0,$zero,nullPtrException # ArrayLookup at 316.37; stackHeight = 36
                       lw $t1,-4($t0) # ArrayLookup at 316.37; stackHeight = 36
                       lw $t2,($sp) # ArrayLookup at 316.37; stackHeight = 36
                       bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 316.37; stackHeight = 36
                       sll $t2,$t2,2 # ArrayLookup at 316.37; stackHeight = 36
                       addu $t2,$t2,$t0 # ArrayLookup at 316.37; stackHeight = 36
                       lw $t0,($t2) # ArrayLookup at 316.37; stackHeight = 36
                       sw $t0,8($sp)#**"" # ArrayLookup at 316.37; stackHeight = 36
                       addu $sp,$sp,8 # ArrayLookup at 316.37; stackHeight = 36
                      # EXIT NODE # ArrayLookup at 316.37; stackHeight = 28
                     lw $t0,4($sp) # Call at 316.22; stackHeight = 28
                     beq $t0,$zero,nullPtrException # Call at 316.22; stackHeight = 28
                     lw $t0,-12($t0) # Call at 316.22; stackHeight = 28
                     lw $t0,32($t0) # Call at 316.22; stackHeight = 28
                     jalr $t0 # multiply # Call at 316.22; stackHeight = 28
                    # EXIT NODE # Call at 316.22; stackHeight = 24
                   lw $t0,0($sp) # Call at 316.42; stackHeight = 24
                   beq $t0,$zero,nullPtrException # Call at 316.42; stackHeight = 24
                   lw $t0,-12($t0) # Call at 316.42; stackHeight = 24
                   lw $t0,8($t0) # Call at 316.42; stackHeight = 24
                   jalr $t0 # toString # Call at 316.42; stackHeight = 24
                  # EXIT NODE # Call at 316.42; stackHeight = 24
                  # ENTER NODE # StringLiteral at 316.60; stackHeight = 24
                   subu $sp,$sp,4 # StringLiteral at 316.60; stackHeight = 24
                   la $t0,strLit_486 # StringLiteral at 316.60; stackHeight = 28
                   sw $t0,($sp)#**"strLit:\?" # StringLiteral at 316.60; stackHeight = 28
                  # EXIT NODE # StringLiteral at 316.60; stackHeight = 28
                 lw $t0,4($sp) # Call at 316.53; stackHeight = 28
                 beq $t0,$zero,nullPtrException # Call at 316.53; stackHeight = 28
                 lw $t0,-12($t0) # Call at 316.53; stackHeight = 28
                 lw $t0,12($t0) # Call at 316.53; stackHeight = 28
                 jalr $t0 # concat # Call at 316.53; stackHeight = 28
                # EXIT NODE # Call at 316.53; stackHeight = 24
               lw $t0,4($sp) # Call at 316.5; stackHeight = 24
               beq $t0,$zero,nullPtrException # Call at 316.5; stackHeight = 24
               lw $t0,-12($t0) # Call at 316.5; stackHeight = 24
               lw $t0,24($t0) # Call at 316.5; stackHeight = 24
               jalr $t0 # printStr # Call at 316.5; stackHeight = 24
              # EXIT NODE # Call at 316.5; stackHeight = 16
            # EXIT NODE # CallStatement at 316.5; stackHeight = 16
          # EXIT NODE # Block at 315.44; stackHeight = 16
          # ENTER NODE # Assign at 315.39; stackHeight = 16
            # ENTER NODE # Plus at 315.40; stackHeight = 16
              # ENTER NODE # IdentifierExp at 315.39; stackHeight = 16
               lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 315.39; stackHeight = 16
               subu $sp,$sp,8 # IdentifierExp at 315.39; stackHeight = 16
               sw $s5,4($sp)#**"GC tag" # IdentifierExp at 315.39; stackHeight = 24
               sw $t0,($sp)#**"" # IdentifierExp at 315.39; stackHeight = 24
              # EXIT NODE # IdentifierExp at 315.39; stackHeight = 24
              # ENTER NODE # IntegerLiteral at 315.40; stackHeight = 24
               subu $sp,$sp,8 # IntegerLiteral at 315.40; stackHeight = 24
               sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 315.40; stackHeight = 32
               li $t0,1 # IntegerLiteral at 315.40; stackHeight = 32
               sw $t0,($sp) # IntegerLiteral at 315.40; stackHeight = 32
              # EXIT NODE # IntegerLiteral at 315.40; stackHeight = 32
             lw $t0,($sp) # Plus at 315.40; stackHeight = 32
             lw $t1,8($sp) # Plus at 315.40; stackHeight = 32
             addu $t0,$t0,$t1 # Plus at 315.40; stackHeight = 32
             addu $sp,$sp,8 # Plus at 315.40; stackHeight = 32
             sw $t0,($sp)#**"" # Plus at 315.40; stackHeight = 32
            # EXIT NODE # Plus at 315.40; stackHeight = 24
           lw $t0,($sp) # Assign at 315.39; stackHeight = 24
           sw $t0,8($sp) # Assign at 315.39; stackHeight = 24
           addu $sp,$sp,8 # Assign at 315.39; stackHeight = 24
          # EXIT NODE # Assign at 315.39; stackHeight = 16
        # EXIT NODE # Block at 315.4; stackHeight = 16
      while_enter_1863: # While at 315.4; stackHeight = 16
        # ENTER NODE # LessThan at 315.22; stackHeight = 16
          # ENTER NODE # IdentifierExp at 315.20; stackHeight = 16
           lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 315.20; stackHeight = 16
           subu $sp,$sp,8 # IdentifierExp at 315.20; stackHeight = 16
           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 315.20; stackHeight = 24
           sw $t0,($sp)#**"" # IdentifierExp at 315.20; stackHeight = 24
          # EXIT NODE # IdentifierExp at 315.20; stackHeight = 24
          # ENTER NODE # ArrayLength at 315.30; stackHeight = 24
            # ENTER NODE # IdentifierExp at 315.24; stackHeight = 24
             lw $t0,4($s2) # inst-var # IdentifierExp at 315.24; stackHeight = 24
             subu $sp,$sp,4 # IdentifierExp at 315.24; stackHeight = 24
             sw $t0,($sp)#**"" # IdentifierExp at 315.24; stackHeight = 28
            # EXIT NODE # IdentifierExp at 315.24; stackHeight = 28
           lw $t0,($sp) # ArrayLength at 315.30; stackHeight = 28
           beq $t0,$zero,nullPtrException # ArrayLength at 315.30; stackHeight = 28
           lw $t0,-4($t0) # ArrayLength at 315.30; stackHeight = 28
           sw $s5,($sp)#**"GC tag" # ArrayLength at 315.30; stackHeight = 28
           subu $sp,4 # ArrayLength at 315.30; stackHeight = 28
           sw $t0,($sp)#**"" # ArrayLength at 315.30; stackHeight = 28
          # EXIT NODE # ArrayLength at 315.30; stackHeight = 32
         lw $t0,($sp) # LessThan at 315.22; stackHeight = 32
         lw $t1,8($sp) # LessThan at 315.22; stackHeight = 32
         slt $t0,$t1,$t0 # LessThan at 315.22; stackHeight = 32
         addu $sp,$sp,12 # LessThan at 315.22; stackHeight = 32
         sw $t0,($sp)#**"" # LessThan at 315.22; stackHeight = 20
        # EXIT NODE # LessThan at 315.22; stackHeight = 20
       lw $t0,($sp) # While at 315.4; stackHeight = 20
       addu $sp,$sp,4 # While at 315.4; stackHeight = 20
      bne $t0,$zero,while_top_1863 # While at 315.4; stackHeight = 16
      break_target_1863: # While at 315.4; stackHeight = 16
      # EXIT NODE # While at 315.4; stackHeight = 16
     addu $sp,8 # Block at 315.4; stackHeight = 16
    # EXIT NODE # Block at 315.4; stackHeight = 8
  # EXIT NODE # Block at 311.41; stackHeight = 8
  # ENTER NODE # Assign at 311.36; stackHeight = 8
    # ENTER NODE # Plus at 311.37; stackHeight = 8
      # ENTER NODE # IdentifierExp at 311.36; stackHeight = 8
       lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 311.36; stackHeight = 8
       subu $sp,$sp,8 # IdentifierExp at 311.36; stackHeight = 8
       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 311.36; stackHeight = 16
       sw $t0,($sp)#**"" # IdentifierExp at 311.36; stackHeight = 16
      # EXIT NODE # IdentifierExp at 311.36; stackHeight = 16
      # ENTER NODE # IntegerLiteral at 311.37; stackHeight = 16
       subu $sp,$sp,8 # IntegerLiteral at 311.37; stackHeight = 16
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 311.37; stackHeight = 24
       li $t0,1 # IntegerLiteral at 311.37; stackHeight = 24
       sw $t0,($sp) # IntegerLiteral at 311.37; stackHeight = 24
      # EXIT NODE # IntegerLiteral at 311.37; stackHeight = 24
     lw $t0,($sp) # Plus at 311.37; stackHeight = 24
     lw $t1,8($sp) # Plus at 311.37; stackHeight = 24
     addu $t0,$t0,$t1 # Plus at 311.37; stackHeight = 24
     addu $sp,$sp,8 # Plus at 311.37; stackHeight = 24
     sw $t0,($sp)#**"" # Plus at 311.37; stackHeight = 24
    # EXIT NODE # Plus at 311.37; stackHeight = 16
   lw $t0,($sp) # Assign at 311.36; stackHeight = 16
   sw $t0,8($sp) # Assign at 311.36; stackHeight = 16
   addu $sp,$sp,8 # Assign at 311.36; stackHeight = 16
  # EXIT NODE # Assign at 311.36; stackHeight = 8
# EXIT NODE # Block at 311.3; stackHeight = 8
while_enter_1867: # While at 311.3; stackHeight = 8
  # ENTER NODE # LessThan at 311.21; stackHeight = 8
    # ENTER NODE # IdentifierExp at 311.19; stackHeight = 8
     lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 311.19; stackHeight = 8
     subu $sp,$sp,8 # IdentifierExp at 311.19; stackHeight = 8
     sw $s5,4($sp)#**"GC tag" # IdentifierExp at 311.19; stackHeight = 16
     sw $t0,($sp)#**"" # IdentifierExp at 311.19; stackHeight = 16
    # EXIT NODE # IdentifierExp at 311.19; stackHeight = 16
    # ENTER NODE # ArrayLength at 311.27; stackHeight = 16
      # ENTER NODE # IdentifierExp at 311.23; stackHeight = 16
       lw $t0,0($s2) # inst-var # IdentifierExp at 311.23; stackHeight = 16
       subu $sp,$sp,4 # IdentifierExp at 311.23; stackHeight = 16
       sw $t0,($sp)#**"" # IdentifierExp at 311.23; stackHeight = 20
      # EXIT NODE # IdentifierExp at 311.23; stackHeight = 20
     lw $t0,($sp) # ArrayLength at 311.27; stackHeight = 20
     beq $t0,$zero,nullPtrException # ArrayLength at 311.27; stackHeight = 20
     lw $t0,-4($t0) # ArrayLength at 311.27; stackHeight = 20
     sw $s5,($sp)#**"GC tag" # ArrayLength at 311.27; stackHeight = 20
     subu $sp,4 # ArrayLength at 311.27; stackHeight = 20
     sw $t0,($sp)#**"" # ArrayLength at 311.27; stackHeight = 20
    # EXIT NODE # ArrayLength at 311.27; stackHeight = 24
   lw $t0,($sp) # LessThan at 311.21; stackHeight = 24
   lw $t1,8($sp) # LessThan at 311.21; stackHeight = 24
   slt $t0,$t1,$t0 # LessThan at 311.21; stackHeight = 24
   addu $sp,$sp,12 # LessThan at 311.21; stackHeight = 24
   sw $t0,($sp)#**"" # LessThan at 311.21; stackHeight = 12
  # EXIT NODE # LessThan at 311.21; stackHeight = 12
 lw $t0,($sp) # While at 311.3; stackHeight = 12
 addu $sp,$sp,4 # While at 311.3; stackHeight = 12
bne $t0,$zero,while_top_1867 # While at 311.3; stackHeight = 8
break_target_1867: # While at 311.3; stackHeight = 8
# EXIT NODE # While at 311.3; stackHeight = 8
 addu $sp,8 # Block at 311.3; stackHeight = 8
# EXIT NODE # Block at 311.3; stackHeight = 0
  # ENTER NODE # Block at 319.3; stackHeight = 0
    # ENTER NODE # LocalVarDecl at 319.12; stackHeight = 0
      # ENTER NODE # IntegerLiteral at 319.16; stackHeight = 0
       subu $sp,$sp,8 # IntegerLiteral at 319.16; stackHeight = 0
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 319.16; stackHeight = 8
       li $t0,0 # IntegerLiteral at 319.16; stackHeight = 8
       sw $t0,($sp) # IntegerLiteral at 319.16; stackHeight = 8
      # EXIT NODE # IntegerLiteral at 319.16; stackHeight = 8
    # EXIT NODE # LocalVarDecl at 319.12; stackHeight = 8
    # ENTER NODE # While at 319.3; stackHeight = 8
    j while_enter_1944 # While at 319.3; stackHeight = 8
    while_top_1944: # While at 319.3; stackHeight = 8
      # ENTER NODE # Block at 319.3; stackHeight = 8
        # ENTER NODE # Block at 319.43; stackHeight = 8
          # ENTER NODE # Block at 320.4; stackHeight = 8
            # ENTER NODE # LocalVarDecl at 320.13; stackHeight = 8
              # ENTER NODE # IntegerLiteral at 320.17; stackHeight = 8
               subu $sp,$sp,8 # IntegerLiteral at 320.17; stackHeight = 8
               sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 320.17; stackHeight = 16
               li $t0,0 # IntegerLiteral at 320.17; stackHeight = 16
               sw $t0,($sp) # IntegerLiteral at 320.17; stackHeight = 16
              # EXIT NODE # IntegerLiteral at 320.17; stackHeight = 16
            # EXIT NODE # LocalVarDecl at 320.13; stackHeight = 16
            # ENTER NODE # While at 320.4; stackHeight = 16
            j while_enter_1910 # While at 320.4; stackHeight = 16
            while_top_1910: # While at 320.4; stackHeight = 16
              # ENTER NODE # Block at 320.4; stackHeight = 16
                # ENTER NODE # Block at 320.42; stackHeight = 16
                  # ENTER NODE # CallStatement at 321.5; stackHeight = 16
                    # ENTER NODE # Call at 321.5; stackHeight = 16
                      # ENTER NODE # This at 321.5; stackHeight = 16
                       subu $sp,$sp,4 # This at 321.5; stackHeight = 16
                       sw $s2,($sp)#**"" # This at 321.5; stackHeight = 20
                      # EXIT NODE # This at 321.5; stackHeight = 20
                      # ENTER NODE # Call at 321.53; stackHeight = 20
                        # ENTER NODE # Call at 321.42; stackHeight = 20
                          # ENTER NODE # Call at 321.24; stackHeight = 20
                            # ENTER NODE # IdentifierExp at 321.14; stackHeight = 20
                             lw $t0,4($s2) # inst-var # IdentifierExp at 321.14; stackHeight = 20
                             subu $sp,$sp,4 # IdentifierExp at 321.14; stackHeight = 20
                             sw $t0,($sp)#**"" # IdentifierExp at 321.14; stackHeight = 24
                            # EXIT NODE # IdentifierExp at 321.14; stackHeight = 24
                            # ENTER NODE # IdentifierExp at 321.21; stackHeight = 24
                             lw $t0,16($sp) # local: stackHt=24,var-offset=-8 # IdentifierExp at 321.21; stackHeight = 24
                             subu $sp,$sp,8 # IdentifierExp at 321.21; stackHeight = 24
                             sw $s5,4($sp)#**"GC tag" # IdentifierExp at 321.21; stackHeight = 32
                             sw $t0,($sp)#**"" # IdentifierExp at 321.21; stackHeight = 32
                            # EXIT NODE # IdentifierExp at 321.21; stackHeight = 32
                           lw $t0,8($sp) # ArrayLookup at 321.20; stackHeight = 32
                           beq $t0,$zero,nullPtrException # ArrayLookup at 321.20; stackHeight = 32
                           lw $t1,-4($t0) # ArrayLookup at 321.20; stackHeight = 32
                           lw $t2,($sp) # ArrayLookup at 321.20; stackHeight = 32
                           bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 321.20; stackHeight = 32
                           sll $t2,$t2,2 # ArrayLookup at 321.20; stackHeight = 32
                           addu $t2,$t2,$t0 # ArrayLookup at 321.20; stackHeight = 32
                           lw $t0,($t2) # ArrayLookup at 321.20; stackHeight = 32
                           sw $t0,8($sp)#**"" # ArrayLookup at 321.20; stackHeight = 32
                           addu $sp,$sp,8 # ArrayLookup at 321.20; stackHeight = 32
                          # EXIT NODE # ArrayLookup at 321.20; stackHeight = 24
                          # ENTER NODE # IdentifierExp at 321.33; stackHeight = 24
                           lw $t0,0($s2) # inst-var # IdentifierExp at 321.33; stackHeight = 24
                           subu $sp,$sp,4 # IdentifierExp at 321.33; stackHeight = 24
                           sw $t0,($sp)#**"" # IdentifierExp at 321.33; stackHeight = 28
                          # EXIT NODE # IdentifierExp at 321.33; stackHeight = 28
                          # ENTER NODE # IdentifierExp at 321.38; stackHeight = 28
                           lw $t0,12($sp) # local: stackHt=28,var-offset=-16 # IdentifierExp at 321.38; stackHeight = 28
                           subu $sp,$sp,8 # IdentifierExp at 321.38; stackHeight = 28
                           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 321.38; stackHeight = 36
                           sw $t0,($sp)#**"" # IdentifierExp at 321.38; stackHeight = 36
                          # EXIT NODE # IdentifierExp at 321.38; stackHeight = 36
                         lw $t0,8($sp) # ArrayLookup at 321.37; stackHeight = 36
                         beq $t0,$zero,nullPtrException # ArrayLookup at 321.37; stackHeight = 36
                         lw $t1,-4($t0) # ArrayLookup at 321.37; stackHeight = 36
                         lw $t2,($sp) # ArrayLookup at 321.37; stackHeight = 36
                         bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 321.37; stackHeight = 36
                         sll $t2,$t2,2 # ArrayLookup at 321.37; stackHeight = 36
                         addu $t2,$t2,$t0 # ArrayLookup at 321.37; stackHeight = 36
                         lw $t0,($t2) # ArrayLookup at 321.37; stackHeight = 36
                         sw $t0,8($sp)#**"" # ArrayLookup at 321.37; stackHeight = 36
                         addu $sp,$sp,8 # ArrayLookup at 321.37; stackHeight = 36
                        # EXIT NODE # ArrayLookup at 321.37; stackHeight = 28
                       lw $t0,4($sp) # Call at 321.24; stackHeight = 28
                       beq $t0,$zero,nullPtrException # Call at 321.24; stackHeight = 28
                       lw $t0,-12($t0) # Call at 321.24; stackHeight = 28
                       lw $t0,32($t0) # Call at 321.24; stackHeight = 28
                       jalr $t0 # multiply # Call at 321.24; stackHeight = 28
                      # EXIT NODE # Call at 321.24; stackHeight = 24
                     lw $t0,0($sp) # Call at 321.42; stackHeight = 24
                     beq $t0,$zero,nullPtrException # Call at 321.42; stackHeight = 24
                     lw $t0,-12($t0) # Call at 321.42; stackHeight = 24
                     lw $t0,8($t0) # Call at 321.42; stackHeight = 24
                     jalr $t0 # toString # Call at 321.42; stackHeight = 24
                    # EXIT NODE # Call at 321.42; stackHeight = 24
                    # ENTER NODE # StringLiteral at 321.60; stackHeight = 24
                     subu $sp,$sp,4 # StringLiteral at 321.60; stackHeight = 24
                     la $t0,strLit_486 # StringLiteral at 321.60; stackHeight = 28
                     sw $t0,($sp)#**"strLit:\?" # StringLiteral at 321.60; stackHeight = 28
                    # EXIT NODE # StringLiteral at 321.60; stackHeight = 28
                   lw $t0,4($sp) # Call at 321.53; stackHeight = 28
                   beq $t0,$zero,nullPtrException # Call at 321.53; stackHeight = 28
                   lw $t0,-12($t0) # Call at 321.53; stackHeight = 28
                   lw $t0,12($t0) # Call at 321.53; stackHeight = 28
                   jalr $t0 # concat # Call at 321.53; stackHeight = 28
                  # EXIT NODE # Call at 321.53; stackHeight = 24
                 lw $t0,4($sp) # Call at 321.5; stackHeight = 24
                 beq $t0,$zero,nullPtrException # Call at 321.5; stackHeight = 24
                 lw $t0,-12($t0) # Call at 321.5; stackHeight = 24
                 lw $t0,24($t0) # Call at 321.5; stackHeight = 24
                 jalr $t0 # printStr # Call at 321.5; stackHeight = 24
                # EXIT NODE # Call at 321.5; stackHeight = 16
              # EXIT NODE # CallStatement at 321.5; stackHeight = 16
            # EXIT NODE # Block at 320.42; stackHeight = 16
            # ENTER NODE # Assign at 320.37; stackHeight = 16
              # ENTER NODE # Plus at 320.38; stackHeight = 16
                # ENTER NODE # IdentifierExp at 320.37; stackHeight = 16
                 lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 320.37; stackHeight = 16
                 subu $sp,$sp,8 # IdentifierExp at 320.37; stackHeight = 16
                 sw $s5,4($sp)#**"GC tag" # IdentifierExp at 320.37; stackHeight = 24
                 sw $t0,($sp)#**"" # IdentifierExp at 320.37; stackHeight = 24
                # EXIT NODE # IdentifierExp at 320.37; stackHeight = 24
                # ENTER NODE # IntegerLiteral at 320.38; stackHeight = 24
                 subu $sp,$sp,8 # IntegerLiteral at 320.38; stackHeight = 24
                 sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 320.38; stackHeight = 32
                 li $t0,1 # IntegerLiteral at 320.38; stackHeight = 32
                 sw $t0,($sp) # IntegerLiteral at 320.38; stackHeight = 32
                # EXIT NODE # IntegerLiteral at 320.38; stackHeight = 32
               lw $t0,($sp) # Plus at 320.38; stackHeight = 32
               lw $t1,8($sp) # Plus at 320.38; stackHeight = 32
               addu $t0,$t0,$t1 # Plus at 320.38; stackHeight = 32
               addu $sp,$sp,8 # Plus at 320.38; stackHeight = 32
               sw $t0,($sp)#**"" # Plus at 320.38; stackHeight = 32
              # EXIT NODE # Plus at 320.38; stackHeight = 24
             lw $t0,($sp) # Assign at 320.37; stackHeight = 24
             sw $t0,8($sp) # Assign at 320.37; stackHeight = 24
             addu $sp,$sp,8 # Assign at 320.37; stackHeight = 24
            # EXIT NODE # Assign at 320.37; stackHeight = 16
          # EXIT NODE # Block at 320.4; stackHeight = 16
        while_enter_1910: # While at 320.4; stackHeight = 16
          # ENTER NODE # LessThan at 320.22; stackHeight = 16
            # ENTER NODE # IdentifierExp at 320.20; stackHeight = 16
             lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 320.20; stackHeight = 16
             subu $sp,$sp,8 # IdentifierExp at 320.20; stackHeight = 16
             sw $s5,4($sp)#**"GC tag" # IdentifierExp at 320.20; stackHeight = 24
             sw $t0,($sp)#**"" # IdentifierExp at 320.20; stackHeight = 24
            # EXIT NODE # IdentifierExp at 320.20; stackHeight = 24
            # ENTER NODE # ArrayLength at 320.28; stackHeight = 24
              # ENTER NODE # IdentifierExp at 320.24; stackHeight = 24
               lw $t0,0($s2) # inst-var # IdentifierExp at 320.24; stackHeight = 24
               subu $sp,$sp,4 # IdentifierExp at 320.24; stackHeight = 24
               sw $t0,($sp)#**"" # IdentifierExp at 320.24; stackHeight = 28
              # EXIT NODE # IdentifierExp at 320.24; stackHeight = 28
             lw $t0,($sp) # ArrayLength at 320.28; stackHeight = 28
             beq $t0,$zero,nullPtrException # ArrayLength at 320.28; stackHeight = 28
             lw $t0,-4($t0) # ArrayLength at 320.28; stackHeight = 28
             sw $s5,($sp)#**"GC tag" # ArrayLength at 320.28; stackHeight = 28
             subu $sp,4 # ArrayLength at 320.28; stackHeight = 28
             sw $t0,($sp)#**"" # ArrayLength at 320.28; stackHeight = 28
            # EXIT NODE # ArrayLength at 320.28; stackHeight = 32
           lw $t0,($sp) # LessThan at 320.22; stackHeight = 32
           lw $t1,8($sp) # LessThan at 320.22; stackHeight = 32
           slt $t0,$t1,$t0 # LessThan at 320.22; stackHeight = 32
           addu $sp,$sp,12 # LessThan at 320.22; stackHeight = 32
           sw $t0,($sp)#**"" # LessThan at 320.22; stackHeight = 20
          # EXIT NODE # LessThan at 320.22; stackHeight = 20
         lw $t0,($sp) # While at 320.4; stackHeight = 20
         addu $sp,$sp,4 # While at 320.4; stackHeight = 20
        bne $t0,$zero,while_top_1910 # While at 320.4; stackHeight = 16
        break_target_1910: # While at 320.4; stackHeight = 16
        # EXIT NODE # While at 320.4; stackHeight = 16
       addu $sp,8 # Block at 320.4; stackHeight = 16
      # EXIT NODE # Block at 320.4; stackHeight = 8
      # ENTER NODE # Block at 323.4; stackHeight = 8
        # ENTER NODE # LocalVarDecl at 323.13; stackHeight = 8
          # ENTER NODE # IntegerLiteral at 323.17; stackHeight = 8
           subu $sp,$sp,8 # IntegerLiteral at 323.17; stackHeight = 8
           sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 323.17; stackHeight = 16
           li $t0,0 # IntegerLiteral at 323.17; stackHeight = 16
           sw $t0,($sp) # IntegerLiteral at 323.17; stackHeight = 16
          # EXIT NODE # IntegerLiteral at 323.17; stackHeight = 16
        # EXIT NODE # LocalVarDecl at 323.13; stackHeight = 16
        # ENTER NODE # While at 323.4; stackHeight = 16
        j while_enter_1940 # While at 323.4; stackHeight = 16
        while_top_1940: # While at 323.4; stackHeight = 16
          # ENTER NODE # Block at 323.4; stackHeight = 16
            # ENTER NODE # Block at 323.44; stackHeight = 16
              # ENTER NODE # CallStatement at 324.5; stackHeight = 16
                # ENTER NODE # Call at 324.5; stackHeight = 16
                  # ENTER NODE # This at 324.5; stackHeight = 16
                   subu $sp,$sp,4 # This at 324.5; stackHeight = 16
                   sw $s2,($sp)#**"" # This at 324.5; stackHeight = 20
                  # EXIT NODE # This at 324.5; stackHeight = 20
                  # ENTER NODE # Call at 324.55; stackHeight = 20
                    # ENTER NODE # Call at 324.44; stackHeight = 20
                      # ENTER NODE # Call at 324.24; stackHeight = 20
                        # ENTER NODE # IdentifierExp at 324.14; stackHeight = 20
                         lw $t0,4($s2) # inst-var # IdentifierExp at 324.14; stackHeight = 20
                         subu $sp,$sp,4 # IdentifierExp at 324.14; stackHeight = 20
                         sw $t0,($sp)#**"" # IdentifierExp at 324.14; stackHeight = 24
                        # EXIT NODE # IdentifierExp at 324.14; stackHeight = 24
                        # ENTER NODE # IdentifierExp at 324.21; stackHeight = 24
                         lw $t0,16($sp) # local: stackHt=24,var-offset=-8 # IdentifierExp at 324.21; stackHeight = 24
                         subu $sp,$sp,8 # IdentifierExp at 324.21; stackHeight = 24
                         sw $s5,4($sp)#**"GC tag" # IdentifierExp at 324.21; stackHeight = 32
                         sw $t0,($sp)#**"" # IdentifierExp at 324.21; stackHeight = 32
                        # EXIT NODE # IdentifierExp at 324.21; stackHeight = 32
                       lw $t0,8($sp) # ArrayLookup at 324.20; stackHeight = 32
                       beq $t0,$zero,nullPtrException # ArrayLookup at 324.20; stackHeight = 32
                       lw $t1,-4($t0) # ArrayLookup at 324.20; stackHeight = 32
                       lw $t2,($sp) # ArrayLookup at 324.20; stackHeight = 32
                       bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 324.20; stackHeight = 32
                       sll $t2,$t2,2 # ArrayLookup at 324.20; stackHeight = 32
                       addu $t2,$t2,$t0 # ArrayLookup at 324.20; stackHeight = 32
                       lw $t0,($t2) # ArrayLookup at 324.20; stackHeight = 32
                       sw $t0,8($sp)#**"" # ArrayLookup at 324.20; stackHeight = 32
                       addu $sp,$sp,8 # ArrayLookup at 324.20; stackHeight = 32
                      # EXIT NODE # ArrayLookup at 324.20; stackHeight = 24
                      # ENTER NODE # IdentifierExp at 324.33; stackHeight = 24
                       lw $t0,4($s2) # inst-var # IdentifierExp at 324.33; stackHeight = 24
                       subu $sp,$sp,4 # IdentifierExp at 324.33; stackHeight = 24
                       sw $t0,($sp)#**"" # IdentifierExp at 324.33; stackHeight = 28
                      # EXIT NODE # IdentifierExp at 324.33; stackHeight = 28
                      # ENTER NODE # IdentifierExp at 324.40; stackHeight = 28
                       lw $t0,12($sp) # local: stackHt=28,var-offset=-16 # IdentifierExp at 324.40; stackHeight = 28
                       subu $sp,$sp,8 # IdentifierExp at 324.40; stackHeight = 28
                       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 324.40; stackHeight = 36
                       sw $t0,($sp)#**"" # IdentifierExp at 324.40; stackHeight = 36
                      # EXIT NODE # IdentifierExp at 324.40; stackHeight = 36
                     lw $t0,8($sp) # ArrayLookup at 324.39; stackHeight = 36
                     beq $t0,$zero,nullPtrException # ArrayLookup at 324.39; stackHeight = 36
                     lw $t1,-4($t0) # ArrayLookup at 324.39; stackHeight = 36
                     lw $t2,($sp) # ArrayLookup at 324.39; stackHeight = 36
                     bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 324.39; stackHeight = 36
                     sll $t2,$t2,2 # ArrayLookup at 324.39; stackHeight = 36
                     addu $t2,$t2,$t0 # ArrayLookup at 324.39; stackHeight = 36
                     lw $t0,($t2) # ArrayLookup at 324.39; stackHeight = 36
                     sw $t0,8($sp)#**"" # ArrayLookup at 324.39; stackHeight = 36
                     addu $sp,$sp,8 # ArrayLookup at 324.39; stackHeight = 36
                    # EXIT NODE # ArrayLookup at 324.39; stackHeight = 28
                   lw $t0,4($sp) # Call at 324.24; stackHeight = 28
                   beq $t0,$zero,nullPtrException # Call at 324.24; stackHeight = 28
                   lw $t0,-12($t0) # Call at 324.24; stackHeight = 28
                   lw $t0,32($t0) # Call at 324.24; stackHeight = 28
                   jalr $t0 # multiply # Call at 324.24; stackHeight = 28
                  # EXIT NODE # Call at 324.24; stackHeight = 24
                 lw $t0,0($sp) # Call at 324.44; stackHeight = 24
                 beq $t0,$zero,nullPtrException # Call at 324.44; stackHeight = 24
                 lw $t0,-12($t0) # Call at 324.44; stackHeight = 24
                 lw $t0,8($t0) # Call at 324.44; stackHeight = 24
                 jalr $t0 # toString # Call at 324.44; stackHeight = 24
                # EXIT NODE # Call at 324.44; stackHeight = 24
                # ENTER NODE # StringLiteral at 324.62; stackHeight = 24
                 subu $sp,$sp,4 # StringLiteral at 324.62; stackHeight = 24
                 la $t0,strLit_486 # StringLiteral at 324.62; stackHeight = 28
                 sw $t0,($sp)#**"strLit:\?" # StringLiteral at 324.62; stackHeight = 28
                # EXIT NODE # StringLiteral at 324.62; stackHeight = 28
               lw $t0,4($sp) # Call at 324.55; stackHeight = 28
               beq $t0,$zero,nullPtrException # Call at 324.55; stackHeight = 28
               lw $t0,-12($t0) # Call at 324.55; stackHeight = 28
               lw $t0,12($t0) # Call at 324.55; stackHeight = 28
               jalr $t0 # concat # Call at 324.55; stackHeight = 28
              # EXIT NODE # Call at 324.55; stackHeight = 24
             lw $t0,4($sp) # Call at 324.5; stackHeight = 24
             beq $t0,$zero,nullPtrException # Call at 324.5; stackHeight = 24
             lw $t0,-12($t0) # Call at 324.5; stackHeight = 24
             lw $t0,24($t0) # Call at 324.5; stackHeight = 24
             jalr $t0 # printStr # Call at 324.5; stackHeight = 24
            # EXIT NODE # Call at 324.5; stackHeight = 16
          # EXIT NODE # CallStatement at 324.5; stackHeight = 16
        # EXIT NODE # Block at 323.44; stackHeight = 16
        # ENTER NODE # Assign at 323.39; stackHeight = 16
          # ENTER NODE # Plus at 323.40; stackHeight = 16
            # ENTER NODE # IdentifierExp at 323.39; stackHeight = 16
             lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 323.39; stackHeight = 16
             subu $sp,$sp,8 # IdentifierExp at 323.39; stackHeight = 16
             sw $s5,4($sp)#**"GC tag" # IdentifierExp at 323.39; stackHeight = 24
             sw $t0,($sp)#**"" # IdentifierExp at 323.39; stackHeight = 24
            # EXIT NODE # IdentifierExp at 323.39; stackHeight = 24
            # ENTER NODE # IntegerLiteral at 323.40; stackHeight = 24
             subu $sp,$sp,8 # IntegerLiteral at 323.40; stackHeight = 24
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 323.40; stackHeight = 32
             li $t0,1 # IntegerLiteral at 323.40; stackHeight = 32
             sw $t0,($sp) # IntegerLiteral at 323.40; stackHeight = 32
            # EXIT NODE # IntegerLiteral at 323.40; stackHeight = 32
           lw $t0,($sp) # Plus at 323.40; stackHeight = 32
           lw $t1,8($sp) # Plus at 323.40; stackHeight = 32
           addu $t0,$t0,$t1 # Plus at 323.40; stackHeight = 32
           addu $sp,$sp,8 # Plus at 323.40; stackHeight = 32
           sw $t0,($sp)#**"" # Plus at 323.40; stackHeight = 32
          # EXIT NODE # Plus at 323.40; stackHeight = 24
         lw $t0,($sp) # Assign at 323.39; stackHeight = 24
         sw $t0,8($sp) # Assign at 323.39; stackHeight = 24
         addu $sp,$sp,8 # Assign at 323.39; stackHeight = 24
        # EXIT NODE # Assign at 323.39; stackHeight = 16
      # EXIT NODE # Block at 323.4; stackHeight = 16
    while_enter_1940: # While at 323.4; stackHeight = 16
      # ENTER NODE # LessThan at 323.22; stackHeight = 16
        # ENTER NODE # IdentifierExp at 323.20; stackHeight = 16
         lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 323.20; stackHeight = 16
         subu $sp,$sp,8 # IdentifierExp at 323.20; stackHeight = 16
         sw $s5,4($sp)#**"GC tag" # IdentifierExp at 323.20; stackHeight = 24
         sw $t0,($sp)#**"" # IdentifierExp at 323.20; stackHeight = 24
        # EXIT NODE # IdentifierExp at 323.20; stackHeight = 24
        # ENTER NODE # ArrayLength at 323.30; stackHeight = 24
          # ENTER NODE # IdentifierExp at 323.24; stackHeight = 24
           lw $t0,4($s2) # inst-var # IdentifierExp at 323.24; stackHeight = 24
           subu $sp,$sp,4 # IdentifierExp at 323.24; stackHeight = 24
           sw $t0,($sp)#**"" # IdentifierExp at 323.24; stackHeight = 28
          # EXIT NODE # IdentifierExp at 323.24; stackHeight = 28
         lw $t0,($sp) # ArrayLength at 323.30; stackHeight = 28
         beq $t0,$zero,nullPtrException # ArrayLength at 323.30; stackHeight = 28
         lw $t0,-4($t0) # ArrayLength at 323.30; stackHeight = 28
         sw $s5,($sp)#**"GC tag" # ArrayLength at 323.30; stackHeight = 28
         subu $sp,4 # ArrayLength at 323.30; stackHeight = 28
         sw $t0,($sp)#**"" # ArrayLength at 323.30; stackHeight = 28
        # EXIT NODE # ArrayLength at 323.30; stackHeight = 32
       lw $t0,($sp) # LessThan at 323.22; stackHeight = 32
       lw $t1,8($sp) # LessThan at 323.22; stackHeight = 32
       slt $t0,$t1,$t0 # LessThan at 323.22; stackHeight = 32
       addu $sp,$sp,12 # LessThan at 323.22; stackHeight = 32
       sw $t0,($sp)#**"" # LessThan at 323.22; stackHeight = 20
      # EXIT NODE # LessThan at 323.22; stackHeight = 20
     lw $t0,($sp) # While at 323.4; stackHeight = 20
     addu $sp,$sp,4 # While at 323.4; stackHeight = 20
    bne $t0,$zero,while_top_1940 # While at 323.4; stackHeight = 16
    break_target_1940: # While at 323.4; stackHeight = 16
    # EXIT NODE # While at 323.4; stackHeight = 16
   addu $sp,8 # Block at 323.4; stackHeight = 16
  # EXIT NODE # Block at 323.4; stackHeight = 8
# EXIT NODE # Block at 319.43; stackHeight = 8
  # ENTER NODE # Assign at 319.38; stackHeight = 8
    # ENTER NODE # Plus at 319.39; stackHeight = 8
      # ENTER NODE # IdentifierExp at 319.38; stackHeight = 8
       lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 319.38; stackHeight = 8
       subu $sp,$sp,8 # IdentifierExp at 319.38; stackHeight = 8
       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 319.38; stackHeight = 16
       sw $t0,($sp)#**"" # IdentifierExp at 319.38; stackHeight = 16
      # EXIT NODE # IdentifierExp at 319.38; stackHeight = 16
      # ENTER NODE # IntegerLiteral at 319.39; stackHeight = 16
       subu $sp,$sp,8 # IntegerLiteral at 319.39; stackHeight = 16
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 319.39; stackHeight = 24
       li $t0,1 # IntegerLiteral at 319.39; stackHeight = 24
       sw $t0,($sp) # IntegerLiteral at 319.39; stackHeight = 24
      # EXIT NODE # IntegerLiteral at 319.39; stackHeight = 24
     lw $t0,($sp) # Plus at 319.39; stackHeight = 24
     lw $t1,8($sp) # Plus at 319.39; stackHeight = 24
     addu $t0,$t0,$t1 # Plus at 319.39; stackHeight = 24
     addu $sp,$sp,8 # Plus at 319.39; stackHeight = 24
     sw $t0,($sp)#**"" # Plus at 319.39; stackHeight = 24
    # EXIT NODE # Plus at 319.39; stackHeight = 16
   lw $t0,($sp) # Assign at 319.38; stackHeight = 16
   sw $t0,8($sp) # Assign at 319.38; stackHeight = 16
   addu $sp,$sp,8 # Assign at 319.38; stackHeight = 16
  # EXIT NODE # Assign at 319.38; stackHeight = 8
# EXIT NODE # Block at 319.3; stackHeight = 8
while_enter_1944: # While at 319.3; stackHeight = 8
  # ENTER NODE # LessThan at 319.21; stackHeight = 8
    # ENTER NODE # IdentifierExp at 319.19; stackHeight = 8
     lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 319.19; stackHeight = 8
     subu $sp,$sp,8 # IdentifierExp at 319.19; stackHeight = 8
     sw $s5,4($sp)#**"GC tag" # IdentifierExp at 319.19; stackHeight = 16
     sw $t0,($sp)#**"" # IdentifierExp at 319.19; stackHeight = 16
    # EXIT NODE # IdentifierExp at 319.19; stackHeight = 16
    # ENTER NODE # ArrayLength at 319.29; stackHeight = 16
      # ENTER NODE # IdentifierExp at 319.23; stackHeight = 16
       lw $t0,4($s2) # inst-var # IdentifierExp at 319.23; stackHeight = 16
       subu $sp,$sp,4 # IdentifierExp at 319.23; stackHeight = 16
       sw $t0,($sp)#**"" # IdentifierExp at 319.23; stackHeight = 20
      # EXIT NODE # IdentifierExp at 319.23; stackHeight = 20
     lw $t0,($sp) # ArrayLength at 319.29; stackHeight = 20
     beq $t0,$zero,nullPtrException # ArrayLength at 319.29; stackHeight = 20
     lw $t0,-4($t0) # ArrayLength at 319.29; stackHeight = 20
     sw $s5,($sp)#**"GC tag" # ArrayLength at 319.29; stackHeight = 20
     subu $sp,4 # ArrayLength at 319.29; stackHeight = 20
     sw $t0,($sp)#**"" # ArrayLength at 319.29; stackHeight = 20
    # EXIT NODE # ArrayLength at 319.29; stackHeight = 24
   lw $t0,($sp) # LessThan at 319.21; stackHeight = 24
   lw $t1,8($sp) # LessThan at 319.21; stackHeight = 24
   slt $t0,$t1,$t0 # LessThan at 319.21; stackHeight = 24
   addu $sp,$sp,12 # LessThan at 319.21; stackHeight = 24
   sw $t0,($sp)#**"" # LessThan at 319.21; stackHeight = 12
  # EXIT NODE # LessThan at 319.21; stackHeight = 12
 lw $t0,($sp) # While at 319.3; stackHeight = 12
 addu $sp,$sp,4 # While at 319.3; stackHeight = 12
bne $t0,$zero,while_top_1944 # While at 319.3; stackHeight = 8
break_target_1944: # While at 319.3; stackHeight = 8
# EXIT NODE # While at 319.3; stackHeight = 8
 addu $sp,8 # Block at 319.3; stackHeight = 8
# EXIT NODE # Block at 319.3; stackHeight = 0
 # stack height is 0 # MethodDeclVoid at 310.14; stackHeight = 0
 lw $ra,4($sp) # MethodDeclVoid at 310.14; stackHeight = 0
 lw $s2,0($sp) # MethodDeclVoid at 310.14; stackHeight = 0
 addu $sp,$sp,8 # MethodDeclVoid at 310.14; stackHeight = 0
jr $ra # MethodDeclVoid at 310.14; stackHeight = -8
# EXIT NODE # MethodDeclVoid at 310.14; stackHeight = -8
  # ENTER NODE # MethodDeclVoid at 329.14; stackHeight = -8
  .globl fcn_2001_negate # MethodDeclVoid at 329.14; stackHeight = -8
  fcn_2001_negate: # MethodDeclVoid at 329.14; stackHeight = -8
   subu $sp,$sp,4 # MethodDeclVoid at 329.14; stackHeight = -8
   sw $s2,($sp) #**"old this-ptr" # MethodDeclVoid at 329.14; stackHeight = -8
   lw $s2,4($sp) #**"this-ptr" # MethodDeclVoid at 329.14; stackHeight = -8
   sw $ra,4($sp) #**"RA:negate" # MethodDeclVoid at 329.14; stackHeight = -8
    # ENTER NODE # Block at 330.3; stackHeight = 0
      # ENTER NODE # LocalVarDecl at 330.12; stackHeight = 0
        # ENTER NODE # IntegerLiteral at 330.16; stackHeight = 0
         subu $sp,$sp,8 # IntegerLiteral at 330.16; stackHeight = 0
         sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 330.16; stackHeight = 8
         li $t0,0 # IntegerLiteral at 330.16; stackHeight = 8
         sw $t0,($sp) # IntegerLiteral at 330.16; stackHeight = 8
        # EXIT NODE # IntegerLiteral at 330.16; stackHeight = 8
      # EXIT NODE # LocalVarDecl at 330.12; stackHeight = 8
      # ENTER NODE # While at 330.3; stackHeight = 8
      j while_enter_1972 # While at 330.3; stackHeight = 8
      while_top_1972: # While at 330.3; stackHeight = 8
        # ENTER NODE # Block at 330.3; stackHeight = 8
          # ENTER NODE # Block at 330.41; stackHeight = 8
            # ENTER NODE # CallStatement at 331.4; stackHeight = 8
              # ENTER NODE # Call at 331.4; stackHeight = 8
                # ENTER NODE # This at 331.4; stackHeight = 8
                 subu $sp,$sp,4 # This at 331.4; stackHeight = 8
                 sw $s2,($sp)#**"" # This at 331.4; stackHeight = 12
                # EXIT NODE # This at 331.4; stackHeight = 12
                # ENTER NODE # Call at 331.41; stackHeight = 12
                  # ENTER NODE # Call at 331.30; stackHeight = 12
                    # ENTER NODE # Call at 331.21; stackHeight = 12
                      # ENTER NODE # IdentifierExp at 331.13; stackHeight = 12
                       lw $t0,0($s2) # inst-var # IdentifierExp at 331.13; stackHeight = 12
                       subu $sp,$sp,4 # IdentifierExp at 331.13; stackHeight = 12
                       sw $t0,($sp)#**"" # IdentifierExp at 331.13; stackHeight = 16
                      # EXIT NODE # IdentifierExp at 331.13; stackHeight = 16
                      # ENTER NODE # IdentifierExp at 331.18; stackHeight = 16
                       lw $t0,8($sp) # local: stackHt=16,var-offset=-8 # IdentifierExp at 331.18; stackHeight = 16
                       subu $sp,$sp,8 # IdentifierExp at 331.18; stackHeight = 16
                       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 331.18; stackHeight = 24
                       sw $t0,($sp)#**"" # IdentifierExp at 331.18; stackHeight = 24
                      # EXIT NODE # IdentifierExp at 331.18; stackHeight = 24
                     lw $t0,8($sp) # ArrayLookup at 331.17; stackHeight = 24
                     beq $t0,$zero,nullPtrException # ArrayLookup at 331.17; stackHeight = 24
                     lw $t1,-4($t0) # ArrayLookup at 331.17; stackHeight = 24
                     lw $t2,($sp) # ArrayLookup at 331.17; stackHeight = 24
                     bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 331.17; stackHeight = 24
                     sll $t2,$t2,2 # ArrayLookup at 331.17; stackHeight = 24
                     addu $t2,$t2,$t0 # ArrayLookup at 331.17; stackHeight = 24
                     lw $t0,($t2) # ArrayLookup at 331.17; stackHeight = 24
                     sw $t0,8($sp)#**"" # ArrayLookup at 331.17; stackHeight = 24
                     addu $sp,$sp,8 # ArrayLookup at 331.17; stackHeight = 24
                    # EXIT NODE # ArrayLookup at 331.17; stackHeight = 16
                   lw $t0,0($sp) # Call at 331.21; stackHeight = 16
                   beq $t0,$zero,nullPtrException # Call at 331.21; stackHeight = 16
                   lw $t0,-12($t0) # Call at 331.21; stackHeight = 16
                   lw $t0,28($t0) # Call at 331.21; stackHeight = 16
                   jalr $t0 # negate # Call at 331.21; stackHeight = 16
                  # EXIT NODE # Call at 331.21; stackHeight = 16
                 lw $t0,0($sp) # Call at 331.30; stackHeight = 16
                 beq $t0,$zero,nullPtrException # Call at 331.30; stackHeight = 16
                 lw $t0,-12($t0) # Call at 331.30; stackHeight = 16
                 lw $t0,8($t0) # Call at 331.30; stackHeight = 16
                 jalr $t0 # toString # Call at 331.30; stackHeight = 16
                # EXIT NODE # Call at 331.30; stackHeight = 16
                # ENTER NODE # StringLiteral at 331.48; stackHeight = 16
                 subu $sp,$sp,4 # StringLiteral at 331.48; stackHeight = 16
                 la $t0,strLit_486 # StringLiteral at 331.48; stackHeight = 20
                 sw $t0,($sp)#**"strLit:\?" # StringLiteral at 331.48; stackHeight = 20
                # EXIT NODE # StringLiteral at 331.48; stackHeight = 20
               lw $t0,4($sp) # Call at 331.41; stackHeight = 20
               beq $t0,$zero,nullPtrException # Call at 331.41; stackHeight = 20
               lw $t0,-12($t0) # Call at 331.41; stackHeight = 20
               lw $t0,12($t0) # Call at 331.41; stackHeight = 20
               jalr $t0 # concat # Call at 331.41; stackHeight = 20
              # EXIT NODE # Call at 331.41; stackHeight = 16
             lw $t0,4($sp) # Call at 331.4; stackHeight = 16
             beq $t0,$zero,nullPtrException # Call at 331.4; stackHeight = 16
             lw $t0,-12($t0) # Call at 331.4; stackHeight = 16
             lw $t0,24($t0) # Call at 331.4; stackHeight = 16
             jalr $t0 # printStr # Call at 331.4; stackHeight = 16
            # EXIT NODE # Call at 331.4; stackHeight = 8
          # EXIT NODE # CallStatement at 331.4; stackHeight = 8
        # EXIT NODE # Block at 330.41; stackHeight = 8
        # ENTER NODE # Assign at 330.36; stackHeight = 8
          # ENTER NODE # Plus at 330.37; stackHeight = 8
            # ENTER NODE # IdentifierExp at 330.36; stackHeight = 8
             lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 330.36; stackHeight = 8
             subu $sp,$sp,8 # IdentifierExp at 330.36; stackHeight = 8
             sw $s5,4($sp)#**"GC tag" # IdentifierExp at 330.36; stackHeight = 16
             sw $t0,($sp)#**"" # IdentifierExp at 330.36; stackHeight = 16
            # EXIT NODE # IdentifierExp at 330.36; stackHeight = 16
            # ENTER NODE # IntegerLiteral at 330.37; stackHeight = 16
             subu $sp,$sp,8 # IntegerLiteral at 330.37; stackHeight = 16
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 330.37; stackHeight = 24
             li $t0,1 # IntegerLiteral at 330.37; stackHeight = 24
             sw $t0,($sp) # IntegerLiteral at 330.37; stackHeight = 24
            # EXIT NODE # IntegerLiteral at 330.37; stackHeight = 24
           lw $t0,($sp) # Plus at 330.37; stackHeight = 24
           lw $t1,8($sp) # Plus at 330.37; stackHeight = 24
           addu $t0,$t0,$t1 # Plus at 330.37; stackHeight = 24
           addu $sp,$sp,8 # Plus at 330.37; stackHeight = 24
           sw $t0,($sp)#**"" # Plus at 330.37; stackHeight = 24
          # EXIT NODE # Plus at 330.37; stackHeight = 16
         lw $t0,($sp) # Assign at 330.36; stackHeight = 16
         sw $t0,8($sp) # Assign at 330.36; stackHeight = 16
         addu $sp,$sp,8 # Assign at 330.36; stackHeight = 16
        # EXIT NODE # Assign at 330.36; stackHeight = 8
      # EXIT NODE # Block at 330.3; stackHeight = 8
    while_enter_1972: # While at 330.3; stackHeight = 8
      # ENTER NODE # LessThan at 330.21; stackHeight = 8
        # ENTER NODE # IdentifierExp at 330.19; stackHeight = 8
         lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 330.19; stackHeight = 8
         subu $sp,$sp,8 # IdentifierExp at 330.19; stackHeight = 8
         sw $s5,4($sp)#**"GC tag" # IdentifierExp at 330.19; stackHeight = 16
         sw $t0,($sp)#**"" # IdentifierExp at 330.19; stackHeight = 16
        # EXIT NODE # IdentifierExp at 330.19; stackHeight = 16
        # ENTER NODE # ArrayLength at 330.27; stackHeight = 16
          # ENTER NODE # IdentifierExp at 330.23; stackHeight = 16
           lw $t0,0($s2) # inst-var # IdentifierExp at 330.23; stackHeight = 16
           subu $sp,$sp,4 # IdentifierExp at 330.23; stackHeight = 16
           sw $t0,($sp)#**"" # IdentifierExp at 330.23; stackHeight = 20
          # EXIT NODE # IdentifierExp at 330.23; stackHeight = 20
         lw $t0,($sp) # ArrayLength at 330.27; stackHeight = 20
         beq $t0,$zero,nullPtrException # ArrayLength at 330.27; stackHeight = 20
         lw $t0,-4($t0) # ArrayLength at 330.27; stackHeight = 20
         sw $s5,($sp)#**"GC tag" # ArrayLength at 330.27; stackHeight = 20
         subu $sp,4 # ArrayLength at 330.27; stackHeight = 20
         sw $t0,($sp)#**"" # ArrayLength at 330.27; stackHeight = 20
        # EXIT NODE # ArrayLength at 330.27; stackHeight = 24
       lw $t0,($sp) # LessThan at 330.21; stackHeight = 24
       lw $t1,8($sp) # LessThan at 330.21; stackHeight = 24
       slt $t0,$t1,$t0 # LessThan at 330.21; stackHeight = 24
       addu $sp,$sp,12 # LessThan at 330.21; stackHeight = 24
       sw $t0,($sp)#**"" # LessThan at 330.21; stackHeight = 12
      # EXIT NODE # LessThan at 330.21; stackHeight = 12
     lw $t0,($sp) # While at 330.3; stackHeight = 12
     addu $sp,$sp,4 # While at 330.3; stackHeight = 12
    bne $t0,$zero,while_top_1972 # While at 330.3; stackHeight = 8
    break_target_1972: # While at 330.3; stackHeight = 8
    # EXIT NODE # While at 330.3; stackHeight = 8
   addu $sp,8 # Block at 330.3; stackHeight = 8
  # EXIT NODE # Block at 330.3; stackHeight = 0
  # ENTER NODE # Block at 333.3; stackHeight = 0
    # ENTER NODE # LocalVarDecl at 333.12; stackHeight = 0
      # ENTER NODE # IntegerLiteral at 333.16; stackHeight = 0
       subu $sp,$sp,8 # IntegerLiteral at 333.16; stackHeight = 0
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 333.16; stackHeight = 8
       li $t0,0 # IntegerLiteral at 333.16; stackHeight = 8
       sw $t0,($sp) # IntegerLiteral at 333.16; stackHeight = 8
      # EXIT NODE # IntegerLiteral at 333.16; stackHeight = 8
    # EXIT NODE # LocalVarDecl at 333.12; stackHeight = 8
    # ENTER NODE # While at 333.3; stackHeight = 8
    j while_enter_1999 # While at 333.3; stackHeight = 8
    while_top_1999: # While at 333.3; stackHeight = 8
      # ENTER NODE # Block at 333.3; stackHeight = 8
        # ENTER NODE # Block at 333.43; stackHeight = 8
          # ENTER NODE # CallStatement at 334.4; stackHeight = 8
            # ENTER NODE # Call at 334.4; stackHeight = 8
              # ENTER NODE # This at 334.4; stackHeight = 8
               subu $sp,$sp,4 # This at 334.4; stackHeight = 8
               sw $s2,($sp)#**"" # This at 334.4; stackHeight = 12
              # EXIT NODE # This at 334.4; stackHeight = 12
              # ENTER NODE # Call at 334.43; stackHeight = 12
                # ENTER NODE # Call at 334.32; stackHeight = 12
                  # ENTER NODE # Call at 334.23; stackHeight = 12
                    # ENTER NODE # IdentifierExp at 334.13; stackHeight = 12
                     lw $t0,4($s2) # inst-var # IdentifierExp at 334.13; stackHeight = 12
                     subu $sp,$sp,4 # IdentifierExp at 334.13; stackHeight = 12
                     sw $t0,($sp)#**"" # IdentifierExp at 334.13; stackHeight = 16
                    # EXIT NODE # IdentifierExp at 334.13; stackHeight = 16
                    # ENTER NODE # IdentifierExp at 334.20; stackHeight = 16
                     lw $t0,8($sp) # local: stackHt=16,var-offset=-8 # IdentifierExp at 334.20; stackHeight = 16
                     subu $sp,$sp,8 # IdentifierExp at 334.20; stackHeight = 16
                     sw $s5,4($sp)#**"GC tag" # IdentifierExp at 334.20; stackHeight = 24
                     sw $t0,($sp)#**"" # IdentifierExp at 334.20; stackHeight = 24
                    # EXIT NODE # IdentifierExp at 334.20; stackHeight = 24
                   lw $t0,8($sp) # ArrayLookup at 334.19; stackHeight = 24
                   beq $t0,$zero,nullPtrException # ArrayLookup at 334.19; stackHeight = 24
                   lw $t1,-4($t0) # ArrayLookup at 334.19; stackHeight = 24
                   lw $t2,($sp) # ArrayLookup at 334.19; stackHeight = 24
                   bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 334.19; stackHeight = 24
                   sll $t2,$t2,2 # ArrayLookup at 334.19; stackHeight = 24
                   addu $t2,$t2,$t0 # ArrayLookup at 334.19; stackHeight = 24
                   lw $t0,($t2) # ArrayLookup at 334.19; stackHeight = 24
                   sw $t0,8($sp)#**"" # ArrayLookup at 334.19; stackHeight = 24
                   addu $sp,$sp,8 # ArrayLookup at 334.19; stackHeight = 24
                  # EXIT NODE # ArrayLookup at 334.19; stackHeight = 16
                 lw $t0,0($sp) # Call at 334.23; stackHeight = 16
                 beq $t0,$zero,nullPtrException # Call at 334.23; stackHeight = 16
                 lw $t0,-12($t0) # Call at 334.23; stackHeight = 16
                 lw $t0,28($t0) # Call at 334.23; stackHeight = 16
                 jalr $t0 # negate # Call at 334.23; stackHeight = 16
                # EXIT NODE # Call at 334.23; stackHeight = 16
               lw $t0,0($sp) # Call at 334.32; stackHeight = 16
               beq $t0,$zero,nullPtrException # Call at 334.32; stackHeight = 16
               lw $t0,-12($t0) # Call at 334.32; stackHeight = 16
               lw $t0,8($t0) # Call at 334.32; stackHeight = 16
               jalr $t0 # toString # Call at 334.32; stackHeight = 16
              # EXIT NODE # Call at 334.32; stackHeight = 16
              # ENTER NODE # StringLiteral at 334.50; stackHeight = 16
               subu $sp,$sp,4 # StringLiteral at 334.50; stackHeight = 16
               la $t0,strLit_486 # StringLiteral at 334.50; stackHeight = 20
               sw $t0,($sp)#**"strLit:\?" # StringLiteral at 334.50; stackHeight = 20
              # EXIT NODE # StringLiteral at 334.50; stackHeight = 20
             lw $t0,4($sp) # Call at 334.43; stackHeight = 20
             beq $t0,$zero,nullPtrException # Call at 334.43; stackHeight = 20
             lw $t0,-12($t0) # Call at 334.43; stackHeight = 20
             lw $t0,12($t0) # Call at 334.43; stackHeight = 20
             jalr $t0 # concat # Call at 334.43; stackHeight = 20
            # EXIT NODE # Call at 334.43; stackHeight = 16
           lw $t0,4($sp) # Call at 334.4; stackHeight = 16
           beq $t0,$zero,nullPtrException # Call at 334.4; stackHeight = 16
           lw $t0,-12($t0) # Call at 334.4; stackHeight = 16
           lw $t0,24($t0) # Call at 334.4; stackHeight = 16
           jalr $t0 # printStr # Call at 334.4; stackHeight = 16
          # EXIT NODE # Call at 334.4; stackHeight = 8
        # EXIT NODE # CallStatement at 334.4; stackHeight = 8
      # EXIT NODE # Block at 333.43; stackHeight = 8
      # ENTER NODE # Assign at 333.38; stackHeight = 8
        # ENTER NODE # Plus at 333.39; stackHeight = 8
          # ENTER NODE # IdentifierExp at 333.38; stackHeight = 8
           lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 333.38; stackHeight = 8
           subu $sp,$sp,8 # IdentifierExp at 333.38; stackHeight = 8
           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 333.38; stackHeight = 16
           sw $t0,($sp)#**"" # IdentifierExp at 333.38; stackHeight = 16
          # EXIT NODE # IdentifierExp at 333.38; stackHeight = 16
          # ENTER NODE # IntegerLiteral at 333.39; stackHeight = 16
           subu $sp,$sp,8 # IntegerLiteral at 333.39; stackHeight = 16
           sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 333.39; stackHeight = 24
           li $t0,1 # IntegerLiteral at 333.39; stackHeight = 24
           sw $t0,($sp) # IntegerLiteral at 333.39; stackHeight = 24
          # EXIT NODE # IntegerLiteral at 333.39; stackHeight = 24
         lw $t0,($sp) # Plus at 333.39; stackHeight = 24
         lw $t1,8($sp) # Plus at 333.39; stackHeight = 24
         addu $t0,$t0,$t1 # Plus at 333.39; stackHeight = 24
         addu $sp,$sp,8 # Plus at 333.39; stackHeight = 24
         sw $t0,($sp)#**"" # Plus at 333.39; stackHeight = 24
        # EXIT NODE # Plus at 333.39; stackHeight = 16
       lw $t0,($sp) # Assign at 333.38; stackHeight = 16
       sw $t0,8($sp) # Assign at 333.38; stackHeight = 16
       addu $sp,$sp,8 # Assign at 333.38; stackHeight = 16
      # EXIT NODE # Assign at 333.38; stackHeight = 8
    # EXIT NODE # Block at 333.3; stackHeight = 8
  while_enter_1999: # While at 333.3; stackHeight = 8
    # ENTER NODE # LessThan at 333.21; stackHeight = 8
      # ENTER NODE # IdentifierExp at 333.19; stackHeight = 8
       lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 333.19; stackHeight = 8
       subu $sp,$sp,8 # IdentifierExp at 333.19; stackHeight = 8
       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 333.19; stackHeight = 16
       sw $t0,($sp)#**"" # IdentifierExp at 333.19; stackHeight = 16
      # EXIT NODE # IdentifierExp at 333.19; stackHeight = 16
      # ENTER NODE # ArrayLength at 333.29; stackHeight = 16
        # ENTER NODE # IdentifierExp at 333.23; stackHeight = 16
         lw $t0,4($s2) # inst-var # IdentifierExp at 333.23; stackHeight = 16
         subu $sp,$sp,4 # IdentifierExp at 333.23; stackHeight = 16
         sw $t0,($sp)#**"" # IdentifierExp at 333.23; stackHeight = 20
        # EXIT NODE # IdentifierExp at 333.23; stackHeight = 20
       lw $t0,($sp) # ArrayLength at 333.29; stackHeight = 20
       beq $t0,$zero,nullPtrException # ArrayLength at 333.29; stackHeight = 20
       lw $t0,-4($t0) # ArrayLength at 333.29; stackHeight = 20
       sw $s5,($sp)#**"GC tag" # ArrayLength at 333.29; stackHeight = 20
       subu $sp,4 # ArrayLength at 333.29; stackHeight = 20
       sw $t0,($sp)#**"" # ArrayLength at 333.29; stackHeight = 20
      # EXIT NODE # ArrayLength at 333.29; stackHeight = 24
     lw $t0,($sp) # LessThan at 333.21; stackHeight = 24
     lw $t1,8($sp) # LessThan at 333.21; stackHeight = 24
     slt $t0,$t1,$t0 # LessThan at 333.21; stackHeight = 24
     addu $sp,$sp,12 # LessThan at 333.21; stackHeight = 24
     sw $t0,($sp)#**"" # LessThan at 333.21; stackHeight = 12
    # EXIT NODE # LessThan at 333.21; stackHeight = 12
   lw $t0,($sp) # While at 333.3; stackHeight = 12
   addu $sp,$sp,4 # While at 333.3; stackHeight = 12
  bne $t0,$zero,while_top_1999 # While at 333.3; stackHeight = 8
  break_target_1999: # While at 333.3; stackHeight = 8
  # EXIT NODE # While at 333.3; stackHeight = 8
 addu $sp,8 # Block at 333.3; stackHeight = 8
# EXIT NODE # Block at 333.3; stackHeight = 0
 # stack height is 0 # MethodDeclVoid at 329.14; stackHeight = 0
 lw $ra,4($sp) # MethodDeclVoid at 329.14; stackHeight = 0
 lw $s2,0($sp) # MethodDeclVoid at 329.14; stackHeight = 0
 addu $sp,$sp,8 # MethodDeclVoid at 329.14; stackHeight = 0
jr $ra # MethodDeclVoid at 329.14; stackHeight = -8
# EXIT NODE # MethodDeclVoid at 329.14; stackHeight = -8
  # ENTER NODE # MethodDeclNonVoid at 338.16; stackHeight = -8
  .globl fcn_2025_helpRem # MethodDeclNonVoid at 338.16; stackHeight = -8
  fcn_2025_helpRem: # MethodDeclNonVoid at 338.16; stackHeight = -8
   subu $sp,$sp,4 # MethodDeclNonVoid at 338.16; stackHeight = -8
   sw $s2,($sp) #**"old this-ptr" # MethodDeclNonVoid at 338.16; stackHeight = -8
   lw $s2,12($sp) #**"this-ptr" # MethodDeclNonVoid at 338.16; stackHeight = -8
   sw $ra,12($sp) #**"RA:helpRem" # MethodDeclNonVoid at 338.16; stackHeight = -8
    # ENTER NODE # LocalVarDecl at 339.10; stackHeight = 0
      # ENTER NODE # StringLiteral at 339.19; stackHeight = 0
       subu $sp,$sp,4 # StringLiteral at 339.19; stackHeight = 0
       la $t0,strLit_843 # StringLiteral at 339.19; stackHeight = 4
       sw $t0,($sp)#**"strLit:**DIV-BY=ZERO**" # StringLiteral at 339.19; stackHeight = 4
      # EXIT NODE # StringLiteral at 339.19; stackHeight = 4
    # EXIT NODE # LocalVarDecl at 339.10; stackHeight = 4
    # ENTER NODE # If at 340.3; stackHeight = 4
      # ENTER NODE # Not at 340.7; stackHeight = 4
        # ENTER NODE # Call at 340.10; stackHeight = 4
          # ENTER NODE # IdentifierExp at 340.8; stackHeight = 4
           lw $t0,8($sp) # local: stackHt=4,var-offset=4 # IdentifierExp at 340.8; stackHeight = 4
           subu $sp,$sp,4 # IdentifierExp at 340.8; stackHeight = 4
           sw $t0,($sp)#**"" # IdentifierExp at 340.8; stackHeight = 8
          # EXIT NODE # IdentifierExp at 340.8; stackHeight = 8
          # ENTER NODE # IdentifierExp at 340.17; stackHeight = 8
           lw $t0,8($s2) # inst-var # IdentifierExp at 340.17; stackHeight = 8
           subu $sp,$sp,4 # IdentifierExp at 340.17; stackHeight = 8
           sw $t0,($sp)#**"" # IdentifierExp at 340.17; stackHeight = 12
          # EXIT NODE # IdentifierExp at 340.17; stackHeight = 12
         lw $t0,4($sp) # Call at 340.10; stackHeight = 12
         beq $t0,$zero,nullPtrException # Call at 340.10; stackHeight = 12
         lw $t0,-12($t0) # Call at 340.10; stackHeight = 12
         lw $t0,4($t0) # Call at 340.10; stackHeight = 12
         jalr $t0 # equals # Call at 340.10; stackHeight = 12
        # EXIT NODE # Call at 340.10; stackHeight = 8
       lw $t0,($sp) # Not at 340.7; stackHeight = 8
       xor $t0,$t0,1 # Not at 340.7; stackHeight = 8
       sw $t0,($sp)#**"" # Not at 340.7; stackHeight = 8
      # EXIT NODE # Not at 340.7; stackHeight = 8
     lw $t0,($sp) # If at 340.3; stackHeight = 8
     addu $sp,$sp,4 # If at 340.3; stackHeight = 8
     beq $t0,$zero,if_else_2023 # If at 340.3; stackHeight = 4
      # ENTER NODE # Block at 340.24; stackHeight = 4
        # ENTER NODE # Assign at 341.11; stackHeight = 4
          # ENTER NODE # Call at 341.28; stackHeight = 4
            # ENTER NODE # Call at 341.15; stackHeight = 4
              # ENTER NODE # IdentifierExp at 341.13; stackHeight = 4
               lw $t0,12($sp) # local: stackHt=4,var-offset=8 # IdentifierExp at 341.13; stackHeight = 4
               subu $sp,$sp,4 # IdentifierExp at 341.13; stackHeight = 4
               sw $t0,($sp)#**"" # IdentifierExp at 341.13; stackHeight = 8
              # EXIT NODE # IdentifierExp at 341.13; stackHeight = 8
              # ENTER NODE # IdentifierExp at 341.25; stackHeight = 8
               lw $t0,12($sp) # local: stackHt=8,var-offset=4 # IdentifierExp at 341.25; stackHeight = 8
               subu $sp,$sp,4 # IdentifierExp at 341.25; stackHeight = 8
               sw $t0,($sp)#**"" # IdentifierExp at 341.25; stackHeight = 12
              # EXIT NODE # IdentifierExp at 341.25; stackHeight = 12
             lw $t0,4($sp) # Call at 341.15; stackHeight = 12
             beq $t0,$zero,nullPtrException # Call at 341.15; stackHeight = 12
             lw $t0,-12($t0) # Call at 341.15; stackHeight = 12
             lw $t0,72($t0) # Call at 341.15; stackHeight = 12
             jalr $t0 # remainder # Call at 341.15; stackHeight = 12
            # EXIT NODE # Call at 341.15; stackHeight = 8
           lw $t0,0($sp) # Call at 341.28; stackHeight = 8
           beq $t0,$zero,nullPtrException # Call at 341.28; stackHeight = 8
           lw $t0,-12($t0) # Call at 341.28; stackHeight = 8
           lw $t0,8($t0) # Call at 341.28; stackHeight = 8
           jalr $t0 # toString # Call at 341.28; stackHeight = 8
          # EXIT NODE # Call at 341.28; stackHeight = 8
         lw $t0,($sp) # Assign at 341.11; stackHeight = 8
         sw $t0,4($sp) # Assign at 341.11; stackHeight = 8
         addu $sp,$sp,4 # Assign at 341.11; stackHeight = 8
        # EXIT NODE # Assign at 341.11; stackHeight = 4
      # EXIT NODE # Block at 340.24; stackHeight = 4
    j if_done_2023 # If at 340.3; stackHeight = 4
    if_else_2023: # If at 340.3; stackHeight = 4
      # ENTER NODE # Block at 343.3; stackHeight = 4
      # EXIT NODE # Block at 343.3; stackHeight = 4
    if_done_2023: # If at 340.3; stackHeight = 4
    # EXIT NODE # If at 340.3; stackHeight = 4
    # ENTER NODE # IdentifierExp at 343.10; stackHeight = 4
     lw $t0,0($sp) # local: stackHt=4,var-offset=-4 # IdentifierExp at 343.10; stackHeight = 4
     subu $sp,$sp,4 # IdentifierExp at 343.10; stackHeight = 4
     sw $t0,($sp)#**"" # IdentifierExp at 343.10; stackHeight = 8
    # EXIT NODE # IdentifierExp at 343.10; stackHeight = 8
   lw $ra,20($sp) # MethodDeclNonVoid at 338.16; stackHeight = 8
   lw $s2,8($sp) # MethodDeclNonVoid at 338.16; stackHeight = 8
   lw $t0,($sp) # MethodDeclNonVoid at 338.16; stackHeight = 8
   sw $t0,20($sp)#**"(return-val)" # MethodDeclNonVoid at 338.16; stackHeight = 8
   addu $sp,$sp,20 # MethodDeclNonVoid at 338.16; stackHeight = 8
  jr $ra # MethodDeclNonVoid at 338.16; stackHeight = -12
  # EXIT NODE # MethodDeclNonVoid at 338.16; stackHeight = -12
  # ENTER NODE # MethodDeclVoid at 346.14; stackHeight = -12
  .globl fcn_2180_remainder # MethodDeclVoid at 346.14; stackHeight = -12
  fcn_2180_remainder: # MethodDeclVoid at 346.14; stackHeight = -12
   subu $sp,$sp,4 # MethodDeclVoid at 346.14; stackHeight = -12
   sw $s2,($sp) #**"old this-ptr" # MethodDeclVoid at 346.14; stackHeight = -12
   lw $s2,4($sp) #**"this-ptr" # MethodDeclVoid at 346.14; stackHeight = -12
   sw $ra,4($sp) #**"RA:remainder" # MethodDeclVoid at 346.14; stackHeight = -12
    # ENTER NODE # Block at 347.3; stackHeight = 0
      # ENTER NODE # LocalVarDecl at 347.12; stackHeight = 0
        # ENTER NODE # IntegerLiteral at 347.16; stackHeight = 0
         subu $sp,$sp,8 # IntegerLiteral at 347.16; stackHeight = 0
         sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 347.16; stackHeight = 8
         li $t0,0 # IntegerLiteral at 347.16; stackHeight = 8
         sw $t0,($sp) # IntegerLiteral at 347.16; stackHeight = 8
        # EXIT NODE # IntegerLiteral at 347.16; stackHeight = 8
      # EXIT NODE # LocalVarDecl at 347.12; stackHeight = 8
      # ENTER NODE # While at 347.3; stackHeight = 8
      j while_enter_2101 # While at 347.3; stackHeight = 8
      while_top_2101: # While at 347.3; stackHeight = 8
        # ENTER NODE # Block at 347.3; stackHeight = 8
          # ENTER NODE # Block at 347.41; stackHeight = 8
            # ENTER NODE # Block at 348.4; stackHeight = 8
              # ENTER NODE # LocalVarDecl at 348.13; stackHeight = 8
                # ENTER NODE # IntegerLiteral at 348.17; stackHeight = 8
                 subu $sp,$sp,8 # IntegerLiteral at 348.17; stackHeight = 8
                 sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 348.17; stackHeight = 16
                 li $t0,0 # IntegerLiteral at 348.17; stackHeight = 16
                 sw $t0,($sp) # IntegerLiteral at 348.17; stackHeight = 16
                # EXIT NODE # IntegerLiteral at 348.17; stackHeight = 16
              # EXIT NODE # LocalVarDecl at 348.13; stackHeight = 16
              # ENTER NODE # While at 348.4; stackHeight = 16
              j while_enter_2067 # While at 348.4; stackHeight = 16
              while_top_2067: # While at 348.4; stackHeight = 16
                # ENTER NODE # Block at 348.4; stackHeight = 16
                  # ENTER NODE # Block at 348.42; stackHeight = 16
                    # ENTER NODE # CallStatement at 349.5; stackHeight = 16
                      # ENTER NODE # Call at 349.5; stackHeight = 16
                        # ENTER NODE # This at 349.5; stackHeight = 16
                         subu $sp,$sp,4 # This at 349.5; stackHeight = 16
                         sw $s2,($sp)#**"" # This at 349.5; stackHeight = 20
                        # EXIT NODE # This at 349.5; stackHeight = 20
                        # ENTER NODE # Call at 349.40; stackHeight = 20
                          # ENTER NODE # Call at 349.14; stackHeight = 20
                            # ENTER NODE # This at 349.14; stackHeight = 20
                             subu $sp,$sp,4 # This at 349.14; stackHeight = 20
                             sw $s2,($sp)#**"" # This at 349.14; stackHeight = 24
                            # EXIT NODE # This at 349.14; stackHeight = 24
                            # ENTER NODE # IdentifierExp at 349.22; stackHeight = 24
                             lw $t0,0($s2) # inst-var # IdentifierExp at 349.22; stackHeight = 24
                             subu $sp,$sp,4 # IdentifierExp at 349.22; stackHeight = 24
                             sw $t0,($sp)#**"" # IdentifierExp at 349.22; stackHeight = 28
                            # EXIT NODE # IdentifierExp at 349.22; stackHeight = 28
                            # ENTER NODE # IdentifierExp at 349.27; stackHeight = 28
                             lw $t0,20($sp) # local: stackHt=28,var-offset=-8 # IdentifierExp at 349.27; stackHeight = 28
                             subu $sp,$sp,8 # IdentifierExp at 349.27; stackHeight = 28
                             sw $s5,4($sp)#**"GC tag" # IdentifierExp at 349.27; stackHeight = 36
                             sw $t0,($sp)#**"" # IdentifierExp at 349.27; stackHeight = 36
                            # EXIT NODE # IdentifierExp at 349.27; stackHeight = 36
                           lw $t0,8($sp) # ArrayLookup at 349.26; stackHeight = 36
                           beq $t0,$zero,nullPtrException # ArrayLookup at 349.26; stackHeight = 36
                           lw $t1,-4($t0) # ArrayLookup at 349.26; stackHeight = 36
                           lw $t2,($sp) # ArrayLookup at 349.26; stackHeight = 36
                           bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 349.26; stackHeight = 36
                           sll $t2,$t2,2 # ArrayLookup at 349.26; stackHeight = 36
                           addu $t2,$t2,$t0 # ArrayLookup at 349.26; stackHeight = 36
                           lw $t0,($t2) # ArrayLookup at 349.26; stackHeight = 36
                           sw $t0,8($sp)#**"" # ArrayLookup at 349.26; stackHeight = 36
                           addu $sp,$sp,8 # ArrayLookup at 349.26; stackHeight = 36
                          # EXIT NODE # ArrayLookup at 349.26; stackHeight = 28
                          # ENTER NODE # IdentifierExp at 349.31; stackHeight = 28
                           lw $t0,0($s2) # inst-var # IdentifierExp at 349.31; stackHeight = 28
                           subu $sp,$sp,4 # IdentifierExp at 349.31; stackHeight = 28
                           sw $t0,($sp)#**"" # IdentifierExp at 349.31; stackHeight = 32
                          # EXIT NODE # IdentifierExp at 349.31; stackHeight = 32
                          # ENTER NODE # IdentifierExp at 349.36; stackHeight = 32
                           lw $t0,16($sp) # local: stackHt=32,var-offset=-16 # IdentifierExp at 349.36; stackHeight = 32
                           subu $sp,$sp,8 # IdentifierExp at 349.36; stackHeight = 32
                           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 349.36; stackHeight = 40
                           sw $t0,($sp)#**"" # IdentifierExp at 349.36; stackHeight = 40
                          # EXIT NODE # IdentifierExp at 349.36; stackHeight = 40
                         lw $t0,8($sp) # ArrayLookup at 349.35; stackHeight = 40
                         beq $t0,$zero,nullPtrException # ArrayLookup at 349.35; stackHeight = 40
                         lw $t1,-4($t0) # ArrayLookup at 349.35; stackHeight = 40
                         lw $t2,($sp) # ArrayLookup at 349.35; stackHeight = 40
                         bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 349.35; stackHeight = 40
                         sll $t2,$t2,2 # ArrayLookup at 349.35; stackHeight = 40
                         addu $t2,$t2,$t0 # ArrayLookup at 349.35; stackHeight = 40
                         lw $t0,($t2) # ArrayLookup at 349.35; stackHeight = 40
                         sw $t0,8($sp)#**"" # ArrayLookup at 349.35; stackHeight = 40
                         addu $sp,$sp,8 # ArrayLookup at 349.35; stackHeight = 40
                        # EXIT NODE # ArrayLookup at 349.35; stackHeight = 32
                       lw $t0,8($sp) # Call at 349.14; stackHeight = 32
                       beq $t0,$zero,nullPtrException # Call at 349.14; stackHeight = 32
                       lw $t0,-12($t0) # Call at 349.14; stackHeight = 32
                       lw $t0,116($t0) # Call at 349.14; stackHeight = 32
                       jalr $t0 # helpRem # Call at 349.14; stackHeight = 32
                      # EXIT NODE # Call at 349.14; stackHeight = 24
                      # ENTER NODE # StringLiteral at 349.47; stackHeight = 24
                       subu $sp,$sp,4 # StringLiteral at 349.47; stackHeight = 24
                       la $t0,strLit_486 # StringLiteral at 349.47; stackHeight = 28
                       sw $t0,($sp)#**"strLit:\?" # StringLiteral at 349.47; stackHeight = 28
                      # EXIT NODE # StringLiteral at 349.47; stackHeight = 28
                     lw $t0,4($sp) # Call at 349.40; stackHeight = 28
                     beq $t0,$zero,nullPtrException # Call at 349.40; stackHeight = 28
                     lw $t0,-12($t0) # Call at 349.40; stackHeight = 28
                     lw $t0,12($t0) # Call at 349.40; stackHeight = 28
                     jalr $t0 # concat # Call at 349.40; stackHeight = 28
                    # EXIT NODE # Call at 349.40; stackHeight = 24
                   lw $t0,4($sp) # Call at 349.5; stackHeight = 24
                   beq $t0,$zero,nullPtrException # Call at 349.5; stackHeight = 24
                   lw $t0,-12($t0) # Call at 349.5; stackHeight = 24
                   lw $t0,24($t0) # Call at 349.5; stackHeight = 24
                   jalr $t0 # printStr # Call at 349.5; stackHeight = 24
                  # EXIT NODE # Call at 349.5; stackHeight = 16
                # EXIT NODE # CallStatement at 349.5; stackHeight = 16
              # EXIT NODE # Block at 348.42; stackHeight = 16
              # ENTER NODE # Assign at 348.37; stackHeight = 16
                # ENTER NODE # Plus at 348.38; stackHeight = 16
                  # ENTER NODE # IdentifierExp at 348.37; stackHeight = 16
                   lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 348.37; stackHeight = 16
                   subu $sp,$sp,8 # IdentifierExp at 348.37; stackHeight = 16
                   sw $s5,4($sp)#**"GC tag" # IdentifierExp at 348.37; stackHeight = 24
                   sw $t0,($sp)#**"" # IdentifierExp at 348.37; stackHeight = 24
                  # EXIT NODE # IdentifierExp at 348.37; stackHeight = 24
                  # ENTER NODE # IntegerLiteral at 348.38; stackHeight = 24
                   subu $sp,$sp,8 # IntegerLiteral at 348.38; stackHeight = 24
                   sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 348.38; stackHeight = 32
                   li $t0,1 # IntegerLiteral at 348.38; stackHeight = 32
                   sw $t0,($sp) # IntegerLiteral at 348.38; stackHeight = 32
                  # EXIT NODE # IntegerLiteral at 348.38; stackHeight = 32
                 lw $t0,($sp) # Plus at 348.38; stackHeight = 32
                 lw $t1,8($sp) # Plus at 348.38; stackHeight = 32
                 addu $t0,$t0,$t1 # Plus at 348.38; stackHeight = 32
                 addu $sp,$sp,8 # Plus at 348.38; stackHeight = 32
                 sw $t0,($sp)#**"" # Plus at 348.38; stackHeight = 32
                # EXIT NODE # Plus at 348.38; stackHeight = 24
               lw $t0,($sp) # Assign at 348.37; stackHeight = 24
               sw $t0,8($sp) # Assign at 348.37; stackHeight = 24
               addu $sp,$sp,8 # Assign at 348.37; stackHeight = 24
              # EXIT NODE # Assign at 348.37; stackHeight = 16
            # EXIT NODE # Block at 348.4; stackHeight = 16
          while_enter_2067: # While at 348.4; stackHeight = 16
            # ENTER NODE # LessThan at 348.22; stackHeight = 16
              # ENTER NODE # IdentifierExp at 348.20; stackHeight = 16
               lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 348.20; stackHeight = 16
               subu $sp,$sp,8 # IdentifierExp at 348.20; stackHeight = 16
               sw $s5,4($sp)#**"GC tag" # IdentifierExp at 348.20; stackHeight = 24
               sw $t0,($sp)#**"" # IdentifierExp at 348.20; stackHeight = 24
              # EXIT NODE # IdentifierExp at 348.20; stackHeight = 24
              # ENTER NODE # ArrayLength at 348.28; stackHeight = 24
                # ENTER NODE # IdentifierExp at 348.24; stackHeight = 24
                 lw $t0,0($s2) # inst-var # IdentifierExp at 348.24; stackHeight = 24
                 subu $sp,$sp,4 # IdentifierExp at 348.24; stackHeight = 24
                 sw $t0,($sp)#**"" # IdentifierExp at 348.24; stackHeight = 28
                # EXIT NODE # IdentifierExp at 348.24; stackHeight = 28
               lw $t0,($sp) # ArrayLength at 348.28; stackHeight = 28
               beq $t0,$zero,nullPtrException # ArrayLength at 348.28; stackHeight = 28
               lw $t0,-4($t0) # ArrayLength at 348.28; stackHeight = 28
               sw $s5,($sp)#**"GC tag" # ArrayLength at 348.28; stackHeight = 28
               subu $sp,4 # ArrayLength at 348.28; stackHeight = 28
               sw $t0,($sp)#**"" # ArrayLength at 348.28; stackHeight = 28
              # EXIT NODE # ArrayLength at 348.28; stackHeight = 32
             lw $t0,($sp) # LessThan at 348.22; stackHeight = 32
             lw $t1,8($sp) # LessThan at 348.22; stackHeight = 32
             slt $t0,$t1,$t0 # LessThan at 348.22; stackHeight = 32
             addu $sp,$sp,12 # LessThan at 348.22; stackHeight = 32
             sw $t0,($sp)#**"" # LessThan at 348.22; stackHeight = 20
            # EXIT NODE # LessThan at 348.22; stackHeight = 20
           lw $t0,($sp) # While at 348.4; stackHeight = 20
           addu $sp,$sp,4 # While at 348.4; stackHeight = 20
          bne $t0,$zero,while_top_2067 # While at 348.4; stackHeight = 16
          break_target_2067: # While at 348.4; stackHeight = 16
          # EXIT NODE # While at 348.4; stackHeight = 16
         addu $sp,8 # Block at 348.4; stackHeight = 16
        # EXIT NODE # Block at 348.4; stackHeight = 8
        # ENTER NODE # Block at 351.4; stackHeight = 8
          # ENTER NODE # LocalVarDecl at 351.13; stackHeight = 8
            # ENTER NODE # IntegerLiteral at 351.17; stackHeight = 8
             subu $sp,$sp,8 # IntegerLiteral at 351.17; stackHeight = 8
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 351.17; stackHeight = 16
             li $t0,0 # IntegerLiteral at 351.17; stackHeight = 16
             sw $t0,($sp) # IntegerLiteral at 351.17; stackHeight = 16
            # EXIT NODE # IntegerLiteral at 351.17; stackHeight = 16
          # EXIT NODE # LocalVarDecl at 351.13; stackHeight = 16
          # ENTER NODE # While at 351.4; stackHeight = 16
          j while_enter_2097 # While at 351.4; stackHeight = 16
          while_top_2097: # While at 351.4; stackHeight = 16
            # ENTER NODE # Block at 351.4; stackHeight = 16
              # ENTER NODE # Block at 351.44; stackHeight = 16
                # ENTER NODE # CallStatement at 352.5; stackHeight = 16
                  # ENTER NODE # Call at 352.5; stackHeight = 16
                    # ENTER NODE # This at 352.5; stackHeight = 16
                     subu $sp,$sp,4 # This at 352.5; stackHeight = 16
                     sw $s2,($sp)#**"" # This at 352.5; stackHeight = 20
                    # EXIT NODE # This at 352.5; stackHeight = 20
                    # ENTER NODE # Call at 352.42; stackHeight = 20
                      # ENTER NODE # Call at 352.14; stackHeight = 20
                        # ENTER NODE # This at 352.14; stackHeight = 20
                         subu $sp,$sp,4 # This at 352.14; stackHeight = 20
                         sw $s2,($sp)#**"" # This at 352.14; stackHeight = 24
                        # EXIT NODE # This at 352.14; stackHeight = 24
                        # ENTER NODE # IdentifierExp at 352.22; stackHeight = 24
                         lw $t0,0($s2) # inst-var # IdentifierExp at 352.22; stackHeight = 24
                         subu $sp,$sp,4 # IdentifierExp at 352.22; stackHeight = 24
                         sw $t0,($sp)#**"" # IdentifierExp at 352.22; stackHeight = 28
                        # EXIT NODE # IdentifierExp at 352.22; stackHeight = 28
                        # ENTER NODE # IdentifierExp at 352.27; stackHeight = 28
                         lw $t0,20($sp) # local: stackHt=28,var-offset=-8 # IdentifierExp at 352.27; stackHeight = 28
                         subu $sp,$sp,8 # IdentifierExp at 352.27; stackHeight = 28
                         sw $s5,4($sp)#**"GC tag" # IdentifierExp at 352.27; stackHeight = 36
                         sw $t0,($sp)#**"" # IdentifierExp at 352.27; stackHeight = 36
                        # EXIT NODE # IdentifierExp at 352.27; stackHeight = 36
                       lw $t0,8($sp) # ArrayLookup at 352.26; stackHeight = 36
                       beq $t0,$zero,nullPtrException # ArrayLookup at 352.26; stackHeight = 36
                       lw $t1,-4($t0) # ArrayLookup at 352.26; stackHeight = 36
                       lw $t2,($sp) # ArrayLookup at 352.26; stackHeight = 36
                       bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 352.26; stackHeight = 36
                       sll $t2,$t2,2 # ArrayLookup at 352.26; stackHeight = 36
                       addu $t2,$t2,$t0 # ArrayLookup at 352.26; stackHeight = 36
                       lw $t0,($t2) # ArrayLookup at 352.26; stackHeight = 36
                       sw $t0,8($sp)#**"" # ArrayLookup at 352.26; stackHeight = 36
                       addu $sp,$sp,8 # ArrayLookup at 352.26; stackHeight = 36
                      # EXIT NODE # ArrayLookup at 352.26; stackHeight = 28
                      # ENTER NODE # IdentifierExp at 352.31; stackHeight = 28
                       lw $t0,4($s2) # inst-var # IdentifierExp at 352.31; stackHeight = 28
                       subu $sp,$sp,4 # IdentifierExp at 352.31; stackHeight = 28
                       sw $t0,($sp)#**"" # IdentifierExp at 352.31; stackHeight = 32
                      # EXIT NODE # IdentifierExp at 352.31; stackHeight = 32
                      # ENTER NODE # IdentifierExp at 352.38; stackHeight = 32
                       lw $t0,16($sp) # local: stackHt=32,var-offset=-16 # IdentifierExp at 352.38; stackHeight = 32
                       subu $sp,$sp,8 # IdentifierExp at 352.38; stackHeight = 32
                       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 352.38; stackHeight = 40
                       sw $t0,($sp)#**"" # IdentifierExp at 352.38; stackHeight = 40
                      # EXIT NODE # IdentifierExp at 352.38; stackHeight = 40
                     lw $t0,8($sp) # ArrayLookup at 352.37; stackHeight = 40
                     beq $t0,$zero,nullPtrException # ArrayLookup at 352.37; stackHeight = 40
                     lw $t1,-4($t0) # ArrayLookup at 352.37; stackHeight = 40
                     lw $t2,($sp) # ArrayLookup at 352.37; stackHeight = 40
                     bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 352.37; stackHeight = 40
                     sll $t2,$t2,2 # ArrayLookup at 352.37; stackHeight = 40
                     addu $t2,$t2,$t0 # ArrayLookup at 352.37; stackHeight = 40
                     lw $t0,($t2) # ArrayLookup at 352.37; stackHeight = 40
                     sw $t0,8($sp)#**"" # ArrayLookup at 352.37; stackHeight = 40
                     addu $sp,$sp,8 # ArrayLookup at 352.37; stackHeight = 40
                    # EXIT NODE # ArrayLookup at 352.37; stackHeight = 32
                   lw $t0,8($sp) # Call at 352.14; stackHeight = 32
                   beq $t0,$zero,nullPtrException # Call at 352.14; stackHeight = 32
                   lw $t0,-12($t0) # Call at 352.14; stackHeight = 32
                   lw $t0,116($t0) # Call at 352.14; stackHeight = 32
                   jalr $t0 # helpRem # Call at 352.14; stackHeight = 32
                  # EXIT NODE # Call at 352.14; stackHeight = 24
                  # ENTER NODE # StringLiteral at 352.49; stackHeight = 24
                   subu $sp,$sp,4 # StringLiteral at 352.49; stackHeight = 24
                   la $t0,strLit_486 # StringLiteral at 352.49; stackHeight = 28
                   sw $t0,($sp)#**"strLit:\?" # StringLiteral at 352.49; stackHeight = 28
                  # EXIT NODE # StringLiteral at 352.49; stackHeight = 28
                 lw $t0,4($sp) # Call at 352.42; stackHeight = 28
                 beq $t0,$zero,nullPtrException # Call at 352.42; stackHeight = 28
                 lw $t0,-12($t0) # Call at 352.42; stackHeight = 28
                 lw $t0,12($t0) # Call at 352.42; stackHeight = 28
                 jalr $t0 # concat # Call at 352.42; stackHeight = 28
                # EXIT NODE # Call at 352.42; stackHeight = 24
               lw $t0,4($sp) # Call at 352.5; stackHeight = 24
               beq $t0,$zero,nullPtrException # Call at 352.5; stackHeight = 24
               lw $t0,-12($t0) # Call at 352.5; stackHeight = 24
               lw $t0,24($t0) # Call at 352.5; stackHeight = 24
               jalr $t0 # printStr # Call at 352.5; stackHeight = 24
              # EXIT NODE # Call at 352.5; stackHeight = 16
            # EXIT NODE # CallStatement at 352.5; stackHeight = 16
          # EXIT NODE # Block at 351.44; stackHeight = 16
          # ENTER NODE # Assign at 351.39; stackHeight = 16
            # ENTER NODE # Plus at 351.40; stackHeight = 16
              # ENTER NODE # IdentifierExp at 351.39; stackHeight = 16
               lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 351.39; stackHeight = 16
               subu $sp,$sp,8 # IdentifierExp at 351.39; stackHeight = 16
               sw $s5,4($sp)#**"GC tag" # IdentifierExp at 351.39; stackHeight = 24
               sw $t0,($sp)#**"" # IdentifierExp at 351.39; stackHeight = 24
              # EXIT NODE # IdentifierExp at 351.39; stackHeight = 24
              # ENTER NODE # IntegerLiteral at 351.40; stackHeight = 24
               subu $sp,$sp,8 # IntegerLiteral at 351.40; stackHeight = 24
               sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 351.40; stackHeight = 32
               li $t0,1 # IntegerLiteral at 351.40; stackHeight = 32
               sw $t0,($sp) # IntegerLiteral at 351.40; stackHeight = 32
              # EXIT NODE # IntegerLiteral at 351.40; stackHeight = 32
             lw $t0,($sp) # Plus at 351.40; stackHeight = 32
             lw $t1,8($sp) # Plus at 351.40; stackHeight = 32
             addu $t0,$t0,$t1 # Plus at 351.40; stackHeight = 32
             addu $sp,$sp,8 # Plus at 351.40; stackHeight = 32
             sw $t0,($sp)#**"" # Plus at 351.40; stackHeight = 32
            # EXIT NODE # Plus at 351.40; stackHeight = 24
           lw $t0,($sp) # Assign at 351.39; stackHeight = 24
           sw $t0,8($sp) # Assign at 351.39; stackHeight = 24
           addu $sp,$sp,8 # Assign at 351.39; stackHeight = 24
          # EXIT NODE # Assign at 351.39; stackHeight = 16
        # EXIT NODE # Block at 351.4; stackHeight = 16
      while_enter_2097: # While at 351.4; stackHeight = 16
        # ENTER NODE # LessThan at 351.22; stackHeight = 16
          # ENTER NODE # IdentifierExp at 351.20; stackHeight = 16
           lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 351.20; stackHeight = 16
           subu $sp,$sp,8 # IdentifierExp at 351.20; stackHeight = 16
           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 351.20; stackHeight = 24
           sw $t0,($sp)#**"" # IdentifierExp at 351.20; stackHeight = 24
          # EXIT NODE # IdentifierExp at 351.20; stackHeight = 24
          # ENTER NODE # ArrayLength at 351.30; stackHeight = 24
            # ENTER NODE # IdentifierExp at 351.24; stackHeight = 24
             lw $t0,4($s2) # inst-var # IdentifierExp at 351.24; stackHeight = 24
             subu $sp,$sp,4 # IdentifierExp at 351.24; stackHeight = 24
             sw $t0,($sp)#**"" # IdentifierExp at 351.24; stackHeight = 28
            # EXIT NODE # IdentifierExp at 351.24; stackHeight = 28
           lw $t0,($sp) # ArrayLength at 351.30; stackHeight = 28
           beq $t0,$zero,nullPtrException # ArrayLength at 351.30; stackHeight = 28
           lw $t0,-4($t0) # ArrayLength at 351.30; stackHeight = 28
           sw $s5,($sp)#**"GC tag" # ArrayLength at 351.30; stackHeight = 28
           subu $sp,4 # ArrayLength at 351.30; stackHeight = 28
           sw $t0,($sp)#**"" # ArrayLength at 351.30; stackHeight = 28
          # EXIT NODE # ArrayLength at 351.30; stackHeight = 32
         lw $t0,($sp) # LessThan at 351.22; stackHeight = 32
         lw $t1,8($sp) # LessThan at 351.22; stackHeight = 32
         slt $t0,$t1,$t0 # LessThan at 351.22; stackHeight = 32
         addu $sp,$sp,12 # LessThan at 351.22; stackHeight = 32
         sw $t0,($sp)#**"" # LessThan at 351.22; stackHeight = 20
        # EXIT NODE # LessThan at 351.22; stackHeight = 20
       lw $t0,($sp) # While at 351.4; stackHeight = 20
       addu $sp,$sp,4 # While at 351.4; stackHeight = 20
      bne $t0,$zero,while_top_2097 # While at 351.4; stackHeight = 16
      break_target_2097: # While at 351.4; stackHeight = 16
      # EXIT NODE # While at 351.4; stackHeight = 16
     addu $sp,8 # Block at 351.4; stackHeight = 16
    # EXIT NODE # Block at 351.4; stackHeight = 8
  # EXIT NODE # Block at 347.41; stackHeight = 8
  # ENTER NODE # Assign at 347.36; stackHeight = 8
    # ENTER NODE # Plus at 347.37; stackHeight = 8
      # ENTER NODE # IdentifierExp at 347.36; stackHeight = 8
       lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 347.36; stackHeight = 8
       subu $sp,$sp,8 # IdentifierExp at 347.36; stackHeight = 8
       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 347.36; stackHeight = 16
       sw $t0,($sp)#**"" # IdentifierExp at 347.36; stackHeight = 16
      # EXIT NODE # IdentifierExp at 347.36; stackHeight = 16
      # ENTER NODE # IntegerLiteral at 347.37; stackHeight = 16
       subu $sp,$sp,8 # IntegerLiteral at 347.37; stackHeight = 16
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 347.37; stackHeight = 24
       li $t0,1 # IntegerLiteral at 347.37; stackHeight = 24
       sw $t0,($sp) # IntegerLiteral at 347.37; stackHeight = 24
      # EXIT NODE # IntegerLiteral at 347.37; stackHeight = 24
     lw $t0,($sp) # Plus at 347.37; stackHeight = 24
     lw $t1,8($sp) # Plus at 347.37; stackHeight = 24
     addu $t0,$t0,$t1 # Plus at 347.37; stackHeight = 24
     addu $sp,$sp,8 # Plus at 347.37; stackHeight = 24
     sw $t0,($sp)#**"" # Plus at 347.37; stackHeight = 24
    # EXIT NODE # Plus at 347.37; stackHeight = 16
   lw $t0,($sp) # Assign at 347.36; stackHeight = 16
   sw $t0,8($sp) # Assign at 347.36; stackHeight = 16
   addu $sp,$sp,8 # Assign at 347.36; stackHeight = 16
  # EXIT NODE # Assign at 347.36; stackHeight = 8
# EXIT NODE # Block at 347.3; stackHeight = 8
while_enter_2101: # While at 347.3; stackHeight = 8
  # ENTER NODE # LessThan at 347.21; stackHeight = 8
    # ENTER NODE # IdentifierExp at 347.19; stackHeight = 8
     lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 347.19; stackHeight = 8
     subu $sp,$sp,8 # IdentifierExp at 347.19; stackHeight = 8
     sw $s5,4($sp)#**"GC tag" # IdentifierExp at 347.19; stackHeight = 16
     sw $t0,($sp)#**"" # IdentifierExp at 347.19; stackHeight = 16
    # EXIT NODE # IdentifierExp at 347.19; stackHeight = 16
    # ENTER NODE # ArrayLength at 347.27; stackHeight = 16
      # ENTER NODE # IdentifierExp at 347.23; stackHeight = 16
       lw $t0,0($s2) # inst-var # IdentifierExp at 347.23; stackHeight = 16
       subu $sp,$sp,4 # IdentifierExp at 347.23; stackHeight = 16
       sw $t0,($sp)#**"" # IdentifierExp at 347.23; stackHeight = 20
      # EXIT NODE # IdentifierExp at 347.23; stackHeight = 20
     lw $t0,($sp) # ArrayLength at 347.27; stackHeight = 20
     beq $t0,$zero,nullPtrException # ArrayLength at 347.27; stackHeight = 20
     lw $t0,-4($t0) # ArrayLength at 347.27; stackHeight = 20
     sw $s5,($sp)#**"GC tag" # ArrayLength at 347.27; stackHeight = 20
     subu $sp,4 # ArrayLength at 347.27; stackHeight = 20
     sw $t0,($sp)#**"" # ArrayLength at 347.27; stackHeight = 20
    # EXIT NODE # ArrayLength at 347.27; stackHeight = 24
   lw $t0,($sp) # LessThan at 347.21; stackHeight = 24
   lw $t1,8($sp) # LessThan at 347.21; stackHeight = 24
   slt $t0,$t1,$t0 # LessThan at 347.21; stackHeight = 24
   addu $sp,$sp,12 # LessThan at 347.21; stackHeight = 24
   sw $t0,($sp)#**"" # LessThan at 347.21; stackHeight = 12
  # EXIT NODE # LessThan at 347.21; stackHeight = 12
 lw $t0,($sp) # While at 347.3; stackHeight = 12
 addu $sp,$sp,4 # While at 347.3; stackHeight = 12
bne $t0,$zero,while_top_2101 # While at 347.3; stackHeight = 8
break_target_2101: # While at 347.3; stackHeight = 8
# EXIT NODE # While at 347.3; stackHeight = 8
 addu $sp,8 # Block at 347.3; stackHeight = 8
# EXIT NODE # Block at 347.3; stackHeight = 0
  # ENTER NODE # Block at 355.3; stackHeight = 0
    # ENTER NODE # LocalVarDecl at 355.12; stackHeight = 0
      # ENTER NODE # IntegerLiteral at 355.16; stackHeight = 0
       subu $sp,$sp,8 # IntegerLiteral at 355.16; stackHeight = 0
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 355.16; stackHeight = 8
       li $t0,0 # IntegerLiteral at 355.16; stackHeight = 8
       sw $t0,($sp) # IntegerLiteral at 355.16; stackHeight = 8
      # EXIT NODE # IntegerLiteral at 355.16; stackHeight = 8
    # EXIT NODE # LocalVarDecl at 355.12; stackHeight = 8
    # ENTER NODE # While at 355.3; stackHeight = 8
    j while_enter_2178 # While at 355.3; stackHeight = 8
    while_top_2178: # While at 355.3; stackHeight = 8
      # ENTER NODE # Block at 355.3; stackHeight = 8
        # ENTER NODE # Block at 355.43; stackHeight = 8
          # ENTER NODE # Block at 356.4; stackHeight = 8
            # ENTER NODE # LocalVarDecl at 356.13; stackHeight = 8
              # ENTER NODE # IntegerLiteral at 356.17; stackHeight = 8
               subu $sp,$sp,8 # IntegerLiteral at 356.17; stackHeight = 8
               sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 356.17; stackHeight = 16
               li $t0,0 # IntegerLiteral at 356.17; stackHeight = 16
               sw $t0,($sp) # IntegerLiteral at 356.17; stackHeight = 16
              # EXIT NODE # IntegerLiteral at 356.17; stackHeight = 16
            # EXIT NODE # LocalVarDecl at 356.13; stackHeight = 16
            # ENTER NODE # While at 356.4; stackHeight = 16
            j while_enter_2144 # While at 356.4; stackHeight = 16
            while_top_2144: # While at 356.4; stackHeight = 16
              # ENTER NODE # Block at 356.4; stackHeight = 16
                # ENTER NODE # Block at 356.42; stackHeight = 16
                  # ENTER NODE # CallStatement at 357.5; stackHeight = 16
                    # ENTER NODE # Call at 357.5; stackHeight = 16
                      # ENTER NODE # This at 357.5; stackHeight = 16
                       subu $sp,$sp,4 # This at 357.5; stackHeight = 16
                       sw $s2,($sp)#**"" # This at 357.5; stackHeight = 20
                      # EXIT NODE # This at 357.5; stackHeight = 20
                      # ENTER NODE # Call at 357.42; stackHeight = 20
                        # ENTER NODE # Call at 357.14; stackHeight = 20
                          # ENTER NODE # This at 357.14; stackHeight = 20
                           subu $sp,$sp,4 # This at 357.14; stackHeight = 20
                           sw $s2,($sp)#**"" # This at 357.14; stackHeight = 24
                          # EXIT NODE # This at 357.14; stackHeight = 24
                          # ENTER NODE # IdentifierExp at 357.22; stackHeight = 24
                           lw $t0,4($s2) # inst-var # IdentifierExp at 357.22; stackHeight = 24
                           subu $sp,$sp,4 # IdentifierExp at 357.22; stackHeight = 24
                           sw $t0,($sp)#**"" # IdentifierExp at 357.22; stackHeight = 28
                          # EXIT NODE # IdentifierExp at 357.22; stackHeight = 28
                          # ENTER NODE # IdentifierExp at 357.29; stackHeight = 28
                           lw $t0,20($sp) # local: stackHt=28,var-offset=-8 # IdentifierExp at 357.29; stackHeight = 28
                           subu $sp,$sp,8 # IdentifierExp at 357.29; stackHeight = 28
                           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 357.29; stackHeight = 36
                           sw $t0,($sp)#**"" # IdentifierExp at 357.29; stackHeight = 36
                          # EXIT NODE # IdentifierExp at 357.29; stackHeight = 36
                         lw $t0,8($sp) # ArrayLookup at 357.28; stackHeight = 36
                         beq $t0,$zero,nullPtrException # ArrayLookup at 357.28; stackHeight = 36
                         lw $t1,-4($t0) # ArrayLookup at 357.28; stackHeight = 36
                         lw $t2,($sp) # ArrayLookup at 357.28; stackHeight = 36
                         bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 357.28; stackHeight = 36
                         sll $t2,$t2,2 # ArrayLookup at 357.28; stackHeight = 36
                         addu $t2,$t2,$t0 # ArrayLookup at 357.28; stackHeight = 36
                         lw $t0,($t2) # ArrayLookup at 357.28; stackHeight = 36
                         sw $t0,8($sp)#**"" # ArrayLookup at 357.28; stackHeight = 36
                         addu $sp,$sp,8 # ArrayLookup at 357.28; stackHeight = 36
                        # EXIT NODE # ArrayLookup at 357.28; stackHeight = 28
                        # ENTER NODE # IdentifierExp at 357.33; stackHeight = 28
                         lw $t0,0($s2) # inst-var # IdentifierExp at 357.33; stackHeight = 28
                         subu $sp,$sp,4 # IdentifierExp at 357.33; stackHeight = 28
                         sw $t0,($sp)#**"" # IdentifierExp at 357.33; stackHeight = 32
                        # EXIT NODE # IdentifierExp at 357.33; stackHeight = 32
                        # ENTER NODE # IdentifierExp at 357.38; stackHeight = 32
                         lw $t0,16($sp) # local: stackHt=32,var-offset=-16 # IdentifierExp at 357.38; stackHeight = 32
                         subu $sp,$sp,8 # IdentifierExp at 357.38; stackHeight = 32
                         sw $s5,4($sp)#**"GC tag" # IdentifierExp at 357.38; stackHeight = 40
                         sw $t0,($sp)#**"" # IdentifierExp at 357.38; stackHeight = 40
                        # EXIT NODE # IdentifierExp at 357.38; stackHeight = 40
                       lw $t0,8($sp) # ArrayLookup at 357.37; stackHeight = 40
                       beq $t0,$zero,nullPtrException # ArrayLookup at 357.37; stackHeight = 40
                       lw $t1,-4($t0) # ArrayLookup at 357.37; stackHeight = 40
                       lw $t2,($sp) # ArrayLookup at 357.37; stackHeight = 40
                       bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 357.37; stackHeight = 40
                       sll $t2,$t2,2 # ArrayLookup at 357.37; stackHeight = 40
                       addu $t2,$t2,$t0 # ArrayLookup at 357.37; stackHeight = 40
                       lw $t0,($t2) # ArrayLookup at 357.37; stackHeight = 40
                       sw $t0,8($sp)#**"" # ArrayLookup at 357.37; stackHeight = 40
                       addu $sp,$sp,8 # ArrayLookup at 357.37; stackHeight = 40
                      # EXIT NODE # ArrayLookup at 357.37; stackHeight = 32
                     lw $t0,8($sp) # Call at 357.14; stackHeight = 32
                     beq $t0,$zero,nullPtrException # Call at 357.14; stackHeight = 32
                     lw $t0,-12($t0) # Call at 357.14; stackHeight = 32
                     lw $t0,116($t0) # Call at 357.14; stackHeight = 32
                     jalr $t0 # helpRem # Call at 357.14; stackHeight = 32
                    # EXIT NODE # Call at 357.14; stackHeight = 24
                    # ENTER NODE # StringLiteral at 357.49; stackHeight = 24
                     subu $sp,$sp,4 # StringLiteral at 357.49; stackHeight = 24
                     la $t0,strLit_486 # StringLiteral at 357.49; stackHeight = 28
                     sw $t0,($sp)#**"strLit:\?" # StringLiteral at 357.49; stackHeight = 28
                    # EXIT NODE # StringLiteral at 357.49; stackHeight = 28
                   lw $t0,4($sp) # Call at 357.42; stackHeight = 28
                   beq $t0,$zero,nullPtrException # Call at 357.42; stackHeight = 28
                   lw $t0,-12($t0) # Call at 357.42; stackHeight = 28
                   lw $t0,12($t0) # Call at 357.42; stackHeight = 28
                   jalr $t0 # concat # Call at 357.42; stackHeight = 28
                  # EXIT NODE # Call at 357.42; stackHeight = 24
                 lw $t0,4($sp) # Call at 357.5; stackHeight = 24
                 beq $t0,$zero,nullPtrException # Call at 357.5; stackHeight = 24
                 lw $t0,-12($t0) # Call at 357.5; stackHeight = 24
                 lw $t0,24($t0) # Call at 357.5; stackHeight = 24
                 jalr $t0 # printStr # Call at 357.5; stackHeight = 24
                # EXIT NODE # Call at 357.5; stackHeight = 16
              # EXIT NODE # CallStatement at 357.5; stackHeight = 16
            # EXIT NODE # Block at 356.42; stackHeight = 16
            # ENTER NODE # Assign at 356.37; stackHeight = 16
              # ENTER NODE # Plus at 356.38; stackHeight = 16
                # ENTER NODE # IdentifierExp at 356.37; stackHeight = 16
                 lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 356.37; stackHeight = 16
                 subu $sp,$sp,8 # IdentifierExp at 356.37; stackHeight = 16
                 sw $s5,4($sp)#**"GC tag" # IdentifierExp at 356.37; stackHeight = 24
                 sw $t0,($sp)#**"" # IdentifierExp at 356.37; stackHeight = 24
                # EXIT NODE # IdentifierExp at 356.37; stackHeight = 24
                # ENTER NODE # IntegerLiteral at 356.38; stackHeight = 24
                 subu $sp,$sp,8 # IntegerLiteral at 356.38; stackHeight = 24
                 sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 356.38; stackHeight = 32
                 li $t0,1 # IntegerLiteral at 356.38; stackHeight = 32
                 sw $t0,($sp) # IntegerLiteral at 356.38; stackHeight = 32
                # EXIT NODE # IntegerLiteral at 356.38; stackHeight = 32
               lw $t0,($sp) # Plus at 356.38; stackHeight = 32
               lw $t1,8($sp) # Plus at 356.38; stackHeight = 32
               addu $t0,$t0,$t1 # Plus at 356.38; stackHeight = 32
               addu $sp,$sp,8 # Plus at 356.38; stackHeight = 32
               sw $t0,($sp)#**"" # Plus at 356.38; stackHeight = 32
              # EXIT NODE # Plus at 356.38; stackHeight = 24
             lw $t0,($sp) # Assign at 356.37; stackHeight = 24
             sw $t0,8($sp) # Assign at 356.37; stackHeight = 24
             addu $sp,$sp,8 # Assign at 356.37; stackHeight = 24
            # EXIT NODE # Assign at 356.37; stackHeight = 16
          # EXIT NODE # Block at 356.4; stackHeight = 16
        while_enter_2144: # While at 356.4; stackHeight = 16
          # ENTER NODE # LessThan at 356.22; stackHeight = 16
            # ENTER NODE # IdentifierExp at 356.20; stackHeight = 16
             lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 356.20; stackHeight = 16
             subu $sp,$sp,8 # IdentifierExp at 356.20; stackHeight = 16
             sw $s5,4($sp)#**"GC tag" # IdentifierExp at 356.20; stackHeight = 24
             sw $t0,($sp)#**"" # IdentifierExp at 356.20; stackHeight = 24
            # EXIT NODE # IdentifierExp at 356.20; stackHeight = 24
            # ENTER NODE # ArrayLength at 356.28; stackHeight = 24
              # ENTER NODE # IdentifierExp at 356.24; stackHeight = 24
               lw $t0,0($s2) # inst-var # IdentifierExp at 356.24; stackHeight = 24
               subu $sp,$sp,4 # IdentifierExp at 356.24; stackHeight = 24
               sw $t0,($sp)#**"" # IdentifierExp at 356.24; stackHeight = 28
              # EXIT NODE # IdentifierExp at 356.24; stackHeight = 28
             lw $t0,($sp) # ArrayLength at 356.28; stackHeight = 28
             beq $t0,$zero,nullPtrException # ArrayLength at 356.28; stackHeight = 28
             lw $t0,-4($t0) # ArrayLength at 356.28; stackHeight = 28
             sw $s5,($sp)#**"GC tag" # ArrayLength at 356.28; stackHeight = 28
             subu $sp,4 # ArrayLength at 356.28; stackHeight = 28
             sw $t0,($sp)#**"" # ArrayLength at 356.28; stackHeight = 28
            # EXIT NODE # ArrayLength at 356.28; stackHeight = 32
           lw $t0,($sp) # LessThan at 356.22; stackHeight = 32
           lw $t1,8($sp) # LessThan at 356.22; stackHeight = 32
           slt $t0,$t1,$t0 # LessThan at 356.22; stackHeight = 32
           addu $sp,$sp,12 # LessThan at 356.22; stackHeight = 32
           sw $t0,($sp)#**"" # LessThan at 356.22; stackHeight = 20
          # EXIT NODE # LessThan at 356.22; stackHeight = 20
         lw $t0,($sp) # While at 356.4; stackHeight = 20
         addu $sp,$sp,4 # While at 356.4; stackHeight = 20
        bne $t0,$zero,while_top_2144 # While at 356.4; stackHeight = 16
        break_target_2144: # While at 356.4; stackHeight = 16
        # EXIT NODE # While at 356.4; stackHeight = 16
       addu $sp,8 # Block at 356.4; stackHeight = 16
      # EXIT NODE # Block at 356.4; stackHeight = 8
      # ENTER NODE # Block at 359.4; stackHeight = 8
        # ENTER NODE # LocalVarDecl at 359.13; stackHeight = 8
          # ENTER NODE # IntegerLiteral at 359.17; stackHeight = 8
           subu $sp,$sp,8 # IntegerLiteral at 359.17; stackHeight = 8
           sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 359.17; stackHeight = 16
           li $t0,0 # IntegerLiteral at 359.17; stackHeight = 16
           sw $t0,($sp) # IntegerLiteral at 359.17; stackHeight = 16
          # EXIT NODE # IntegerLiteral at 359.17; stackHeight = 16
        # EXIT NODE # LocalVarDecl at 359.13; stackHeight = 16
        # ENTER NODE # While at 359.4; stackHeight = 16
        j while_enter_2174 # While at 359.4; stackHeight = 16
        while_top_2174: # While at 359.4; stackHeight = 16
          # ENTER NODE # Block at 359.4; stackHeight = 16
            # ENTER NODE # Block at 359.44; stackHeight = 16
              # ENTER NODE # CallStatement at 360.5; stackHeight = 16
                # ENTER NODE # Call at 360.5; stackHeight = 16
                  # ENTER NODE # This at 360.5; stackHeight = 16
                   subu $sp,$sp,4 # This at 360.5; stackHeight = 16
                   sw $s2,($sp)#**"" # This at 360.5; stackHeight = 20
                  # EXIT NODE # This at 360.5; stackHeight = 20
                  # ENTER NODE # Call at 360.44; stackHeight = 20
                    # ENTER NODE # Call at 360.14; stackHeight = 20
                      # ENTER NODE # This at 360.14; stackHeight = 20
                       subu $sp,$sp,4 # This at 360.14; stackHeight = 20
                       sw $s2,($sp)#**"" # This at 360.14; stackHeight = 24
                      # EXIT NODE # This at 360.14; stackHeight = 24
                      # ENTER NODE # IdentifierExp at 360.22; stackHeight = 24
                       lw $t0,4($s2) # inst-var # IdentifierExp at 360.22; stackHeight = 24
                       subu $sp,$sp,4 # IdentifierExp at 360.22; stackHeight = 24
                       sw $t0,($sp)#**"" # IdentifierExp at 360.22; stackHeight = 28
                      # EXIT NODE # IdentifierExp at 360.22; stackHeight = 28
                      # ENTER NODE # IdentifierExp at 360.29; stackHeight = 28
                       lw $t0,20($sp) # local: stackHt=28,var-offset=-8 # IdentifierExp at 360.29; stackHeight = 28
                       subu $sp,$sp,8 # IdentifierExp at 360.29; stackHeight = 28
                       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 360.29; stackHeight = 36
                       sw $t0,($sp)#**"" # IdentifierExp at 360.29; stackHeight = 36
                      # EXIT NODE # IdentifierExp at 360.29; stackHeight = 36
                     lw $t0,8($sp) # ArrayLookup at 360.28; stackHeight = 36
                     beq $t0,$zero,nullPtrException # ArrayLookup at 360.28; stackHeight = 36
                     lw $t1,-4($t0) # ArrayLookup at 360.28; stackHeight = 36
                     lw $t2,($sp) # ArrayLookup at 360.28; stackHeight = 36
                     bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 360.28; stackHeight = 36
                     sll $t2,$t2,2 # ArrayLookup at 360.28; stackHeight = 36
                     addu $t2,$t2,$t0 # ArrayLookup at 360.28; stackHeight = 36
                     lw $t0,($t2) # ArrayLookup at 360.28; stackHeight = 36
                     sw $t0,8($sp)#**"" # ArrayLookup at 360.28; stackHeight = 36
                     addu $sp,$sp,8 # ArrayLookup at 360.28; stackHeight = 36
                    # EXIT NODE # ArrayLookup at 360.28; stackHeight = 28
                    # ENTER NODE # IdentifierExp at 360.33; stackHeight = 28
                     lw $t0,4($s2) # inst-var # IdentifierExp at 360.33; stackHeight = 28
                     subu $sp,$sp,4 # IdentifierExp at 360.33; stackHeight = 28
                     sw $t0,($sp)#**"" # IdentifierExp at 360.33; stackHeight = 32
                    # EXIT NODE # IdentifierExp at 360.33; stackHeight = 32
                    # ENTER NODE # IdentifierExp at 360.40; stackHeight = 32
                     lw $t0,16($sp) # local: stackHt=32,var-offset=-16 # IdentifierExp at 360.40; stackHeight = 32
                     subu $sp,$sp,8 # IdentifierExp at 360.40; stackHeight = 32
                     sw $s5,4($sp)#**"GC tag" # IdentifierExp at 360.40; stackHeight = 40
                     sw $t0,($sp)#**"" # IdentifierExp at 360.40; stackHeight = 40
                    # EXIT NODE # IdentifierExp at 360.40; stackHeight = 40
                   lw $t0,8($sp) # ArrayLookup at 360.39; stackHeight = 40
                   beq $t0,$zero,nullPtrException # ArrayLookup at 360.39; stackHeight = 40
                   lw $t1,-4($t0) # ArrayLookup at 360.39; stackHeight = 40
                   lw $t2,($sp) # ArrayLookup at 360.39; stackHeight = 40
                   bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 360.39; stackHeight = 40
                   sll $t2,$t2,2 # ArrayLookup at 360.39; stackHeight = 40
                   addu $t2,$t2,$t0 # ArrayLookup at 360.39; stackHeight = 40
                   lw $t0,($t2) # ArrayLookup at 360.39; stackHeight = 40
                   sw $t0,8($sp)#**"" # ArrayLookup at 360.39; stackHeight = 40
                   addu $sp,$sp,8 # ArrayLookup at 360.39; stackHeight = 40
                  # EXIT NODE # ArrayLookup at 360.39; stackHeight = 32
                 lw $t0,8($sp) # Call at 360.14; stackHeight = 32
                 beq $t0,$zero,nullPtrException # Call at 360.14; stackHeight = 32
                 lw $t0,-12($t0) # Call at 360.14; stackHeight = 32
                 lw $t0,116($t0) # Call at 360.14; stackHeight = 32
                 jalr $t0 # helpRem # Call at 360.14; stackHeight = 32
                # EXIT NODE # Call at 360.14; stackHeight = 24
                # ENTER NODE # StringLiteral at 360.51; stackHeight = 24
                 subu $sp,$sp,4 # StringLiteral at 360.51; stackHeight = 24
                 la $t0,strLit_486 # StringLiteral at 360.51; stackHeight = 28
                 sw $t0,($sp)#**"strLit:\?" # StringLiteral at 360.51; stackHeight = 28
                # EXIT NODE # StringLiteral at 360.51; stackHeight = 28
               lw $t0,4($sp) # Call at 360.44; stackHeight = 28
               beq $t0,$zero,nullPtrException # Call at 360.44; stackHeight = 28
               lw $t0,-12($t0) # Call at 360.44; stackHeight = 28
               lw $t0,12($t0) # Call at 360.44; stackHeight = 28
               jalr $t0 # concat # Call at 360.44; stackHeight = 28
              # EXIT NODE # Call at 360.44; stackHeight = 24
             lw $t0,4($sp) # Call at 360.5; stackHeight = 24
             beq $t0,$zero,nullPtrException # Call at 360.5; stackHeight = 24
             lw $t0,-12($t0) # Call at 360.5; stackHeight = 24
             lw $t0,24($t0) # Call at 360.5; stackHeight = 24
             jalr $t0 # printStr # Call at 360.5; stackHeight = 24
            # EXIT NODE # Call at 360.5; stackHeight = 16
          # EXIT NODE # CallStatement at 360.5; stackHeight = 16
        # EXIT NODE # Block at 359.44; stackHeight = 16
        # ENTER NODE # Assign at 359.39; stackHeight = 16
          # ENTER NODE # Plus at 359.40; stackHeight = 16
            # ENTER NODE # IdentifierExp at 359.39; stackHeight = 16
             lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 359.39; stackHeight = 16
             subu $sp,$sp,8 # IdentifierExp at 359.39; stackHeight = 16
             sw $s5,4($sp)#**"GC tag" # IdentifierExp at 359.39; stackHeight = 24
             sw $t0,($sp)#**"" # IdentifierExp at 359.39; stackHeight = 24
            # EXIT NODE # IdentifierExp at 359.39; stackHeight = 24
            # ENTER NODE # IntegerLiteral at 359.40; stackHeight = 24
             subu $sp,$sp,8 # IntegerLiteral at 359.40; stackHeight = 24
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 359.40; stackHeight = 32
             li $t0,1 # IntegerLiteral at 359.40; stackHeight = 32
             sw $t0,($sp) # IntegerLiteral at 359.40; stackHeight = 32
            # EXIT NODE # IntegerLiteral at 359.40; stackHeight = 32
           lw $t0,($sp) # Plus at 359.40; stackHeight = 32
           lw $t1,8($sp) # Plus at 359.40; stackHeight = 32
           addu $t0,$t0,$t1 # Plus at 359.40; stackHeight = 32
           addu $sp,$sp,8 # Plus at 359.40; stackHeight = 32
           sw $t0,($sp)#**"" # Plus at 359.40; stackHeight = 32
          # EXIT NODE # Plus at 359.40; stackHeight = 24
         lw $t0,($sp) # Assign at 359.39; stackHeight = 24
         sw $t0,8($sp) # Assign at 359.39; stackHeight = 24
         addu $sp,$sp,8 # Assign at 359.39; stackHeight = 24
        # EXIT NODE # Assign at 359.39; stackHeight = 16
      # EXIT NODE # Block at 359.4; stackHeight = 16
    while_enter_2174: # While at 359.4; stackHeight = 16
      # ENTER NODE # LessThan at 359.22; stackHeight = 16
        # ENTER NODE # IdentifierExp at 359.20; stackHeight = 16
         lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 359.20; stackHeight = 16
         subu $sp,$sp,8 # IdentifierExp at 359.20; stackHeight = 16
         sw $s5,4($sp)#**"GC tag" # IdentifierExp at 359.20; stackHeight = 24
         sw $t0,($sp)#**"" # IdentifierExp at 359.20; stackHeight = 24
        # EXIT NODE # IdentifierExp at 359.20; stackHeight = 24
        # ENTER NODE # ArrayLength at 359.30; stackHeight = 24
          # ENTER NODE # IdentifierExp at 359.24; stackHeight = 24
           lw $t0,4($s2) # inst-var # IdentifierExp at 359.24; stackHeight = 24
           subu $sp,$sp,4 # IdentifierExp at 359.24; stackHeight = 24
           sw $t0,($sp)#**"" # IdentifierExp at 359.24; stackHeight = 28
          # EXIT NODE # IdentifierExp at 359.24; stackHeight = 28
         lw $t0,($sp) # ArrayLength at 359.30; stackHeight = 28
         beq $t0,$zero,nullPtrException # ArrayLength at 359.30; stackHeight = 28
         lw $t0,-4($t0) # ArrayLength at 359.30; stackHeight = 28
         sw $s5,($sp)#**"GC tag" # ArrayLength at 359.30; stackHeight = 28
         subu $sp,4 # ArrayLength at 359.30; stackHeight = 28
         sw $t0,($sp)#**"" # ArrayLength at 359.30; stackHeight = 28
        # EXIT NODE # ArrayLength at 359.30; stackHeight = 32
       lw $t0,($sp) # LessThan at 359.22; stackHeight = 32
       lw $t1,8($sp) # LessThan at 359.22; stackHeight = 32
       slt $t0,$t1,$t0 # LessThan at 359.22; stackHeight = 32
       addu $sp,$sp,12 # LessThan at 359.22; stackHeight = 32
       sw $t0,($sp)#**"" # LessThan at 359.22; stackHeight = 20
      # EXIT NODE # LessThan at 359.22; stackHeight = 20
     lw $t0,($sp) # While at 359.4; stackHeight = 20
     addu $sp,$sp,4 # While at 359.4; stackHeight = 20
    bne $t0,$zero,while_top_2174 # While at 359.4; stackHeight = 16
    break_target_2174: # While at 359.4; stackHeight = 16
    # EXIT NODE # While at 359.4; stackHeight = 16
   addu $sp,8 # Block at 359.4; stackHeight = 16
  # EXIT NODE # Block at 359.4; stackHeight = 8
# EXIT NODE # Block at 355.43; stackHeight = 8
  # ENTER NODE # Assign at 355.38; stackHeight = 8
    # ENTER NODE # Plus at 355.39; stackHeight = 8
      # ENTER NODE # IdentifierExp at 355.38; stackHeight = 8
       lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 355.38; stackHeight = 8
       subu $sp,$sp,8 # IdentifierExp at 355.38; stackHeight = 8
       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 355.38; stackHeight = 16
       sw $t0,($sp)#**"" # IdentifierExp at 355.38; stackHeight = 16
      # EXIT NODE # IdentifierExp at 355.38; stackHeight = 16
      # ENTER NODE # IntegerLiteral at 355.39; stackHeight = 16
       subu $sp,$sp,8 # IntegerLiteral at 355.39; stackHeight = 16
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 355.39; stackHeight = 24
       li $t0,1 # IntegerLiteral at 355.39; stackHeight = 24
       sw $t0,($sp) # IntegerLiteral at 355.39; stackHeight = 24
      # EXIT NODE # IntegerLiteral at 355.39; stackHeight = 24
     lw $t0,($sp) # Plus at 355.39; stackHeight = 24
     lw $t1,8($sp) # Plus at 355.39; stackHeight = 24
     addu $t0,$t0,$t1 # Plus at 355.39; stackHeight = 24
     addu $sp,$sp,8 # Plus at 355.39; stackHeight = 24
     sw $t0,($sp)#**"" # Plus at 355.39; stackHeight = 24
    # EXIT NODE # Plus at 355.39; stackHeight = 16
   lw $t0,($sp) # Assign at 355.38; stackHeight = 16
   sw $t0,8($sp) # Assign at 355.38; stackHeight = 16
   addu $sp,$sp,8 # Assign at 355.38; stackHeight = 16
  # EXIT NODE # Assign at 355.38; stackHeight = 8
# EXIT NODE # Block at 355.3; stackHeight = 8
while_enter_2178: # While at 355.3; stackHeight = 8
  # ENTER NODE # LessThan at 355.21; stackHeight = 8
    # ENTER NODE # IdentifierExp at 355.19; stackHeight = 8
     lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 355.19; stackHeight = 8
     subu $sp,$sp,8 # IdentifierExp at 355.19; stackHeight = 8
     sw $s5,4($sp)#**"GC tag" # IdentifierExp at 355.19; stackHeight = 16
     sw $t0,($sp)#**"" # IdentifierExp at 355.19; stackHeight = 16
    # EXIT NODE # IdentifierExp at 355.19; stackHeight = 16
    # ENTER NODE # ArrayLength at 355.29; stackHeight = 16
      # ENTER NODE # IdentifierExp at 355.23; stackHeight = 16
       lw $t0,4($s2) # inst-var # IdentifierExp at 355.23; stackHeight = 16
       subu $sp,$sp,4 # IdentifierExp at 355.23; stackHeight = 16
       sw $t0,($sp)#**"" # IdentifierExp at 355.23; stackHeight = 20
      # EXIT NODE # IdentifierExp at 355.23; stackHeight = 20
     lw $t0,($sp) # ArrayLength at 355.29; stackHeight = 20
     beq $t0,$zero,nullPtrException # ArrayLength at 355.29; stackHeight = 20
     lw $t0,-4($t0) # ArrayLength at 355.29; stackHeight = 20
     sw $s5,($sp)#**"GC tag" # ArrayLength at 355.29; stackHeight = 20
     subu $sp,4 # ArrayLength at 355.29; stackHeight = 20
     sw $t0,($sp)#**"" # ArrayLength at 355.29; stackHeight = 20
    # EXIT NODE # ArrayLength at 355.29; stackHeight = 24
   lw $t0,($sp) # LessThan at 355.21; stackHeight = 24
   lw $t1,8($sp) # LessThan at 355.21; stackHeight = 24
   slt $t0,$t1,$t0 # LessThan at 355.21; stackHeight = 24
   addu $sp,$sp,12 # LessThan at 355.21; stackHeight = 24
   sw $t0,($sp)#**"" # LessThan at 355.21; stackHeight = 12
  # EXIT NODE # LessThan at 355.21; stackHeight = 12
 lw $t0,($sp) # While at 355.3; stackHeight = 12
 addu $sp,$sp,4 # While at 355.3; stackHeight = 12
bne $t0,$zero,while_top_2178 # While at 355.3; stackHeight = 8
break_target_2178: # While at 355.3; stackHeight = 8
# EXIT NODE # While at 355.3; stackHeight = 8
 addu $sp,8 # Block at 355.3; stackHeight = 8
# EXIT NODE # Block at 355.3; stackHeight = 0
 # stack height is 0 # MethodDeclVoid at 346.14; stackHeight = 0
 lw $ra,4($sp) # MethodDeclVoid at 346.14; stackHeight = 0
 lw $s2,0($sp) # MethodDeclVoid at 346.14; stackHeight = 0
 addu $sp,$sp,8 # MethodDeclVoid at 346.14; stackHeight = 0
jr $ra # MethodDeclVoid at 346.14; stackHeight = -8
# EXIT NODE # MethodDeclVoid at 346.14; stackHeight = -8
  # ENTER NODE # MethodDeclVoid at 364.14; stackHeight = -8
  .globl fcn_2237_signum # MethodDeclVoid at 364.14; stackHeight = -8
  fcn_2237_signum: # MethodDeclVoid at 364.14; stackHeight = -8
   subu $sp,$sp,4 # MethodDeclVoid at 364.14; stackHeight = -8
   sw $s2,($sp) #**"old this-ptr" # MethodDeclVoid at 364.14; stackHeight = -8
   lw $s2,4($sp) #**"this-ptr" # MethodDeclVoid at 364.14; stackHeight = -8
   sw $ra,4($sp) #**"RA:signum" # MethodDeclVoid at 364.14; stackHeight = -8
    # ENTER NODE # Block at 365.3; stackHeight = 0
      # ENTER NODE # LocalVarDecl at 365.12; stackHeight = 0
        # ENTER NODE # IntegerLiteral at 365.16; stackHeight = 0
         subu $sp,$sp,8 # IntegerLiteral at 365.16; stackHeight = 0
         sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 365.16; stackHeight = 8
         li $t0,0 # IntegerLiteral at 365.16; stackHeight = 8
         sw $t0,($sp) # IntegerLiteral at 365.16; stackHeight = 8
        # EXIT NODE # IntegerLiteral at 365.16; stackHeight = 8
      # EXIT NODE # LocalVarDecl at 365.12; stackHeight = 8
      # ENTER NODE # While at 365.3; stackHeight = 8
      j while_enter_2207 # While at 365.3; stackHeight = 8
      while_top_2207: # While at 365.3; stackHeight = 8
        # ENTER NODE # Block at 365.3; stackHeight = 8
          # ENTER NODE # Block at 365.41; stackHeight = 8
            # ENTER NODE # CallStatement at 366.4; stackHeight = 8
              # ENTER NODE # Call at 366.4; stackHeight = 8
                # ENTER NODE # This at 366.4; stackHeight = 8
                 subu $sp,$sp,4 # This at 366.4; stackHeight = 8
                 sw $s2,($sp)#**"" # This at 366.4; stackHeight = 12
                # EXIT NODE # This at 366.4; stackHeight = 12
                # ENTER NODE # Call at 366.21; stackHeight = 12
                  # ENTER NODE # IdentifierExp at 366.13; stackHeight = 12
                   lw $t0,0($s2) # inst-var # IdentifierExp at 366.13; stackHeight = 12
                   subu $sp,$sp,4 # IdentifierExp at 366.13; stackHeight = 12
                   sw $t0,($sp)#**"" # IdentifierExp at 366.13; stackHeight = 16
                  # EXIT NODE # IdentifierExp at 366.13; stackHeight = 16
                  # ENTER NODE # IdentifierExp at 366.18; stackHeight = 16
                   lw $t0,8($sp) # local: stackHt=16,var-offset=-8 # IdentifierExp at 366.18; stackHeight = 16
                   subu $sp,$sp,8 # IdentifierExp at 366.18; stackHeight = 16
                   sw $s5,4($sp)#**"GC tag" # IdentifierExp at 366.18; stackHeight = 24
                   sw $t0,($sp)#**"" # IdentifierExp at 366.18; stackHeight = 24
                  # EXIT NODE # IdentifierExp at 366.18; stackHeight = 24
                 lw $t0,8($sp) # ArrayLookup at 366.17; stackHeight = 24
                 beq $t0,$zero,nullPtrException # ArrayLookup at 366.17; stackHeight = 24
                 lw $t1,-4($t0) # ArrayLookup at 366.17; stackHeight = 24
                 lw $t2,($sp) # ArrayLookup at 366.17; stackHeight = 24
                 bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 366.17; stackHeight = 24
                 sll $t2,$t2,2 # ArrayLookup at 366.17; stackHeight = 24
                 addu $t2,$t2,$t0 # ArrayLookup at 366.17; stackHeight = 24
                 lw $t0,($t2) # ArrayLookup at 366.17; stackHeight = 24
                 sw $t0,8($sp)#**"" # ArrayLookup at 366.17; stackHeight = 24
                 addu $sp,$sp,8 # ArrayLookup at 366.17; stackHeight = 24
                # EXIT NODE # ArrayLookup at 366.17; stackHeight = 16
               lw $t0,0($sp) # Call at 366.21; stackHeight = 16
               beq $t0,$zero,nullPtrException # Call at 366.21; stackHeight = 16
               lw $t0,-12($t0) # Call at 366.21; stackHeight = 16
               lw $t0,68($t0) # Call at 366.21; stackHeight = 16
               jalr $t0 # signum # Call at 366.21; stackHeight = 16
              # EXIT NODE # Call at 366.21; stackHeight = 20
             lw $t0,8($sp) # Call at 366.4; stackHeight = 20
             beq $t0,$zero,nullPtrException # Call at 366.4; stackHeight = 20
             lw $t0,-12($t0) # Call at 366.4; stackHeight = 20
             lw $t0,32($t0) # Call at 366.4; stackHeight = 20
             jalr $t0 # printInt # Call at 366.4; stackHeight = 20
            # EXIT NODE # Call at 366.4; stackHeight = 8
          # EXIT NODE # CallStatement at 366.4; stackHeight = 8
          # ENTER NODE # CallStatement at 367.4; stackHeight = 8
            # ENTER NODE # Call at 367.4; stackHeight = 8
              # ENTER NODE # This at 367.4; stackHeight = 8
               subu $sp,$sp,4 # This at 367.4; stackHeight = 8
               sw $s2,($sp)#**"" # This at 367.4; stackHeight = 12
              # EXIT NODE # This at 367.4; stackHeight = 12
              # ENTER NODE # StringLiteral at 367.13; stackHeight = 12
               subu $sp,$sp,4 # StringLiteral at 367.13; stackHeight = 12
               la $t0,strLit_486 # StringLiteral at 367.13; stackHeight = 16
               sw $t0,($sp)#**"strLit:\?" # StringLiteral at 367.13; stackHeight = 16
              # EXIT NODE # StringLiteral at 367.13; stackHeight = 16
             lw $t0,4($sp) # Call at 367.4; stackHeight = 16
             beq $t0,$zero,nullPtrException # Call at 367.4; stackHeight = 16
             lw $t0,-12($t0) # Call at 367.4; stackHeight = 16
             lw $t0,24($t0) # Call at 367.4; stackHeight = 16
             jalr $t0 # printStr # Call at 367.4; stackHeight = 16
            # EXIT NODE # Call at 367.4; stackHeight = 8
          # EXIT NODE # CallStatement at 367.4; stackHeight = 8
        # EXIT NODE # Block at 365.41; stackHeight = 8
        # ENTER NODE # Assign at 365.36; stackHeight = 8
          # ENTER NODE # Plus at 365.37; stackHeight = 8
            # ENTER NODE # IdentifierExp at 365.36; stackHeight = 8
             lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 365.36; stackHeight = 8
             subu $sp,$sp,8 # IdentifierExp at 365.36; stackHeight = 8
             sw $s5,4($sp)#**"GC tag" # IdentifierExp at 365.36; stackHeight = 16
             sw $t0,($sp)#**"" # IdentifierExp at 365.36; stackHeight = 16
            # EXIT NODE # IdentifierExp at 365.36; stackHeight = 16
            # ENTER NODE # IntegerLiteral at 365.37; stackHeight = 16
             subu $sp,$sp,8 # IntegerLiteral at 365.37; stackHeight = 16
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 365.37; stackHeight = 24
             li $t0,1 # IntegerLiteral at 365.37; stackHeight = 24
             sw $t0,($sp) # IntegerLiteral at 365.37; stackHeight = 24
            # EXIT NODE # IntegerLiteral at 365.37; stackHeight = 24
           lw $t0,($sp) # Plus at 365.37; stackHeight = 24
           lw $t1,8($sp) # Plus at 365.37; stackHeight = 24
           addu $t0,$t0,$t1 # Plus at 365.37; stackHeight = 24
           addu $sp,$sp,8 # Plus at 365.37; stackHeight = 24
           sw $t0,($sp)#**"" # Plus at 365.37; stackHeight = 24
          # EXIT NODE # Plus at 365.37; stackHeight = 16
         lw $t0,($sp) # Assign at 365.36; stackHeight = 16
         sw $t0,8($sp) # Assign at 365.36; stackHeight = 16
         addu $sp,$sp,8 # Assign at 365.36; stackHeight = 16
        # EXIT NODE # Assign at 365.36; stackHeight = 8
      # EXIT NODE # Block at 365.3; stackHeight = 8
    while_enter_2207: # While at 365.3; stackHeight = 8
      # ENTER NODE # LessThan at 365.21; stackHeight = 8
        # ENTER NODE # IdentifierExp at 365.19; stackHeight = 8
         lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 365.19; stackHeight = 8
         subu $sp,$sp,8 # IdentifierExp at 365.19; stackHeight = 8
         sw $s5,4($sp)#**"GC tag" # IdentifierExp at 365.19; stackHeight = 16
         sw $t0,($sp)#**"" # IdentifierExp at 365.19; stackHeight = 16
        # EXIT NODE # IdentifierExp at 365.19; stackHeight = 16
        # ENTER NODE # ArrayLength at 365.27; stackHeight = 16
          # ENTER NODE # IdentifierExp at 365.23; stackHeight = 16
           lw $t0,0($s2) # inst-var # IdentifierExp at 365.23; stackHeight = 16
           subu $sp,$sp,4 # IdentifierExp at 365.23; stackHeight = 16
           sw $t0,($sp)#**"" # IdentifierExp at 365.23; stackHeight = 20
          # EXIT NODE # IdentifierExp at 365.23; stackHeight = 20
         lw $t0,($sp) # ArrayLength at 365.27; stackHeight = 20
         beq $t0,$zero,nullPtrException # ArrayLength at 365.27; stackHeight = 20
         lw $t0,-4($t0) # ArrayLength at 365.27; stackHeight = 20
         sw $s5,($sp)#**"GC tag" # ArrayLength at 365.27; stackHeight = 20
         subu $sp,4 # ArrayLength at 365.27; stackHeight = 20
         sw $t0,($sp)#**"" # ArrayLength at 365.27; stackHeight = 20
        # EXIT NODE # ArrayLength at 365.27; stackHeight = 24
       lw $t0,($sp) # LessThan at 365.21; stackHeight = 24
       lw $t1,8($sp) # LessThan at 365.21; stackHeight = 24
       slt $t0,$t1,$t0 # LessThan at 365.21; stackHeight = 24
       addu $sp,$sp,12 # LessThan at 365.21; stackHeight = 24
       sw $t0,($sp)#**"" # LessThan at 365.21; stackHeight = 12
      # EXIT NODE # LessThan at 365.21; stackHeight = 12
     lw $t0,($sp) # While at 365.3; stackHeight = 12
     addu $sp,$sp,4 # While at 365.3; stackHeight = 12
    bne $t0,$zero,while_top_2207 # While at 365.3; stackHeight = 8
    break_target_2207: # While at 365.3; stackHeight = 8
    # EXIT NODE # While at 365.3; stackHeight = 8
   addu $sp,8 # Block at 365.3; stackHeight = 8
  # EXIT NODE # Block at 365.3; stackHeight = 0
  # ENTER NODE # Block at 369.3; stackHeight = 0
    # ENTER NODE # LocalVarDecl at 369.12; stackHeight = 0
      # ENTER NODE # IntegerLiteral at 369.16; stackHeight = 0
       subu $sp,$sp,8 # IntegerLiteral at 369.16; stackHeight = 0
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 369.16; stackHeight = 8
       li $t0,0 # IntegerLiteral at 369.16; stackHeight = 8
       sw $t0,($sp) # IntegerLiteral at 369.16; stackHeight = 8
      # EXIT NODE # IntegerLiteral at 369.16; stackHeight = 8
    # EXIT NODE # LocalVarDecl at 369.12; stackHeight = 8
    # ENTER NODE # While at 369.3; stackHeight = 8
    j while_enter_2235 # While at 369.3; stackHeight = 8
    while_top_2235: # While at 369.3; stackHeight = 8
      # ENTER NODE # Block at 369.3; stackHeight = 8
        # ENTER NODE # Block at 369.43; stackHeight = 8
          # ENTER NODE # CallStatement at 370.4; stackHeight = 8
            # ENTER NODE # Call at 370.4; stackHeight = 8
              # ENTER NODE # This at 370.4; stackHeight = 8
               subu $sp,$sp,4 # This at 370.4; stackHeight = 8
               sw $s2,($sp)#**"" # This at 370.4; stackHeight = 12
              # EXIT NODE # This at 370.4; stackHeight = 12
              # ENTER NODE # Call at 370.23; stackHeight = 12
                # ENTER NODE # IdentifierExp at 370.13; stackHeight = 12
                 lw $t0,4($s2) # inst-var # IdentifierExp at 370.13; stackHeight = 12
                 subu $sp,$sp,4 # IdentifierExp at 370.13; stackHeight = 12
                 sw $t0,($sp)#**"" # IdentifierExp at 370.13; stackHeight = 16
                # EXIT NODE # IdentifierExp at 370.13; stackHeight = 16
                # ENTER NODE # IdentifierExp at 370.20; stackHeight = 16
                 lw $t0,8($sp) # local: stackHt=16,var-offset=-8 # IdentifierExp at 370.20; stackHeight = 16
                 subu $sp,$sp,8 # IdentifierExp at 370.20; stackHeight = 16
                 sw $s5,4($sp)#**"GC tag" # IdentifierExp at 370.20; stackHeight = 24
                 sw $t0,($sp)#**"" # IdentifierExp at 370.20; stackHeight = 24
                # EXIT NODE # IdentifierExp at 370.20; stackHeight = 24
               lw $t0,8($sp) # ArrayLookup at 370.19; stackHeight = 24
               beq $t0,$zero,nullPtrException # ArrayLookup at 370.19; stackHeight = 24
               lw $t1,-4($t0) # ArrayLookup at 370.19; stackHeight = 24
               lw $t2,($sp) # ArrayLookup at 370.19; stackHeight = 24
               bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 370.19; stackHeight = 24
               sll $t2,$t2,2 # ArrayLookup at 370.19; stackHeight = 24
               addu $t2,$t2,$t0 # ArrayLookup at 370.19; stackHeight = 24
               lw $t0,($t2) # ArrayLookup at 370.19; stackHeight = 24
               sw $t0,8($sp)#**"" # ArrayLookup at 370.19; stackHeight = 24
               addu $sp,$sp,8 # ArrayLookup at 370.19; stackHeight = 24
              # EXIT NODE # ArrayLookup at 370.19; stackHeight = 16
             lw $t0,0($sp) # Call at 370.23; stackHeight = 16
             beq $t0,$zero,nullPtrException # Call at 370.23; stackHeight = 16
             lw $t0,-12($t0) # Call at 370.23; stackHeight = 16
             lw $t0,68($t0) # Call at 370.23; stackHeight = 16
             jalr $t0 # signum # Call at 370.23; stackHeight = 16
            # EXIT NODE # Call at 370.23; stackHeight = 20
           lw $t0,8($sp) # Call at 370.4; stackHeight = 20
           beq $t0,$zero,nullPtrException # Call at 370.4; stackHeight = 20
           lw $t0,-12($t0) # Call at 370.4; stackHeight = 20
           lw $t0,32($t0) # Call at 370.4; stackHeight = 20
           jalr $t0 # printInt # Call at 370.4; stackHeight = 20
          # EXIT NODE # Call at 370.4; stackHeight = 8
        # EXIT NODE # CallStatement at 370.4; stackHeight = 8
        # ENTER NODE # CallStatement at 371.4; stackHeight = 8
          # ENTER NODE # Call at 371.4; stackHeight = 8
            # ENTER NODE # This at 371.4; stackHeight = 8
             subu $sp,$sp,4 # This at 371.4; stackHeight = 8
             sw $s2,($sp)#**"" # This at 371.4; stackHeight = 12
            # EXIT NODE # This at 371.4; stackHeight = 12
            # ENTER NODE # StringLiteral at 371.13; stackHeight = 12
             subu $sp,$sp,4 # StringLiteral at 371.13; stackHeight = 12
             la $t0,strLit_486 # StringLiteral at 371.13; stackHeight = 16
             sw $t0,($sp)#**"strLit:\?" # StringLiteral at 371.13; stackHeight = 16
            # EXIT NODE # StringLiteral at 371.13; stackHeight = 16
           lw $t0,4($sp) # Call at 371.4; stackHeight = 16
           beq $t0,$zero,nullPtrException # Call at 371.4; stackHeight = 16
           lw $t0,-12($t0) # Call at 371.4; stackHeight = 16
           lw $t0,24($t0) # Call at 371.4; stackHeight = 16
           jalr $t0 # printStr # Call at 371.4; stackHeight = 16
          # EXIT NODE # Call at 371.4; stackHeight = 8
        # EXIT NODE # CallStatement at 371.4; stackHeight = 8
      # EXIT NODE # Block at 369.43; stackHeight = 8
      # ENTER NODE # Assign at 369.38; stackHeight = 8
        # ENTER NODE # Plus at 369.39; stackHeight = 8
          # ENTER NODE # IdentifierExp at 369.38; stackHeight = 8
           lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 369.38; stackHeight = 8
           subu $sp,$sp,8 # IdentifierExp at 369.38; stackHeight = 8
           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 369.38; stackHeight = 16
           sw $t0,($sp)#**"" # IdentifierExp at 369.38; stackHeight = 16
          # EXIT NODE # IdentifierExp at 369.38; stackHeight = 16
          # ENTER NODE # IntegerLiteral at 369.39; stackHeight = 16
           subu $sp,$sp,8 # IntegerLiteral at 369.39; stackHeight = 16
           sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 369.39; stackHeight = 24
           li $t0,1 # IntegerLiteral at 369.39; stackHeight = 24
           sw $t0,($sp) # IntegerLiteral at 369.39; stackHeight = 24
          # EXIT NODE # IntegerLiteral at 369.39; stackHeight = 24
         lw $t0,($sp) # Plus at 369.39; stackHeight = 24
         lw $t1,8($sp) # Plus at 369.39; stackHeight = 24
         addu $t0,$t0,$t1 # Plus at 369.39; stackHeight = 24
         addu $sp,$sp,8 # Plus at 369.39; stackHeight = 24
         sw $t0,($sp)#**"" # Plus at 369.39; stackHeight = 24
        # EXIT NODE # Plus at 369.39; stackHeight = 16
       lw $t0,($sp) # Assign at 369.38; stackHeight = 16
       sw $t0,8($sp) # Assign at 369.38; stackHeight = 16
       addu $sp,$sp,8 # Assign at 369.38; stackHeight = 16
      # EXIT NODE # Assign at 369.38; stackHeight = 8
    # EXIT NODE # Block at 369.3; stackHeight = 8
  while_enter_2235: # While at 369.3; stackHeight = 8
    # ENTER NODE # LessThan at 369.21; stackHeight = 8
      # ENTER NODE # IdentifierExp at 369.19; stackHeight = 8
       lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 369.19; stackHeight = 8
       subu $sp,$sp,8 # IdentifierExp at 369.19; stackHeight = 8
       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 369.19; stackHeight = 16
       sw $t0,($sp)#**"" # IdentifierExp at 369.19; stackHeight = 16
      # EXIT NODE # IdentifierExp at 369.19; stackHeight = 16
      # ENTER NODE # ArrayLength at 369.29; stackHeight = 16
        # ENTER NODE # IdentifierExp at 369.23; stackHeight = 16
         lw $t0,4($s2) # inst-var # IdentifierExp at 369.23; stackHeight = 16
         subu $sp,$sp,4 # IdentifierExp at 369.23; stackHeight = 16
         sw $t0,($sp)#**"" # IdentifierExp at 369.23; stackHeight = 20
        # EXIT NODE # IdentifierExp at 369.23; stackHeight = 20
       lw $t0,($sp) # ArrayLength at 369.29; stackHeight = 20
       beq $t0,$zero,nullPtrException # ArrayLength at 369.29; stackHeight = 20
       lw $t0,-4($t0) # ArrayLength at 369.29; stackHeight = 20
       sw $s5,($sp)#**"GC tag" # ArrayLength at 369.29; stackHeight = 20
       subu $sp,4 # ArrayLength at 369.29; stackHeight = 20
       sw $t0,($sp)#**"" # ArrayLength at 369.29; stackHeight = 20
      # EXIT NODE # ArrayLength at 369.29; stackHeight = 24
     lw $t0,($sp) # LessThan at 369.21; stackHeight = 24
     lw $t1,8($sp) # LessThan at 369.21; stackHeight = 24
     slt $t0,$t1,$t0 # LessThan at 369.21; stackHeight = 24
     addu $sp,$sp,12 # LessThan at 369.21; stackHeight = 24
     sw $t0,($sp)#**"" # LessThan at 369.21; stackHeight = 12
    # EXIT NODE # LessThan at 369.21; stackHeight = 12
   lw $t0,($sp) # While at 369.3; stackHeight = 12
   addu $sp,$sp,4 # While at 369.3; stackHeight = 12
  bne $t0,$zero,while_top_2235 # While at 369.3; stackHeight = 8
  break_target_2235: # While at 369.3; stackHeight = 8
  # EXIT NODE # While at 369.3; stackHeight = 8
 addu $sp,8 # Block at 369.3; stackHeight = 8
# EXIT NODE # Block at 369.3; stackHeight = 0
 # stack height is 0 # MethodDeclVoid at 364.14; stackHeight = 0
 lw $ra,4($sp) # MethodDeclVoid at 364.14; stackHeight = 0
 lw $s2,0($sp) # MethodDeclVoid at 364.14; stackHeight = 0
 addu $sp,$sp,8 # MethodDeclVoid at 364.14; stackHeight = 0
jr $ra # MethodDeclVoid at 364.14; stackHeight = -8
# EXIT NODE # MethodDeclVoid at 364.14; stackHeight = -8
  # ENTER NODE # MethodDeclVoid at 375.14; stackHeight = -8
  .globl fcn_2392_subtract # MethodDeclVoid at 375.14; stackHeight = -8
  fcn_2392_subtract: # MethodDeclVoid at 375.14; stackHeight = -8
   subu $sp,$sp,4 # MethodDeclVoid at 375.14; stackHeight = -8
   sw $s2,($sp) #**"old this-ptr" # MethodDeclVoid at 375.14; stackHeight = -8
   lw $s2,4($sp) #**"this-ptr" # MethodDeclVoid at 375.14; stackHeight = -8
   sw $ra,4($sp) #**"RA:subtract" # MethodDeclVoid at 375.14; stackHeight = -8
    # ENTER NODE # Block at 376.3; stackHeight = 0
      # ENTER NODE # LocalVarDecl at 376.12; stackHeight = 0
        # ENTER NODE # IntegerLiteral at 376.16; stackHeight = 0
         subu $sp,$sp,8 # IntegerLiteral at 376.16; stackHeight = 0
         sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 376.16; stackHeight = 8
         li $t0,0 # IntegerLiteral at 376.16; stackHeight = 8
         sw $t0,($sp) # IntegerLiteral at 376.16; stackHeight = 8
        # EXIT NODE # IntegerLiteral at 376.16; stackHeight = 8
      # EXIT NODE # LocalVarDecl at 376.12; stackHeight = 8
      # ENTER NODE # While at 376.3; stackHeight = 8
      j while_enter_2313 # While at 376.3; stackHeight = 8
      while_top_2313: # While at 376.3; stackHeight = 8
        # ENTER NODE # Block at 376.3; stackHeight = 8
          # ENTER NODE # Block at 376.41; stackHeight = 8
            # ENTER NODE # Block at 377.4; stackHeight = 8
              # ENTER NODE # LocalVarDecl at 377.13; stackHeight = 8
                # ENTER NODE # IntegerLiteral at 377.17; stackHeight = 8
                 subu $sp,$sp,8 # IntegerLiteral at 377.17; stackHeight = 8
                 sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 377.17; stackHeight = 16
                 li $t0,0 # IntegerLiteral at 377.17; stackHeight = 16
                 sw $t0,($sp) # IntegerLiteral at 377.17; stackHeight = 16
                # EXIT NODE # IntegerLiteral at 377.17; stackHeight = 16
              # EXIT NODE # LocalVarDecl at 377.13; stackHeight = 16
              # ENTER NODE # While at 377.4; stackHeight = 16
              j while_enter_2279 # While at 377.4; stackHeight = 16
              while_top_2279: # While at 377.4; stackHeight = 16
                # ENTER NODE # Block at 377.4; stackHeight = 16
                  # ENTER NODE # Block at 377.42; stackHeight = 16
                    # ENTER NODE # CallStatement at 378.5; stackHeight = 16
                      # ENTER NODE # Call at 378.5; stackHeight = 16
                        # ENTER NODE # This at 378.5; stackHeight = 16
                         subu $sp,$sp,4 # This at 378.5; stackHeight = 16
                         sw $s2,($sp)#**"" # This at 378.5; stackHeight = 20
                        # EXIT NODE # This at 378.5; stackHeight = 20
                        # ENTER NODE # Call at 378.51; stackHeight = 20
                          # ENTER NODE # Call at 378.40; stackHeight = 20
                            # ENTER NODE # Call at 378.22; stackHeight = 20
                              # ENTER NODE # IdentifierExp at 378.14; stackHeight = 20
                               lw $t0,0($s2) # inst-var # IdentifierExp at 378.14; stackHeight = 20
                               subu $sp,$sp,4 # IdentifierExp at 378.14; stackHeight = 20
                               sw $t0,($sp)#**"" # IdentifierExp at 378.14; stackHeight = 24
                              # EXIT NODE # IdentifierExp at 378.14; stackHeight = 24
                              # ENTER NODE # IdentifierExp at 378.19; stackHeight = 24
                               lw $t0,16($sp) # local: stackHt=24,var-offset=-8 # IdentifierExp at 378.19; stackHeight = 24
                               subu $sp,$sp,8 # IdentifierExp at 378.19; stackHeight = 24
                               sw $s5,4($sp)#**"GC tag" # IdentifierExp at 378.19; stackHeight = 32
                               sw $t0,($sp)#**"" # IdentifierExp at 378.19; stackHeight = 32
                              # EXIT NODE # IdentifierExp at 378.19; stackHeight = 32
                             lw $t0,8($sp) # ArrayLookup at 378.18; stackHeight = 32
                             beq $t0,$zero,nullPtrException # ArrayLookup at 378.18; stackHeight = 32
                             lw $t1,-4($t0) # ArrayLookup at 378.18; stackHeight = 32
                             lw $t2,($sp) # ArrayLookup at 378.18; stackHeight = 32
                             bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 378.18; stackHeight = 32
                             sll $t2,$t2,2 # ArrayLookup at 378.18; stackHeight = 32
                             addu $t2,$t2,$t0 # ArrayLookup at 378.18; stackHeight = 32
                             lw $t0,($t2) # ArrayLookup at 378.18; stackHeight = 32
                             sw $t0,8($sp)#**"" # ArrayLookup at 378.18; stackHeight = 32
                             addu $sp,$sp,8 # ArrayLookup at 378.18; stackHeight = 32
                            # EXIT NODE # ArrayLookup at 378.18; stackHeight = 24
                            # ENTER NODE # IdentifierExp at 378.31; stackHeight = 24
                             lw $t0,0($s2) # inst-var # IdentifierExp at 378.31; stackHeight = 24
                             subu $sp,$sp,4 # IdentifierExp at 378.31; stackHeight = 24
                             sw $t0,($sp)#**"" # IdentifierExp at 378.31; stackHeight = 28
                            # EXIT NODE # IdentifierExp at 378.31; stackHeight = 28
                            # ENTER NODE # IdentifierExp at 378.36; stackHeight = 28
                             lw $t0,12($sp) # local: stackHt=28,var-offset=-16 # IdentifierExp at 378.36; stackHeight = 28
                             subu $sp,$sp,8 # IdentifierExp at 378.36; stackHeight = 28
                             sw $s5,4($sp)#**"GC tag" # IdentifierExp at 378.36; stackHeight = 36
                             sw $t0,($sp)#**"" # IdentifierExp at 378.36; stackHeight = 36
                            # EXIT NODE # IdentifierExp at 378.36; stackHeight = 36
                           lw $t0,8($sp) # ArrayLookup at 378.35; stackHeight = 36
                           beq $t0,$zero,nullPtrException # ArrayLookup at 378.35; stackHeight = 36
                           lw $t1,-4($t0) # ArrayLookup at 378.35; stackHeight = 36
                           lw $t2,($sp) # ArrayLookup at 378.35; stackHeight = 36
                           bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 378.35; stackHeight = 36
                           sll $t2,$t2,2 # ArrayLookup at 378.35; stackHeight = 36
                           addu $t2,$t2,$t0 # ArrayLookup at 378.35; stackHeight = 36
                           lw $t0,($t2) # ArrayLookup at 378.35; stackHeight = 36
                           sw $t0,8($sp)#**"" # ArrayLookup at 378.35; stackHeight = 36
                           addu $sp,$sp,8 # ArrayLookup at 378.35; stackHeight = 36
                          # EXIT NODE # ArrayLookup at 378.35; stackHeight = 28
                         lw $t0,4($sp) # Call at 378.22; stackHeight = 28
                         beq $t0,$zero,nullPtrException # Call at 378.22; stackHeight = 28
                         lw $t0,-12($t0) # Call at 378.22; stackHeight = 28
                         lw $t0,24($t0) # Call at 378.22; stackHeight = 28
                         jalr $t0 # subtract # Call at 378.22; stackHeight = 28
                        # EXIT NODE # Call at 378.22; stackHeight = 24
                       lw $t0,0($sp) # Call at 378.40; stackHeight = 24
                       beq $t0,$zero,nullPtrException # Call at 378.40; stackHeight = 24
                       lw $t0,-12($t0) # Call at 378.40; stackHeight = 24
                       lw $t0,8($t0) # Call at 378.40; stackHeight = 24
                       jalr $t0 # toString # Call at 378.40; stackHeight = 24
                      # EXIT NODE # Call at 378.40; stackHeight = 24
                      # ENTER NODE # StringLiteral at 378.58; stackHeight = 24
                       subu $sp,$sp,4 # StringLiteral at 378.58; stackHeight = 24
                       la $t0,strLit_486 # StringLiteral at 378.58; stackHeight = 28
                       sw $t0,($sp)#**"strLit:\?" # StringLiteral at 378.58; stackHeight = 28
                      # EXIT NODE # StringLiteral at 378.58; stackHeight = 28
                     lw $t0,4($sp) # Call at 378.51; stackHeight = 28
                     beq $t0,$zero,nullPtrException # Call at 378.51; stackHeight = 28
                     lw $t0,-12($t0) # Call at 378.51; stackHeight = 28
                     lw $t0,12($t0) # Call at 378.51; stackHeight = 28
                     jalr $t0 # concat # Call at 378.51; stackHeight = 28
                    # EXIT NODE # Call at 378.51; stackHeight = 24
                   lw $t0,4($sp) # Call at 378.5; stackHeight = 24
                   beq $t0,$zero,nullPtrException # Call at 378.5; stackHeight = 24
                   lw $t0,-12($t0) # Call at 378.5; stackHeight = 24
                   lw $t0,24($t0) # Call at 378.5; stackHeight = 24
                   jalr $t0 # printStr # Call at 378.5; stackHeight = 24
                  # EXIT NODE # Call at 378.5; stackHeight = 16
                # EXIT NODE # CallStatement at 378.5; stackHeight = 16
              # EXIT NODE # Block at 377.42; stackHeight = 16
              # ENTER NODE # Assign at 377.37; stackHeight = 16
                # ENTER NODE # Plus at 377.38; stackHeight = 16
                  # ENTER NODE # IdentifierExp at 377.37; stackHeight = 16
                   lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 377.37; stackHeight = 16
                   subu $sp,$sp,8 # IdentifierExp at 377.37; stackHeight = 16
                   sw $s5,4($sp)#**"GC tag" # IdentifierExp at 377.37; stackHeight = 24
                   sw $t0,($sp)#**"" # IdentifierExp at 377.37; stackHeight = 24
                  # EXIT NODE # IdentifierExp at 377.37; stackHeight = 24
                  # ENTER NODE # IntegerLiteral at 377.38; stackHeight = 24
                   subu $sp,$sp,8 # IntegerLiteral at 377.38; stackHeight = 24
                   sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 377.38; stackHeight = 32
                   li $t0,1 # IntegerLiteral at 377.38; stackHeight = 32
                   sw $t0,($sp) # IntegerLiteral at 377.38; stackHeight = 32
                  # EXIT NODE # IntegerLiteral at 377.38; stackHeight = 32
                 lw $t0,($sp) # Plus at 377.38; stackHeight = 32
                 lw $t1,8($sp) # Plus at 377.38; stackHeight = 32
                 addu $t0,$t0,$t1 # Plus at 377.38; stackHeight = 32
                 addu $sp,$sp,8 # Plus at 377.38; stackHeight = 32
                 sw $t0,($sp)#**"" # Plus at 377.38; stackHeight = 32
                # EXIT NODE # Plus at 377.38; stackHeight = 24
               lw $t0,($sp) # Assign at 377.37; stackHeight = 24
               sw $t0,8($sp) # Assign at 377.37; stackHeight = 24
               addu $sp,$sp,8 # Assign at 377.37; stackHeight = 24
              # EXIT NODE # Assign at 377.37; stackHeight = 16
            # EXIT NODE # Block at 377.4; stackHeight = 16
          while_enter_2279: # While at 377.4; stackHeight = 16
            # ENTER NODE # LessThan at 377.22; stackHeight = 16
              # ENTER NODE # IdentifierExp at 377.20; stackHeight = 16
               lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 377.20; stackHeight = 16
               subu $sp,$sp,8 # IdentifierExp at 377.20; stackHeight = 16
               sw $s5,4($sp)#**"GC tag" # IdentifierExp at 377.20; stackHeight = 24
               sw $t0,($sp)#**"" # IdentifierExp at 377.20; stackHeight = 24
              # EXIT NODE # IdentifierExp at 377.20; stackHeight = 24
              # ENTER NODE # ArrayLength at 377.28; stackHeight = 24
                # ENTER NODE # IdentifierExp at 377.24; stackHeight = 24
                 lw $t0,0($s2) # inst-var # IdentifierExp at 377.24; stackHeight = 24
                 subu $sp,$sp,4 # IdentifierExp at 377.24; stackHeight = 24
                 sw $t0,($sp)#**"" # IdentifierExp at 377.24; stackHeight = 28
                # EXIT NODE # IdentifierExp at 377.24; stackHeight = 28
               lw $t0,($sp) # ArrayLength at 377.28; stackHeight = 28
               beq $t0,$zero,nullPtrException # ArrayLength at 377.28; stackHeight = 28
               lw $t0,-4($t0) # ArrayLength at 377.28; stackHeight = 28
               sw $s5,($sp)#**"GC tag" # ArrayLength at 377.28; stackHeight = 28
               subu $sp,4 # ArrayLength at 377.28; stackHeight = 28
               sw $t0,($sp)#**"" # ArrayLength at 377.28; stackHeight = 28
              # EXIT NODE # ArrayLength at 377.28; stackHeight = 32
             lw $t0,($sp) # LessThan at 377.22; stackHeight = 32
             lw $t1,8($sp) # LessThan at 377.22; stackHeight = 32
             slt $t0,$t1,$t0 # LessThan at 377.22; stackHeight = 32
             addu $sp,$sp,12 # LessThan at 377.22; stackHeight = 32
             sw $t0,($sp)#**"" # LessThan at 377.22; stackHeight = 20
            # EXIT NODE # LessThan at 377.22; stackHeight = 20
           lw $t0,($sp) # While at 377.4; stackHeight = 20
           addu $sp,$sp,4 # While at 377.4; stackHeight = 20
          bne $t0,$zero,while_top_2279 # While at 377.4; stackHeight = 16
          break_target_2279: # While at 377.4; stackHeight = 16
          # EXIT NODE # While at 377.4; stackHeight = 16
         addu $sp,8 # Block at 377.4; stackHeight = 16
        # EXIT NODE # Block at 377.4; stackHeight = 8
        # ENTER NODE # Block at 380.4; stackHeight = 8
          # ENTER NODE # LocalVarDecl at 380.13; stackHeight = 8
            # ENTER NODE # IntegerLiteral at 380.17; stackHeight = 8
             subu $sp,$sp,8 # IntegerLiteral at 380.17; stackHeight = 8
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 380.17; stackHeight = 16
             li $t0,0 # IntegerLiteral at 380.17; stackHeight = 16
             sw $t0,($sp) # IntegerLiteral at 380.17; stackHeight = 16
            # EXIT NODE # IntegerLiteral at 380.17; stackHeight = 16
          # EXIT NODE # LocalVarDecl at 380.13; stackHeight = 16
          # ENTER NODE # While at 380.4; stackHeight = 16
          j while_enter_2309 # While at 380.4; stackHeight = 16
          while_top_2309: # While at 380.4; stackHeight = 16
            # ENTER NODE # Block at 380.4; stackHeight = 16
              # ENTER NODE # Block at 380.44; stackHeight = 16
                # ENTER NODE # CallStatement at 381.5; stackHeight = 16
                  # ENTER NODE # Call at 381.5; stackHeight = 16
                    # ENTER NODE # This at 381.5; stackHeight = 16
                     subu $sp,$sp,4 # This at 381.5; stackHeight = 16
                     sw $s2,($sp)#**"" # This at 381.5; stackHeight = 20
                    # EXIT NODE # This at 381.5; stackHeight = 20
                    # ENTER NODE # Call at 381.53; stackHeight = 20
                      # ENTER NODE # Call at 381.42; stackHeight = 20
                        # ENTER NODE # Call at 381.22; stackHeight = 20
                          # ENTER NODE # IdentifierExp at 381.14; stackHeight = 20
                           lw $t0,0($s2) # inst-var # IdentifierExp at 381.14; stackHeight = 20
                           subu $sp,$sp,4 # IdentifierExp at 381.14; stackHeight = 20
                           sw $t0,($sp)#**"" # IdentifierExp at 381.14; stackHeight = 24
                          # EXIT NODE # IdentifierExp at 381.14; stackHeight = 24
                          # ENTER NODE # IdentifierExp at 381.19; stackHeight = 24
                           lw $t0,16($sp) # local: stackHt=24,var-offset=-8 # IdentifierExp at 381.19; stackHeight = 24
                           subu $sp,$sp,8 # IdentifierExp at 381.19; stackHeight = 24
                           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 381.19; stackHeight = 32
                           sw $t0,($sp)#**"" # IdentifierExp at 381.19; stackHeight = 32
                          # EXIT NODE # IdentifierExp at 381.19; stackHeight = 32
                         lw $t0,8($sp) # ArrayLookup at 381.18; stackHeight = 32
                         beq $t0,$zero,nullPtrException # ArrayLookup at 381.18; stackHeight = 32
                         lw $t1,-4($t0) # ArrayLookup at 381.18; stackHeight = 32
                         lw $t2,($sp) # ArrayLookup at 381.18; stackHeight = 32
                         bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 381.18; stackHeight = 32
                         sll $t2,$t2,2 # ArrayLookup at 381.18; stackHeight = 32
                         addu $t2,$t2,$t0 # ArrayLookup at 381.18; stackHeight = 32
                         lw $t0,($t2) # ArrayLookup at 381.18; stackHeight = 32
                         sw $t0,8($sp)#**"" # ArrayLookup at 381.18; stackHeight = 32
                         addu $sp,$sp,8 # ArrayLookup at 381.18; stackHeight = 32
                        # EXIT NODE # ArrayLookup at 381.18; stackHeight = 24
                        # ENTER NODE # IdentifierExp at 381.31; stackHeight = 24
                         lw $t0,4($s2) # inst-var # IdentifierExp at 381.31; stackHeight = 24
                         subu $sp,$sp,4 # IdentifierExp at 381.31; stackHeight = 24
                         sw $t0,($sp)#**"" # IdentifierExp at 381.31; stackHeight = 28
                        # EXIT NODE # IdentifierExp at 381.31; stackHeight = 28
                        # ENTER NODE # IdentifierExp at 381.38; stackHeight = 28
                         lw $t0,12($sp) # local: stackHt=28,var-offset=-16 # IdentifierExp at 381.38; stackHeight = 28
                         subu $sp,$sp,8 # IdentifierExp at 381.38; stackHeight = 28
                         sw $s5,4($sp)#**"GC tag" # IdentifierExp at 381.38; stackHeight = 36
                         sw $t0,($sp)#**"" # IdentifierExp at 381.38; stackHeight = 36
                        # EXIT NODE # IdentifierExp at 381.38; stackHeight = 36
                       lw $t0,8($sp) # ArrayLookup at 381.37; stackHeight = 36
                       beq $t0,$zero,nullPtrException # ArrayLookup at 381.37; stackHeight = 36
                       lw $t1,-4($t0) # ArrayLookup at 381.37; stackHeight = 36
                       lw $t2,($sp) # ArrayLookup at 381.37; stackHeight = 36
                       bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 381.37; stackHeight = 36
                       sll $t2,$t2,2 # ArrayLookup at 381.37; stackHeight = 36
                       addu $t2,$t2,$t0 # ArrayLookup at 381.37; stackHeight = 36
                       lw $t0,($t2) # ArrayLookup at 381.37; stackHeight = 36
                       sw $t0,8($sp)#**"" # ArrayLookup at 381.37; stackHeight = 36
                       addu $sp,$sp,8 # ArrayLookup at 381.37; stackHeight = 36
                      # EXIT NODE # ArrayLookup at 381.37; stackHeight = 28
                     lw $t0,4($sp) # Call at 381.22; stackHeight = 28
                     beq $t0,$zero,nullPtrException # Call at 381.22; stackHeight = 28
                     lw $t0,-12($t0) # Call at 381.22; stackHeight = 28
                     lw $t0,24($t0) # Call at 381.22; stackHeight = 28
                     jalr $t0 # subtract # Call at 381.22; stackHeight = 28
                    # EXIT NODE # Call at 381.22; stackHeight = 24
                   lw $t0,0($sp) # Call at 381.42; stackHeight = 24
                   beq $t0,$zero,nullPtrException # Call at 381.42; stackHeight = 24
                   lw $t0,-12($t0) # Call at 381.42; stackHeight = 24
                   lw $t0,8($t0) # Call at 381.42; stackHeight = 24
                   jalr $t0 # toString # Call at 381.42; stackHeight = 24
                  # EXIT NODE # Call at 381.42; stackHeight = 24
                  # ENTER NODE # StringLiteral at 381.60; stackHeight = 24
                   subu $sp,$sp,4 # StringLiteral at 381.60; stackHeight = 24
                   la $t0,strLit_486 # StringLiteral at 381.60; stackHeight = 28
                   sw $t0,($sp)#**"strLit:\?" # StringLiteral at 381.60; stackHeight = 28
                  # EXIT NODE # StringLiteral at 381.60; stackHeight = 28
                 lw $t0,4($sp) # Call at 381.53; stackHeight = 28
                 beq $t0,$zero,nullPtrException # Call at 381.53; stackHeight = 28
                 lw $t0,-12($t0) # Call at 381.53; stackHeight = 28
                 lw $t0,12($t0) # Call at 381.53; stackHeight = 28
                 jalr $t0 # concat # Call at 381.53; stackHeight = 28
                # EXIT NODE # Call at 381.53; stackHeight = 24
               lw $t0,4($sp) # Call at 381.5; stackHeight = 24
               beq $t0,$zero,nullPtrException # Call at 381.5; stackHeight = 24
               lw $t0,-12($t0) # Call at 381.5; stackHeight = 24
               lw $t0,24($t0) # Call at 381.5; stackHeight = 24
               jalr $t0 # printStr # Call at 381.5; stackHeight = 24
              # EXIT NODE # Call at 381.5; stackHeight = 16
            # EXIT NODE # CallStatement at 381.5; stackHeight = 16
          # EXIT NODE # Block at 380.44; stackHeight = 16
          # ENTER NODE # Assign at 380.39; stackHeight = 16
            # ENTER NODE # Plus at 380.40; stackHeight = 16
              # ENTER NODE # IdentifierExp at 380.39; stackHeight = 16
               lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 380.39; stackHeight = 16
               subu $sp,$sp,8 # IdentifierExp at 380.39; stackHeight = 16
               sw $s5,4($sp)#**"GC tag" # IdentifierExp at 380.39; stackHeight = 24
               sw $t0,($sp)#**"" # IdentifierExp at 380.39; stackHeight = 24
              # EXIT NODE # IdentifierExp at 380.39; stackHeight = 24
              # ENTER NODE # IntegerLiteral at 380.40; stackHeight = 24
               subu $sp,$sp,8 # IntegerLiteral at 380.40; stackHeight = 24
               sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 380.40; stackHeight = 32
               li $t0,1 # IntegerLiteral at 380.40; stackHeight = 32
               sw $t0,($sp) # IntegerLiteral at 380.40; stackHeight = 32
              # EXIT NODE # IntegerLiteral at 380.40; stackHeight = 32
             lw $t0,($sp) # Plus at 380.40; stackHeight = 32
             lw $t1,8($sp) # Plus at 380.40; stackHeight = 32
             addu $t0,$t0,$t1 # Plus at 380.40; stackHeight = 32
             addu $sp,$sp,8 # Plus at 380.40; stackHeight = 32
             sw $t0,($sp)#**"" # Plus at 380.40; stackHeight = 32
            # EXIT NODE # Plus at 380.40; stackHeight = 24
           lw $t0,($sp) # Assign at 380.39; stackHeight = 24
           sw $t0,8($sp) # Assign at 380.39; stackHeight = 24
           addu $sp,$sp,8 # Assign at 380.39; stackHeight = 24
          # EXIT NODE # Assign at 380.39; stackHeight = 16
        # EXIT NODE # Block at 380.4; stackHeight = 16
      while_enter_2309: # While at 380.4; stackHeight = 16
        # ENTER NODE # LessThan at 380.22; stackHeight = 16
          # ENTER NODE # IdentifierExp at 380.20; stackHeight = 16
           lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 380.20; stackHeight = 16
           subu $sp,$sp,8 # IdentifierExp at 380.20; stackHeight = 16
           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 380.20; stackHeight = 24
           sw $t0,($sp)#**"" # IdentifierExp at 380.20; stackHeight = 24
          # EXIT NODE # IdentifierExp at 380.20; stackHeight = 24
          # ENTER NODE # ArrayLength at 380.30; stackHeight = 24
            # ENTER NODE # IdentifierExp at 380.24; stackHeight = 24
             lw $t0,4($s2) # inst-var # IdentifierExp at 380.24; stackHeight = 24
             subu $sp,$sp,4 # IdentifierExp at 380.24; stackHeight = 24
             sw $t0,($sp)#**"" # IdentifierExp at 380.24; stackHeight = 28
            # EXIT NODE # IdentifierExp at 380.24; stackHeight = 28
           lw $t0,($sp) # ArrayLength at 380.30; stackHeight = 28
           beq $t0,$zero,nullPtrException # ArrayLength at 380.30; stackHeight = 28
           lw $t0,-4($t0) # ArrayLength at 380.30; stackHeight = 28
           sw $s5,($sp)#**"GC tag" # ArrayLength at 380.30; stackHeight = 28
           subu $sp,4 # ArrayLength at 380.30; stackHeight = 28
           sw $t0,($sp)#**"" # ArrayLength at 380.30; stackHeight = 28
          # EXIT NODE # ArrayLength at 380.30; stackHeight = 32
         lw $t0,($sp) # LessThan at 380.22; stackHeight = 32
         lw $t1,8($sp) # LessThan at 380.22; stackHeight = 32
         slt $t0,$t1,$t0 # LessThan at 380.22; stackHeight = 32
         addu $sp,$sp,12 # LessThan at 380.22; stackHeight = 32
         sw $t0,($sp)#**"" # LessThan at 380.22; stackHeight = 20
        # EXIT NODE # LessThan at 380.22; stackHeight = 20
       lw $t0,($sp) # While at 380.4; stackHeight = 20
       addu $sp,$sp,4 # While at 380.4; stackHeight = 20
      bne $t0,$zero,while_top_2309 # While at 380.4; stackHeight = 16
      break_target_2309: # While at 380.4; stackHeight = 16
      # EXIT NODE # While at 380.4; stackHeight = 16
     addu $sp,8 # Block at 380.4; stackHeight = 16
    # EXIT NODE # Block at 380.4; stackHeight = 8
  # EXIT NODE # Block at 376.41; stackHeight = 8
  # ENTER NODE # Assign at 376.36; stackHeight = 8
    # ENTER NODE # Plus at 376.37; stackHeight = 8
      # ENTER NODE # IdentifierExp at 376.36; stackHeight = 8
       lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 376.36; stackHeight = 8
       subu $sp,$sp,8 # IdentifierExp at 376.36; stackHeight = 8
       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 376.36; stackHeight = 16
       sw $t0,($sp)#**"" # IdentifierExp at 376.36; stackHeight = 16
      # EXIT NODE # IdentifierExp at 376.36; stackHeight = 16
      # ENTER NODE # IntegerLiteral at 376.37; stackHeight = 16
       subu $sp,$sp,8 # IntegerLiteral at 376.37; stackHeight = 16
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 376.37; stackHeight = 24
       li $t0,1 # IntegerLiteral at 376.37; stackHeight = 24
       sw $t0,($sp) # IntegerLiteral at 376.37; stackHeight = 24
      # EXIT NODE # IntegerLiteral at 376.37; stackHeight = 24
     lw $t0,($sp) # Plus at 376.37; stackHeight = 24
     lw $t1,8($sp) # Plus at 376.37; stackHeight = 24
     addu $t0,$t0,$t1 # Plus at 376.37; stackHeight = 24
     addu $sp,$sp,8 # Plus at 376.37; stackHeight = 24
     sw $t0,($sp)#**"" # Plus at 376.37; stackHeight = 24
    # EXIT NODE # Plus at 376.37; stackHeight = 16
   lw $t0,($sp) # Assign at 376.36; stackHeight = 16
   sw $t0,8($sp) # Assign at 376.36; stackHeight = 16
   addu $sp,$sp,8 # Assign at 376.36; stackHeight = 16
  # EXIT NODE # Assign at 376.36; stackHeight = 8
# EXIT NODE # Block at 376.3; stackHeight = 8
while_enter_2313: # While at 376.3; stackHeight = 8
  # ENTER NODE # LessThan at 376.21; stackHeight = 8
    # ENTER NODE # IdentifierExp at 376.19; stackHeight = 8
     lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 376.19; stackHeight = 8
     subu $sp,$sp,8 # IdentifierExp at 376.19; stackHeight = 8
     sw $s5,4($sp)#**"GC tag" # IdentifierExp at 376.19; stackHeight = 16
     sw $t0,($sp)#**"" # IdentifierExp at 376.19; stackHeight = 16
    # EXIT NODE # IdentifierExp at 376.19; stackHeight = 16
    # ENTER NODE # ArrayLength at 376.27; stackHeight = 16
      # ENTER NODE # IdentifierExp at 376.23; stackHeight = 16
       lw $t0,0($s2) # inst-var # IdentifierExp at 376.23; stackHeight = 16
       subu $sp,$sp,4 # IdentifierExp at 376.23; stackHeight = 16
       sw $t0,($sp)#**"" # IdentifierExp at 376.23; stackHeight = 20
      # EXIT NODE # IdentifierExp at 376.23; stackHeight = 20
     lw $t0,($sp) # ArrayLength at 376.27; stackHeight = 20
     beq $t0,$zero,nullPtrException # ArrayLength at 376.27; stackHeight = 20
     lw $t0,-4($t0) # ArrayLength at 376.27; stackHeight = 20
     sw $s5,($sp)#**"GC tag" # ArrayLength at 376.27; stackHeight = 20
     subu $sp,4 # ArrayLength at 376.27; stackHeight = 20
     sw $t0,($sp)#**"" # ArrayLength at 376.27; stackHeight = 20
    # EXIT NODE # ArrayLength at 376.27; stackHeight = 24
   lw $t0,($sp) # LessThan at 376.21; stackHeight = 24
   lw $t1,8($sp) # LessThan at 376.21; stackHeight = 24
   slt $t0,$t1,$t0 # LessThan at 376.21; stackHeight = 24
   addu $sp,$sp,12 # LessThan at 376.21; stackHeight = 24
   sw $t0,($sp)#**"" # LessThan at 376.21; stackHeight = 12
  # EXIT NODE # LessThan at 376.21; stackHeight = 12
 lw $t0,($sp) # While at 376.3; stackHeight = 12
 addu $sp,$sp,4 # While at 376.3; stackHeight = 12
bne $t0,$zero,while_top_2313 # While at 376.3; stackHeight = 8
break_target_2313: # While at 376.3; stackHeight = 8
# EXIT NODE # While at 376.3; stackHeight = 8
 addu $sp,8 # Block at 376.3; stackHeight = 8
# EXIT NODE # Block at 376.3; stackHeight = 0
  # ENTER NODE # Block at 384.3; stackHeight = 0
    # ENTER NODE # LocalVarDecl at 384.12; stackHeight = 0
      # ENTER NODE # IntegerLiteral at 384.16; stackHeight = 0
       subu $sp,$sp,8 # IntegerLiteral at 384.16; stackHeight = 0
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 384.16; stackHeight = 8
       li $t0,0 # IntegerLiteral at 384.16; stackHeight = 8
       sw $t0,($sp) # IntegerLiteral at 384.16; stackHeight = 8
      # EXIT NODE # IntegerLiteral at 384.16; stackHeight = 8
    # EXIT NODE # LocalVarDecl at 384.12; stackHeight = 8
    # ENTER NODE # While at 384.3; stackHeight = 8
    j while_enter_2390 # While at 384.3; stackHeight = 8
    while_top_2390: # While at 384.3; stackHeight = 8
      # ENTER NODE # Block at 384.3; stackHeight = 8
        # ENTER NODE # Block at 384.43; stackHeight = 8
          # ENTER NODE # Block at 385.4; stackHeight = 8
            # ENTER NODE # LocalVarDecl at 385.13; stackHeight = 8
              # ENTER NODE # IntegerLiteral at 385.17; stackHeight = 8
               subu $sp,$sp,8 # IntegerLiteral at 385.17; stackHeight = 8
               sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 385.17; stackHeight = 16
               li $t0,0 # IntegerLiteral at 385.17; stackHeight = 16
               sw $t0,($sp) # IntegerLiteral at 385.17; stackHeight = 16
              # EXIT NODE # IntegerLiteral at 385.17; stackHeight = 16
            # EXIT NODE # LocalVarDecl at 385.13; stackHeight = 16
            # ENTER NODE # While at 385.4; stackHeight = 16
            j while_enter_2356 # While at 385.4; stackHeight = 16
            while_top_2356: # While at 385.4; stackHeight = 16
              # ENTER NODE # Block at 385.4; stackHeight = 16
                # ENTER NODE # Block at 385.42; stackHeight = 16
                  # ENTER NODE # CallStatement at 386.5; stackHeight = 16
                    # ENTER NODE # Call at 386.5; stackHeight = 16
                      # ENTER NODE # This at 386.5; stackHeight = 16
                       subu $sp,$sp,4 # This at 386.5; stackHeight = 16
                       sw $s2,($sp)#**"" # This at 386.5; stackHeight = 20
                      # EXIT NODE # This at 386.5; stackHeight = 20
                      # ENTER NODE # Call at 386.53; stackHeight = 20
                        # ENTER NODE # Call at 386.42; stackHeight = 20
                          # ENTER NODE # Call at 386.24; stackHeight = 20
                            # ENTER NODE # IdentifierExp at 386.14; stackHeight = 20
                             lw $t0,4($s2) # inst-var # IdentifierExp at 386.14; stackHeight = 20
                             subu $sp,$sp,4 # IdentifierExp at 386.14; stackHeight = 20
                             sw $t0,($sp)#**"" # IdentifierExp at 386.14; stackHeight = 24
                            # EXIT NODE # IdentifierExp at 386.14; stackHeight = 24
                            # ENTER NODE # IdentifierExp at 386.21; stackHeight = 24
                             lw $t0,16($sp) # local: stackHt=24,var-offset=-8 # IdentifierExp at 386.21; stackHeight = 24
                             subu $sp,$sp,8 # IdentifierExp at 386.21; stackHeight = 24
                             sw $s5,4($sp)#**"GC tag" # IdentifierExp at 386.21; stackHeight = 32
                             sw $t0,($sp)#**"" # IdentifierExp at 386.21; stackHeight = 32
                            # EXIT NODE # IdentifierExp at 386.21; stackHeight = 32
                           lw $t0,8($sp) # ArrayLookup at 386.20; stackHeight = 32
                           beq $t0,$zero,nullPtrException # ArrayLookup at 386.20; stackHeight = 32
                           lw $t1,-4($t0) # ArrayLookup at 386.20; stackHeight = 32
                           lw $t2,($sp) # ArrayLookup at 386.20; stackHeight = 32
                           bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 386.20; stackHeight = 32
                           sll $t2,$t2,2 # ArrayLookup at 386.20; stackHeight = 32
                           addu $t2,$t2,$t0 # ArrayLookup at 386.20; stackHeight = 32
                           lw $t0,($t2) # ArrayLookup at 386.20; stackHeight = 32
                           sw $t0,8($sp)#**"" # ArrayLookup at 386.20; stackHeight = 32
                           addu $sp,$sp,8 # ArrayLookup at 386.20; stackHeight = 32
                          # EXIT NODE # ArrayLookup at 386.20; stackHeight = 24
                          # ENTER NODE # IdentifierExp at 386.33; stackHeight = 24
                           lw $t0,0($s2) # inst-var # IdentifierExp at 386.33; stackHeight = 24
                           subu $sp,$sp,4 # IdentifierExp at 386.33; stackHeight = 24
                           sw $t0,($sp)#**"" # IdentifierExp at 386.33; stackHeight = 28
                          # EXIT NODE # IdentifierExp at 386.33; stackHeight = 28
                          # ENTER NODE # IdentifierExp at 386.38; stackHeight = 28
                           lw $t0,12($sp) # local: stackHt=28,var-offset=-16 # IdentifierExp at 386.38; stackHeight = 28
                           subu $sp,$sp,8 # IdentifierExp at 386.38; stackHeight = 28
                           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 386.38; stackHeight = 36
                           sw $t0,($sp)#**"" # IdentifierExp at 386.38; stackHeight = 36
                          # EXIT NODE # IdentifierExp at 386.38; stackHeight = 36
                         lw $t0,8($sp) # ArrayLookup at 386.37; stackHeight = 36
                         beq $t0,$zero,nullPtrException # ArrayLookup at 386.37; stackHeight = 36
                         lw $t1,-4($t0) # ArrayLookup at 386.37; stackHeight = 36
                         lw $t2,($sp) # ArrayLookup at 386.37; stackHeight = 36
                         bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 386.37; stackHeight = 36
                         sll $t2,$t2,2 # ArrayLookup at 386.37; stackHeight = 36
                         addu $t2,$t2,$t0 # ArrayLookup at 386.37; stackHeight = 36
                         lw $t0,($t2) # ArrayLookup at 386.37; stackHeight = 36
                         sw $t0,8($sp)#**"" # ArrayLookup at 386.37; stackHeight = 36
                         addu $sp,$sp,8 # ArrayLookup at 386.37; stackHeight = 36
                        # EXIT NODE # ArrayLookup at 386.37; stackHeight = 28
                       lw $t0,4($sp) # Call at 386.24; stackHeight = 28
                       beq $t0,$zero,nullPtrException # Call at 386.24; stackHeight = 28
                       lw $t0,-12($t0) # Call at 386.24; stackHeight = 28
                       lw $t0,24($t0) # Call at 386.24; stackHeight = 28
                       jalr $t0 # subtract # Call at 386.24; stackHeight = 28
                      # EXIT NODE # Call at 386.24; stackHeight = 24
                     lw $t0,0($sp) # Call at 386.42; stackHeight = 24
                     beq $t0,$zero,nullPtrException # Call at 386.42; stackHeight = 24
                     lw $t0,-12($t0) # Call at 386.42; stackHeight = 24
                     lw $t0,8($t0) # Call at 386.42; stackHeight = 24
                     jalr $t0 # toString # Call at 386.42; stackHeight = 24
                    # EXIT NODE # Call at 386.42; stackHeight = 24
                    # ENTER NODE # StringLiteral at 386.60; stackHeight = 24
                     subu $sp,$sp,4 # StringLiteral at 386.60; stackHeight = 24
                     la $t0,strLit_486 # StringLiteral at 386.60; stackHeight = 28
                     sw $t0,($sp)#**"strLit:\?" # StringLiteral at 386.60; stackHeight = 28
                    # EXIT NODE # StringLiteral at 386.60; stackHeight = 28
                   lw $t0,4($sp) # Call at 386.53; stackHeight = 28
                   beq $t0,$zero,nullPtrException # Call at 386.53; stackHeight = 28
                   lw $t0,-12($t0) # Call at 386.53; stackHeight = 28
                   lw $t0,12($t0) # Call at 386.53; stackHeight = 28
                   jalr $t0 # concat # Call at 386.53; stackHeight = 28
                  # EXIT NODE # Call at 386.53; stackHeight = 24
                 lw $t0,4($sp) # Call at 386.5; stackHeight = 24
                 beq $t0,$zero,nullPtrException # Call at 386.5; stackHeight = 24
                 lw $t0,-12($t0) # Call at 386.5; stackHeight = 24
                 lw $t0,24($t0) # Call at 386.5; stackHeight = 24
                 jalr $t0 # printStr # Call at 386.5; stackHeight = 24
                # EXIT NODE # Call at 386.5; stackHeight = 16
              # EXIT NODE # CallStatement at 386.5; stackHeight = 16
            # EXIT NODE # Block at 385.42; stackHeight = 16
            # ENTER NODE # Assign at 385.37; stackHeight = 16
              # ENTER NODE # Plus at 385.38; stackHeight = 16
                # ENTER NODE # IdentifierExp at 385.37; stackHeight = 16
                 lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 385.37; stackHeight = 16
                 subu $sp,$sp,8 # IdentifierExp at 385.37; stackHeight = 16
                 sw $s5,4($sp)#**"GC tag" # IdentifierExp at 385.37; stackHeight = 24
                 sw $t0,($sp)#**"" # IdentifierExp at 385.37; stackHeight = 24
                # EXIT NODE # IdentifierExp at 385.37; stackHeight = 24
                # ENTER NODE # IntegerLiteral at 385.38; stackHeight = 24
                 subu $sp,$sp,8 # IntegerLiteral at 385.38; stackHeight = 24
                 sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 385.38; stackHeight = 32
                 li $t0,1 # IntegerLiteral at 385.38; stackHeight = 32
                 sw $t0,($sp) # IntegerLiteral at 385.38; stackHeight = 32
                # EXIT NODE # IntegerLiteral at 385.38; stackHeight = 32
               lw $t0,($sp) # Plus at 385.38; stackHeight = 32
               lw $t1,8($sp) # Plus at 385.38; stackHeight = 32
               addu $t0,$t0,$t1 # Plus at 385.38; stackHeight = 32
               addu $sp,$sp,8 # Plus at 385.38; stackHeight = 32
               sw $t0,($sp)#**"" # Plus at 385.38; stackHeight = 32
              # EXIT NODE # Plus at 385.38; stackHeight = 24
             lw $t0,($sp) # Assign at 385.37; stackHeight = 24
             sw $t0,8($sp) # Assign at 385.37; stackHeight = 24
             addu $sp,$sp,8 # Assign at 385.37; stackHeight = 24
            # EXIT NODE # Assign at 385.37; stackHeight = 16
          # EXIT NODE # Block at 385.4; stackHeight = 16
        while_enter_2356: # While at 385.4; stackHeight = 16
          # ENTER NODE # LessThan at 385.22; stackHeight = 16
            # ENTER NODE # IdentifierExp at 385.20; stackHeight = 16
             lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 385.20; stackHeight = 16
             subu $sp,$sp,8 # IdentifierExp at 385.20; stackHeight = 16
             sw $s5,4($sp)#**"GC tag" # IdentifierExp at 385.20; stackHeight = 24
             sw $t0,($sp)#**"" # IdentifierExp at 385.20; stackHeight = 24
            # EXIT NODE # IdentifierExp at 385.20; stackHeight = 24
            # ENTER NODE # ArrayLength at 385.28; stackHeight = 24
              # ENTER NODE # IdentifierExp at 385.24; stackHeight = 24
               lw $t0,0($s2) # inst-var # IdentifierExp at 385.24; stackHeight = 24
               subu $sp,$sp,4 # IdentifierExp at 385.24; stackHeight = 24
               sw $t0,($sp)#**"" # IdentifierExp at 385.24; stackHeight = 28
              # EXIT NODE # IdentifierExp at 385.24; stackHeight = 28
             lw $t0,($sp) # ArrayLength at 385.28; stackHeight = 28
             beq $t0,$zero,nullPtrException # ArrayLength at 385.28; stackHeight = 28
             lw $t0,-4($t0) # ArrayLength at 385.28; stackHeight = 28
             sw $s5,($sp)#**"GC tag" # ArrayLength at 385.28; stackHeight = 28
             subu $sp,4 # ArrayLength at 385.28; stackHeight = 28
             sw $t0,($sp)#**"" # ArrayLength at 385.28; stackHeight = 28
            # EXIT NODE # ArrayLength at 385.28; stackHeight = 32
           lw $t0,($sp) # LessThan at 385.22; stackHeight = 32
           lw $t1,8($sp) # LessThan at 385.22; stackHeight = 32
           slt $t0,$t1,$t0 # LessThan at 385.22; stackHeight = 32
           addu $sp,$sp,12 # LessThan at 385.22; stackHeight = 32
           sw $t0,($sp)#**"" # LessThan at 385.22; stackHeight = 20
          # EXIT NODE # LessThan at 385.22; stackHeight = 20
         lw $t0,($sp) # While at 385.4; stackHeight = 20
         addu $sp,$sp,4 # While at 385.4; stackHeight = 20
        bne $t0,$zero,while_top_2356 # While at 385.4; stackHeight = 16
        break_target_2356: # While at 385.4; stackHeight = 16
        # EXIT NODE # While at 385.4; stackHeight = 16
       addu $sp,8 # Block at 385.4; stackHeight = 16
      # EXIT NODE # Block at 385.4; stackHeight = 8
      # ENTER NODE # Block at 388.4; stackHeight = 8
        # ENTER NODE # LocalVarDecl at 388.13; stackHeight = 8
          # ENTER NODE # IntegerLiteral at 388.17; stackHeight = 8
           subu $sp,$sp,8 # IntegerLiteral at 388.17; stackHeight = 8
           sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 388.17; stackHeight = 16
           li $t0,0 # IntegerLiteral at 388.17; stackHeight = 16
           sw $t0,($sp) # IntegerLiteral at 388.17; stackHeight = 16
          # EXIT NODE # IntegerLiteral at 388.17; stackHeight = 16
        # EXIT NODE # LocalVarDecl at 388.13; stackHeight = 16
        # ENTER NODE # While at 388.4; stackHeight = 16
        j while_enter_2386 # While at 388.4; stackHeight = 16
        while_top_2386: # While at 388.4; stackHeight = 16
          # ENTER NODE # Block at 388.4; stackHeight = 16
            # ENTER NODE # Block at 388.44; stackHeight = 16
              # ENTER NODE # CallStatement at 389.5; stackHeight = 16
                # ENTER NODE # Call at 389.5; stackHeight = 16
                  # ENTER NODE # This at 389.5; stackHeight = 16
                   subu $sp,$sp,4 # This at 389.5; stackHeight = 16
                   sw $s2,($sp)#**"" # This at 389.5; stackHeight = 20
                  # EXIT NODE # This at 389.5; stackHeight = 20
                  # ENTER NODE # Call at 389.55; stackHeight = 20
                    # ENTER NODE # Call at 389.44; stackHeight = 20
                      # ENTER NODE # Call at 389.24; stackHeight = 20
                        # ENTER NODE # IdentifierExp at 389.14; stackHeight = 20
                         lw $t0,4($s2) # inst-var # IdentifierExp at 389.14; stackHeight = 20
                         subu $sp,$sp,4 # IdentifierExp at 389.14; stackHeight = 20
                         sw $t0,($sp)#**"" # IdentifierExp at 389.14; stackHeight = 24
                        # EXIT NODE # IdentifierExp at 389.14; stackHeight = 24
                        # ENTER NODE # IdentifierExp at 389.21; stackHeight = 24
                         lw $t0,16($sp) # local: stackHt=24,var-offset=-8 # IdentifierExp at 389.21; stackHeight = 24
                         subu $sp,$sp,8 # IdentifierExp at 389.21; stackHeight = 24
                         sw $s5,4($sp)#**"GC tag" # IdentifierExp at 389.21; stackHeight = 32
                         sw $t0,($sp)#**"" # IdentifierExp at 389.21; stackHeight = 32
                        # EXIT NODE # IdentifierExp at 389.21; stackHeight = 32
                       lw $t0,8($sp) # ArrayLookup at 389.20; stackHeight = 32
                       beq $t0,$zero,nullPtrException # ArrayLookup at 389.20; stackHeight = 32
                       lw $t1,-4($t0) # ArrayLookup at 389.20; stackHeight = 32
                       lw $t2,($sp) # ArrayLookup at 389.20; stackHeight = 32
                       bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 389.20; stackHeight = 32
                       sll $t2,$t2,2 # ArrayLookup at 389.20; stackHeight = 32
                       addu $t2,$t2,$t0 # ArrayLookup at 389.20; stackHeight = 32
                       lw $t0,($t2) # ArrayLookup at 389.20; stackHeight = 32
                       sw $t0,8($sp)#**"" # ArrayLookup at 389.20; stackHeight = 32
                       addu $sp,$sp,8 # ArrayLookup at 389.20; stackHeight = 32
                      # EXIT NODE # ArrayLookup at 389.20; stackHeight = 24
                      # ENTER NODE # IdentifierExp at 389.33; stackHeight = 24
                       lw $t0,4($s2) # inst-var # IdentifierExp at 389.33; stackHeight = 24
                       subu $sp,$sp,4 # IdentifierExp at 389.33; stackHeight = 24
                       sw $t0,($sp)#**"" # IdentifierExp at 389.33; stackHeight = 28
                      # EXIT NODE # IdentifierExp at 389.33; stackHeight = 28
                      # ENTER NODE # IdentifierExp at 389.40; stackHeight = 28
                       lw $t0,12($sp) # local: stackHt=28,var-offset=-16 # IdentifierExp at 389.40; stackHeight = 28
                       subu $sp,$sp,8 # IdentifierExp at 389.40; stackHeight = 28
                       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 389.40; stackHeight = 36
                       sw $t0,($sp)#**"" # IdentifierExp at 389.40; stackHeight = 36
                      # EXIT NODE # IdentifierExp at 389.40; stackHeight = 36
                     lw $t0,8($sp) # ArrayLookup at 389.39; stackHeight = 36
                     beq $t0,$zero,nullPtrException # ArrayLookup at 389.39; stackHeight = 36
                     lw $t1,-4($t0) # ArrayLookup at 389.39; stackHeight = 36
                     lw $t2,($sp) # ArrayLookup at 389.39; stackHeight = 36
                     bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 389.39; stackHeight = 36
                     sll $t2,$t2,2 # ArrayLookup at 389.39; stackHeight = 36
                     addu $t2,$t2,$t0 # ArrayLookup at 389.39; stackHeight = 36
                     lw $t0,($t2) # ArrayLookup at 389.39; stackHeight = 36
                     sw $t0,8($sp)#**"" # ArrayLookup at 389.39; stackHeight = 36
                     addu $sp,$sp,8 # ArrayLookup at 389.39; stackHeight = 36
                    # EXIT NODE # ArrayLookup at 389.39; stackHeight = 28
                   lw $t0,4($sp) # Call at 389.24; stackHeight = 28
                   beq $t0,$zero,nullPtrException # Call at 389.24; stackHeight = 28
                   lw $t0,-12($t0) # Call at 389.24; stackHeight = 28
                   lw $t0,24($t0) # Call at 389.24; stackHeight = 28
                   jalr $t0 # subtract # Call at 389.24; stackHeight = 28
                  # EXIT NODE # Call at 389.24; stackHeight = 24
                 lw $t0,0($sp) # Call at 389.44; stackHeight = 24
                 beq $t0,$zero,nullPtrException # Call at 389.44; stackHeight = 24
                 lw $t0,-12($t0) # Call at 389.44; stackHeight = 24
                 lw $t0,8($t0) # Call at 389.44; stackHeight = 24
                 jalr $t0 # toString # Call at 389.44; stackHeight = 24
                # EXIT NODE # Call at 389.44; stackHeight = 24
                # ENTER NODE # StringLiteral at 389.62; stackHeight = 24
                 subu $sp,$sp,4 # StringLiteral at 389.62; stackHeight = 24
                 la $t0,strLit_486 # StringLiteral at 389.62; stackHeight = 28
                 sw $t0,($sp)#**"strLit:\?" # StringLiteral at 389.62; stackHeight = 28
                # EXIT NODE # StringLiteral at 389.62; stackHeight = 28
               lw $t0,4($sp) # Call at 389.55; stackHeight = 28
               beq $t0,$zero,nullPtrException # Call at 389.55; stackHeight = 28
               lw $t0,-12($t0) # Call at 389.55; stackHeight = 28
               lw $t0,12($t0) # Call at 389.55; stackHeight = 28
               jalr $t0 # concat # Call at 389.55; stackHeight = 28
              # EXIT NODE # Call at 389.55; stackHeight = 24
             lw $t0,4($sp) # Call at 389.5; stackHeight = 24
             beq $t0,$zero,nullPtrException # Call at 389.5; stackHeight = 24
             lw $t0,-12($t0) # Call at 389.5; stackHeight = 24
             lw $t0,24($t0) # Call at 389.5; stackHeight = 24
             jalr $t0 # printStr # Call at 389.5; stackHeight = 24
            # EXIT NODE # Call at 389.5; stackHeight = 16
          # EXIT NODE # CallStatement at 389.5; stackHeight = 16
        # EXIT NODE # Block at 388.44; stackHeight = 16
        # ENTER NODE # Assign at 388.39; stackHeight = 16
          # ENTER NODE # Plus at 388.40; stackHeight = 16
            # ENTER NODE # IdentifierExp at 388.39; stackHeight = 16
             lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 388.39; stackHeight = 16
             subu $sp,$sp,8 # IdentifierExp at 388.39; stackHeight = 16
             sw $s5,4($sp)#**"GC tag" # IdentifierExp at 388.39; stackHeight = 24
             sw $t0,($sp)#**"" # IdentifierExp at 388.39; stackHeight = 24
            # EXIT NODE # IdentifierExp at 388.39; stackHeight = 24
            # ENTER NODE # IntegerLiteral at 388.40; stackHeight = 24
             subu $sp,$sp,8 # IntegerLiteral at 388.40; stackHeight = 24
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 388.40; stackHeight = 32
             li $t0,1 # IntegerLiteral at 388.40; stackHeight = 32
             sw $t0,($sp) # IntegerLiteral at 388.40; stackHeight = 32
            # EXIT NODE # IntegerLiteral at 388.40; stackHeight = 32
           lw $t0,($sp) # Plus at 388.40; stackHeight = 32
           lw $t1,8($sp) # Plus at 388.40; stackHeight = 32
           addu $t0,$t0,$t1 # Plus at 388.40; stackHeight = 32
           addu $sp,$sp,8 # Plus at 388.40; stackHeight = 32
           sw $t0,($sp)#**"" # Plus at 388.40; stackHeight = 32
          # EXIT NODE # Plus at 388.40; stackHeight = 24
         lw $t0,($sp) # Assign at 388.39; stackHeight = 24
         sw $t0,8($sp) # Assign at 388.39; stackHeight = 24
         addu $sp,$sp,8 # Assign at 388.39; stackHeight = 24
        # EXIT NODE # Assign at 388.39; stackHeight = 16
      # EXIT NODE # Block at 388.4; stackHeight = 16
    while_enter_2386: # While at 388.4; stackHeight = 16
      # ENTER NODE # LessThan at 388.22; stackHeight = 16
        # ENTER NODE # IdentifierExp at 388.20; stackHeight = 16
         lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 388.20; stackHeight = 16
         subu $sp,$sp,8 # IdentifierExp at 388.20; stackHeight = 16
         sw $s5,4($sp)#**"GC tag" # IdentifierExp at 388.20; stackHeight = 24
         sw $t0,($sp)#**"" # IdentifierExp at 388.20; stackHeight = 24
        # EXIT NODE # IdentifierExp at 388.20; stackHeight = 24
        # ENTER NODE # ArrayLength at 388.30; stackHeight = 24
          # ENTER NODE # IdentifierExp at 388.24; stackHeight = 24
           lw $t0,4($s2) # inst-var # IdentifierExp at 388.24; stackHeight = 24
           subu $sp,$sp,4 # IdentifierExp at 388.24; stackHeight = 24
           sw $t0,($sp)#**"" # IdentifierExp at 388.24; stackHeight = 28
          # EXIT NODE # IdentifierExp at 388.24; stackHeight = 28
         lw $t0,($sp) # ArrayLength at 388.30; stackHeight = 28
         beq $t0,$zero,nullPtrException # ArrayLength at 388.30; stackHeight = 28
         lw $t0,-4($t0) # ArrayLength at 388.30; stackHeight = 28
         sw $s5,($sp)#**"GC tag" # ArrayLength at 388.30; stackHeight = 28
         subu $sp,4 # ArrayLength at 388.30; stackHeight = 28
         sw $t0,($sp)#**"" # ArrayLength at 388.30; stackHeight = 28
        # EXIT NODE # ArrayLength at 388.30; stackHeight = 32
       lw $t0,($sp) # LessThan at 388.22; stackHeight = 32
       lw $t1,8($sp) # LessThan at 388.22; stackHeight = 32
       slt $t0,$t1,$t0 # LessThan at 388.22; stackHeight = 32
       addu $sp,$sp,12 # LessThan at 388.22; stackHeight = 32
       sw $t0,($sp)#**"" # LessThan at 388.22; stackHeight = 20
      # EXIT NODE # LessThan at 388.22; stackHeight = 20
     lw $t0,($sp) # While at 388.4; stackHeight = 20
     addu $sp,$sp,4 # While at 388.4; stackHeight = 20
    bne $t0,$zero,while_top_2386 # While at 388.4; stackHeight = 16
    break_target_2386: # While at 388.4; stackHeight = 16
    # EXIT NODE # While at 388.4; stackHeight = 16
   addu $sp,8 # Block at 388.4; stackHeight = 16
  # EXIT NODE # Block at 388.4; stackHeight = 8
# EXIT NODE # Block at 384.43; stackHeight = 8
  # ENTER NODE # Assign at 384.38; stackHeight = 8
    # ENTER NODE # Plus at 384.39; stackHeight = 8
      # ENTER NODE # IdentifierExp at 384.38; stackHeight = 8
       lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 384.38; stackHeight = 8
       subu $sp,$sp,8 # IdentifierExp at 384.38; stackHeight = 8
       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 384.38; stackHeight = 16
       sw $t0,($sp)#**"" # IdentifierExp at 384.38; stackHeight = 16
      # EXIT NODE # IdentifierExp at 384.38; stackHeight = 16
      # ENTER NODE # IntegerLiteral at 384.39; stackHeight = 16
       subu $sp,$sp,8 # IntegerLiteral at 384.39; stackHeight = 16
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 384.39; stackHeight = 24
       li $t0,1 # IntegerLiteral at 384.39; stackHeight = 24
       sw $t0,($sp) # IntegerLiteral at 384.39; stackHeight = 24
      # EXIT NODE # IntegerLiteral at 384.39; stackHeight = 24
     lw $t0,($sp) # Plus at 384.39; stackHeight = 24
     lw $t1,8($sp) # Plus at 384.39; stackHeight = 24
     addu $t0,$t0,$t1 # Plus at 384.39; stackHeight = 24
     addu $sp,$sp,8 # Plus at 384.39; stackHeight = 24
     sw $t0,($sp)#**"" # Plus at 384.39; stackHeight = 24
    # EXIT NODE # Plus at 384.39; stackHeight = 16
   lw $t0,($sp) # Assign at 384.38; stackHeight = 16
   sw $t0,8($sp) # Assign at 384.38; stackHeight = 16
   addu $sp,$sp,8 # Assign at 384.38; stackHeight = 16
  # EXIT NODE # Assign at 384.38; stackHeight = 8
# EXIT NODE # Block at 384.3; stackHeight = 8
while_enter_2390: # While at 384.3; stackHeight = 8
  # ENTER NODE # LessThan at 384.21; stackHeight = 8
    # ENTER NODE # IdentifierExp at 384.19; stackHeight = 8
     lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 384.19; stackHeight = 8
     subu $sp,$sp,8 # IdentifierExp at 384.19; stackHeight = 8
     sw $s5,4($sp)#**"GC tag" # IdentifierExp at 384.19; stackHeight = 16
     sw $t0,($sp)#**"" # IdentifierExp at 384.19; stackHeight = 16
    # EXIT NODE # IdentifierExp at 384.19; stackHeight = 16
    # ENTER NODE # ArrayLength at 384.29; stackHeight = 16
      # ENTER NODE # IdentifierExp at 384.23; stackHeight = 16
       lw $t0,4($s2) # inst-var # IdentifierExp at 384.23; stackHeight = 16
       subu $sp,$sp,4 # IdentifierExp at 384.23; stackHeight = 16
       sw $t0,($sp)#**"" # IdentifierExp at 384.23; stackHeight = 20
      # EXIT NODE # IdentifierExp at 384.23; stackHeight = 20
     lw $t0,($sp) # ArrayLength at 384.29; stackHeight = 20
     beq $t0,$zero,nullPtrException # ArrayLength at 384.29; stackHeight = 20
     lw $t0,-4($t0) # ArrayLength at 384.29; stackHeight = 20
     sw $s5,($sp)#**"GC tag" # ArrayLength at 384.29; stackHeight = 20
     subu $sp,4 # ArrayLength at 384.29; stackHeight = 20
     sw $t0,($sp)#**"" # ArrayLength at 384.29; stackHeight = 20
    # EXIT NODE # ArrayLength at 384.29; stackHeight = 24
   lw $t0,($sp) # LessThan at 384.21; stackHeight = 24
   lw $t1,8($sp) # LessThan at 384.21; stackHeight = 24
   slt $t0,$t1,$t0 # LessThan at 384.21; stackHeight = 24
   addu $sp,$sp,12 # LessThan at 384.21; stackHeight = 24
   sw $t0,($sp)#**"" # LessThan at 384.21; stackHeight = 12
  # EXIT NODE # LessThan at 384.21; stackHeight = 12
 lw $t0,($sp) # While at 384.3; stackHeight = 12
 addu $sp,$sp,4 # While at 384.3; stackHeight = 12
bne $t0,$zero,while_top_2390 # While at 384.3; stackHeight = 8
break_target_2390: # While at 384.3; stackHeight = 8
# EXIT NODE # While at 384.3; stackHeight = 8
 addu $sp,8 # Block at 384.3; stackHeight = 8
# EXIT NODE # Block at 384.3; stackHeight = 0
 # stack height is 0 # MethodDeclVoid at 375.14; stackHeight = 0
 lw $ra,4($sp) # MethodDeclVoid at 375.14; stackHeight = 0
 lw $s2,0($sp) # MethodDeclVoid at 375.14; stackHeight = 0
 addu $sp,$sp,8 # MethodDeclVoid at 375.14; stackHeight = 0
jr $ra # MethodDeclVoid at 375.14; stackHeight = -8
# EXIT NODE # MethodDeclVoid at 375.14; stackHeight = -8
  # ENTER NODE # MethodDeclVoid at 394.14; stackHeight = -8
  .globl fcn_2449_toStringTest # MethodDeclVoid at 394.14; stackHeight = -8
  fcn_2449_toStringTest: # MethodDeclVoid at 394.14; stackHeight = -8
   subu $sp,$sp,4 # MethodDeclVoid at 394.14; stackHeight = -8
   sw $s2,($sp) #**"old this-ptr" # MethodDeclVoid at 394.14; stackHeight = -8
   lw $s2,4($sp) #**"this-ptr" # MethodDeclVoid at 394.14; stackHeight = -8
   sw $ra,4($sp) #**"RA:toStringTest" # MethodDeclVoid at 394.14; stackHeight = -8
    # ENTER NODE # Block at 395.3; stackHeight = 0
      # ENTER NODE # LocalVarDecl at 395.12; stackHeight = 0
        # ENTER NODE # IntegerLiteral at 395.16; stackHeight = 0
         subu $sp,$sp,8 # IntegerLiteral at 395.16; stackHeight = 0
         sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 395.16; stackHeight = 8
         li $t0,0 # IntegerLiteral at 395.16; stackHeight = 8
         sw $t0,($sp) # IntegerLiteral at 395.16; stackHeight = 8
        # EXIT NODE # IntegerLiteral at 395.16; stackHeight = 8
      # EXIT NODE # LocalVarDecl at 395.12; stackHeight = 8
      # ENTER NODE # While at 395.3; stackHeight = 8
      j while_enter_2419 # While at 395.3; stackHeight = 8
      while_top_2419: # While at 395.3; stackHeight = 8
        # ENTER NODE # Block at 395.3; stackHeight = 8
          # ENTER NODE # Block at 395.41; stackHeight = 8
            # ENTER NODE # CallStatement at 396.4; stackHeight = 8
              # ENTER NODE # Call at 396.4; stackHeight = 8
                # ENTER NODE # This at 396.4; stackHeight = 8
                 subu $sp,$sp,4 # This at 396.4; stackHeight = 8
                 sw $s2,($sp)#**"" # This at 396.4; stackHeight = 12
                # EXIT NODE # This at 396.4; stackHeight = 12
                # ENTER NODE # Call at 396.21; stackHeight = 12
                  # ENTER NODE # IdentifierExp at 396.13; stackHeight = 12
                   lw $t0,0($s2) # inst-var # IdentifierExp at 396.13; stackHeight = 12
                   subu $sp,$sp,4 # IdentifierExp at 396.13; stackHeight = 12
                   sw $t0,($sp)#**"" # IdentifierExp at 396.13; stackHeight = 16
                  # EXIT NODE # IdentifierExp at 396.13; stackHeight = 16
                  # ENTER NODE # IdentifierExp at 396.18; stackHeight = 16
                   lw $t0,8($sp) # local: stackHt=16,var-offset=-8 # IdentifierExp at 396.18; stackHeight = 16
                   subu $sp,$sp,8 # IdentifierExp at 396.18; stackHeight = 16
                   sw $s5,4($sp)#**"GC tag" # IdentifierExp at 396.18; stackHeight = 24
                   sw $t0,($sp)#**"" # IdentifierExp at 396.18; stackHeight = 24
                  # EXIT NODE # IdentifierExp at 396.18; stackHeight = 24
                 lw $t0,8($sp) # ArrayLookup at 396.17; stackHeight = 24
                 beq $t0,$zero,nullPtrException # ArrayLookup at 396.17; stackHeight = 24
                 lw $t1,-4($t0) # ArrayLookup at 396.17; stackHeight = 24
                 lw $t2,($sp) # ArrayLookup at 396.17; stackHeight = 24
                 bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 396.17; stackHeight = 24
                 sll $t2,$t2,2 # ArrayLookup at 396.17; stackHeight = 24
                 addu $t2,$t2,$t0 # ArrayLookup at 396.17; stackHeight = 24
                 lw $t0,($t2) # ArrayLookup at 396.17; stackHeight = 24
                 sw $t0,8($sp)#**"" # ArrayLookup at 396.17; stackHeight = 24
                 addu $sp,$sp,8 # ArrayLookup at 396.17; stackHeight = 24
                # EXIT NODE # ArrayLookup at 396.17; stackHeight = 16
               lw $t0,0($sp) # Call at 396.21; stackHeight = 16
               beq $t0,$zero,nullPtrException # Call at 396.21; stackHeight = 16
               lw $t0,-12($t0) # Call at 396.21; stackHeight = 16
               lw $t0,8($t0) # Call at 396.21; stackHeight = 16
               jalr $t0 # toString # Call at 396.21; stackHeight = 16
              # EXIT NODE # Call at 396.21; stackHeight = 16
             lw $t0,4($sp) # Call at 396.4; stackHeight = 16
             beq $t0,$zero,nullPtrException # Call at 396.4; stackHeight = 16
             lw $t0,-12($t0) # Call at 396.4; stackHeight = 16
             lw $t0,24($t0) # Call at 396.4; stackHeight = 16
             jalr $t0 # printStr # Call at 396.4; stackHeight = 16
            # EXIT NODE # Call at 396.4; stackHeight = 8
          # EXIT NODE # CallStatement at 396.4; stackHeight = 8
          # ENTER NODE # CallStatement at 397.4; stackHeight = 8
            # ENTER NODE # Call at 397.4; stackHeight = 8
              # ENTER NODE # This at 397.4; stackHeight = 8
               subu $sp,$sp,4 # This at 397.4; stackHeight = 8
               sw $s2,($sp)#**"" # This at 397.4; stackHeight = 12
              # EXIT NODE # This at 397.4; stackHeight = 12
              # ENTER NODE # StringLiteral at 397.13; stackHeight = 12
               subu $sp,$sp,4 # StringLiteral at 397.13; stackHeight = 12
               la $t0,strLit_486 # StringLiteral at 397.13; stackHeight = 16
               sw $t0,($sp)#**"strLit:\?" # StringLiteral at 397.13; stackHeight = 16
              # EXIT NODE # StringLiteral at 397.13; stackHeight = 16
             lw $t0,4($sp) # Call at 397.4; stackHeight = 16
             beq $t0,$zero,nullPtrException # Call at 397.4; stackHeight = 16
             lw $t0,-12($t0) # Call at 397.4; stackHeight = 16
             lw $t0,24($t0) # Call at 397.4; stackHeight = 16
             jalr $t0 # printStr # Call at 397.4; stackHeight = 16
            # EXIT NODE # Call at 397.4; stackHeight = 8
          # EXIT NODE # CallStatement at 397.4; stackHeight = 8
        # EXIT NODE # Block at 395.41; stackHeight = 8
        # ENTER NODE # Assign at 395.36; stackHeight = 8
          # ENTER NODE # Plus at 395.37; stackHeight = 8
            # ENTER NODE # IdentifierExp at 395.36; stackHeight = 8
             lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 395.36; stackHeight = 8
             subu $sp,$sp,8 # IdentifierExp at 395.36; stackHeight = 8
             sw $s5,4($sp)#**"GC tag" # IdentifierExp at 395.36; stackHeight = 16
             sw $t0,($sp)#**"" # IdentifierExp at 395.36; stackHeight = 16
            # EXIT NODE # IdentifierExp at 395.36; stackHeight = 16
            # ENTER NODE # IntegerLiteral at 395.37; stackHeight = 16
             subu $sp,$sp,8 # IntegerLiteral at 395.37; stackHeight = 16
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 395.37; stackHeight = 24
             li $t0,1 # IntegerLiteral at 395.37; stackHeight = 24
             sw $t0,($sp) # IntegerLiteral at 395.37; stackHeight = 24
            # EXIT NODE # IntegerLiteral at 395.37; stackHeight = 24
           lw $t0,($sp) # Plus at 395.37; stackHeight = 24
           lw $t1,8($sp) # Plus at 395.37; stackHeight = 24
           addu $t0,$t0,$t1 # Plus at 395.37; stackHeight = 24
           addu $sp,$sp,8 # Plus at 395.37; stackHeight = 24
           sw $t0,($sp)#**"" # Plus at 395.37; stackHeight = 24
          # EXIT NODE # Plus at 395.37; stackHeight = 16
         lw $t0,($sp) # Assign at 395.36; stackHeight = 16
         sw $t0,8($sp) # Assign at 395.36; stackHeight = 16
         addu $sp,$sp,8 # Assign at 395.36; stackHeight = 16
        # EXIT NODE # Assign at 395.36; stackHeight = 8
      # EXIT NODE # Block at 395.3; stackHeight = 8
    while_enter_2419: # While at 395.3; stackHeight = 8
      # ENTER NODE # LessThan at 395.21; stackHeight = 8
        # ENTER NODE # IdentifierExp at 395.19; stackHeight = 8
         lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 395.19; stackHeight = 8
         subu $sp,$sp,8 # IdentifierExp at 395.19; stackHeight = 8
         sw $s5,4($sp)#**"GC tag" # IdentifierExp at 395.19; stackHeight = 16
         sw $t0,($sp)#**"" # IdentifierExp at 395.19; stackHeight = 16
        # EXIT NODE # IdentifierExp at 395.19; stackHeight = 16
        # ENTER NODE # ArrayLength at 395.27; stackHeight = 16
          # ENTER NODE # IdentifierExp at 395.23; stackHeight = 16
           lw $t0,0($s2) # inst-var # IdentifierExp at 395.23; stackHeight = 16
           subu $sp,$sp,4 # IdentifierExp at 395.23; stackHeight = 16
           sw $t0,($sp)#**"" # IdentifierExp at 395.23; stackHeight = 20
          # EXIT NODE # IdentifierExp at 395.23; stackHeight = 20
         lw $t0,($sp) # ArrayLength at 395.27; stackHeight = 20
         beq $t0,$zero,nullPtrException # ArrayLength at 395.27; stackHeight = 20
         lw $t0,-4($t0) # ArrayLength at 395.27; stackHeight = 20
         sw $s5,($sp)#**"GC tag" # ArrayLength at 395.27; stackHeight = 20
         subu $sp,4 # ArrayLength at 395.27; stackHeight = 20
         sw $t0,($sp)#**"" # ArrayLength at 395.27; stackHeight = 20
        # EXIT NODE # ArrayLength at 395.27; stackHeight = 24
       lw $t0,($sp) # LessThan at 395.21; stackHeight = 24
       lw $t1,8($sp) # LessThan at 395.21; stackHeight = 24
       slt $t0,$t1,$t0 # LessThan at 395.21; stackHeight = 24
       addu $sp,$sp,12 # LessThan at 395.21; stackHeight = 24
       sw $t0,($sp)#**"" # LessThan at 395.21; stackHeight = 12
      # EXIT NODE # LessThan at 395.21; stackHeight = 12
     lw $t0,($sp) # While at 395.3; stackHeight = 12
     addu $sp,$sp,4 # While at 395.3; stackHeight = 12
    bne $t0,$zero,while_top_2419 # While at 395.3; stackHeight = 8
    break_target_2419: # While at 395.3; stackHeight = 8
    # EXIT NODE # While at 395.3; stackHeight = 8
   addu $sp,8 # Block at 395.3; stackHeight = 8
  # EXIT NODE # Block at 395.3; stackHeight = 0
  # ENTER NODE # Block at 399.3; stackHeight = 0
    # ENTER NODE # LocalVarDecl at 399.12; stackHeight = 0
      # ENTER NODE # IntegerLiteral at 399.16; stackHeight = 0
       subu $sp,$sp,8 # IntegerLiteral at 399.16; stackHeight = 0
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 399.16; stackHeight = 8
       li $t0,0 # IntegerLiteral at 399.16; stackHeight = 8
       sw $t0,($sp) # IntegerLiteral at 399.16; stackHeight = 8
      # EXIT NODE # IntegerLiteral at 399.16; stackHeight = 8
    # EXIT NODE # LocalVarDecl at 399.12; stackHeight = 8
    # ENTER NODE # While at 399.3; stackHeight = 8
    j while_enter_2447 # While at 399.3; stackHeight = 8
    while_top_2447: # While at 399.3; stackHeight = 8
      # ENTER NODE # Block at 399.3; stackHeight = 8
        # ENTER NODE # Block at 399.43; stackHeight = 8
          # ENTER NODE # CallStatement at 400.4; stackHeight = 8
            # ENTER NODE # Call at 400.4; stackHeight = 8
              # ENTER NODE # This at 400.4; stackHeight = 8
               subu $sp,$sp,4 # This at 400.4; stackHeight = 8
               sw $s2,($sp)#**"" # This at 400.4; stackHeight = 12
              # EXIT NODE # This at 400.4; stackHeight = 12
              # ENTER NODE # Call at 400.23; stackHeight = 12
                # ENTER NODE # IdentifierExp at 400.13; stackHeight = 12
                 lw $t0,4($s2) # inst-var # IdentifierExp at 400.13; stackHeight = 12
                 subu $sp,$sp,4 # IdentifierExp at 400.13; stackHeight = 12
                 sw $t0,($sp)#**"" # IdentifierExp at 400.13; stackHeight = 16
                # EXIT NODE # IdentifierExp at 400.13; stackHeight = 16
                # ENTER NODE # IdentifierExp at 400.20; stackHeight = 16
                 lw $t0,8($sp) # local: stackHt=16,var-offset=-8 # IdentifierExp at 400.20; stackHeight = 16
                 subu $sp,$sp,8 # IdentifierExp at 400.20; stackHeight = 16
                 sw $s5,4($sp)#**"GC tag" # IdentifierExp at 400.20; stackHeight = 24
                 sw $t0,($sp)#**"" # IdentifierExp at 400.20; stackHeight = 24
                # EXIT NODE # IdentifierExp at 400.20; stackHeight = 24
               lw $t0,8($sp) # ArrayLookup at 400.19; stackHeight = 24
               beq $t0,$zero,nullPtrException # ArrayLookup at 400.19; stackHeight = 24
               lw $t1,-4($t0) # ArrayLookup at 400.19; stackHeight = 24
               lw $t2,($sp) # ArrayLookup at 400.19; stackHeight = 24
               bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 400.19; stackHeight = 24
               sll $t2,$t2,2 # ArrayLookup at 400.19; stackHeight = 24
               addu $t2,$t2,$t0 # ArrayLookup at 400.19; stackHeight = 24
               lw $t0,($t2) # ArrayLookup at 400.19; stackHeight = 24
               sw $t0,8($sp)#**"" # ArrayLookup at 400.19; stackHeight = 24
               addu $sp,$sp,8 # ArrayLookup at 400.19; stackHeight = 24
              # EXIT NODE # ArrayLookup at 400.19; stackHeight = 16
             lw $t0,0($sp) # Call at 400.23; stackHeight = 16
             beq $t0,$zero,nullPtrException # Call at 400.23; stackHeight = 16
             lw $t0,-12($t0) # Call at 400.23; stackHeight = 16
             lw $t0,8($t0) # Call at 400.23; stackHeight = 16
             jalr $t0 # toString # Call at 400.23; stackHeight = 16
            # EXIT NODE # Call at 400.23; stackHeight = 16
           lw $t0,4($sp) # Call at 400.4; stackHeight = 16
           beq $t0,$zero,nullPtrException # Call at 400.4; stackHeight = 16
           lw $t0,-12($t0) # Call at 400.4; stackHeight = 16
           lw $t0,24($t0) # Call at 400.4; stackHeight = 16
           jalr $t0 # printStr # Call at 400.4; stackHeight = 16
          # EXIT NODE # Call at 400.4; stackHeight = 8
        # EXIT NODE # CallStatement at 400.4; stackHeight = 8
        # ENTER NODE # CallStatement at 401.4; stackHeight = 8
          # ENTER NODE # Call at 401.4; stackHeight = 8
            # ENTER NODE # This at 401.4; stackHeight = 8
             subu $sp,$sp,4 # This at 401.4; stackHeight = 8
             sw $s2,($sp)#**"" # This at 401.4; stackHeight = 12
            # EXIT NODE # This at 401.4; stackHeight = 12
            # ENTER NODE # StringLiteral at 401.13; stackHeight = 12
             subu $sp,$sp,4 # StringLiteral at 401.13; stackHeight = 12
             la $t0,strLit_486 # StringLiteral at 401.13; stackHeight = 16
             sw $t0,($sp)#**"strLit:\?" # StringLiteral at 401.13; stackHeight = 16
            # EXIT NODE # StringLiteral at 401.13; stackHeight = 16
           lw $t0,4($sp) # Call at 401.4; stackHeight = 16
           beq $t0,$zero,nullPtrException # Call at 401.4; stackHeight = 16
           lw $t0,-12($t0) # Call at 401.4; stackHeight = 16
           lw $t0,24($t0) # Call at 401.4; stackHeight = 16
           jalr $t0 # printStr # Call at 401.4; stackHeight = 16
          # EXIT NODE # Call at 401.4; stackHeight = 8
        # EXIT NODE # CallStatement at 401.4; stackHeight = 8
      # EXIT NODE # Block at 399.43; stackHeight = 8
      # ENTER NODE # Assign at 399.38; stackHeight = 8
        # ENTER NODE # Plus at 399.39; stackHeight = 8
          # ENTER NODE # IdentifierExp at 399.38; stackHeight = 8
           lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 399.38; stackHeight = 8
           subu $sp,$sp,8 # IdentifierExp at 399.38; stackHeight = 8
           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 399.38; stackHeight = 16
           sw $t0,($sp)#**"" # IdentifierExp at 399.38; stackHeight = 16
          # EXIT NODE # IdentifierExp at 399.38; stackHeight = 16
          # ENTER NODE # IntegerLiteral at 399.39; stackHeight = 16
           subu $sp,$sp,8 # IntegerLiteral at 399.39; stackHeight = 16
           sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 399.39; stackHeight = 24
           li $t0,1 # IntegerLiteral at 399.39; stackHeight = 24
           sw $t0,($sp) # IntegerLiteral at 399.39; stackHeight = 24
          # EXIT NODE # IntegerLiteral at 399.39; stackHeight = 24
         lw $t0,($sp) # Plus at 399.39; stackHeight = 24
         lw $t1,8($sp) # Plus at 399.39; stackHeight = 24
         addu $t0,$t0,$t1 # Plus at 399.39; stackHeight = 24
         addu $sp,$sp,8 # Plus at 399.39; stackHeight = 24
         sw $t0,($sp)#**"" # Plus at 399.39; stackHeight = 24
        # EXIT NODE # Plus at 399.39; stackHeight = 16
       lw $t0,($sp) # Assign at 399.38; stackHeight = 16
       sw $t0,8($sp) # Assign at 399.38; stackHeight = 16
       addu $sp,$sp,8 # Assign at 399.38; stackHeight = 16
      # EXIT NODE # Assign at 399.38; stackHeight = 8
    # EXIT NODE # Block at 399.3; stackHeight = 8
  while_enter_2447: # While at 399.3; stackHeight = 8
    # ENTER NODE # LessThan at 399.21; stackHeight = 8
      # ENTER NODE # IdentifierExp at 399.19; stackHeight = 8
       lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 399.19; stackHeight = 8
       subu $sp,$sp,8 # IdentifierExp at 399.19; stackHeight = 8
       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 399.19; stackHeight = 16
       sw $t0,($sp)#**"" # IdentifierExp at 399.19; stackHeight = 16
      # EXIT NODE # IdentifierExp at 399.19; stackHeight = 16
      # ENTER NODE # ArrayLength at 399.29; stackHeight = 16
        # ENTER NODE # IdentifierExp at 399.23; stackHeight = 16
         lw $t0,4($s2) # inst-var # IdentifierExp at 399.23; stackHeight = 16
         subu $sp,$sp,4 # IdentifierExp at 399.23; stackHeight = 16
         sw $t0,($sp)#**"" # IdentifierExp at 399.23; stackHeight = 20
        # EXIT NODE # IdentifierExp at 399.23; stackHeight = 20
       lw $t0,($sp) # ArrayLength at 399.29; stackHeight = 20
       beq $t0,$zero,nullPtrException # ArrayLength at 399.29; stackHeight = 20
       lw $t0,-4($t0) # ArrayLength at 399.29; stackHeight = 20
       sw $s5,($sp)#**"GC tag" # ArrayLength at 399.29; stackHeight = 20
       subu $sp,4 # ArrayLength at 399.29; stackHeight = 20
       sw $t0,($sp)#**"" # ArrayLength at 399.29; stackHeight = 20
      # EXIT NODE # ArrayLength at 399.29; stackHeight = 24
     lw $t0,($sp) # LessThan at 399.21; stackHeight = 24
     lw $t1,8($sp) # LessThan at 399.21; stackHeight = 24
     slt $t0,$t1,$t0 # LessThan at 399.21; stackHeight = 24
     addu $sp,$sp,12 # LessThan at 399.21; stackHeight = 24
     sw $t0,($sp)#**"" # LessThan at 399.21; stackHeight = 12
    # EXIT NODE # LessThan at 399.21; stackHeight = 12
   lw $t0,($sp) # While at 399.3; stackHeight = 12
   addu $sp,$sp,4 # While at 399.3; stackHeight = 12
  bne $t0,$zero,while_top_2447 # While at 399.3; stackHeight = 8
  break_target_2447: # While at 399.3; stackHeight = 8
  # EXIT NODE # While at 399.3; stackHeight = 8
 addu $sp,8 # Block at 399.3; stackHeight = 8
# EXIT NODE # Block at 399.3; stackHeight = 0
 # stack height is 0 # MethodDeclVoid at 394.14; stackHeight = 0
 lw $ra,4($sp) # MethodDeclVoid at 394.14; stackHeight = 0
 lw $s2,0($sp) # MethodDeclVoid at 394.14; stackHeight = 0
 addu $sp,$sp,8 # MethodDeclVoid at 394.14; stackHeight = 0
jr $ra # MethodDeclVoid at 394.14; stackHeight = -8
# EXIT NODE # MethodDeclVoid at 394.14; stackHeight = -8
# EXIT NODE # ClassDecl at 46.7; stackHeight = -8
  # ENTER NODE # ClassDecl at 408.7; stackHeight = -8
  # **** class BigInt **** # ClassDecl at 408.7; stackHeight = -8
    # ENTER NODE # MethodDeclNonVoid at 413.16; stackHeight = -8
    .globl fcn_2492_init # MethodDeclNonVoid at 413.16; stackHeight = -8
    fcn_2492_init: # MethodDeclNonVoid at 413.16; stackHeight = -8
     subu $sp,$sp,4 # MethodDeclNonVoid at 413.16; stackHeight = -8
     sw $s2,($sp) #**"old this-ptr" # MethodDeclNonVoid at 413.16; stackHeight = -8
     lw $s2,12($sp) #**"this-ptr" # MethodDeclNonVoid at 413.16; stackHeight = -8
     sw $ra,12($sp) #**"RA:init" # MethodDeclNonVoid at 413.16; stackHeight = -8
      # ENTER NODE # Assign at 414.9; stackHeight = 0
        # ENTER NODE # LessThan at 414.13; stackHeight = 0
          # ENTER NODE # IdentifierExp at 414.11; stackHeight = 0
           lw $t0,4($sp) # local: stackHt=0,var-offset=4 # IdentifierExp at 414.11; stackHeight = 0
           subu $sp,$sp,8 # IdentifierExp at 414.11; stackHeight = 0
           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 414.11; stackHeight = 8
           sw $t0,($sp)#**"" # IdentifierExp at 414.11; stackHeight = 8
          # EXIT NODE # IdentifierExp at 414.11; stackHeight = 8
          # ENTER NODE # IntegerLiteral at 414.15; stackHeight = 8
           subu $sp,$sp,8 # IntegerLiteral at 414.15; stackHeight = 8
           sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 414.15; stackHeight = 16
           li $t0,0 # IntegerLiteral at 414.15; stackHeight = 16
           sw $t0,($sp) # IntegerLiteral at 414.15; stackHeight = 16
          # EXIT NODE # IntegerLiteral at 414.15; stackHeight = 16
         lw $t0,($sp) # LessThan at 414.13; stackHeight = 16
         lw $t1,8($sp) # LessThan at 414.13; stackHeight = 16
         slt $t0,$t1,$t0 # LessThan at 414.13; stackHeight = 16
         addu $sp,$sp,12 # LessThan at 414.13; stackHeight = 16
         sw $t0,($sp)#**"" # LessThan at 414.13; stackHeight = 4
        # EXIT NODE # LessThan at 414.13; stackHeight = 4
       lw $t0,($sp) # Assign at 414.9; stackHeight = 4
       sw $t0,-16($s2) # Assign at 414.9; stackHeight = 4
       addu $sp,$sp,4 # Assign at 414.9; stackHeight = 4
      # EXIT NODE # Assign at 414.9; stackHeight = 0
      # ENTER NODE # If at 415.3; stackHeight = 0
        # ENTER NODE # IdentifierExp at 415.7; stackHeight = 0
         lw $t0,-16($s2) # inst-var # IdentifierExp at 415.7; stackHeight = 0
         subu $sp,$sp,4 # IdentifierExp at 415.7; stackHeight = 0
         sw $t0,($sp)#**"" # IdentifierExp at 415.7; stackHeight = 4
        # EXIT NODE # IdentifierExp at 415.7; stackHeight = 4
       lw $t0,($sp) # If at 415.3; stackHeight = 4
       addu $sp,$sp,4 # If at 415.3; stackHeight = 4
       beq $t0,$zero,if_else_2471 # If at 415.3; stackHeight = 0
        # ENTER NODE # Block at 415.14; stackHeight = 0
          # ENTER NODE # Assign at 416.6; stackHeight = 0
            # ENTER NODE # Minus at 416.8; stackHeight = 0
              # ENTER NODE # IntegerLiteral at 416.8; stackHeight = 0
               subu $sp,$sp,8 # IntegerLiteral at 416.8; stackHeight = 0
               sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 416.8; stackHeight = 8
               li $t0,0 # IntegerLiteral at 416.8; stackHeight = 8
               sw $t0,($sp) # IntegerLiteral at 416.8; stackHeight = 8
              # EXIT NODE # IntegerLiteral at 416.8; stackHeight = 8
              # ENTER NODE # IdentifierExp at 416.9; stackHeight = 8
               lw $t0,12($sp) # local: stackHt=8,var-offset=4 # IdentifierExp at 416.9; stackHeight = 8
               subu $sp,$sp,8 # IdentifierExp at 416.9; stackHeight = 8
               sw $s5,4($sp)#**"GC tag" # IdentifierExp at 416.9; stackHeight = 16
               sw $t0,($sp)#**"" # IdentifierExp at 416.9; stackHeight = 16
              # EXIT NODE # IdentifierExp at 416.9; stackHeight = 16
             lw $t0,($sp) # Minus at 416.8; stackHeight = 16
             lw $t1,8($sp) # Minus at 416.8; stackHeight = 16
             subu $t0,$t1,$t0 # Minus at 416.8; stackHeight = 16
             addu $sp,$sp,8 # Minus at 416.8; stackHeight = 16
             sw $t0,($sp)#**"" # Minus at 416.8; stackHeight = 8
            # EXIT NODE # Minus at 416.8; stackHeight = 8
           lw $t0,($sp) # Assign at 416.6; stackHeight = 8
           sw $t0,12($sp) # Assign at 416.6; stackHeight = 8
           addu $sp,$sp,8 # Assign at 416.6; stackHeight = 8
          # EXIT NODE # Assign at 416.6; stackHeight = 0
        # EXIT NODE # Block at 415.14; stackHeight = 0
      j if_done_2471 # If at 415.3; stackHeight = 0
      if_else_2471: # If at 415.3; stackHeight = 0
        # ENTER NODE # Block at 418.3; stackHeight = 0
        # EXIT NODE # Block at 418.3; stackHeight = 0
      if_done_2471: # If at 415.3; stackHeight = 0
      # EXIT NODE # If at 415.3; stackHeight = 0
      # ENTER NODE # Assign at 418.8; stackHeight = 0
        # ENTER NODE # Call at 418.20; stackHeight = 0
          # ENTER NODE # NewObject at 418.10; stackHeight = 0
           li $s6,1 # NewObject at 418.10; stackHeight = 0
           li $s7,0 # NewObject at 418.10; stackHeight = 0
           jal newObject # NewObject at 418.10; stackHeight = 0
           la $t0,CLASS_Lib # NewObject at 418.10; stackHeight = 4
           sw $t0,-12($s7)#**"VTP: Lib" # NewObject at 418.10; stackHeight = 4
          # EXIT NODE # NewObject at 418.10; stackHeight = 4
          # ENTER NODE # IdentifierExp at 418.32; stackHeight = 4
           lw $t0,8($sp) # local: stackHt=4,var-offset=4 # IdentifierExp at 418.32; stackHeight = 4
           subu $sp,$sp,8 # IdentifierExp at 418.32; stackHeight = 4
           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 418.32; stackHeight = 12
           sw $t0,($sp)#**"" # IdentifierExp at 418.32; stackHeight = 12
          # EXIT NODE # IdentifierExp at 418.32; stackHeight = 12
         lw $t0,8($sp) # Call at 418.20; stackHeight = 12
         beq $t0,$zero,nullPtrException # Call at 418.20; stackHeight = 12
         lw $t0,-12($t0) # Call at 418.20; stackHeight = 12
         lw $t0,36($t0) # Call at 418.20; stackHeight = 12
         jalr $t0 # intToString # Call at 418.20; stackHeight = 12
        # EXIT NODE # Call at 418.20; stackHeight = 4
       lw $t0,($sp) # Assign at 418.8; stackHeight = 4
       sw $t0,0($s2) # Assign at 418.8; stackHeight = 4
       addu $sp,$sp,4 # Assign at 418.8; stackHeight = 4
      # EXIT NODE # Assign at 418.8; stackHeight = 0
      # ENTER NODE # If at 419.3; stackHeight = 0
        # ENTER NODE # LessThan at 419.9; stackHeight = 0
          # ENTER NODE # IdentifierExp at 419.7; stackHeight = 0
           lw $t0,4($sp) # local: stackHt=0,var-offset=4 # IdentifierExp at 419.7; stackHeight = 0
           subu $sp,$sp,8 # IdentifierExp at 419.7; stackHeight = 0
           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 419.7; stackHeight = 8
           sw $t0,($sp)#**"" # IdentifierExp at 419.7; stackHeight = 8
          # EXIT NODE # IdentifierExp at 419.7; stackHeight = 8
          # ENTER NODE # IntegerLiteral at 419.11; stackHeight = 8
           subu $sp,$sp,8 # IntegerLiteral at 419.11; stackHeight = 8
           sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 419.11; stackHeight = 16
           li $t0,0 # IntegerLiteral at 419.11; stackHeight = 16
           sw $t0,($sp) # IntegerLiteral at 419.11; stackHeight = 16
          # EXIT NODE # IntegerLiteral at 419.11; stackHeight = 16
         lw $t0,($sp) # LessThan at 419.9; stackHeight = 16
         lw $t1,8($sp) # LessThan at 419.9; stackHeight = 16
         slt $t0,$t1,$t0 # LessThan at 419.9; stackHeight = 16
         addu $sp,$sp,12 # LessThan at 419.9; stackHeight = 16
         sw $t0,($sp)#**"" # LessThan at 419.9; stackHeight = 4
        # EXIT NODE # LessThan at 419.9; stackHeight = 4
       lw $t0,($sp) # If at 419.3; stackHeight = 4
       addu $sp,$sp,4 # If at 419.3; stackHeight = 4
       beq $t0,$zero,if_else_2490 # If at 419.3; stackHeight = 0
        # ENTER NODE # Block at 419.14; stackHeight = 0
          # ENTER NODE # Assign at 420.9; stackHeight = 0
            # ENTER NODE # Call at 420.16; stackHeight = 0
              # ENTER NODE # IdentifierExp at 420.11; stackHeight = 0
               lw $t0,0($s2) # inst-var # IdentifierExp at 420.11; stackHeight = 0
               subu $sp,$sp,4 # IdentifierExp at 420.11; stackHeight = 0
               sw $t0,($sp)#**"" # IdentifierExp at 420.11; stackHeight = 4
              # EXIT NODE # IdentifierExp at 420.11; stackHeight = 4
              # ENTER NODE # IntegerLiteral at 420.26; stackHeight = 4
               subu $sp,$sp,8 # IntegerLiteral at 420.26; stackHeight = 4
               sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 420.26; stackHeight = 12
               li $t0,1 # IntegerLiteral at 420.26; stackHeight = 12
               sw $t0,($sp) # IntegerLiteral at 420.26; stackHeight = 12
              # EXIT NODE # IntegerLiteral at 420.26; stackHeight = 12
              # ENTER NODE # Call at 420.33; stackHeight = 12
                # ENTER NODE # IdentifierExp at 420.28; stackHeight = 12
                 lw $t0,0($s2) # inst-var # IdentifierExp at 420.28; stackHeight = 12
                 subu $sp,$sp,4 # IdentifierExp at 420.28; stackHeight = 12
                 sw $t0,($sp)#**"" # IdentifierExp at 420.28; stackHeight = 16
                # EXIT NODE # IdentifierExp at 420.28; stackHeight = 16
               lw $t0,0($sp) # Call at 420.33; stackHeight = 16
               beq $t0,$zero,nullPtrException # Call at 420.33; stackHeight = 16
               lw $t0,-12($t0) # Call at 420.33; stackHeight = 16
               lw $t0,20($t0) # Call at 420.33; stackHeight = 16
               jalr $t0 # length # Call at 420.33; stackHeight = 16
              # EXIT NODE # Call at 420.33; stackHeight = 20
             lw $t0,16($sp) # Call at 420.16; stackHeight = 20
             beq $t0,$zero,nullPtrException # Call at 420.16; stackHeight = 20
             lw $t0,-12($t0) # Call at 420.16; stackHeight = 20
             lw $t0,16($t0) # Call at 420.16; stackHeight = 20
             jalr $t0 # substring # Call at 420.16; stackHeight = 20
            # EXIT NODE # Call at 420.16; stackHeight = 4
           lw $t0,($sp) # Assign at 420.9; stackHeight = 4
           sw $t0,0($s2) # Assign at 420.9; stackHeight = 4
           addu $sp,$sp,4 # Assign at 420.9; stackHeight = 4
          # EXIT NODE # Assign at 420.9; stackHeight = 0
        # EXIT NODE # Block at 419.14; stackHeight = 0
      j if_done_2490 # If at 419.3; stackHeight = 0
      if_else_2490: # If at 419.3; stackHeight = 0
        # ENTER NODE # Block at 422.3; stackHeight = 0
        # EXIT NODE # Block at 422.3; stackHeight = 0
      if_done_2490: # If at 419.3; stackHeight = 0
      # EXIT NODE # If at 419.3; stackHeight = 0
      # ENTER NODE # This at 422.10; stackHeight = 0
       subu $sp,$sp,4 # This at 422.10; stackHeight = 0
       sw $s2,($sp)#**"" # This at 422.10; stackHeight = 4
      # EXIT NODE # This at 422.10; stackHeight = 4
     lw $ra,16($sp) # MethodDeclNonVoid at 413.16; stackHeight = 4
     lw $s2,4($sp) # MethodDeclNonVoid at 413.16; stackHeight = 4
     lw $t0,($sp) # MethodDeclNonVoid at 413.16; stackHeight = 4
     sw $t0,16($sp)#**"(return-val)" # MethodDeclNonVoid at 413.16; stackHeight = 4
     addu $sp,$sp,16 # MethodDeclNonVoid at 413.16; stackHeight = 4
    jr $ra # MethodDeclNonVoid at 413.16; stackHeight = -12
    # EXIT NODE # MethodDeclNonVoid at 413.16; stackHeight = -12
    # ENTER NODE # MethodDeclNonVoid at 426.16; stackHeight = -12
    .globl fcn_2507_init2 # MethodDeclNonVoid at 426.16; stackHeight = -12
    fcn_2507_init2: # MethodDeclNonVoid at 426.16; stackHeight = -12
     subu $sp,$sp,4 # MethodDeclNonVoid at 426.16; stackHeight = -12
     sw $s2,($sp) #**"old this-ptr" # MethodDeclNonVoid at 426.16; stackHeight = -12
     lw $s2,12($sp) #**"this-ptr" # MethodDeclNonVoid at 426.16; stackHeight = -12
     sw $ra,12($sp) #**"RA:init2" # MethodDeclNonVoid at 426.16; stackHeight = -12
      # ENTER NODE # Assign at 427.13; stackHeight = 0
        # ENTER NODE # This at 427.3; stackHeight = 0
         subu $sp,$sp,4 # This at 427.3; stackHeight = 0
         sw $s2,($sp)#**"" # This at 427.3; stackHeight = 4
        # EXIT NODE # This at 427.3; stackHeight = 4
        # ENTER NODE # IdentifierExp at 427.15; stackHeight = 4
         lw $t0,12($sp) # local: stackHt=4,var-offset=8 # IdentifierExp at 427.15; stackHeight = 4
         subu $sp,$sp,4 # IdentifierExp at 427.15; stackHeight = 4
         sw $t0,($sp)#**"" # IdentifierExp at 427.15; stackHeight = 8
        # EXIT NODE # IdentifierExp at 427.15; stackHeight = 8
       lw $t0,($sp) # Assign at 427.13; stackHeight = 8
       lw $t1,4($sp) # Assign at 427.13; stackHeight = 8
       beq $t1,$zero,nullPtrException # Assign at 427.13; stackHeight = 8
       sw $t0,0($t1) # Assign at 427.13; stackHeight = 8
       addu $sp,$sp,8 # Assign at 427.13; stackHeight = 8
      # EXIT NODE # Assign at 427.13; stackHeight = 0
      # ENTER NODE # Assign at 428.14; stackHeight = 0
        # ENTER NODE # This at 428.3; stackHeight = 0
         subu $sp,$sp,4 # This at 428.3; stackHeight = 0
         sw $s2,($sp)#**"" # This at 428.3; stackHeight = 4
        # EXIT NODE # This at 428.3; stackHeight = 4
        # ENTER NODE # IdentifierExp at 428.16; stackHeight = 4
         lw $t0,8($sp) # local: stackHt=4,var-offset=4 # IdentifierExp at 428.16; stackHeight = 4
         subu $sp,$sp,4 # IdentifierExp at 428.16; stackHeight = 4
         sw $t0,($sp)#**"" # IdentifierExp at 428.16; stackHeight = 8
        # EXIT NODE # IdentifierExp at 428.16; stackHeight = 8
       lw $t0,($sp) # Assign at 428.14; stackHeight = 8
       lw $t1,4($sp) # Assign at 428.14; stackHeight = 8
       beq $t1,$zero,nullPtrException # Assign at 428.14; stackHeight = 8
       sw $t0,-16($t1) # Assign at 428.14; stackHeight = 8
       addu $sp,$sp,8 # Assign at 428.14; stackHeight = 8
      # EXIT NODE # Assign at 428.14; stackHeight = 0
      # ENTER NODE # This at 429.10; stackHeight = 0
       subu $sp,$sp,4 # This at 429.10; stackHeight = 0
       sw $s2,($sp)#**"" # This at 429.10; stackHeight = 4
      # EXIT NODE # This at 429.10; stackHeight = 4
     lw $ra,16($sp) # MethodDeclNonVoid at 426.16; stackHeight = 4
     lw $s2,4($sp) # MethodDeclNonVoid at 426.16; stackHeight = 4
     lw $t0,($sp) # MethodDeclNonVoid at 426.16; stackHeight = 4
     sw $t0,16($sp)#**"(return-val)" # MethodDeclNonVoid at 426.16; stackHeight = 4
     addu $sp,$sp,16 # MethodDeclNonVoid at 426.16; stackHeight = 4
    jr $ra # MethodDeclNonVoid at 426.16; stackHeight = -12
    # EXIT NODE # MethodDeclNonVoid at 426.16; stackHeight = -12
    # ENTER NODE # MethodDeclNonVoid at 432.16; stackHeight = -12
    .globl fcn_2523_toString # MethodDeclNonVoid at 432.16; stackHeight = -12
    fcn_2523_toString: # MethodDeclNonVoid at 432.16; stackHeight = -12
     subu $sp,$sp,4 # MethodDeclNonVoid at 432.16; stackHeight = -12
     sw $s2,($sp) #**"old this-ptr" # MethodDeclNonVoid at 432.16; stackHeight = -12
     lw $s2,4($sp) #**"this-ptr" # MethodDeclNonVoid at 432.16; stackHeight = -12
     sw $ra,4($sp) #**"RA:toString" # MethodDeclNonVoid at 432.16; stackHeight = -12
      # ENTER NODE # LocalVarDecl at 433.10; stackHeight = 0
        # ENTER NODE # IdentifierExp at 433.19; stackHeight = 0
         lw $t0,0($s2) # inst-var # IdentifierExp at 433.19; stackHeight = 0
         subu $sp,$sp,4 # IdentifierExp at 433.19; stackHeight = 0
         sw $t0,($sp)#**"" # IdentifierExp at 433.19; stackHeight = 4
        # EXIT NODE # IdentifierExp at 433.19; stackHeight = 4
      # EXIT NODE # LocalVarDecl at 433.10; stackHeight = 4
      # ENTER NODE # If at 434.3; stackHeight = 4
        # ENTER NODE # IdentifierExp at 434.7; stackHeight = 4
         lw $t0,-16($s2) # inst-var # IdentifierExp at 434.7; stackHeight = 4
         subu $sp,$sp,4 # IdentifierExp at 434.7; stackHeight = 4
         sw $t0,($sp)#**"" # IdentifierExp at 434.7; stackHeight = 8
        # EXIT NODE # IdentifierExp at 434.7; stackHeight = 8
       lw $t0,($sp) # If at 434.3; stackHeight = 8
       addu $sp,$sp,4 # If at 434.3; stackHeight = 8
       beq $t0,$zero,if_else_2521 # If at 434.3; stackHeight = 4
        # ENTER NODE # Block at 434.14; stackHeight = 4
          # ENTER NODE # Assign at 435.11; stackHeight = 4
            # ENTER NODE # Call at 435.17; stackHeight = 4
              # ENTER NODE # StringLiteral at 435.13; stackHeight = 4
               subu $sp,$sp,4 # StringLiteral at 435.13; stackHeight = 4
               la $t0,strLit_2515 # StringLiteral at 435.13; stackHeight = 8
               sw $t0,($sp)#**"strLit:-" # StringLiteral at 435.13; stackHeight = 8
              # EXIT NODE # StringLiteral at 435.13; stackHeight = 8
              # ENTER NODE # IdentifierExp at 435.24; stackHeight = 8
               lw $t0,0($s2) # inst-var # IdentifierExp at 435.24; stackHeight = 8
               subu $sp,$sp,4 # IdentifierExp at 435.24; stackHeight = 8
               sw $t0,($sp)#**"" # IdentifierExp at 435.24; stackHeight = 12
              # EXIT NODE # IdentifierExp at 435.24; stackHeight = 12
             lw $t0,4($sp) # Call at 435.17; stackHeight = 12
             beq $t0,$zero,nullPtrException # Call at 435.17; stackHeight = 12
             lw $t0,-12($t0) # Call at 435.17; stackHeight = 12
             lw $t0,12($t0) # Call at 435.17; stackHeight = 12
             jalr $t0 # concat # Call at 435.17; stackHeight = 12
            # EXIT NODE # Call at 435.17; stackHeight = 8
           lw $t0,($sp) # Assign at 435.11; stackHeight = 8
           sw $t0,4($sp) # Assign at 435.11; stackHeight = 8
           addu $sp,$sp,4 # Assign at 435.11; stackHeight = 8
          # EXIT NODE # Assign at 435.11; stackHeight = 4
        # EXIT NODE # Block at 434.14; stackHeight = 4
      j if_done_2521 # If at 434.3; stackHeight = 4
      if_else_2521: # If at 434.3; stackHeight = 4
        # ENTER NODE # Block at 437.3; stackHeight = 4
        # EXIT NODE # Block at 437.3; stackHeight = 4
      if_done_2521: # If at 434.3; stackHeight = 4
      # EXIT NODE # If at 434.3; stackHeight = 4
      # ENTER NODE # IdentifierExp at 437.10; stackHeight = 4
       lw $t0,0($sp) # local: stackHt=4,var-offset=-4 # IdentifierExp at 437.10; stackHeight = 4
       subu $sp,$sp,4 # IdentifierExp at 437.10; stackHeight = 4
       sw $t0,($sp)#**"" # IdentifierExp at 437.10; stackHeight = 8
      # EXIT NODE # IdentifierExp at 437.10; stackHeight = 8
     lw $ra,12($sp) # MethodDeclNonVoid at 432.16; stackHeight = 8
     lw $s2,8($sp) # MethodDeclNonVoid at 432.16; stackHeight = 8
     lw $t0,($sp) # MethodDeclNonVoid at 432.16; stackHeight = 8
     sw $t0,12($sp)#**"(return-val)" # MethodDeclNonVoid at 432.16; stackHeight = 8
     addu $sp,$sp,12 # MethodDeclNonVoid at 432.16; stackHeight = 8
    jr $ra # MethodDeclNonVoid at 432.16; stackHeight = -4
    # EXIT NODE # MethodDeclNonVoid at 432.16; stackHeight = -4
    # ENTER NODE # MethodDeclNonVoid at 440.16; stackHeight = -4
    .globl fcn_2580_add # MethodDeclNonVoid at 440.16; stackHeight = -4
    fcn_2580_add: # MethodDeclNonVoid at 440.16; stackHeight = -4
     subu $sp,$sp,4 # MethodDeclNonVoid at 440.16; stackHeight = -4
     sw $s2,($sp) #**"old this-ptr" # MethodDeclNonVoid at 440.16; stackHeight = -4
     lw $s2,8($sp) #**"this-ptr" # MethodDeclNonVoid at 440.16; stackHeight = -4
     sw $ra,8($sp) #**"RA:add" # MethodDeclNonVoid at 440.16; stackHeight = -4
      # ENTER NODE # LocalVarDecl at 441.10; stackHeight = 0
        # ENTER NODE # Null at 441.19; stackHeight = 0
         subu $sp,$sp,4 # Null at 441.19; stackHeight = 0
         sw $zero,($sp)#**"" # Null at 441.19; stackHeight = 4
        # EXIT NODE # Null at 441.19; stackHeight = 4
      # EXIT NODE # LocalVarDecl at 441.10; stackHeight = 4
      # ENTER NODE # LocalVarDecl at 442.10; stackHeight = 4
        # ENTER NODE # InstVarAccess at 442.22; stackHeight = 4
          # ENTER NODE # This at 442.18; stackHeight = 4
           subu $sp,$sp,4 # This at 442.18; stackHeight = 4
           sw $s2,($sp)#**"" # This at 442.18; stackHeight = 8
          # EXIT NODE # This at 442.18; stackHeight = 8
         lw $t0,($sp) # InstVarAccess at 442.22; stackHeight = 8
         beq $t0,$zero,nullPtrException # InstVarAccess at 442.22; stackHeight = 8
         lw $t0,0($t0) # InstVarAccess at 442.22; stackHeight = 8
         sw $t0,($sp)#**"" # InstVarAccess at 442.22; stackHeight = 8
        # EXIT NODE # InstVarAccess at 442.22; stackHeight = 8
      # EXIT NODE # LocalVarDecl at 442.10; stackHeight = 8
      # ENTER NODE # LocalVarDecl at 443.10; stackHeight = 8
        # ENTER NODE # InstVarAccess at 443.23; stackHeight = 8
          # ENTER NODE # IdentifierExp at 443.18; stackHeight = 8
           lw $t0,12($sp) # local: stackHt=8,var-offset=4 # IdentifierExp at 443.18; stackHeight = 8
           subu $sp,$sp,4 # IdentifierExp at 443.18; stackHeight = 8
           sw $t0,($sp)#**"" # IdentifierExp at 443.18; stackHeight = 12
          # EXIT NODE # IdentifierExp at 443.18; stackHeight = 12
         lw $t0,($sp) # InstVarAccess at 443.23; stackHeight = 12
         beq $t0,$zero,nullPtrException # InstVarAccess at 443.23; stackHeight = 12
         lw $t0,0($t0) # InstVarAccess at 443.23; stackHeight = 12
         sw $t0,($sp)#**"" # InstVarAccess at 443.23; stackHeight = 12
        # EXIT NODE # InstVarAccess at 443.23; stackHeight = 12
      # EXIT NODE # LocalVarDecl at 443.10; stackHeight = 12
      # ENTER NODE # If at 444.3; stackHeight = 12
        # ENTER NODE # Equals at 444.18; stackHeight = 12
          # ENTER NODE # InstVarAccess at 444.11; stackHeight = 12
            # ENTER NODE # This at 444.7; stackHeight = 12
             subu $sp,$sp,4 # This at 444.7; stackHeight = 12
             sw $s2,($sp)#**"" # This at 444.7; stackHeight = 16
            # EXIT NODE # This at 444.7; stackHeight = 16
           lw $t0,($sp) # InstVarAccess at 444.11; stackHeight = 16
           beq $t0,$zero,nullPtrException # InstVarAccess at 444.11; stackHeight = 16
           lw $t0,-16($t0) # InstVarAccess at 444.11; stackHeight = 16
           sw $t0,($sp)#**"" # InstVarAccess at 444.11; stackHeight = 16
          # EXIT NODE # InstVarAccess at 444.11; stackHeight = 16
          # ENTER NODE # InstVarAccess at 444.26; stackHeight = 16
            # ENTER NODE # IdentifierExp at 444.21; stackHeight = 16
             lw $t0,20($sp) # local: stackHt=16,var-offset=4 # IdentifierExp at 444.21; stackHeight = 16
             subu $sp,$sp,4 # IdentifierExp at 444.21; stackHeight = 16
             sw $t0,($sp)#**"" # IdentifierExp at 444.21; stackHeight = 20
            # EXIT NODE # IdentifierExp at 444.21; stackHeight = 20
           lw $t0,($sp) # InstVarAccess at 444.26; stackHeight = 20
           beq $t0,$zero,nullPtrException # InstVarAccess at 444.26; stackHeight = 20
           lw $t0,-16($t0) # InstVarAccess at 444.26; stackHeight = 20
           sw $t0,($sp)#**"" # InstVarAccess at 444.26; stackHeight = 20
          # EXIT NODE # InstVarAccess at 444.26; stackHeight = 20
         lw $t0,($sp) # Equals at 444.18; stackHeight = 20
         lw $t1,4($sp) # Equals at 444.18; stackHeight = 20
         seq $t0,$t0,$t1 # Equals at 444.18; stackHeight = 20
         addu $sp,$sp,4 # Equals at 444.18; stackHeight = 20
         sw $t0,($sp)#**"" # Equals at 444.18; stackHeight = 16
        # EXIT NODE # Equals at 444.18; stackHeight = 16
       lw $t0,($sp) # If at 444.3; stackHeight = 16
       addu $sp,$sp,4 # If at 444.3; stackHeight = 16
       beq $t0,$zero,if_else_2578 # If at 444.3; stackHeight = 12
        # ENTER NODE # Block at 444.34; stackHeight = 12
          # ENTER NODE # Assign at 445.11; stackHeight = 12
            # ENTER NODE # Call at 445.13; stackHeight = 12
              # ENTER NODE # This at 445.13; stackHeight = 12
               subu $sp,$sp,4 # This at 445.13; stackHeight = 12
               sw $s2,($sp)#**"" # This at 445.13; stackHeight = 16
              # EXIT NODE # This at 445.13; stackHeight = 16
              # ENTER NODE # IdentifierExp at 445.26; stackHeight = 16
               lw $t0,8($sp) # local: stackHt=16,var-offset=-8 # IdentifierExp at 445.26; stackHeight = 16
               subu $sp,$sp,4 # IdentifierExp at 445.26; stackHeight = 16
               sw $t0,($sp)#**"" # IdentifierExp at 445.26; stackHeight = 20
              # EXIT NODE # IdentifierExp at 445.26; stackHeight = 20
              # ENTER NODE # IdentifierExp at 445.33; stackHeight = 20
               lw $t0,8($sp) # local: stackHt=20,var-offset=-12 # IdentifierExp at 445.33; stackHeight = 20
               subu $sp,$sp,4 # IdentifierExp at 445.33; stackHeight = 20
               sw $t0,($sp)#**"" # IdentifierExp at 445.33; stackHeight = 24
              # EXIT NODE # IdentifierExp at 445.33; stackHeight = 24
              # ENTER NODE # False at 445.40; stackHeight = 24
               subu $sp,$sp,4 # False at 445.40; stackHeight = 24
               sw $zero,($sp)#**"" # False at 445.40; stackHeight = 28
              # EXIT NODE # False at 445.40; stackHeight = 28
             lw $t0,12($sp) # Call at 445.13; stackHeight = 28
             beq $t0,$zero,nullPtrException # Call at 445.13; stackHeight = 28
             lw $t0,-12($t0) # Call at 445.13; stackHeight = 28
             lw $t0,92($t0) # Call at 445.13; stackHeight = 28
             jalr $t0 # primitiveAdd # Call at 445.13; stackHeight = 28
            # EXIT NODE # Call at 445.13; stackHeight = 16
           lw $t0,($sp) # Assign at 445.11; stackHeight = 16
           sw $t0,12($sp) # Assign at 445.11; stackHeight = 16
           addu $sp,$sp,4 # Assign at 445.11; stackHeight = 16
          # EXIT NODE # Assign at 445.11; stackHeight = 12
          # ENTER NODE # Assign at 446.17; stackHeight = 12
            # ENTER NODE # IdentifierExp at 446.4; stackHeight = 12
             lw $t0,8($sp) # local: stackHt=12,var-offset=-4 # IdentifierExp at 446.4; stackHeight = 12
             subu $sp,$sp,4 # IdentifierExp at 446.4; stackHeight = 12
             sw $t0,($sp)#**"" # IdentifierExp at 446.4; stackHeight = 16
            # EXIT NODE # IdentifierExp at 446.4; stackHeight = 16
            # ENTER NODE # InstVarAccess at 446.23; stackHeight = 16
              # ENTER NODE # This at 446.19; stackHeight = 16
               subu $sp,$sp,4 # This at 446.19; stackHeight = 16
               sw $s2,($sp)#**"" # This at 446.19; stackHeight = 20
              # EXIT NODE # This at 446.19; stackHeight = 20
             lw $t0,($sp) # InstVarAccess at 446.23; stackHeight = 20
             beq $t0,$zero,nullPtrException # InstVarAccess at 446.23; stackHeight = 20
             lw $t0,-16($t0) # InstVarAccess at 446.23; stackHeight = 20
             sw $t0,($sp)#**"" # InstVarAccess at 446.23; stackHeight = 20
            # EXIT NODE # InstVarAccess at 446.23; stackHeight = 20
           lw $t0,($sp) # Assign at 446.17; stackHeight = 20
           lw $t1,4($sp) # Assign at 446.17; stackHeight = 20
           beq $t1,$zero,nullPtrException # Assign at 446.17; stackHeight = 20
           sw $t0,-16($t1) # Assign at 446.17; stackHeight = 20
           addu $sp,$sp,8 # Assign at 446.17; stackHeight = 20
          # EXIT NODE # Assign at 446.17; stackHeight = 12
        # EXIT NODE # Block at 444.34; stackHeight = 12
      j if_done_2578 # If at 444.3; stackHeight = 12
      if_else_2578: # If at 444.3; stackHeight = 12
        # ENTER NODE # If at 448.8; stackHeight = 12
          # ENTER NODE # InstVarAccess at 448.16; stackHeight = 12
            # ENTER NODE # This at 448.12; stackHeight = 12
             subu $sp,$sp,4 # This at 448.12; stackHeight = 12
             sw $s2,($sp)#**"" # This at 448.12; stackHeight = 16
            # EXIT NODE # This at 448.12; stackHeight = 16
           lw $t0,($sp) # InstVarAccess at 448.16; stackHeight = 16
           beq $t0,$zero,nullPtrException # InstVarAccess at 448.16; stackHeight = 16
           lw $t0,-16($t0) # InstVarAccess at 448.16; stackHeight = 16
           sw $t0,($sp)#**"" # InstVarAccess at 448.16; stackHeight = 16
          # EXIT NODE # InstVarAccess at 448.16; stackHeight = 16
         lw $t0,($sp) # If at 448.8; stackHeight = 16
         addu $sp,$sp,4 # If at 448.8; stackHeight = 16
         beq $t0,$zero,if_else_2577 # If at 448.8; stackHeight = 12
          # ENTER NODE # Block at 448.24; stackHeight = 12
            # ENTER NODE # Assign at 449.11; stackHeight = 12
              # ENTER NODE # Call at 449.13; stackHeight = 12
                # ENTER NODE # This at 449.13; stackHeight = 12
                 subu $sp,$sp,4 # This at 449.13; stackHeight = 12
                 sw $s2,($sp)#**"" # This at 449.13; stackHeight = 16
                # EXIT NODE # This at 449.13; stackHeight = 16
                # ENTER NODE # IdentifierExp at 449.26; stackHeight = 16
                 lw $t0,4($sp) # local: stackHt=16,var-offset=-12 # IdentifierExp at 449.26; stackHeight = 16
                 subu $sp,$sp,4 # IdentifierExp at 449.26; stackHeight = 16
                 sw $t0,($sp)#**"" # IdentifierExp at 449.26; stackHeight = 20
                # EXIT NODE # IdentifierExp at 449.26; stackHeight = 20
                # ENTER NODE # IdentifierExp at 449.33; stackHeight = 20
                 lw $t0,12($sp) # local: stackHt=20,var-offset=-8 # IdentifierExp at 449.33; stackHeight = 20
                 subu $sp,$sp,4 # IdentifierExp at 449.33; stackHeight = 20
                 sw $t0,($sp)#**"" # IdentifierExp at 449.33; stackHeight = 24
                # EXIT NODE # IdentifierExp at 449.33; stackHeight = 24
                # ENTER NODE # True at 449.40; stackHeight = 24
                 subu $sp,$sp,4 # True at 449.40; stackHeight = 24
                 li $t0,1 # True at 449.40; stackHeight = 28
                 sw $t0,($sp)#**"" # True at 449.40; stackHeight = 28
                # EXIT NODE # True at 449.40; stackHeight = 28
               lw $t0,12($sp) # Call at 449.13; stackHeight = 28
               beq $t0,$zero,nullPtrException # Call at 449.13; stackHeight = 28
               lw $t0,-12($t0) # Call at 449.13; stackHeight = 28
               lw $t0,92($t0) # Call at 449.13; stackHeight = 28
               jalr $t0 # primitiveAdd # Call at 449.13; stackHeight = 28
              # EXIT NODE # Call at 449.13; stackHeight = 16
             lw $t0,($sp) # Assign at 449.11; stackHeight = 16
             sw $t0,12($sp) # Assign at 449.11; stackHeight = 16
             addu $sp,$sp,4 # Assign at 449.11; stackHeight = 16
            # EXIT NODE # Assign at 449.11; stackHeight = 12
          # EXIT NODE # Block at 448.24; stackHeight = 12
        j if_done_2577 # If at 448.8; stackHeight = 12
        if_else_2577: # If at 448.8; stackHeight = 12
          # ENTER NODE # Block at 451.8; stackHeight = 12
            # ENTER NODE # Assign at 452.11; stackHeight = 12
              # ENTER NODE # Call at 452.13; stackHeight = 12
                # ENTER NODE # This at 452.13; stackHeight = 12
                 subu $sp,$sp,4 # This at 452.13; stackHeight = 12
                 sw $s2,($sp)#**"" # This at 452.13; stackHeight = 16
                # EXIT NODE # This at 452.13; stackHeight = 16
                # ENTER NODE # IdentifierExp at 452.26; stackHeight = 16
                 lw $t0,8($sp) # local: stackHt=16,var-offset=-8 # IdentifierExp at 452.26; stackHeight = 16
                 subu $sp,$sp,4 # IdentifierExp at 452.26; stackHeight = 16
                 sw $t0,($sp)#**"" # IdentifierExp at 452.26; stackHeight = 20
                # EXIT NODE # IdentifierExp at 452.26; stackHeight = 20
                # ENTER NODE # IdentifierExp at 452.33; stackHeight = 20
                 lw $t0,8($sp) # local: stackHt=20,var-offset=-12 # IdentifierExp at 452.33; stackHeight = 20
                 subu $sp,$sp,4 # IdentifierExp at 452.33; stackHeight = 20
                 sw $t0,($sp)#**"" # IdentifierExp at 452.33; stackHeight = 24
                # EXIT NODE # IdentifierExp at 452.33; stackHeight = 24
                # ENTER NODE # True at 452.40; stackHeight = 24
                 subu $sp,$sp,4 # True at 452.40; stackHeight = 24
                 li $t0,1 # True at 452.40; stackHeight = 28
                 sw $t0,($sp)#**"" # True at 452.40; stackHeight = 28
                # EXIT NODE # True at 452.40; stackHeight = 28
               lw $t0,12($sp) # Call at 452.13; stackHeight = 28
               beq $t0,$zero,nullPtrException # Call at 452.13; stackHeight = 28
               lw $t0,-12($t0) # Call at 452.13; stackHeight = 28
               lw $t0,92($t0) # Call at 452.13; stackHeight = 28
               jalr $t0 # primitiveAdd # Call at 452.13; stackHeight = 28
              # EXIT NODE # Call at 452.13; stackHeight = 16
             lw $t0,($sp) # Assign at 452.11; stackHeight = 16
             sw $t0,12($sp) # Assign at 452.11; stackHeight = 16
             addu $sp,$sp,4 # Assign at 452.11; stackHeight = 16
            # EXIT NODE # Assign at 452.11; stackHeight = 12
          # EXIT NODE # Block at 451.8; stackHeight = 12
        if_done_2577: # If at 448.8; stackHeight = 12
        # EXIT NODE # If at 448.8; stackHeight = 12
      if_done_2578: # If at 444.3; stackHeight = 12
      # EXIT NODE # If at 444.3; stackHeight = 12
      # ENTER NODE # IdentifierExp at 454.10; stackHeight = 12
       lw $t0,8($sp) # local: stackHt=12,var-offset=-4 # IdentifierExp at 454.10; stackHeight = 12
       subu $sp,$sp,4 # IdentifierExp at 454.10; stackHeight = 12
       sw $t0,($sp)#**"" # IdentifierExp at 454.10; stackHeight = 16
      # EXIT NODE # IdentifierExp at 454.10; stackHeight = 16
     lw $ra,24($sp) # MethodDeclNonVoid at 440.16; stackHeight = 16
     lw $s2,16($sp) # MethodDeclNonVoid at 440.16; stackHeight = 16
     lw $t0,($sp) # MethodDeclNonVoid at 440.16; stackHeight = 16
     sw $t0,24($sp)#**"(return-val)" # MethodDeclNonVoid at 440.16; stackHeight = 16
     addu $sp,$sp,24 # MethodDeclNonVoid at 440.16; stackHeight = 16
    jr $ra # MethodDeclNonVoid at 440.16; stackHeight = -8
    # EXIT NODE # MethodDeclNonVoid at 440.16; stackHeight = -8
    # ENTER NODE # MethodDeclNonVoid at 457.16; stackHeight = -8
    .globl fcn_2638_subtract # MethodDeclNonVoid at 457.16; stackHeight = -8
    fcn_2638_subtract: # MethodDeclNonVoid at 457.16; stackHeight = -8
     subu $sp,$sp,4 # MethodDeclNonVoid at 457.16; stackHeight = -8
     sw $s2,($sp) #**"old this-ptr" # MethodDeclNonVoid at 457.16; stackHeight = -8
     lw $s2,8($sp) #**"this-ptr" # MethodDeclNonVoid at 457.16; stackHeight = -8
     sw $ra,8($sp) #**"RA:subtract" # MethodDeclNonVoid at 457.16; stackHeight = -8
      # ENTER NODE # LocalVarDecl at 458.10; stackHeight = 0
        # ENTER NODE # Null at 458.19; stackHeight = 0
         subu $sp,$sp,4 # Null at 458.19; stackHeight = 0
         sw $zero,($sp)#**"" # Null at 458.19; stackHeight = 4
        # EXIT NODE # Null at 458.19; stackHeight = 4
      # EXIT NODE # LocalVarDecl at 458.10; stackHeight = 4
      # ENTER NODE # LocalVarDecl at 459.10; stackHeight = 4
        # ENTER NODE # InstVarAccess at 459.22; stackHeight = 4
          # ENTER NODE # This at 459.18; stackHeight = 4
           subu $sp,$sp,4 # This at 459.18; stackHeight = 4
           sw $s2,($sp)#**"" # This at 459.18; stackHeight = 8
          # EXIT NODE # This at 459.18; stackHeight = 8
         lw $t0,($sp) # InstVarAccess at 459.22; stackHeight = 8
         beq $t0,$zero,nullPtrException # InstVarAccess at 459.22; stackHeight = 8
         lw $t0,0($t0) # InstVarAccess at 459.22; stackHeight = 8
         sw $t0,($sp)#**"" # InstVarAccess at 459.22; stackHeight = 8
        # EXIT NODE # InstVarAccess at 459.22; stackHeight = 8
      # EXIT NODE # LocalVarDecl at 459.10; stackHeight = 8
      # ENTER NODE # LocalVarDecl at 460.10; stackHeight = 8
        # ENTER NODE # InstVarAccess at 460.23; stackHeight = 8
          # ENTER NODE # IdentifierExp at 460.18; stackHeight = 8
           lw $t0,12($sp) # local: stackHt=8,var-offset=4 # IdentifierExp at 460.18; stackHeight = 8
           subu $sp,$sp,4 # IdentifierExp at 460.18; stackHeight = 8
           sw $t0,($sp)#**"" # IdentifierExp at 460.18; stackHeight = 12
          # EXIT NODE # IdentifierExp at 460.18; stackHeight = 12
         lw $t0,($sp) # InstVarAccess at 460.23; stackHeight = 12
         beq $t0,$zero,nullPtrException # InstVarAccess at 460.23; stackHeight = 12
         lw $t0,0($t0) # InstVarAccess at 460.23; stackHeight = 12
         sw $t0,($sp)#**"" # InstVarAccess at 460.23; stackHeight = 12
        # EXIT NODE # InstVarAccess at 460.23; stackHeight = 12
      # EXIT NODE # LocalVarDecl at 460.10; stackHeight = 12
      # ENTER NODE # If at 461.3; stackHeight = 12
        # ENTER NODE # Not at 461.18; stackHeight = 12
          # ENTER NODE # Equals at 461.18; stackHeight = 12
            # ENTER NODE # InstVarAccess at 461.11; stackHeight = 12
              # ENTER NODE # This at 461.7; stackHeight = 12
               subu $sp,$sp,4 # This at 461.7; stackHeight = 12
               sw $s2,($sp)#**"" # This at 461.7; stackHeight = 16
              # EXIT NODE # This at 461.7; stackHeight = 16
             lw $t0,($sp) # InstVarAccess at 461.11; stackHeight = 16
             beq $t0,$zero,nullPtrException # InstVarAccess at 461.11; stackHeight = 16
             lw $t0,-16($t0) # InstVarAccess at 461.11; stackHeight = 16
             sw $t0,($sp)#**"" # InstVarAccess at 461.11; stackHeight = 16
            # EXIT NODE # InstVarAccess at 461.11; stackHeight = 16
            # ENTER NODE # InstVarAccess at 461.26; stackHeight = 16
              # ENTER NODE # IdentifierExp at 461.21; stackHeight = 16
               lw $t0,20($sp) # local: stackHt=16,var-offset=4 # IdentifierExp at 461.21; stackHeight = 16
               subu $sp,$sp,4 # IdentifierExp at 461.21; stackHeight = 16
               sw $t0,($sp)#**"" # IdentifierExp at 461.21; stackHeight = 20
              # EXIT NODE # IdentifierExp at 461.21; stackHeight = 20
             lw $t0,($sp) # InstVarAccess at 461.26; stackHeight = 20
             beq $t0,$zero,nullPtrException # InstVarAccess at 461.26; stackHeight = 20
             lw $t0,-16($t0) # InstVarAccess at 461.26; stackHeight = 20
             sw $t0,($sp)#**"" # InstVarAccess at 461.26; stackHeight = 20
            # EXIT NODE # InstVarAccess at 461.26; stackHeight = 20
           lw $t0,($sp) # Equals at 461.18; stackHeight = 20
           lw $t1,4($sp) # Equals at 461.18; stackHeight = 20
           seq $t0,$t0,$t1 # Equals at 461.18; stackHeight = 20
           addu $sp,$sp,4 # Equals at 461.18; stackHeight = 20
           sw $t0,($sp)#**"" # Equals at 461.18; stackHeight = 16
          # EXIT NODE # Equals at 461.18; stackHeight = 16
         lw $t0,($sp) # Not at 461.18; stackHeight = 16
         xor $t0,$t0,1 # Not at 461.18; stackHeight = 16
         sw $t0,($sp)#**"" # Not at 461.18; stackHeight = 16
        # EXIT NODE # Not at 461.18; stackHeight = 16
       lw $t0,($sp) # If at 461.3; stackHeight = 16
       addu $sp,$sp,4 # If at 461.3; stackHeight = 16
       beq $t0,$zero,if_else_2636 # If at 461.3; stackHeight = 12
        # ENTER NODE # Block at 461.34; stackHeight = 12
          # ENTER NODE # Assign at 462.11; stackHeight = 12
            # ENTER NODE # Call at 462.13; stackHeight = 12
              # ENTER NODE # This at 462.13; stackHeight = 12
               subu $sp,$sp,4 # This at 462.13; stackHeight = 12
               sw $s2,($sp)#**"" # This at 462.13; stackHeight = 16
              # EXIT NODE # This at 462.13; stackHeight = 16
              # ENTER NODE # IdentifierExp at 462.26; stackHeight = 16
               lw $t0,8($sp) # local: stackHt=16,var-offset=-8 # IdentifierExp at 462.26; stackHeight = 16
               subu $sp,$sp,4 # IdentifierExp at 462.26; stackHeight = 16
               sw $t0,($sp)#**"" # IdentifierExp at 462.26; stackHeight = 20
              # EXIT NODE # IdentifierExp at 462.26; stackHeight = 20
              # ENTER NODE # IdentifierExp at 462.33; stackHeight = 20
               lw $t0,8($sp) # local: stackHt=20,var-offset=-12 # IdentifierExp at 462.33; stackHeight = 20
               subu $sp,$sp,4 # IdentifierExp at 462.33; stackHeight = 20
               sw $t0,($sp)#**"" # IdentifierExp at 462.33; stackHeight = 24
              # EXIT NODE # IdentifierExp at 462.33; stackHeight = 24
              # ENTER NODE # False at 462.40; stackHeight = 24
               subu $sp,$sp,4 # False at 462.40; stackHeight = 24
               sw $zero,($sp)#**"" # False at 462.40; stackHeight = 28
              # EXIT NODE # False at 462.40; stackHeight = 28
             lw $t0,12($sp) # Call at 462.13; stackHeight = 28
             beq $t0,$zero,nullPtrException # Call at 462.13; stackHeight = 28
             lw $t0,-12($t0) # Call at 462.13; stackHeight = 28
             lw $t0,92($t0) # Call at 462.13; stackHeight = 28
             jalr $t0 # primitiveAdd # Call at 462.13; stackHeight = 28
            # EXIT NODE # Call at 462.13; stackHeight = 16
           lw $t0,($sp) # Assign at 462.11; stackHeight = 16
           sw $t0,12($sp) # Assign at 462.11; stackHeight = 16
           addu $sp,$sp,4 # Assign at 462.11; stackHeight = 16
          # EXIT NODE # Assign at 462.11; stackHeight = 12
          # ENTER NODE # Assign at 463.17; stackHeight = 12
            # ENTER NODE # IdentifierExp at 463.4; stackHeight = 12
             lw $t0,8($sp) # local: stackHt=12,var-offset=-4 # IdentifierExp at 463.4; stackHeight = 12
             subu $sp,$sp,4 # IdentifierExp at 463.4; stackHeight = 12
             sw $t0,($sp)#**"" # IdentifierExp at 463.4; stackHeight = 16
            # EXIT NODE # IdentifierExp at 463.4; stackHeight = 16
            # ENTER NODE # InstVarAccess at 463.23; stackHeight = 16
              # ENTER NODE # This at 463.19; stackHeight = 16
               subu $sp,$sp,4 # This at 463.19; stackHeight = 16
               sw $s2,($sp)#**"" # This at 463.19; stackHeight = 20
              # EXIT NODE # This at 463.19; stackHeight = 20
             lw $t0,($sp) # InstVarAccess at 463.23; stackHeight = 20
             beq $t0,$zero,nullPtrException # InstVarAccess at 463.23; stackHeight = 20
             lw $t0,-16($t0) # InstVarAccess at 463.23; stackHeight = 20
             sw $t0,($sp)#**"" # InstVarAccess at 463.23; stackHeight = 20
            # EXIT NODE # InstVarAccess at 463.23; stackHeight = 20
           lw $t0,($sp) # Assign at 463.17; stackHeight = 20
           lw $t1,4($sp) # Assign at 463.17; stackHeight = 20
           beq $t1,$zero,nullPtrException # Assign at 463.17; stackHeight = 20
           sw $t0,-16($t1) # Assign at 463.17; stackHeight = 20
           addu $sp,$sp,8 # Assign at 463.17; stackHeight = 20
          # EXIT NODE # Assign at 463.17; stackHeight = 12
        # EXIT NODE # Block at 461.34; stackHeight = 12
      j if_done_2636 # If at 461.3; stackHeight = 12
      if_else_2636: # If at 461.3; stackHeight = 12
        # ENTER NODE # If at 465.8; stackHeight = 12
          # ENTER NODE # InstVarAccess at 465.16; stackHeight = 12
            # ENTER NODE # This at 465.12; stackHeight = 12
             subu $sp,$sp,4 # This at 465.12; stackHeight = 12
             sw $s2,($sp)#**"" # This at 465.12; stackHeight = 16
            # EXIT NODE # This at 465.12; stackHeight = 16
           lw $t0,($sp) # InstVarAccess at 465.16; stackHeight = 16
           beq $t0,$zero,nullPtrException # InstVarAccess at 465.16; stackHeight = 16
           lw $t0,-16($t0) # InstVarAccess at 465.16; stackHeight = 16
           sw $t0,($sp)#**"" # InstVarAccess at 465.16; stackHeight = 16
          # EXIT NODE # InstVarAccess at 465.16; stackHeight = 16
         lw $t0,($sp) # If at 465.8; stackHeight = 16
         addu $sp,$sp,4 # If at 465.8; stackHeight = 16
         beq $t0,$zero,if_else_2635 # If at 465.8; stackHeight = 12
          # ENTER NODE # Block at 465.24; stackHeight = 12
            # ENTER NODE # Assign at 466.11; stackHeight = 12
              # ENTER NODE # Call at 466.13; stackHeight = 12
                # ENTER NODE # This at 466.13; stackHeight = 12
                 subu $sp,$sp,4 # This at 466.13; stackHeight = 12
                 sw $s2,($sp)#**"" # This at 466.13; stackHeight = 16
                # EXIT NODE # This at 466.13; stackHeight = 16
                # ENTER NODE # IdentifierExp at 466.26; stackHeight = 16
                 lw $t0,4($sp) # local: stackHt=16,var-offset=-12 # IdentifierExp at 466.26; stackHeight = 16
                 subu $sp,$sp,4 # IdentifierExp at 466.26; stackHeight = 16
                 sw $t0,($sp)#**"" # IdentifierExp at 466.26; stackHeight = 20
                # EXIT NODE # IdentifierExp at 466.26; stackHeight = 20
                # ENTER NODE # IdentifierExp at 466.33; stackHeight = 20
                 lw $t0,12($sp) # local: stackHt=20,var-offset=-8 # IdentifierExp at 466.33; stackHeight = 20
                 subu $sp,$sp,4 # IdentifierExp at 466.33; stackHeight = 20
                 sw $t0,($sp)#**"" # IdentifierExp at 466.33; stackHeight = 24
                # EXIT NODE # IdentifierExp at 466.33; stackHeight = 24
                # ENTER NODE # True at 466.40; stackHeight = 24
                 subu $sp,$sp,4 # True at 466.40; stackHeight = 24
                 li $t0,1 # True at 466.40; stackHeight = 28
                 sw $t0,($sp)#**"" # True at 466.40; stackHeight = 28
                # EXIT NODE # True at 466.40; stackHeight = 28
               lw $t0,12($sp) # Call at 466.13; stackHeight = 28
               beq $t0,$zero,nullPtrException # Call at 466.13; stackHeight = 28
               lw $t0,-12($t0) # Call at 466.13; stackHeight = 28
               lw $t0,92($t0) # Call at 466.13; stackHeight = 28
               jalr $t0 # primitiveAdd # Call at 466.13; stackHeight = 28
              # EXIT NODE # Call at 466.13; stackHeight = 16
             lw $t0,($sp) # Assign at 466.11; stackHeight = 16
             sw $t0,12($sp) # Assign at 466.11; stackHeight = 16
             addu $sp,$sp,4 # Assign at 466.11; stackHeight = 16
            # EXIT NODE # Assign at 466.11; stackHeight = 12
          # EXIT NODE # Block at 465.24; stackHeight = 12
        j if_done_2635 # If at 465.8; stackHeight = 12
        if_else_2635: # If at 465.8; stackHeight = 12
          # ENTER NODE # Block at 468.8; stackHeight = 12
            # ENTER NODE # Assign at 469.11; stackHeight = 12
              # ENTER NODE # Call at 469.13; stackHeight = 12
                # ENTER NODE # This at 469.13; stackHeight = 12
                 subu $sp,$sp,4 # This at 469.13; stackHeight = 12
                 sw $s2,($sp)#**"" # This at 469.13; stackHeight = 16
                # EXIT NODE # This at 469.13; stackHeight = 16
                # ENTER NODE # IdentifierExp at 469.26; stackHeight = 16
                 lw $t0,8($sp) # local: stackHt=16,var-offset=-8 # IdentifierExp at 469.26; stackHeight = 16
                 subu $sp,$sp,4 # IdentifierExp at 469.26; stackHeight = 16
                 sw $t0,($sp)#**"" # IdentifierExp at 469.26; stackHeight = 20
                # EXIT NODE # IdentifierExp at 469.26; stackHeight = 20
                # ENTER NODE # IdentifierExp at 469.33; stackHeight = 20
                 lw $t0,8($sp) # local: stackHt=20,var-offset=-12 # IdentifierExp at 469.33; stackHeight = 20
                 subu $sp,$sp,4 # IdentifierExp at 469.33; stackHeight = 20
                 sw $t0,($sp)#**"" # IdentifierExp at 469.33; stackHeight = 24
                # EXIT NODE # IdentifierExp at 469.33; stackHeight = 24
                # ENTER NODE # True at 469.40; stackHeight = 24
                 subu $sp,$sp,4 # True at 469.40; stackHeight = 24
                 li $t0,1 # True at 469.40; stackHeight = 28
                 sw $t0,($sp)#**"" # True at 469.40; stackHeight = 28
                # EXIT NODE # True at 469.40; stackHeight = 28
               lw $t0,12($sp) # Call at 469.13; stackHeight = 28
               beq $t0,$zero,nullPtrException # Call at 469.13; stackHeight = 28
               lw $t0,-12($t0) # Call at 469.13; stackHeight = 28
               lw $t0,92($t0) # Call at 469.13; stackHeight = 28
               jalr $t0 # primitiveAdd # Call at 469.13; stackHeight = 28
              # EXIT NODE # Call at 469.13; stackHeight = 16
             lw $t0,($sp) # Assign at 469.11; stackHeight = 16
             sw $t0,12($sp) # Assign at 469.11; stackHeight = 16
             addu $sp,$sp,4 # Assign at 469.11; stackHeight = 16
            # EXIT NODE # Assign at 469.11; stackHeight = 12
          # EXIT NODE # Block at 468.8; stackHeight = 12
        if_done_2635: # If at 465.8; stackHeight = 12
        # EXIT NODE # If at 465.8; stackHeight = 12
      if_done_2636: # If at 461.3; stackHeight = 12
      # EXIT NODE # If at 461.3; stackHeight = 12
      # ENTER NODE # IdentifierExp at 471.10; stackHeight = 12
       lw $t0,8($sp) # local: stackHt=12,var-offset=-4 # IdentifierExp at 471.10; stackHeight = 12
       subu $sp,$sp,4 # IdentifierExp at 471.10; stackHeight = 12
       sw $t0,($sp)#**"" # IdentifierExp at 471.10; stackHeight = 16
      # EXIT NODE # IdentifierExp at 471.10; stackHeight = 16
     lw $ra,24($sp) # MethodDeclNonVoid at 457.16; stackHeight = 16
     lw $s2,16($sp) # MethodDeclNonVoid at 457.16; stackHeight = 16
     lw $t0,($sp) # MethodDeclNonVoid at 457.16; stackHeight = 16
     sw $t0,24($sp)#**"(return-val)" # MethodDeclNonVoid at 457.16; stackHeight = 16
     addu $sp,$sp,24 # MethodDeclNonVoid at 457.16; stackHeight = 16
    jr $ra # MethodDeclNonVoid at 457.16; stackHeight = -8
    # EXIT NODE # MethodDeclNonVoid at 457.16; stackHeight = -8
    # ENTER NODE # MethodDeclNonVoid at 474.16; stackHeight = -8
    .globl fcn_2663_negate # MethodDeclNonVoid at 474.16; stackHeight = -8
    fcn_2663_negate: # MethodDeclNonVoid at 474.16; stackHeight = -8
     subu $sp,$sp,4 # MethodDeclNonVoid at 474.16; stackHeight = -8
     sw $s2,($sp) #**"old this-ptr" # MethodDeclNonVoid at 474.16; stackHeight = -8
     lw $s2,4($sp) #**"this-ptr" # MethodDeclNonVoid at 474.16; stackHeight = -8
     sw $ra,4($sp) #**"RA:negate" # MethodDeclNonVoid at 474.16; stackHeight = -8
      # ENTER NODE # LocalVarDecl at 475.10; stackHeight = 0
        # ENTER NODE # This at 475.19; stackHeight = 0
         subu $sp,$sp,4 # This at 475.19; stackHeight = 0
         sw $s2,($sp)#**"" # This at 475.19; stackHeight = 4
        # EXIT NODE # This at 475.19; stackHeight = 4
      # EXIT NODE # LocalVarDecl at 475.10; stackHeight = 4
      # ENTER NODE # If at 476.3; stackHeight = 4
        # ENTER NODE # Not at 476.7; stackHeight = 4
          # ENTER NODE # Call at 476.18; stackHeight = 4
            # ENTER NODE # InstVarAccess at 476.12; stackHeight = 4
              # ENTER NODE # This at 476.8; stackHeight = 4
               subu $sp,$sp,4 # This at 476.8; stackHeight = 4
               sw $s2,($sp)#**"" # This at 476.8; stackHeight = 8
              # EXIT NODE # This at 476.8; stackHeight = 8
             lw $t0,($sp) # InstVarAccess at 476.12; stackHeight = 8
             beq $t0,$zero,nullPtrException # InstVarAccess at 476.12; stackHeight = 8
             lw $t0,0($t0) # InstVarAccess at 476.12; stackHeight = 8
             sw $t0,($sp)#**"" # InstVarAccess at 476.12; stackHeight = 8
            # EXIT NODE # InstVarAccess at 476.12; stackHeight = 8
            # ENTER NODE # StringLiteral at 476.25; stackHeight = 8
             subu $sp,$sp,4 # StringLiteral at 476.25; stackHeight = 8
             la $t0,strLit_2646 # StringLiteral at 476.25; stackHeight = 12
             sw $t0,($sp)#**"strLit:0" # StringLiteral at 476.25; stackHeight = 12
            # EXIT NODE # StringLiteral at 476.25; stackHeight = 12
           lw $t0,4($sp) # Call at 476.18; stackHeight = 12
           beq $t0,$zero,nullPtrException # Call at 476.18; stackHeight = 12
           lw $t0,-12($t0) # Call at 476.18; stackHeight = 12
           lw $t0,4($t0) # Call at 476.18; stackHeight = 12
           jalr $t0 # equals # Call at 476.18; stackHeight = 12
          # EXIT NODE # Call at 476.18; stackHeight = 8
         lw $t0,($sp) # Not at 476.7; stackHeight = 8
         xor $t0,$t0,1 # Not at 476.7; stackHeight = 8
         sw $t0,($sp)#**"" # Not at 476.7; stackHeight = 8
        # EXIT NODE # Not at 476.7; stackHeight = 8
       lw $t0,($sp) # If at 476.3; stackHeight = 8
       addu $sp,$sp,4 # If at 476.3; stackHeight = 8
       beq $t0,$zero,if_else_2661 # If at 476.3; stackHeight = 4
        # ENTER NODE # Block at 476.31; stackHeight = 4
          # ENTER NODE # Assign at 477.11; stackHeight = 4
            # ENTER NODE # Call at 477.26; stackHeight = 4
              # ENTER NODE # NewObject at 477.13; stackHeight = 4
               li $s6,2 # NewObject at 477.13; stackHeight = 4
               li $s7,1 # NewObject at 477.13; stackHeight = 4
               jal newObject # NewObject at 477.13; stackHeight = 4
               la $t0,CLASS_BigInt # NewObject at 477.13; stackHeight = 8
               sw $t0,-12($s7)#**"VTP: BigInt" # NewObject at 477.13; stackHeight = 8
              # EXIT NODE # NewObject at 477.13; stackHeight = 8
              # ENTER NODE # InstVarAccess at 477.36; stackHeight = 8
                # ENTER NODE # This at 477.32; stackHeight = 8
                 subu $sp,$sp,4 # This at 477.32; stackHeight = 8
                 sw $s2,($sp)#**"" # This at 477.32; stackHeight = 12
                # EXIT NODE # This at 477.32; stackHeight = 12
               lw $t0,($sp) # InstVarAccess at 477.36; stackHeight = 12
               beq $t0,$zero,nullPtrException # InstVarAccess at 477.36; stackHeight = 12
               lw $t0,0($t0) # InstVarAccess at 477.36; stackHeight = 12
               sw $t0,($sp)#**"" # InstVarAccess at 477.36; stackHeight = 12
              # EXIT NODE # InstVarAccess at 477.36; stackHeight = 12
              # ENTER NODE # Not at 477.42; stackHeight = 12
                # ENTER NODE # InstVarAccess at 477.47; stackHeight = 12
                  # ENTER NODE # This at 477.43; stackHeight = 12
                   subu $sp,$sp,4 # This at 477.43; stackHeight = 12
                   sw $s2,($sp)#**"" # This at 477.43; stackHeight = 16
                  # EXIT NODE # This at 477.43; stackHeight = 16
                 lw $t0,($sp) # InstVarAccess at 477.47; stackHeight = 16
                 beq $t0,$zero,nullPtrException # InstVarAccess at 477.47; stackHeight = 16
                 lw $t0,-16($t0) # InstVarAccess at 477.47; stackHeight = 16
                 sw $t0,($sp)#**"" # InstVarAccess at 477.47; stackHeight = 16
                # EXIT NODE # InstVarAccess at 477.47; stackHeight = 16
               lw $t0,($sp) # Not at 477.42; stackHeight = 16
               xor $t0,$t0,1 # Not at 477.42; stackHeight = 16
               sw $t0,($sp)#**"" # Not at 477.42; stackHeight = 16
              # EXIT NODE # Not at 477.42; stackHeight = 16
             lw $t0,8($sp) # Call at 477.26; stackHeight = 16
             beq $t0,$zero,nullPtrException # Call at 477.26; stackHeight = 16
             lw $t0,-12($t0) # Call at 477.26; stackHeight = 16
             lw $t0,16($t0) # Call at 477.26; stackHeight = 16
             jalr $t0 # init2 # Call at 477.26; stackHeight = 16
            # EXIT NODE # Call at 477.26; stackHeight = 8
           lw $t0,($sp) # Assign at 477.11; stackHeight = 8
           sw $t0,4($sp) # Assign at 477.11; stackHeight = 8
           addu $sp,$sp,4 # Assign at 477.11; stackHeight = 8
          # EXIT NODE # Assign at 477.11; stackHeight = 4
        # EXIT NODE # Block at 476.31; stackHeight = 4
      j if_done_2661 # If at 476.3; stackHeight = 4
      if_else_2661: # If at 476.3; stackHeight = 4
        # ENTER NODE # Block at 479.3; stackHeight = 4
        # EXIT NODE # Block at 479.3; stackHeight = 4
      if_done_2661: # If at 476.3; stackHeight = 4
      # EXIT NODE # If at 476.3; stackHeight = 4
      # ENTER NODE # IdentifierExp at 479.10; stackHeight = 4
       lw $t0,0($sp) # local: stackHt=4,var-offset=-4 # IdentifierExp at 479.10; stackHeight = 4
       subu $sp,$sp,4 # IdentifierExp at 479.10; stackHeight = 4
       sw $t0,($sp)#**"" # IdentifierExp at 479.10; stackHeight = 8
      # EXIT NODE # IdentifierExp at 479.10; stackHeight = 8
     lw $ra,12($sp) # MethodDeclNonVoid at 474.16; stackHeight = 8
     lw $s2,8($sp) # MethodDeclNonVoid at 474.16; stackHeight = 8
     lw $t0,($sp) # MethodDeclNonVoid at 474.16; stackHeight = 8
     sw $t0,12($sp)#**"(return-val)" # MethodDeclNonVoid at 474.16; stackHeight = 8
     addu $sp,$sp,12 # MethodDeclNonVoid at 474.16; stackHeight = 8
    jr $ra # MethodDeclNonVoid at 474.16; stackHeight = -4
    # EXIT NODE # MethodDeclNonVoid at 474.16; stackHeight = -4
    # ENTER NODE # MethodDeclNonVoid at 482.16; stackHeight = -4
    .globl fcn_2708_multiply # MethodDeclNonVoid at 482.16; stackHeight = -4
    fcn_2708_multiply: # MethodDeclNonVoid at 482.16; stackHeight = -4
     subu $sp,$sp,4 # MethodDeclNonVoid at 482.16; stackHeight = -4
     sw $s2,($sp) #**"old this-ptr" # MethodDeclNonVoid at 482.16; stackHeight = -4
     lw $s2,8($sp) #**"this-ptr" # MethodDeclNonVoid at 482.16; stackHeight = -4
     sw $ra,8($sp) #**"RA:multiply" # MethodDeclNonVoid at 482.16; stackHeight = -4
      # ENTER NODE # LocalVarDecl at 483.10; stackHeight = 0
        # ENTER NODE # Null at 483.19; stackHeight = 0
         subu $sp,$sp,4 # Null at 483.19; stackHeight = 0
         sw $zero,($sp)#**"" # Null at 483.19; stackHeight = 4
        # EXIT NODE # Null at 483.19; stackHeight = 4
      # EXIT NODE # LocalVarDecl at 483.10; stackHeight = 4
      # ENTER NODE # If at 484.3; stackHeight = 4
        # ENTER NODE # Call at 484.17; stackHeight = 4
          # ENTER NODE # InstVarAccess at 484.11; stackHeight = 4
            # ENTER NODE # This at 484.7; stackHeight = 4
             subu $sp,$sp,4 # This at 484.7; stackHeight = 4
             sw $s2,($sp)#**"" # This at 484.7; stackHeight = 8
            # EXIT NODE # This at 484.7; stackHeight = 8
           lw $t0,($sp) # InstVarAccess at 484.11; stackHeight = 8
           beq $t0,$zero,nullPtrException # InstVarAccess at 484.11; stackHeight = 8
           lw $t0,0($t0) # InstVarAccess at 484.11; stackHeight = 8
           sw $t0,($sp)#**"" # InstVarAccess at 484.11; stackHeight = 8
          # EXIT NODE # InstVarAccess at 484.11; stackHeight = 8
          # ENTER NODE # StringLiteral at 484.24; stackHeight = 8
           subu $sp,$sp,4 # StringLiteral at 484.24; stackHeight = 8
           la $t0,strLit_2646 # StringLiteral at 484.24; stackHeight = 12
           sw $t0,($sp)#**"strLit:0" # StringLiteral at 484.24; stackHeight = 12
          # EXIT NODE # StringLiteral at 484.24; stackHeight = 12
         lw $t0,4($sp) # Call at 484.17; stackHeight = 12
         beq $t0,$zero,nullPtrException # Call at 484.17; stackHeight = 12
         lw $t0,-12($t0) # Call at 484.17; stackHeight = 12
         lw $t0,4($t0) # Call at 484.17; stackHeight = 12
         jalr $t0 # equals # Call at 484.17; stackHeight = 12
        # EXIT NODE # Call at 484.17; stackHeight = 8
       lw $t0,($sp) # If at 484.3; stackHeight = 8
       addu $sp,$sp,4 # If at 484.3; stackHeight = 8
       beq $t0,$zero,if_else_2706 # If at 484.3; stackHeight = 4
        # ENTER NODE # Block at 484.30; stackHeight = 4
          # ENTER NODE # Assign at 485.11; stackHeight = 4
            # ENTER NODE # This at 485.13; stackHeight = 4
             subu $sp,$sp,4 # This at 485.13; stackHeight = 4
             sw $s2,($sp)#**"" # This at 485.13; stackHeight = 8
            # EXIT NODE # This at 485.13; stackHeight = 8
           lw $t0,($sp) # Assign at 485.11; stackHeight = 8
           sw $t0,4($sp) # Assign at 485.11; stackHeight = 8
           addu $sp,$sp,4 # Assign at 485.11; stackHeight = 8
          # EXIT NODE # Assign at 485.11; stackHeight = 4
        # EXIT NODE # Block at 484.30; stackHeight = 4
      j if_done_2706 # If at 484.3; stackHeight = 4
      if_else_2706: # If at 484.3; stackHeight = 4
        # ENTER NODE # If at 487.8; stackHeight = 4
          # ENTER NODE # Call at 487.23; stackHeight = 4
            # ENTER NODE # InstVarAccess at 487.17; stackHeight = 4
              # ENTER NODE # IdentifierExp at 487.12; stackHeight = 4
               lw $t0,8($sp) # local: stackHt=4,var-offset=4 # IdentifierExp at 487.12; stackHeight = 4
               subu $sp,$sp,4 # IdentifierExp at 487.12; stackHeight = 4
               sw $t0,($sp)#**"" # IdentifierExp at 487.12; stackHeight = 8
              # EXIT NODE # IdentifierExp at 487.12; stackHeight = 8
             lw $t0,($sp) # InstVarAccess at 487.17; stackHeight = 8
             beq $t0,$zero,nullPtrException # InstVarAccess at 487.17; stackHeight = 8
             lw $t0,0($t0) # InstVarAccess at 487.17; stackHeight = 8
             sw $t0,($sp)#**"" # InstVarAccess at 487.17; stackHeight = 8
            # EXIT NODE # InstVarAccess at 487.17; stackHeight = 8
            # ENTER NODE # StringLiteral at 487.30; stackHeight = 8
             subu $sp,$sp,4 # StringLiteral at 487.30; stackHeight = 8
             la $t0,strLit_2646 # StringLiteral at 487.30; stackHeight = 12
             sw $t0,($sp)#**"strLit:0" # StringLiteral at 487.30; stackHeight = 12
            # EXIT NODE # StringLiteral at 487.30; stackHeight = 12
           lw $t0,4($sp) # Call at 487.23; stackHeight = 12
           beq $t0,$zero,nullPtrException # Call at 487.23; stackHeight = 12
           lw $t0,-12($t0) # Call at 487.23; stackHeight = 12
           lw $t0,4($t0) # Call at 487.23; stackHeight = 12
           jalr $t0 # equals # Call at 487.23; stackHeight = 12
          # EXIT NODE # Call at 487.23; stackHeight = 8
         lw $t0,($sp) # If at 487.8; stackHeight = 8
         addu $sp,$sp,4 # If at 487.8; stackHeight = 8
         beq $t0,$zero,if_else_2705 # If at 487.8; stackHeight = 4
          # ENTER NODE # Block at 487.36; stackHeight = 4
            # ENTER NODE # Assign at 488.11; stackHeight = 4
              # ENTER NODE # IdentifierExp at 488.13; stackHeight = 4
               lw $t0,8($sp) # local: stackHt=4,var-offset=4 # IdentifierExp at 488.13; stackHeight = 4
               subu $sp,$sp,4 # IdentifierExp at 488.13; stackHeight = 4
               sw $t0,($sp)#**"" # IdentifierExp at 488.13; stackHeight = 8
              # EXIT NODE # IdentifierExp at 488.13; stackHeight = 8
             lw $t0,($sp) # Assign at 488.11; stackHeight = 8
             sw $t0,4($sp) # Assign at 488.11; stackHeight = 8
             addu $sp,$sp,4 # Assign at 488.11; stackHeight = 8
            # EXIT NODE # Assign at 488.11; stackHeight = 4
          # EXIT NODE # Block at 487.36; stackHeight = 4
        j if_done_2705 # If at 487.8; stackHeight = 4
        if_else_2705: # If at 487.8; stackHeight = 4
          # ENTER NODE # Block at 490.8; stackHeight = 4
            # ENTER NODE # Assign at 491.11; stackHeight = 4
              # ENTER NODE # Call at 493.6; stackHeight = 4
                # ENTER NODE # NewObject at 492.6; stackHeight = 4
                 li $s6,2 # NewObject at 492.6; stackHeight = 4
                 li $s7,1 # NewObject at 492.6; stackHeight = 4
                 jal newObject # NewObject at 492.6; stackHeight = 4
                 la $t0,CLASS_BigInt # NewObject at 492.6; stackHeight = 8
                 sw $t0,-12($s7)#**"VTP: BigInt" # NewObject at 492.6; stackHeight = 8
                # EXIT NODE # NewObject at 492.6; stackHeight = 8
                # ENTER NODE # Call at 493.12; stackHeight = 8
                  # ENTER NODE # This at 493.12; stackHeight = 8
                   subu $sp,$sp,4 # This at 493.12; stackHeight = 8
                   sw $s2,($sp)#**"" # This at 493.12; stackHeight = 12
                  # EXIT NODE # This at 493.12; stackHeight = 12
                  # ENTER NODE # InstVarAccess at 493.30; stackHeight = 12
                    # ENTER NODE # This at 493.26; stackHeight = 12
                     subu $sp,$sp,4 # This at 493.26; stackHeight = 12
                     sw $s2,($sp)#**"" # This at 493.26; stackHeight = 16
                    # EXIT NODE # This at 493.26; stackHeight = 16
                   lw $t0,($sp) # InstVarAccess at 493.30; stackHeight = 16
                   beq $t0,$zero,nullPtrException # InstVarAccess at 493.30; stackHeight = 16
                   lw $t0,0($t0) # InstVarAccess at 493.30; stackHeight = 16
                   sw $t0,($sp)#**"" # InstVarAccess at 493.30; stackHeight = 16
                  # EXIT NODE # InstVarAccess at 493.30; stackHeight = 16
                  # ENTER NODE # InstVarAccess at 493.42; stackHeight = 16
                    # ENTER NODE # IdentifierExp at 493.37; stackHeight = 16
                     lw $t0,20($sp) # local: stackHt=16,var-offset=4 # IdentifierExp at 493.37; stackHeight = 16
                     subu $sp,$sp,4 # IdentifierExp at 493.37; stackHeight = 16
                     sw $t0,($sp)#**"" # IdentifierExp at 493.37; stackHeight = 20
                    # EXIT NODE # IdentifierExp at 493.37; stackHeight = 20
                   lw $t0,($sp) # InstVarAccess at 493.42; stackHeight = 20
                   beq $t0,$zero,nullPtrException # InstVarAccess at 493.42; stackHeight = 20
                   lw $t0,0($t0) # InstVarAccess at 493.42; stackHeight = 20
                   sw $t0,($sp)#**"" # InstVarAccess at 493.42; stackHeight = 20
                  # EXIT NODE # InstVarAccess at 493.42; stackHeight = 20
                 lw $t0,8($sp) # Call at 493.12; stackHeight = 20
                 beq $t0,$zero,nullPtrException # Call at 493.12; stackHeight = 20
                 lw $t0,-12($t0) # Call at 493.12; stackHeight = 20
                 lw $t0,52($t0) # Call at 493.12; stackHeight = 20
                 jalr $t0 # primitiveMult # Call at 493.12; stackHeight = 20
                # EXIT NODE # Call at 493.12; stackHeight = 12
                # ENTER NODE # Not at 494.19; stackHeight = 12
                  # ENTER NODE # Equals at 494.19; stackHeight = 12
                    # ENTER NODE # InstVarAccess at 494.12; stackHeight = 12
                      # ENTER NODE # This at 494.8; stackHeight = 12
                       subu $sp,$sp,4 # This at 494.8; stackHeight = 12
                       sw $s2,($sp)#**"" # This at 494.8; stackHeight = 16
                      # EXIT NODE # This at 494.8; stackHeight = 16
                     lw $t0,($sp) # InstVarAccess at 494.12; stackHeight = 16
                     beq $t0,$zero,nullPtrException # InstVarAccess at 494.12; stackHeight = 16
                     lw $t0,-16($t0) # InstVarAccess at 494.12; stackHeight = 16
                     sw $t0,($sp)#**"" # InstVarAccess at 494.12; stackHeight = 16
                    # EXIT NODE # InstVarAccess at 494.12; stackHeight = 16
                    # ENTER NODE # InstVarAccess at 494.27; stackHeight = 16
                      # ENTER NODE # IdentifierExp at 494.22; stackHeight = 16
                       lw $t0,20($sp) # local: stackHt=16,var-offset=4 # IdentifierExp at 494.22; stackHeight = 16
                       subu $sp,$sp,4 # IdentifierExp at 494.22; stackHeight = 16
                       sw $t0,($sp)#**"" # IdentifierExp at 494.22; stackHeight = 20
                      # EXIT NODE # IdentifierExp at 494.22; stackHeight = 20
                     lw $t0,($sp) # InstVarAccess at 494.27; stackHeight = 20
                     beq $t0,$zero,nullPtrException # InstVarAccess at 494.27; stackHeight = 20
                     lw $t0,-16($t0) # InstVarAccess at 494.27; stackHeight = 20
                     sw $t0,($sp)#**"" # InstVarAccess at 494.27; stackHeight = 20
                    # EXIT NODE # InstVarAccess at 494.27; stackHeight = 20
                   lw $t0,($sp) # Equals at 494.19; stackHeight = 20
                   lw $t1,4($sp) # Equals at 494.19; stackHeight = 20
                   seq $t0,$t0,$t1 # Equals at 494.19; stackHeight = 20
                   addu $sp,$sp,4 # Equals at 494.19; stackHeight = 20
                   sw $t0,($sp)#**"" # Equals at 494.19; stackHeight = 16
                  # EXIT NODE # Equals at 494.19; stackHeight = 16
                 lw $t0,($sp) # Not at 494.19; stackHeight = 16
                 xor $t0,$t0,1 # Not at 494.19; stackHeight = 16
                 sw $t0,($sp)#**"" # Not at 494.19; stackHeight = 16
                # EXIT NODE # Not at 494.19; stackHeight = 16
               lw $t0,8($sp) # Call at 493.6; stackHeight = 16
               beq $t0,$zero,nullPtrException # Call at 493.6; stackHeight = 16
               lw $t0,-12($t0) # Call at 493.6; stackHeight = 16
               lw $t0,16($t0) # Call at 493.6; stackHeight = 16
               jalr $t0 # init2 # Call at 493.6; stackHeight = 16
              # EXIT NODE # Call at 493.6; stackHeight = 8
             lw $t0,($sp) # Assign at 491.11; stackHeight = 8
             sw $t0,4($sp) # Assign at 491.11; stackHeight = 8
             addu $sp,$sp,4 # Assign at 491.11; stackHeight = 8
            # EXIT NODE # Assign at 491.11; stackHeight = 4
          # EXIT NODE # Block at 490.8; stackHeight = 4
        if_done_2705: # If at 487.8; stackHeight = 4
        # EXIT NODE # If at 487.8; stackHeight = 4
      if_done_2706: # If at 484.3; stackHeight = 4
      # EXIT NODE # If at 484.3; stackHeight = 4
      # ENTER NODE # IdentifierExp at 496.10; stackHeight = 4
       lw $t0,0($sp) # local: stackHt=4,var-offset=-4 # IdentifierExp at 496.10; stackHeight = 4
       subu $sp,$sp,4 # IdentifierExp at 496.10; stackHeight = 4
       sw $t0,($sp)#**"" # IdentifierExp at 496.10; stackHeight = 8
      # EXIT NODE # IdentifierExp at 496.10; stackHeight = 8
     lw $ra,16($sp) # MethodDeclNonVoid at 482.16; stackHeight = 8
     lw $s2,8($sp) # MethodDeclNonVoid at 482.16; stackHeight = 8
     lw $t0,($sp) # MethodDeclNonVoid at 482.16; stackHeight = 8
     sw $t0,16($sp)#**"(return-val)" # MethodDeclNonVoid at 482.16; stackHeight = 8
     addu $sp,$sp,16 # MethodDeclNonVoid at 482.16; stackHeight = 8
    jr $ra # MethodDeclNonVoid at 482.16; stackHeight = -8
    # EXIT NODE # MethodDeclNonVoid at 482.16; stackHeight = -8
    # ENTER NODE # MethodDeclNonVoid at 499.16; stackHeight = -8
    .globl fcn_2758_divide # MethodDeclNonVoid at 499.16; stackHeight = -8
    fcn_2758_divide: # MethodDeclNonVoid at 499.16; stackHeight = -8
     subu $sp,$sp,4 # MethodDeclNonVoid at 499.16; stackHeight = -8
     sw $s2,($sp) #**"old this-ptr" # MethodDeclNonVoid at 499.16; stackHeight = -8
     lw $s2,8($sp) #**"this-ptr" # MethodDeclNonVoid at 499.16; stackHeight = -8
     sw $ra,8($sp) #**"RA:divide" # MethodDeclNonVoid at 499.16; stackHeight = -8
      # ENTER NODE # LocalVarDecl at 510.10; stackHeight = 0
        # ENTER NODE # Null at 510.19; stackHeight = 0
         subu $sp,$sp,4 # Null at 510.19; stackHeight = 0
         sw $zero,($sp)#**"" # Null at 510.19; stackHeight = 4
        # EXIT NODE # Null at 510.19; stackHeight = 4
      # EXIT NODE # LocalVarDecl at 510.10; stackHeight = 4
      # ENTER NODE # If at 511.3; stackHeight = 4
        # ENTER NODE # Call at 511.18; stackHeight = 4
          # ENTER NODE # InstVarAccess at 511.12; stackHeight = 4
            # ENTER NODE # IdentifierExp at 511.7; stackHeight = 4
             lw $t0,8($sp) # local: stackHt=4,var-offset=4 # IdentifierExp at 511.7; stackHeight = 4
             subu $sp,$sp,4 # IdentifierExp at 511.7; stackHeight = 4
             sw $t0,($sp)#**"" # IdentifierExp at 511.7; stackHeight = 8
            # EXIT NODE # IdentifierExp at 511.7; stackHeight = 8
           lw $t0,($sp) # InstVarAccess at 511.12; stackHeight = 8
           beq $t0,$zero,nullPtrException # InstVarAccess at 511.12; stackHeight = 8
           lw $t0,0($t0) # InstVarAccess at 511.12; stackHeight = 8
           sw $t0,($sp)#**"" # InstVarAccess at 511.12; stackHeight = 8
          # EXIT NODE # InstVarAccess at 511.12; stackHeight = 8
          # ENTER NODE # StringLiteral at 511.25; stackHeight = 8
           subu $sp,$sp,4 # StringLiteral at 511.25; stackHeight = 8
           la $t0,strLit_2646 # StringLiteral at 511.25; stackHeight = 12
           sw $t0,($sp)#**"strLit:0" # StringLiteral at 511.25; stackHeight = 12
          # EXIT NODE # StringLiteral at 511.25; stackHeight = 12
         lw $t0,4($sp) # Call at 511.18; stackHeight = 12
         beq $t0,$zero,nullPtrException # Call at 511.18; stackHeight = 12
         lw $t0,-12($t0) # Call at 511.18; stackHeight = 12
         lw $t0,4($t0) # Call at 511.18; stackHeight = 12
         jalr $t0 # equals # Call at 511.18; stackHeight = 12
        # EXIT NODE # Call at 511.18; stackHeight = 8
       lw $t0,($sp) # If at 511.3; stackHeight = 8
       addu $sp,$sp,4 # If at 511.3; stackHeight = 8
       beq $t0,$zero,if_else_2756 # If at 511.3; stackHeight = 4
        # ENTER NODE # Block at 511.31; stackHeight = 4
          # ENTER NODE # If at 512.4; stackHeight = 4
            # ENTER NODE # Equals at 512.12; stackHeight = 4
              # ENTER NODE # IntegerLiteral at 512.8; stackHeight = 4
               subu $sp,$sp,8 # IntegerLiteral at 512.8; stackHeight = 4
               sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 512.8; stackHeight = 12
               li $t0,1 # IntegerLiteral at 512.8; stackHeight = 12
               sw $t0,($sp) # IntegerLiteral at 512.8; stackHeight = 12
              # EXIT NODE # IntegerLiteral at 512.8; stackHeight = 12
              # ENTER NODE # IntegerLiteral at 512.10; stackHeight = 12
               subu $sp,$sp,8 # IntegerLiteral at 512.10; stackHeight = 12
               sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 512.10; stackHeight = 20
               li $t0,0 # IntegerLiteral at 512.10; stackHeight = 20
               sw $t0,($sp) # IntegerLiteral at 512.10; stackHeight = 20
              # EXIT NODE # IntegerLiteral at 512.10; stackHeight = 20
             jal divide # Divide at 512.9; stackHeight = 20
            # EXIT NODE # Divide at 512.9; stackHeight = 12
            # ENTER NODE # IntegerLiteral at 512.15; stackHeight = 12
             subu $sp,$sp,8 # IntegerLiteral at 512.15; stackHeight = 12
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 512.15; stackHeight = 20
             li $t0,0 # IntegerLiteral at 512.15; stackHeight = 20
             sw $t0,($sp) # IntegerLiteral at 512.15; stackHeight = 20
            # EXIT NODE # IntegerLiteral at 512.15; stackHeight = 20
           lw $t0,($sp) # Equals at 512.12; stackHeight = 20
           lw $t1,8($sp) # Equals at 512.12; stackHeight = 20
           seq $t0,$t0,$t1 # Equals at 512.12; stackHeight = 20
           addu $sp,$sp,12 # Equals at 512.12; stackHeight = 20
           sw $t0,($sp)#**"" # Equals at 512.12; stackHeight = 8
          # EXIT NODE # Equals at 512.12; stackHeight = 8
         lw $t0,($sp) # If at 512.4; stackHeight = 8
         addu $sp,$sp,4 # If at 512.4; stackHeight = 8
         beq $t0,$zero,if_else_2727 # If at 512.4; stackHeight = 4
          # ENTER NODE # Block at 512.17; stackHeight = 4
          # EXIT NODE # Block at 512.17; stackHeight = 4
        j if_done_2727 # If at 512.4; stackHeight = 4
        if_else_2727: # If at 512.4; stackHeight = 4
          # ENTER NODE # Block at 513.3; stackHeight = 4
          # EXIT NODE # Block at 513.3; stackHeight = 4
        if_done_2727: # If at 512.4; stackHeight = 4
        # EXIT NODE # If at 512.4; stackHeight = 4
      # EXIT NODE # Block at 511.31; stackHeight = 4
    j if_done_2756 # If at 511.3; stackHeight = 4
    if_else_2756: # If at 511.3; stackHeight = 4
      # ENTER NODE # Block at 514.8; stackHeight = 4
        # ENTER NODE # LocalVarDecl at 515.11; stackHeight = 4
          # ENTER NODE # Call at 515.18; stackHeight = 4
            # ENTER NODE # This at 515.18; stackHeight = 4
             subu $sp,$sp,4 # This at 515.18; stackHeight = 4
             sw $s2,($sp)#**"" # This at 515.18; stackHeight = 8
            # EXIT NODE # This at 515.18; stackHeight = 8
            # ENTER NODE # InstVarAccess at 515.38; stackHeight = 8
              # ENTER NODE # This at 515.34; stackHeight = 8
               subu $sp,$sp,4 # This at 515.34; stackHeight = 8
               sw $s2,($sp)#**"" # This at 515.34; stackHeight = 12
              # EXIT NODE # This at 515.34; stackHeight = 12
             lw $t0,($sp) # InstVarAccess at 515.38; stackHeight = 12
             beq $t0,$zero,nullPtrException # InstVarAccess at 515.38; stackHeight = 12
             lw $t0,0($t0) # InstVarAccess at 515.38; stackHeight = 12
             sw $t0,($sp)#**"" # InstVarAccess at 515.38; stackHeight = 12
            # EXIT NODE # InstVarAccess at 515.38; stackHeight = 12
            # ENTER NODE # InstVarAccess at 515.50; stackHeight = 12
              # ENTER NODE # IdentifierExp at 515.45; stackHeight = 12
               lw $t0,16($sp) # local: stackHt=12,var-offset=4 # IdentifierExp at 515.45; stackHeight = 12
               subu $sp,$sp,4 # IdentifierExp at 515.45; stackHeight = 12
               sw $t0,($sp)#**"" # IdentifierExp at 515.45; stackHeight = 16
              # EXIT NODE # IdentifierExp at 515.45; stackHeight = 16
             lw $t0,($sp) # InstVarAccess at 515.50; stackHeight = 16
             beq $t0,$zero,nullPtrException # InstVarAccess at 515.50; stackHeight = 16
             lw $t0,0($t0) # InstVarAccess at 515.50; stackHeight = 16
             sw $t0,($sp)#**"" # InstVarAccess at 515.50; stackHeight = 16
            # EXIT NODE # InstVarAccess at 515.50; stackHeight = 16
           lw $t0,8($sp) # Call at 515.18; stackHeight = 16
           beq $t0,$zero,nullPtrException # Call at 515.18; stackHeight = 16
           lw $t0,-12($t0) # Call at 515.18; stackHeight = 16
           lw $t0,80($t0) # Call at 515.18; stackHeight = 16
           jalr $t0 # primitiveDivide # Call at 515.18; stackHeight = 16
          # EXIT NODE # Call at 515.18; stackHeight = 8
        # EXIT NODE # LocalVarDecl at 515.11; stackHeight = 8
        # ENTER NODE # Assign at 516.11; stackHeight = 8
          # ENTER NODE # Call at 517.7; stackHeight = 8
            # ENTER NODE # NewObject at 516.13; stackHeight = 8
             li $s6,2 # NewObject at 516.13; stackHeight = 8
             li $s7,1 # NewObject at 516.13; stackHeight = 8
             jal newObject # NewObject at 516.13; stackHeight = 8
             la $t0,CLASS_BigInt # NewObject at 516.13; stackHeight = 12
             sw $t0,-12($s7)#**"VTP: BigInt" # NewObject at 516.13; stackHeight = 12
            # EXIT NODE # NewObject at 516.13; stackHeight = 12
            # ENTER NODE # IdentifierExp at 517.13; stackHeight = 12
             lw $t0,4($sp) # local: stackHt=12,var-offset=-8 # IdentifierExp at 517.13; stackHeight = 12
             subu $sp,$sp,4 # IdentifierExp at 517.13; stackHeight = 12
             sw $t0,($sp)#**"" # IdentifierExp at 517.13; stackHeight = 16
            # EXIT NODE # IdentifierExp at 517.13; stackHeight = 16
            # ENTER NODE # And at 517.37; stackHeight = 16
              # ENTER NODE # Not at 517.19; stackHeight = 16
                # ENTER NODE # Call at 517.25; stackHeight = 16
                  # ENTER NODE # IdentifierExp at 517.20; stackHeight = 16
                   lw $t0,8($sp) # local: stackHt=16,var-offset=-8 # IdentifierExp at 517.20; stackHeight = 16
                   subu $sp,$sp,4 # IdentifierExp at 517.20; stackHeight = 16
                   sw $t0,($sp)#**"" # IdentifierExp at 517.20; stackHeight = 20
                  # EXIT NODE # IdentifierExp at 517.20; stackHeight = 20
                  # ENTER NODE # StringLiteral at 517.32; stackHeight = 20
                   subu $sp,$sp,4 # StringLiteral at 517.32; stackHeight = 20
                   la $t0,strLit_2646 # StringLiteral at 517.32; stackHeight = 24
                   sw $t0,($sp)#**"strLit:0" # StringLiteral at 517.32; stackHeight = 24
                  # EXIT NODE # StringLiteral at 517.32; stackHeight = 24
                 lw $t0,4($sp) # Call at 517.25; stackHeight = 24
                 beq $t0,$zero,nullPtrException # Call at 517.25; stackHeight = 24
                 lw $t0,-12($t0) # Call at 517.25; stackHeight = 24
                 lw $t0,4($t0) # Call at 517.25; stackHeight = 24
                 jalr $t0 # equals # Call at 517.25; stackHeight = 24
                # EXIT NODE # Call at 517.25; stackHeight = 20
               lw $t0,($sp) # Not at 517.19; stackHeight = 20
               xor $t0,$t0,1 # Not at 517.19; stackHeight = 20
               sw $t0,($sp)#**"" # Not at 517.19; stackHeight = 20
              # EXIT NODE # Not at 517.19; stackHeight = 20
             lw $t0,($sp) # And at 517.37; stackHeight = 20
             beq $t0,$zero, skip_2752 # And at 517.37; stackHeight = 20
             addu $sp,$sp,4 # And at 517.37; stackHeight = 20
              # ENTER NODE # Not at 517.51; stackHeight = 16
                # ENTER NODE # Equals at 517.51; stackHeight = 16
                  # ENTER NODE # InstVarAccess at 517.44; stackHeight = 16
                    # ENTER NODE # This at 517.40; stackHeight = 16
                     subu $sp,$sp,4 # This at 517.40; stackHeight = 16
                     sw $s2,($sp)#**"" # This at 517.40; stackHeight = 20
                    # EXIT NODE # This at 517.40; stackHeight = 20
                   lw $t0,($sp) # InstVarAccess at 517.44; stackHeight = 20
                   beq $t0,$zero,nullPtrException # InstVarAccess at 517.44; stackHeight = 20
                   lw $t0,-16($t0) # InstVarAccess at 517.44; stackHeight = 20
                   sw $t0,($sp)#**"" # InstVarAccess at 517.44; stackHeight = 20
                  # EXIT NODE # InstVarAccess at 517.44; stackHeight = 20
                  # ENTER NODE # InstVarAccess at 517.59; stackHeight = 20
                    # ENTER NODE # IdentifierExp at 517.54; stackHeight = 20
                     lw $t0,24($sp) # local: stackHt=20,var-offset=4 # IdentifierExp at 517.54; stackHeight = 20
                     subu $sp,$sp,4 # IdentifierExp at 517.54; stackHeight = 20
                     sw $t0,($sp)#**"" # IdentifierExp at 517.54; stackHeight = 24
                    # EXIT NODE # IdentifierExp at 517.54; stackHeight = 24
                   lw $t0,($sp) # InstVarAccess at 517.59; stackHeight = 24
                   beq $t0,$zero,nullPtrException # InstVarAccess at 517.59; stackHeight = 24
                   lw $t0,-16($t0) # InstVarAccess at 517.59; stackHeight = 24
                   sw $t0,($sp)#**"" # InstVarAccess at 517.59; stackHeight = 24
                  # EXIT NODE # InstVarAccess at 517.59; stackHeight = 24
                 lw $t0,($sp) # Equals at 517.51; stackHeight = 24
                 lw $t1,4($sp) # Equals at 517.51; stackHeight = 24
                 seq $t0,$t0,$t1 # Equals at 517.51; stackHeight = 24
                 addu $sp,$sp,4 # Equals at 517.51; stackHeight = 24
                 sw $t0,($sp)#**"" # Equals at 517.51; stackHeight = 20
                # EXIT NODE # Equals at 517.51; stackHeight = 20
               lw $t0,($sp) # Not at 517.51; stackHeight = 20
               xor $t0,$t0,1 # Not at 517.51; stackHeight = 20
               sw $t0,($sp)#**"" # Not at 517.51; stackHeight = 20
              # EXIT NODE # Not at 517.51; stackHeight = 20
            skip_2752: # And at 517.37; stackHeight = 20
            # EXIT NODE # And at 517.37; stackHeight = 20
           lw $t0,8($sp) # Call at 517.7; stackHeight = 20
           beq $t0,$zero,nullPtrException # Call at 517.7; stackHeight = 20
           lw $t0,-12($t0) # Call at 517.7; stackHeight = 20
           lw $t0,16($t0) # Call at 517.7; stackHeight = 20
           jalr $t0 # init2 # Call at 517.7; stackHeight = 20
          # EXIT NODE # Call at 517.7; stackHeight = 12
         lw $t0,($sp) # Assign at 516.11; stackHeight = 12
         sw $t0,8($sp) # Assign at 516.11; stackHeight = 12
         addu $sp,$sp,4 # Assign at 516.11; stackHeight = 12
        # EXIT NODE # Assign at 516.11; stackHeight = 8
       addu $sp,4 # Block at 514.8; stackHeight = 8
      # EXIT NODE # Block at 514.8; stackHeight = 4
    if_done_2756: # If at 511.3; stackHeight = 4
    # EXIT NODE # If at 511.3; stackHeight = 4
    # ENTER NODE # IdentifierExp at 519.10; stackHeight = 4
     lw $t0,0($sp) # local: stackHt=4,var-offset=-4 # IdentifierExp at 519.10; stackHeight = 4
     subu $sp,$sp,4 # IdentifierExp at 519.10; stackHeight = 4
     sw $t0,($sp)#**"" # IdentifierExp at 519.10; stackHeight = 8
    # EXIT NODE # IdentifierExp at 519.10; stackHeight = 8
   lw $ra,16($sp) # MethodDeclNonVoid at 499.16; stackHeight = 8
   lw $s2,8($sp) # MethodDeclNonVoid at 499.16; stackHeight = 8
   lw $t0,($sp) # MethodDeclNonVoid at 499.16; stackHeight = 8
   sw $t0,16($sp)#**"(return-val)" # MethodDeclNonVoid at 499.16; stackHeight = 8
   addu $sp,$sp,16 # MethodDeclNonVoid at 499.16; stackHeight = 8
  jr $ra # MethodDeclNonVoid at 499.16; stackHeight = -8
  # EXIT NODE # MethodDeclNonVoid at 499.16; stackHeight = -8
  # ENTER NODE # MethodDeclNonVoid at 522.16; stackHeight = -8
  .globl fcn_2778_abs # MethodDeclNonVoid at 522.16; stackHeight = -8
  fcn_2778_abs: # MethodDeclNonVoid at 522.16; stackHeight = -8
   subu $sp,$sp,4 # MethodDeclNonVoid at 522.16; stackHeight = -8
   sw $s2,($sp) #**"old this-ptr" # MethodDeclNonVoid at 522.16; stackHeight = -8
   lw $s2,4($sp) #**"this-ptr" # MethodDeclNonVoid at 522.16; stackHeight = -8
   sw $ra,4($sp) #**"RA:abs" # MethodDeclNonVoid at 522.16; stackHeight = -8
    # ENTER NODE # LocalVarDecl at 523.10; stackHeight = 0
      # ENTER NODE # This at 523.19; stackHeight = 0
       subu $sp,$sp,4 # This at 523.19; stackHeight = 0
       sw $s2,($sp)#**"" # This at 523.19; stackHeight = 4
      # EXIT NODE # This at 523.19; stackHeight = 4
    # EXIT NODE # LocalVarDecl at 523.10; stackHeight = 4
    # ENTER NODE # If at 524.3; stackHeight = 4
      # ENTER NODE # InstVarAccess at 524.11; stackHeight = 4
        # ENTER NODE # This at 524.7; stackHeight = 4
         subu $sp,$sp,4 # This at 524.7; stackHeight = 4
         sw $s2,($sp)#**"" # This at 524.7; stackHeight = 8
        # EXIT NODE # This at 524.7; stackHeight = 8
       lw $t0,($sp) # InstVarAccess at 524.11; stackHeight = 8
       beq $t0,$zero,nullPtrException # InstVarAccess at 524.11; stackHeight = 8
       lw $t0,-16($t0) # InstVarAccess at 524.11; stackHeight = 8
       sw $t0,($sp)#**"" # InstVarAccess at 524.11; stackHeight = 8
      # EXIT NODE # InstVarAccess at 524.11; stackHeight = 8
     lw $t0,($sp) # If at 524.3; stackHeight = 8
     addu $sp,$sp,4 # If at 524.3; stackHeight = 8
     beq $t0,$zero,if_else_2776 # If at 524.3; stackHeight = 4
      # ENTER NODE # Block at 524.19; stackHeight = 4
        # ENTER NODE # Assign at 525.11; stackHeight = 4
          # ENTER NODE # Call at 525.26; stackHeight = 4
            # ENTER NODE # NewObject at 525.13; stackHeight = 4
             li $s6,2 # NewObject at 525.13; stackHeight = 4
             li $s7,1 # NewObject at 525.13; stackHeight = 4
             jal newObject # NewObject at 525.13; stackHeight = 4
             la $t0,CLASS_BigInt # NewObject at 525.13; stackHeight = 8
             sw $t0,-12($s7)#**"VTP: BigInt" # NewObject at 525.13; stackHeight = 8
            # EXIT NODE # NewObject at 525.13; stackHeight = 8
            # ENTER NODE # InstVarAccess at 525.36; stackHeight = 8
              # ENTER NODE # This at 525.32; stackHeight = 8
               subu $sp,$sp,4 # This at 525.32; stackHeight = 8
               sw $s2,($sp)#**"" # This at 525.32; stackHeight = 12
              # EXIT NODE # This at 525.32; stackHeight = 12
             lw $t0,($sp) # InstVarAccess at 525.36; stackHeight = 12
             beq $t0,$zero,nullPtrException # InstVarAccess at 525.36; stackHeight = 12
             lw $t0,0($t0) # InstVarAccess at 525.36; stackHeight = 12
             sw $t0,($sp)#**"" # InstVarAccess at 525.36; stackHeight = 12
            # EXIT NODE # InstVarAccess at 525.36; stackHeight = 12
            # ENTER NODE # False at 525.42; stackHeight = 12
             subu $sp,$sp,4 # False at 525.42; stackHeight = 12
             sw $zero,($sp)#**"" # False at 525.42; stackHeight = 16
            # EXIT NODE # False at 525.42; stackHeight = 16
           lw $t0,8($sp) # Call at 525.26; stackHeight = 16
           beq $t0,$zero,nullPtrException # Call at 525.26; stackHeight = 16
           lw $t0,-12($t0) # Call at 525.26; stackHeight = 16
           lw $t0,16($t0) # Call at 525.26; stackHeight = 16
           jalr $t0 # init2 # Call at 525.26; stackHeight = 16
          # EXIT NODE # Call at 525.26; stackHeight = 8
         lw $t0,($sp) # Assign at 525.11; stackHeight = 8
         sw $t0,4($sp) # Assign at 525.11; stackHeight = 8
         addu $sp,$sp,4 # Assign at 525.11; stackHeight = 8
        # EXIT NODE # Assign at 525.11; stackHeight = 4
      # EXIT NODE # Block at 524.19; stackHeight = 4
    j if_done_2776 # If at 524.3; stackHeight = 4
    if_else_2776: # If at 524.3; stackHeight = 4
      # ENTER NODE # Block at 527.3; stackHeight = 4
      # EXIT NODE # Block at 527.3; stackHeight = 4
    if_done_2776: # If at 524.3; stackHeight = 4
    # EXIT NODE # If at 524.3; stackHeight = 4
    # ENTER NODE # IdentifierExp at 527.10; stackHeight = 4
     lw $t0,0($sp) # local: stackHt=4,var-offset=-4 # IdentifierExp at 527.10; stackHeight = 4
     subu $sp,$sp,4 # IdentifierExp at 527.10; stackHeight = 4
     sw $t0,($sp)#**"" # IdentifierExp at 527.10; stackHeight = 8
    # EXIT NODE # IdentifierExp at 527.10; stackHeight = 8
   lw $ra,12($sp) # MethodDeclNonVoid at 522.16; stackHeight = 8
   lw $s2,8($sp) # MethodDeclNonVoid at 522.16; stackHeight = 8
   lw $t0,($sp) # MethodDeclNonVoid at 522.16; stackHeight = 8
   sw $t0,12($sp)#**"(return-val)" # MethodDeclNonVoid at 522.16; stackHeight = 8
   addu $sp,$sp,12 # MethodDeclNonVoid at 522.16; stackHeight = 8
  jr $ra # MethodDeclNonVoid at 522.16; stackHeight = -4
  # EXIT NODE # MethodDeclNonVoid at 522.16; stackHeight = -4
  # ENTER NODE # MethodDeclNonVoid at 530.13; stackHeight = -4
  .globl fcn_2842_compareTo # MethodDeclNonVoid at 530.13; stackHeight = -4
  fcn_2842_compareTo: # MethodDeclNonVoid at 530.13; stackHeight = -4
   subu $sp,$sp,4 # MethodDeclNonVoid at 530.13; stackHeight = -4
   sw $s2,($sp) #**"old this-ptr" # MethodDeclNonVoid at 530.13; stackHeight = -4
   lw $s2,8($sp) #**"this-ptr" # MethodDeclNonVoid at 530.13; stackHeight = -4
   sw $ra,8($sp) #**"RA:compareTo" # MethodDeclNonVoid at 530.13; stackHeight = -4
    # ENTER NODE # LocalVarDecl at 531.7; stackHeight = 0
      # ENTER NODE # IntegerLiteral at 531.16; stackHeight = 0
       subu $sp,$sp,8 # IntegerLiteral at 531.16; stackHeight = 0
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 531.16; stackHeight = 8
       li $t0,0 # IntegerLiteral at 531.16; stackHeight = 8
       sw $t0,($sp) # IntegerLiteral at 531.16; stackHeight = 8
      # EXIT NODE # IntegerLiteral at 531.16; stackHeight = 8
    # EXIT NODE # LocalVarDecl at 531.7; stackHeight = 8
    # ENTER NODE # If at 532.3; stackHeight = 8
      # ENTER NODE # Not at 532.18; stackHeight = 8
        # ENTER NODE # Equals at 532.18; stackHeight = 8
          # ENTER NODE # InstVarAccess at 532.11; stackHeight = 8
            # ENTER NODE # This at 532.7; stackHeight = 8
             subu $sp,$sp,4 # This at 532.7; stackHeight = 8
             sw $s2,($sp)#**"" # This at 532.7; stackHeight = 12
            # EXIT NODE # This at 532.7; stackHeight = 12
           lw $t0,($sp) # InstVarAccess at 532.11; stackHeight = 12
           beq $t0,$zero,nullPtrException # InstVarAccess at 532.11; stackHeight = 12
           lw $t0,-16($t0) # InstVarAccess at 532.11; stackHeight = 12
           sw $t0,($sp)#**"" # InstVarAccess at 532.11; stackHeight = 12
          # EXIT NODE # InstVarAccess at 532.11; stackHeight = 12
          # ENTER NODE # InstVarAccess at 532.26; stackHeight = 12
            # ENTER NODE # IdentifierExp at 532.21; stackHeight = 12
             lw $t0,16($sp) # local: stackHt=12,var-offset=4 # IdentifierExp at 532.21; stackHeight = 12
             subu $sp,$sp,4 # IdentifierExp at 532.21; stackHeight = 12
             sw $t0,($sp)#**"" # IdentifierExp at 532.21; stackHeight = 16
            # EXIT NODE # IdentifierExp at 532.21; stackHeight = 16
           lw $t0,($sp) # InstVarAccess at 532.26; stackHeight = 16
           beq $t0,$zero,nullPtrException # InstVarAccess at 532.26; stackHeight = 16
           lw $t0,-16($t0) # InstVarAccess at 532.26; stackHeight = 16
           sw $t0,($sp)#**"" # InstVarAccess at 532.26; stackHeight = 16
          # EXIT NODE # InstVarAccess at 532.26; stackHeight = 16
         lw $t0,($sp) # Equals at 532.18; stackHeight = 16
         lw $t1,4($sp) # Equals at 532.18; stackHeight = 16
         seq $t0,$t0,$t1 # Equals at 532.18; stackHeight = 16
         addu $sp,$sp,4 # Equals at 532.18; stackHeight = 16
         sw $t0,($sp)#**"" # Equals at 532.18; stackHeight = 12
        # EXIT NODE # Equals at 532.18; stackHeight = 12
       lw $t0,($sp) # Not at 532.18; stackHeight = 12
       xor $t0,$t0,1 # Not at 532.18; stackHeight = 12
       sw $t0,($sp)#**"" # Not at 532.18; stackHeight = 12
      # EXIT NODE # Not at 532.18; stackHeight = 12
     lw $t0,($sp) # If at 532.3; stackHeight = 12
     addu $sp,$sp,4 # If at 532.3; stackHeight = 12
     beq $t0,$zero,if_else_2840 # If at 532.3; stackHeight = 8
      # ENTER NODE # Block at 532.34; stackHeight = 8
        # ENTER NODE # If at 533.4; stackHeight = 8
          # ENTER NODE # InstVarAccess at 533.12; stackHeight = 8
            # ENTER NODE # This at 533.8; stackHeight = 8
             subu $sp,$sp,4 # This at 533.8; stackHeight = 8
             sw $s2,($sp)#**"" # This at 533.8; stackHeight = 12
            # EXIT NODE # This at 533.8; stackHeight = 12
           lw $t0,($sp) # InstVarAccess at 533.12; stackHeight = 12
           beq $t0,$zero,nullPtrException # InstVarAccess at 533.12; stackHeight = 12
           lw $t0,-16($t0) # InstVarAccess at 533.12; stackHeight = 12
           sw $t0,($sp)#**"" # InstVarAccess at 533.12; stackHeight = 12
          # EXIT NODE # InstVarAccess at 533.12; stackHeight = 12
         lw $t0,($sp) # If at 533.4; stackHeight = 12
         addu $sp,$sp,4 # If at 533.4; stackHeight = 12
         beq $t0,$zero,if_else_2802 # If at 533.4; stackHeight = 8
          # ENTER NODE # Assign at 533.27; stackHeight = 8
            # ENTER NODE # Minus at 533.29; stackHeight = 8
              # ENTER NODE # IntegerLiteral at 533.29; stackHeight = 8
               subu $sp,$sp,8 # IntegerLiteral at 533.29; stackHeight = 8
               sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 533.29; stackHeight = 16
               li $t0,0 # IntegerLiteral at 533.29; stackHeight = 16
               sw $t0,($sp) # IntegerLiteral at 533.29; stackHeight = 16
              # EXIT NODE # IntegerLiteral at 533.29; stackHeight = 16
              # ENTER NODE # IntegerLiteral at 533.30; stackHeight = 16
               subu $sp,$sp,8 # IntegerLiteral at 533.30; stackHeight = 16
               sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 533.30; stackHeight = 24
               li $t0,1 # IntegerLiteral at 533.30; stackHeight = 24
               sw $t0,($sp) # IntegerLiteral at 533.30; stackHeight = 24
              # EXIT NODE # IntegerLiteral at 533.30; stackHeight = 24
             lw $t0,($sp) # Minus at 533.29; stackHeight = 24
             lw $t1,8($sp) # Minus at 533.29; stackHeight = 24
             subu $t0,$t1,$t0 # Minus at 533.29; stackHeight = 24
             addu $sp,$sp,8 # Minus at 533.29; stackHeight = 24
             sw $t0,($sp)#**"" # Minus at 533.29; stackHeight = 16
            # EXIT NODE # Minus at 533.29; stackHeight = 16
           lw $t0,($sp) # Assign at 533.27; stackHeight = 16
           sw $t0,8($sp) # Assign at 533.27; stackHeight = 16
           addu $sp,$sp,8 # Assign at 533.27; stackHeight = 16
          # EXIT NODE # Assign at 533.27; stackHeight = 8
        j if_done_2802 # If at 533.4; stackHeight = 8
        if_else_2802: # If at 533.4; stackHeight = 8
          # ENTER NODE # Assign at 534.16; stackHeight = 8
            # ENTER NODE # IntegerLiteral at 534.18; stackHeight = 8
             subu $sp,$sp,8 # IntegerLiteral at 534.18; stackHeight = 8
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 534.18; stackHeight = 16
             li $t0,1 # IntegerLiteral at 534.18; stackHeight = 16
             sw $t0,($sp) # IntegerLiteral at 534.18; stackHeight = 16
            # EXIT NODE # IntegerLiteral at 534.18; stackHeight = 16
           lw $t0,($sp) # Assign at 534.16; stackHeight = 16
           sw $t0,8($sp) # Assign at 534.16; stackHeight = 16
           addu $sp,$sp,8 # Assign at 534.16; stackHeight = 16
          # EXIT NODE # Assign at 534.16; stackHeight = 8
        if_done_2802: # If at 533.4; stackHeight = 8
        # EXIT NODE # If at 533.4; stackHeight = 8
      # EXIT NODE # Block at 532.34; stackHeight = 8
    j if_done_2840 # If at 532.3; stackHeight = 8
    if_else_2840: # If at 532.3; stackHeight = 8
      # ENTER NODE # Block at 536.8; stackHeight = 8
        # ENTER NODE # Assign at 537.11; stackHeight = 8
          # ENTER NODE # Call at 537.13; stackHeight = 8
            # ENTER NODE # This at 537.13; stackHeight = 8
             subu $sp,$sp,4 # This at 537.13; stackHeight = 8
             sw $s2,($sp)#**"" # This at 537.13; stackHeight = 12
            # EXIT NODE # This at 537.13; stackHeight = 12
            # ENTER NODE # InstVarAccess at 537.34; stackHeight = 12
              # ENTER NODE # This at 537.30; stackHeight = 12
               subu $sp,$sp,4 # This at 537.30; stackHeight = 12
               sw $s2,($sp)#**"" # This at 537.30; stackHeight = 16
              # EXIT NODE # This at 537.30; stackHeight = 16
             lw $t0,($sp) # InstVarAccess at 537.34; stackHeight = 16
             beq $t0,$zero,nullPtrException # InstVarAccess at 537.34; stackHeight = 16
             lw $t0,0($t0) # InstVarAccess at 537.34; stackHeight = 16
             sw $t0,($sp)#**"" # InstVarAccess at 537.34; stackHeight = 16
            # EXIT NODE # InstVarAccess at 537.34; stackHeight = 16
            # ENTER NODE # InstVarAccess at 537.46; stackHeight = 16
              # ENTER NODE # IdentifierExp at 537.41; stackHeight = 16
               lw $t0,20($sp) # local: stackHt=16,var-offset=4 # IdentifierExp at 537.41; stackHeight = 16
               subu $sp,$sp,4 # IdentifierExp at 537.41; stackHeight = 16
               sw $t0,($sp)#**"" # IdentifierExp at 537.41; stackHeight = 20
              # EXIT NODE # IdentifierExp at 537.41; stackHeight = 20
             lw $t0,($sp) # InstVarAccess at 537.46; stackHeight = 20
             beq $t0,$zero,nullPtrException # InstVarAccess at 537.46; stackHeight = 20
             lw $t0,0($t0) # InstVarAccess at 537.46; stackHeight = 20
             sw $t0,($sp)#**"" # InstVarAccess at 537.46; stackHeight = 20
            # EXIT NODE # InstVarAccess at 537.46; stackHeight = 20
           lw $t0,8($sp) # Call at 537.13; stackHeight = 20
           beq $t0,$zero,nullPtrException # Call at 537.13; stackHeight = 20
           lw $t0,-12($t0) # Call at 537.13; stackHeight = 20
           lw $t0,88($t0) # Call at 537.13; stackHeight = 20
           jalr $t0 # primitiveCompare # Call at 537.13; stackHeight = 20
          # EXIT NODE # Call at 537.13; stackHeight = 16
         lw $t0,($sp) # Assign at 537.11; stackHeight = 16
         sw $t0,8($sp) # Assign at 537.11; stackHeight = 16
         addu $sp,$sp,8 # Assign at 537.11; stackHeight = 16
        # EXIT NODE # Assign at 537.11; stackHeight = 8
        # ENTER NODE # If at 538.4; stackHeight = 8
          # ENTER NODE # GreaterThan at 538.15; stackHeight = 8
            # ENTER NODE # IdentifierExp at 538.8; stackHeight = 8
             lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 538.8; stackHeight = 8
             subu $sp,$sp,8 # IdentifierExp at 538.8; stackHeight = 8
             sw $s5,4($sp)#**"GC tag" # IdentifierExp at 538.8; stackHeight = 16
             sw $t0,($sp)#**"" # IdentifierExp at 538.8; stackHeight = 16
            # EXIT NODE # IdentifierExp at 538.8; stackHeight = 16
            # ENTER NODE # IntegerLiteral at 538.17; stackHeight = 16
             subu $sp,$sp,8 # IntegerLiteral at 538.17; stackHeight = 16
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 538.17; stackHeight = 24
             li $t0,0 # IntegerLiteral at 538.17; stackHeight = 24
             sw $t0,($sp) # IntegerLiteral at 538.17; stackHeight = 24
            # EXIT NODE # IntegerLiteral at 538.17; stackHeight = 24
           lw $t0,($sp) # GreaterThan at 538.15; stackHeight = 24
           lw $t1,8($sp) # GreaterThan at 538.15; stackHeight = 24
           sgt $t0,$t1,$t0 # GreaterThan at 538.15; stackHeight = 24
           addu $sp,$sp,12 # GreaterThan at 538.15; stackHeight = 24
           sw $t0,($sp)#**"" # GreaterThan at 538.15; stackHeight = 12
          # EXIT NODE # GreaterThan at 538.15; stackHeight = 12
         lw $t0,($sp) # If at 538.4; stackHeight = 12
         addu $sp,$sp,4 # If at 538.4; stackHeight = 12
         beq $t0,$zero,if_else_2828 # If at 538.4; stackHeight = 8
          # ENTER NODE # Assign at 538.27; stackHeight = 8
            # ENTER NODE # IntegerLiteral at 538.29; stackHeight = 8
             subu $sp,$sp,8 # IntegerLiteral at 538.29; stackHeight = 8
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 538.29; stackHeight = 16
             li $t0,1 # IntegerLiteral at 538.29; stackHeight = 16
             sw $t0,($sp) # IntegerLiteral at 538.29; stackHeight = 16
            # EXIT NODE # IntegerLiteral at 538.29; stackHeight = 16
           lw $t0,($sp) # Assign at 538.27; stackHeight = 16
           sw $t0,8($sp) # Assign at 538.27; stackHeight = 16
           addu $sp,$sp,8 # Assign at 538.27; stackHeight = 16
          # EXIT NODE # Assign at 538.27; stackHeight = 8
        j if_done_2828 # If at 538.4; stackHeight = 8
        if_else_2828: # If at 538.4; stackHeight = 8
          # ENTER NODE # If at 539.9; stackHeight = 8
            # ENTER NODE # LessThan at 539.20; stackHeight = 8
              # ENTER NODE # IdentifierExp at 539.13; stackHeight = 8
               lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 539.13; stackHeight = 8
               subu $sp,$sp,8 # IdentifierExp at 539.13; stackHeight = 8
               sw $s5,4($sp)#**"GC tag" # IdentifierExp at 539.13; stackHeight = 16
               sw $t0,($sp)#**"" # IdentifierExp at 539.13; stackHeight = 16
              # EXIT NODE # IdentifierExp at 539.13; stackHeight = 16
              # ENTER NODE # IntegerLiteral at 539.22; stackHeight = 16
               subu $sp,$sp,8 # IntegerLiteral at 539.22; stackHeight = 16
               sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 539.22; stackHeight = 24
               li $t0,0 # IntegerLiteral at 539.22; stackHeight = 24
               sw $t0,($sp) # IntegerLiteral at 539.22; stackHeight = 24
              # EXIT NODE # IntegerLiteral at 539.22; stackHeight = 24
             lw $t0,($sp) # LessThan at 539.20; stackHeight = 24
             lw $t1,8($sp) # LessThan at 539.20; stackHeight = 24
             slt $t0,$t1,$t0 # LessThan at 539.20; stackHeight = 24
             addu $sp,$sp,12 # LessThan at 539.20; stackHeight = 24
             sw $t0,($sp)#**"" # LessThan at 539.20; stackHeight = 12
            # EXIT NODE # LessThan at 539.20; stackHeight = 12
           lw $t0,($sp) # If at 539.9; stackHeight = 12
           addu $sp,$sp,4 # If at 539.9; stackHeight = 12
           beq $t0,$zero,if_else_2827 # If at 539.9; stackHeight = 8
            # ENTER NODE # Assign at 539.32; stackHeight = 8
              # ENTER NODE # Minus at 539.34; stackHeight = 8
                # ENTER NODE # IntegerLiteral at 539.34; stackHeight = 8
                 subu $sp,$sp,8 # IntegerLiteral at 539.34; stackHeight = 8
                 sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 539.34; stackHeight = 16
                 li $t0,0 # IntegerLiteral at 539.34; stackHeight = 16
                 sw $t0,($sp) # IntegerLiteral at 539.34; stackHeight = 16
                # EXIT NODE # IntegerLiteral at 539.34; stackHeight = 16
                # ENTER NODE # IntegerLiteral at 539.35; stackHeight = 16
                 subu $sp,$sp,8 # IntegerLiteral at 539.35; stackHeight = 16
                 sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 539.35; stackHeight = 24
                 li $t0,1 # IntegerLiteral at 539.35; stackHeight = 24
                 sw $t0,($sp) # IntegerLiteral at 539.35; stackHeight = 24
                # EXIT NODE # IntegerLiteral at 539.35; stackHeight = 24
               lw $t0,($sp) # Minus at 539.34; stackHeight = 24
               lw $t1,8($sp) # Minus at 539.34; stackHeight = 24
               subu $t0,$t1,$t0 # Minus at 539.34; stackHeight = 24
               addu $sp,$sp,8 # Minus at 539.34; stackHeight = 24
               sw $t0,($sp)#**"" # Minus at 539.34; stackHeight = 16
              # EXIT NODE # Minus at 539.34; stackHeight = 16
             lw $t0,($sp) # Assign at 539.32; stackHeight = 16
             sw $t0,8($sp) # Assign at 539.32; stackHeight = 16
             addu $sp,$sp,8 # Assign at 539.32; stackHeight = 16
            # EXIT NODE # Assign at 539.32; stackHeight = 8
          j if_done_2827 # If at 539.9; stackHeight = 8
          if_else_2827: # If at 539.9; stackHeight = 8
            # ENTER NODE # Block at 540.4; stackHeight = 8
            # EXIT NODE # Block at 540.4; stackHeight = 8
          if_done_2827: # If at 539.9; stackHeight = 8
          # EXIT NODE # If at 539.9; stackHeight = 8
        if_done_2828: # If at 538.4; stackHeight = 8
        # EXIT NODE # If at 538.4; stackHeight = 8
        # ENTER NODE # If at 540.4; stackHeight = 8
          # ENTER NODE # InstVarAccess at 540.12; stackHeight = 8
            # ENTER NODE # This at 540.8; stackHeight = 8
             subu $sp,$sp,4 # This at 540.8; stackHeight = 8
             sw $s2,($sp)#**"" # This at 540.8; stackHeight = 12
            # EXIT NODE # This at 540.8; stackHeight = 12
           lw $t0,($sp) # InstVarAccess at 540.12; stackHeight = 12
           beq $t0,$zero,nullPtrException # InstVarAccess at 540.12; stackHeight = 12
           lw $t0,-16($t0) # InstVarAccess at 540.12; stackHeight = 12
           sw $t0,($sp)#**"" # InstVarAccess at 540.12; stackHeight = 12
          # EXIT NODE # InstVarAccess at 540.12; stackHeight = 12
         lw $t0,($sp) # If at 540.4; stackHeight = 12
         addu $sp,$sp,4 # If at 540.4; stackHeight = 12
         beq $t0,$zero,if_else_2838 # If at 540.4; stackHeight = 8
          # ENTER NODE # Block at 540.20; stackHeight = 8
            # ENTER NODE # Assign at 541.12; stackHeight = 8
              # ENTER NODE # Minus at 541.14; stackHeight = 8
                # ENTER NODE # IntegerLiteral at 541.14; stackHeight = 8
                 subu $sp,$sp,8 # IntegerLiteral at 541.14; stackHeight = 8
                 sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 541.14; stackHeight = 16
                 li $t0,0 # IntegerLiteral at 541.14; stackHeight = 16
                 sw $t0,($sp) # IntegerLiteral at 541.14; stackHeight = 16
                # EXIT NODE # IntegerLiteral at 541.14; stackHeight = 16
                # ENTER NODE # IdentifierExp at 541.15; stackHeight = 16
                 lw $t0,8($sp) # local: stackHt=16,var-offset=-8 # IdentifierExp at 541.15; stackHeight = 16
                 subu $sp,$sp,8 # IdentifierExp at 541.15; stackHeight = 16
                 sw $s5,4($sp)#**"GC tag" # IdentifierExp at 541.15; stackHeight = 24
                 sw $t0,($sp)#**"" # IdentifierExp at 541.15; stackHeight = 24
                # EXIT NODE # IdentifierExp at 541.15; stackHeight = 24
               lw $t0,($sp) # Minus at 541.14; stackHeight = 24
               lw $t1,8($sp) # Minus at 541.14; stackHeight = 24
               subu $t0,$t1,$t0 # Minus at 541.14; stackHeight = 24
               addu $sp,$sp,8 # Minus at 541.14; stackHeight = 24
               sw $t0,($sp)#**"" # Minus at 541.14; stackHeight = 16
              # EXIT NODE # Minus at 541.14; stackHeight = 16
             lw $t0,($sp) # Assign at 541.12; stackHeight = 16
             sw $t0,8($sp) # Assign at 541.12; stackHeight = 16
             addu $sp,$sp,8 # Assign at 541.12; stackHeight = 16
            # EXIT NODE # Assign at 541.12; stackHeight = 8
          # EXIT NODE # Block at 540.20; stackHeight = 8
        j if_done_2838 # If at 540.4; stackHeight = 8
        if_else_2838: # If at 540.4; stackHeight = 8
          # ENTER NODE # Block at 543.3; stackHeight = 8
          # EXIT NODE # Block at 543.3; stackHeight = 8
        if_done_2838: # If at 540.4; stackHeight = 8
        # EXIT NODE # If at 540.4; stackHeight = 8
      # EXIT NODE # Block at 536.8; stackHeight = 8
    if_done_2840: # If at 532.3; stackHeight = 8
    # EXIT NODE # If at 532.3; stackHeight = 8
    # ENTER NODE # IdentifierExp at 544.10; stackHeight = 8
     lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 544.10; stackHeight = 8
     subu $sp,$sp,8 # IdentifierExp at 544.10; stackHeight = 8
     sw $s5,4($sp)#**"GC tag" # IdentifierExp at 544.10; stackHeight = 16
     sw $t0,($sp)#**"" # IdentifierExp at 544.10; stackHeight = 16
    # EXIT NODE # IdentifierExp at 544.10; stackHeight = 16
   lw $ra,24($sp) # MethodDeclNonVoid at 530.13; stackHeight = 16
   lw $s2,16($sp) # MethodDeclNonVoid at 530.13; stackHeight = 16
   lw $t0,($sp) # MethodDeclNonVoid at 530.13; stackHeight = 16
   sw $t0,20($sp)#**"(return-val)" # MethodDeclNonVoid at 530.13; stackHeight = 16
   sw $s5,24($sp)#**"" # MethodDeclNonVoid at 530.13; stackHeight = 16
   addu $sp,$sp,20 # MethodDeclNonVoid at 530.13; stackHeight = 16
  jr $ra # MethodDeclNonVoid at 530.13; stackHeight = -4
  # EXIT NODE # MethodDeclNonVoid at 530.13; stackHeight = -4
  # ENTER NODE # MethodDeclNonVoid at 547.17; stackHeight = -4
  .globl fcn_2876_equals # MethodDeclNonVoid at 547.17; stackHeight = -4
  fcn_2876_equals: # MethodDeclNonVoid at 547.17; stackHeight = -4
   subu $sp,$sp,4 # MethodDeclNonVoid at 547.17; stackHeight = -4
   sw $s2,($sp) #**"old this-ptr" # MethodDeclNonVoid at 547.17; stackHeight = -4
   lw $s2,8($sp) #**"this-ptr" # MethodDeclNonVoid at 547.17; stackHeight = -4
   sw $ra,8($sp) #**"RA:equals" # MethodDeclNonVoid at 547.17; stackHeight = -4
    # ENTER NODE # LocalVarDecl at 548.11; stackHeight = 0
      # ENTER NODE # False at 548.20; stackHeight = 0
       subu $sp,$sp,4 # False at 548.20; stackHeight = 0
       sw $zero,($sp)#**"" # False at 548.20; stackHeight = 4
      # EXIT NODE # False at 548.20; stackHeight = 4
    # EXIT NODE # LocalVarDecl at 548.11; stackHeight = 4
    # ENTER NODE # If at 549.3; stackHeight = 4
      # ENTER NODE # InstanceOf at 549.13; stackHeight = 4
        # ENTER NODE # IdentifierExp at 549.7; stackHeight = 4
         lw $t0,8($sp) # local: stackHt=4,var-offset=4 # IdentifierExp at 549.7; stackHeight = 4
         subu $sp,$sp,4 # IdentifierExp at 549.7; stackHeight = 4
         sw $t0,($sp)#**"" # IdentifierExp at 549.7; stackHeight = 8
        # EXIT NODE # IdentifierExp at 549.7; stackHeight = 8
       la $t0,CLASS_BigInt # InstanceOf at 549.13; stackHeight = 8
       la $t1,END_CLASS_BigInt # InstanceOf at 549.13; stackHeight = 8
       jal instanceOf # InstanceOf at 549.13; stackHeight = 8
      # EXIT NODE # InstanceOf at 549.13; stackHeight = 8
     lw $t0,($sp) # If at 549.3; stackHeight = 8
     addu $sp,$sp,4 # If at 549.3; stackHeight = 8
     beq $t0,$zero,if_else_2874 # If at 549.3; stackHeight = 4
      # ENTER NODE # Block at 549.32; stackHeight = 4
        # ENTER NODE # LocalVarDecl at 550.11; stackHeight = 4
          # ENTER NODE # Cast at 550.20; stackHeight = 4
            # ENTER NODE # IdentifierExp at 550.28; stackHeight = 4
             lw $t0,8($sp) # local: stackHt=4,var-offset=4 # IdentifierExp at 550.28; stackHeight = 4
             subu $sp,$sp,4 # IdentifierExp at 550.28; stackHeight = 4
             sw $t0,($sp)#**"" # IdentifierExp at 550.28; stackHeight = 8
            # EXIT NODE # IdentifierExp at 550.28; stackHeight = 8
           la $t0,CLASS_BigInt # Cast at 550.20; stackHeight = 8
           la $t1,END_CLASS_BigInt # Cast at 550.20; stackHeight = 8
           jal checkCast # Cast at 550.20; stackHeight = 8
          # EXIT NODE # Cast at 550.20; stackHeight = 8
        # EXIT NODE # LocalVarDecl at 550.11; stackHeight = 8
        # ENTER NODE # Assign at 551.11; stackHeight = 8
          # ENTER NODE # And at 551.43; stackHeight = 8
            # ENTER NODE # Call at 551.23; stackHeight = 8
              # ENTER NODE # InstVarAccess at 551.17; stackHeight = 8
                # ENTER NODE # This at 551.13; stackHeight = 8
                 subu $sp,$sp,4 # This at 551.13; stackHeight = 8
                 sw $s2,($sp)#**"" # This at 551.13; stackHeight = 12
                # EXIT NODE # This at 551.13; stackHeight = 12
               lw $t0,($sp) # InstVarAccess at 551.17; stackHeight = 12
               beq $t0,$zero,nullPtrException # InstVarAccess at 551.17; stackHeight = 12
               lw $t0,0($t0) # InstVarAccess at 551.17; stackHeight = 12
               sw $t0,($sp)#**"" # InstVarAccess at 551.17; stackHeight = 12
              # EXIT NODE # InstVarAccess at 551.17; stackHeight = 12
              # ENTER NODE # InstVarAccess at 551.36; stackHeight = 12
                # ENTER NODE # IdentifierExp at 551.30; stackHeight = 12
                 lw $t0,4($sp) # local: stackHt=12,var-offset=-8 # IdentifierExp at 551.30; stackHeight = 12
                 subu $sp,$sp,4 # IdentifierExp at 551.30; stackHeight = 12
                 sw $t0,($sp)#**"" # IdentifierExp at 551.30; stackHeight = 16
                # EXIT NODE # IdentifierExp at 551.30; stackHeight = 16
               lw $t0,($sp) # InstVarAccess at 551.36; stackHeight = 16
               beq $t0,$zero,nullPtrException # InstVarAccess at 551.36; stackHeight = 16
               lw $t0,0($t0) # InstVarAccess at 551.36; stackHeight = 16
               sw $t0,($sp)#**"" # InstVarAccess at 551.36; stackHeight = 16
              # EXIT NODE # InstVarAccess at 551.36; stackHeight = 16
             lw $t0,4($sp) # Call at 551.23; stackHeight = 16
             beq $t0,$zero,nullPtrException # Call at 551.23; stackHeight = 16
             lw $t0,-12($t0) # Call at 551.23; stackHeight = 16
             lw $t0,4($t0) # Call at 551.23; stackHeight = 16
             jalr $t0 # equals # Call at 551.23; stackHeight = 16
            # EXIT NODE # Call at 551.23; stackHeight = 12
           lw $t0,($sp) # And at 551.43; stackHeight = 12
           beq $t0,$zero, skip_2870 # And at 551.43; stackHeight = 12
           addu $sp,$sp,4 # And at 551.43; stackHeight = 12
            # ENTER NODE # Equals at 551.57; stackHeight = 8
              # ENTER NODE # InstVarAccess at 551.50; stackHeight = 8
                # ENTER NODE # This at 551.46; stackHeight = 8
                 subu $sp,$sp,4 # This at 551.46; stackHeight = 8
                 sw $s2,($sp)#**"" # This at 551.46; stackHeight = 12
                # EXIT NODE # This at 551.46; stackHeight = 12
               lw $t0,($sp) # InstVarAccess at 551.50; stackHeight = 12
               beq $t0,$zero,nullPtrException # InstVarAccess at 551.50; stackHeight = 12
               lw $t0,-16($t0) # InstVarAccess at 551.50; stackHeight = 12
               sw $t0,($sp)#**"" # InstVarAccess at 551.50; stackHeight = 12
              # EXIT NODE # InstVarAccess at 551.50; stackHeight = 12
              # ENTER NODE # InstVarAccess at 551.66; stackHeight = 12
                # ENTER NODE # IdentifierExp at 551.60; stackHeight = 12
                 lw $t0,4($sp) # local: stackHt=12,var-offset=-8 # IdentifierExp at 551.60; stackHeight = 12
                 subu $sp,$sp,4 # IdentifierExp at 551.60; stackHeight = 12
                 sw $t0,($sp)#**"" # IdentifierExp at 551.60; stackHeight = 16
                # EXIT NODE # IdentifierExp at 551.60; stackHeight = 16
               lw $t0,($sp) # InstVarAccess at 551.66; stackHeight = 16
               beq $t0,$zero,nullPtrException # InstVarAccess at 551.66; stackHeight = 16
               lw $t0,-16($t0) # InstVarAccess at 551.66; stackHeight = 16
               sw $t0,($sp)#**"" # InstVarAccess at 551.66; stackHeight = 16
              # EXIT NODE # InstVarAccess at 551.66; stackHeight = 16
             lw $t0,($sp) # Equals at 551.57; stackHeight = 16
             lw $t1,4($sp) # Equals at 551.57; stackHeight = 16
             seq $t0,$t0,$t1 # Equals at 551.57; stackHeight = 16
             addu $sp,$sp,4 # Equals at 551.57; stackHeight = 16
             sw $t0,($sp)#**"" # Equals at 551.57; stackHeight = 12
            # EXIT NODE # Equals at 551.57; stackHeight = 12
          skip_2870: # And at 551.43; stackHeight = 12
          # EXIT NODE # And at 551.43; stackHeight = 12
         lw $t0,($sp) # Assign at 551.11; stackHeight = 12
         sw $t0,8($sp) # Assign at 551.11; stackHeight = 12
         addu $sp,$sp,4 # Assign at 551.11; stackHeight = 12
        # EXIT NODE # Assign at 551.11; stackHeight = 8
       addu $sp,4 # Block at 549.32; stackHeight = 8
      # EXIT NODE # Block at 549.32; stackHeight = 4
    j if_done_2874 # If at 549.3; stackHeight = 4
    if_else_2874: # If at 549.3; stackHeight = 4
      # ENTER NODE # Block at 553.3; stackHeight = 4
      # EXIT NODE # Block at 553.3; stackHeight = 4
    if_done_2874: # If at 549.3; stackHeight = 4
    # EXIT NODE # If at 549.3; stackHeight = 4
    # ENTER NODE # IdentifierExp at 553.10; stackHeight = 4
     lw $t0,0($sp) # local: stackHt=4,var-offset=-4 # IdentifierExp at 553.10; stackHeight = 4
     subu $sp,$sp,4 # IdentifierExp at 553.10; stackHeight = 4
     sw $t0,($sp)#**"" # IdentifierExp at 553.10; stackHeight = 8
    # EXIT NODE # IdentifierExp at 553.10; stackHeight = 8
   lw $ra,16($sp) # MethodDeclNonVoid at 547.17; stackHeight = 8
   lw $s2,8($sp) # MethodDeclNonVoid at 547.17; stackHeight = 8
   lw $t0,($sp) # MethodDeclNonVoid at 547.17; stackHeight = 8
   sw $t0,16($sp)#**"(return-val)" # MethodDeclNonVoid at 547.17; stackHeight = 8
   addu $sp,$sp,16 # MethodDeclNonVoid at 547.17; stackHeight = 8
  jr $ra # MethodDeclNonVoid at 547.17; stackHeight = -8
  # EXIT NODE # MethodDeclNonVoid at 547.17; stackHeight = -8
  # ENTER NODE # MethodDeclNonVoid at 556.13; stackHeight = -8
  .globl fcn_2900_hashCode # MethodDeclNonVoid at 556.13; stackHeight = -8
  fcn_2900_hashCode: # MethodDeclNonVoid at 556.13; stackHeight = -8
   subu $sp,$sp,4 # MethodDeclNonVoid at 556.13; stackHeight = -8
   sw $s2,($sp) #**"old this-ptr" # MethodDeclNonVoid at 556.13; stackHeight = -8
   lw $s2,4($sp) #**"this-ptr" # MethodDeclNonVoid at 556.13; stackHeight = -8
   sw $ra,4($sp) #**"RA:hashCode" # MethodDeclNonVoid at 556.13; stackHeight = -8
    # ENTER NODE # LocalVarDecl at 561.7; stackHeight = 0
      # ENTER NODE # Call at 561.27; stackHeight = 0
        # ENTER NODE # Call at 561.21; stackHeight = 0
          # ENTER NODE # This at 561.16; stackHeight = 0
           subu $sp,$sp,4 # This at 561.16; stackHeight = 0
           sw $s2,($sp)#**"" # This at 561.16; stackHeight = 4
          # EXIT NODE # This at 561.16; stackHeight = 4
         lw $t0,0($sp) # Call at 561.21; stackHeight = 4
         beq $t0,$zero,nullPtrException # Call at 561.21; stackHeight = 4
         lw $t0,-12($t0) # Call at 561.21; stackHeight = 4
         lw $t0,40($t0) # Call at 561.21; stackHeight = 4
         jalr $t0 # abs # Call at 561.21; stackHeight = 4
        # EXIT NODE # Call at 561.21; stackHeight = 4
        # ENTER NODE # Call at 561.53; stackHeight = 4
          # ENTER NODE # NewObject at 561.40; stackHeight = 4
           li $s6,2 # NewObject at 561.40; stackHeight = 4
           li $s7,1 # NewObject at 561.40; stackHeight = 4
           jal newObject # NewObject at 561.40; stackHeight = 4
           la $t0,CLASS_BigInt # NewObject at 561.40; stackHeight = 8
           sw $t0,-12($s7)#**"VTP: BigInt" # NewObject at 561.40; stackHeight = 8
          # EXIT NODE # NewObject at 561.40; stackHeight = 8
          # ENTER NODE # StringLiteral at 561.59; stackHeight = 8
           subu $sp,$sp,4 # StringLiteral at 561.59; stackHeight = 8
           la $t0,strLit_2883 # StringLiteral at 561.59; stackHeight = 12
           sw $t0,($sp)#**"strLit:4294967296" # StringLiteral at 561.59; stackHeight = 12
          # EXIT NODE # StringLiteral at 561.59; stackHeight = 12
          # ENTER NODE # False at 561.73; stackHeight = 12
           subu $sp,$sp,4 # False at 561.73; stackHeight = 12
           sw $zero,($sp)#**"" # False at 561.73; stackHeight = 16
          # EXIT NODE # False at 561.73; stackHeight = 16
         lw $t0,8($sp) # Call at 561.53; stackHeight = 16
         beq $t0,$zero,nullPtrException # Call at 561.53; stackHeight = 16
         lw $t0,-12($t0) # Call at 561.53; stackHeight = 16
         lw $t0,16($t0) # Call at 561.53; stackHeight = 16
         jalr $t0 # init2 # Call at 561.53; stackHeight = 16
        # EXIT NODE # Call at 561.53; stackHeight = 8
       lw $t0,4($sp) # Call at 561.27; stackHeight = 8
       beq $t0,$zero,nullPtrException # Call at 561.27; stackHeight = 8
       lw $t0,-12($t0) # Call at 561.27; stackHeight = 8
       lw $t0,48($t0) # Call at 561.27; stackHeight = 8
       jalr $t0 # helpHashCode # Call at 561.27; stackHeight = 8
      # EXIT NODE # Call at 561.27; stackHeight = 8
    # EXIT NODE # LocalVarDecl at 561.7; stackHeight = 8
    # ENTER NODE # If at 562.3; stackHeight = 8
      # ENTER NODE # InstVarAccess at 562.11; stackHeight = 8
        # ENTER NODE # This at 562.7; stackHeight = 8
         subu $sp,$sp,4 # This at 562.7; stackHeight = 8
         sw $s2,($sp)#**"" # This at 562.7; stackHeight = 12
        # EXIT NODE # This at 562.7; stackHeight = 12
       lw $t0,($sp) # InstVarAccess at 562.11; stackHeight = 12
       beq $t0,$zero,nullPtrException # InstVarAccess at 562.11; stackHeight = 12
       lw $t0,-16($t0) # InstVarAccess at 562.11; stackHeight = 12
       sw $t0,($sp)#**"" # InstVarAccess at 562.11; stackHeight = 12
      # EXIT NODE # InstVarAccess at 562.11; stackHeight = 12
     lw $t0,($sp) # If at 562.3; stackHeight = 12
     addu $sp,$sp,4 # If at 562.3; stackHeight = 12
     beq $t0,$zero,if_else_2898 # If at 562.3; stackHeight = 8
      # ENTER NODE # Block at 562.19; stackHeight = 8
        # ENTER NODE # Assign at 563.11; stackHeight = 8
          # ENTER NODE # Minus at 563.13; stackHeight = 8
            # ENTER NODE # IntegerLiteral at 563.13; stackHeight = 8
             subu $sp,$sp,8 # IntegerLiteral at 563.13; stackHeight = 8
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 563.13; stackHeight = 16
             li $t0,0 # IntegerLiteral at 563.13; stackHeight = 16
             sw $t0,($sp) # IntegerLiteral at 563.13; stackHeight = 16
            # EXIT NODE # IntegerLiteral at 563.13; stackHeight = 16
            # ENTER NODE # IdentifierExp at 563.14; stackHeight = 16
             lw $t0,8($sp) # local: stackHt=16,var-offset=-8 # IdentifierExp at 563.14; stackHeight = 16
             subu $sp,$sp,8 # IdentifierExp at 563.14; stackHeight = 16
             sw $s5,4($sp)#**"GC tag" # IdentifierExp at 563.14; stackHeight = 24
             sw $t0,($sp)#**"" # IdentifierExp at 563.14; stackHeight = 24
            # EXIT NODE # IdentifierExp at 563.14; stackHeight = 24
           lw $t0,($sp) # Minus at 563.13; stackHeight = 24
           lw $t1,8($sp) # Minus at 563.13; stackHeight = 24
           subu $t0,$t1,$t0 # Minus at 563.13; stackHeight = 24
           addu $sp,$sp,8 # Minus at 563.13; stackHeight = 24
           sw $t0,($sp)#**"" # Minus at 563.13; stackHeight = 16
          # EXIT NODE # Minus at 563.13; stackHeight = 16
         lw $t0,($sp) # Assign at 563.11; stackHeight = 16
         sw $t0,8($sp) # Assign at 563.11; stackHeight = 16
         addu $sp,$sp,8 # Assign at 563.11; stackHeight = 16
        # EXIT NODE # Assign at 563.11; stackHeight = 8
      # EXIT NODE # Block at 562.19; stackHeight = 8
    j if_done_2898 # If at 562.3; stackHeight = 8
    if_else_2898: # If at 562.3; stackHeight = 8
      # ENTER NODE # Block at 565.3; stackHeight = 8
      # EXIT NODE # Block at 565.3; stackHeight = 8
    if_done_2898: # If at 562.3; stackHeight = 8
    # EXIT NODE # If at 562.3; stackHeight = 8
    # ENTER NODE # IdentifierExp at 565.10; stackHeight = 8
     lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 565.10; stackHeight = 8
     subu $sp,$sp,8 # IdentifierExp at 565.10; stackHeight = 8
     sw $s5,4($sp)#**"GC tag" # IdentifierExp at 565.10; stackHeight = 16
     sw $t0,($sp)#**"" # IdentifierExp at 565.10; stackHeight = 16
    # EXIT NODE # IdentifierExp at 565.10; stackHeight = 16
   lw $ra,20($sp) # MethodDeclNonVoid at 556.13; stackHeight = 16
   lw $s2,16($sp) # MethodDeclNonVoid at 556.13; stackHeight = 16
   lw $t0,($sp) # MethodDeclNonVoid at 556.13; stackHeight = 16
   sw $t0,16($sp)#**"(return-val)" # MethodDeclNonVoid at 556.13; stackHeight = 16
   sw $s5,20($sp)#**"" # MethodDeclNonVoid at 556.13; stackHeight = 16
   addu $sp,$sp,16 # MethodDeclNonVoid at 556.13; stackHeight = 16
  jr $ra # MethodDeclNonVoid at 556.13; stackHeight = 0
  # EXIT NODE # MethodDeclNonVoid at 556.13; stackHeight = 0
  # ENTER NODE # MethodDeclNonVoid at 568.13; stackHeight = 0
  .globl fcn_2938_helpHashCode # MethodDeclNonVoid at 568.13; stackHeight = 0
  fcn_2938_helpHashCode: # MethodDeclNonVoid at 568.13; stackHeight = 0
   subu $sp,$sp,4 # MethodDeclNonVoid at 568.13; stackHeight = 0
   sw $s2,($sp) #**"old this-ptr" # MethodDeclNonVoid at 568.13; stackHeight = 0
   lw $s2,8($sp) #**"this-ptr" # MethodDeclNonVoid at 568.13; stackHeight = 0
   sw $ra,8($sp) #**"RA:helpHashCode" # MethodDeclNonVoid at 568.13; stackHeight = 0
    # ENTER NODE # LocalVarDecl at 569.7; stackHeight = 0
      # ENTER NODE # IntegerLiteral at 569.16; stackHeight = 0
       subu $sp,$sp,8 # IntegerLiteral at 569.16; stackHeight = 0
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 569.16; stackHeight = 8
       li $t0,0 # IntegerLiteral at 569.16; stackHeight = 8
       sw $t0,($sp) # IntegerLiteral at 569.16; stackHeight = 8
      # EXIT NODE # IntegerLiteral at 569.16; stackHeight = 8
    # EXIT NODE # LocalVarDecl at 569.7; stackHeight = 8
    # ENTER NODE # If at 570.3; stackHeight = 8
      # ENTER NODE # Not at 570.7; stackHeight = 8
        # ENTER NODE # Call at 570.18; stackHeight = 8
          # ENTER NODE # InstVarAccess at 570.12; stackHeight = 8
            # ENTER NODE # This at 570.8; stackHeight = 8
             subu $sp,$sp,4 # This at 570.8; stackHeight = 8
             sw $s2,($sp)#**"" # This at 570.8; stackHeight = 12
            # EXIT NODE # This at 570.8; stackHeight = 12
           lw $t0,($sp) # InstVarAccess at 570.12; stackHeight = 12
           beq $t0,$zero,nullPtrException # InstVarAccess at 570.12; stackHeight = 12
           lw $t0,0($t0) # InstVarAccess at 570.12; stackHeight = 12
           sw $t0,($sp)#**"" # InstVarAccess at 570.12; stackHeight = 12
          # EXIT NODE # InstVarAccess at 570.12; stackHeight = 12
          # ENTER NODE # StringLiteral at 570.25; stackHeight = 12
           subu $sp,$sp,4 # StringLiteral at 570.25; stackHeight = 12
           la $t0,strLit_2646 # StringLiteral at 570.25; stackHeight = 16
           sw $t0,($sp)#**"strLit:0" # StringLiteral at 570.25; stackHeight = 16
          # EXIT NODE # StringLiteral at 570.25; stackHeight = 16
         lw $t0,4($sp) # Call at 570.18; stackHeight = 16
         beq $t0,$zero,nullPtrException # Call at 570.18; stackHeight = 16
         lw $t0,-12($t0) # Call at 570.18; stackHeight = 16
         lw $t0,4($t0) # Call at 570.18; stackHeight = 16
         jalr $t0 # equals # Call at 570.18; stackHeight = 16
        # EXIT NODE # Call at 570.18; stackHeight = 12
       lw $t0,($sp) # Not at 570.7; stackHeight = 12
       xor $t0,$t0,1 # Not at 570.7; stackHeight = 12
       sw $t0,($sp)#**"" # Not at 570.7; stackHeight = 12
      # EXIT NODE # Not at 570.7; stackHeight = 12
     lw $t0,($sp) # If at 570.3; stackHeight = 12
     addu $sp,$sp,4 # If at 570.3; stackHeight = 12
     beq $t0,$zero,if_else_2936 # If at 570.3; stackHeight = 8
      # ENTER NODE # Block at 570.31; stackHeight = 8
        # ENTER NODE # LocalVarDecl at 571.13; stackHeight = 8
          # ENTER NODE # Call at 571.27; stackHeight = 8
            # ENTER NODE # This at 571.22; stackHeight = 8
             subu $sp,$sp,4 # This at 571.22; stackHeight = 8
             sw $s2,($sp)#**"" # This at 571.22; stackHeight = 12
            # EXIT NODE # This at 571.22; stackHeight = 12
            # ENTER NODE # IdentifierExp at 571.46; stackHeight = 12
             lw $t0,16($sp) # local: stackHt=12,var-offset=4 # IdentifierExp at 571.46; stackHeight = 12
             subu $sp,$sp,4 # IdentifierExp at 571.46; stackHeight = 12
             sw $t0,($sp)#**"" # IdentifierExp at 571.46; stackHeight = 16
            # EXIT NODE # IdentifierExp at 571.46; stackHeight = 16
           lw $t0,4($sp) # Call at 571.27; stackHeight = 16
           beq $t0,$zero,nullPtrException # Call at 571.27; stackHeight = 16
           lw $t0,-12($t0) # Call at 571.27; stackHeight = 16
           lw $t0,76($t0) # Call at 571.27; stackHeight = 16
           jalr $t0 # divideAndRemainder # Call at 571.27; stackHeight = 16
          # EXIT NODE # Call at 571.27; stackHeight = 12
        # EXIT NODE # LocalVarDecl at 571.13; stackHeight = 12
        # ENTER NODE # Assign at 572.11; stackHeight = 12
          # ENTER NODE # Plus at 572.51; stackHeight = 12
            # ENTER NODE # Times at 572.15; stackHeight = 12
              # ENTER NODE # IntegerLiteral at 572.13; stackHeight = 12
               subu $sp,$sp,8 # IntegerLiteral at 572.13; stackHeight = 12
               sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 572.13; stackHeight = 20
               li $t0,31 # IntegerLiteral at 572.13; stackHeight = 20
               sw $t0,($sp) # IntegerLiteral at 572.13; stackHeight = 20
              # EXIT NODE # IntegerLiteral at 572.13; stackHeight = 20
              # ENTER NODE # Call at 572.26; stackHeight = 20
                # ENTER NODE # IdentifierExp at 572.16; stackHeight = 20
                 lw $t0,8($sp) # local: stackHt=20,var-offset=-12 # IdentifierExp at 572.16; stackHeight = 20
                 subu $sp,$sp,4 # IdentifierExp at 572.16; stackHeight = 20
                 sw $t0,($sp)#**"" # IdentifierExp at 572.16; stackHeight = 24
                # EXIT NODE # IdentifierExp at 572.16; stackHeight = 24
                # ENTER NODE # IntegerLiteral at 572.23; stackHeight = 24
                 subu $sp,$sp,8 # IntegerLiteral at 572.23; stackHeight = 24
                 sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 572.23; stackHeight = 32
                 li $t0,0 # IntegerLiteral at 572.23; stackHeight = 32
                 sw $t0,($sp) # IntegerLiteral at 572.23; stackHeight = 32
                # EXIT NODE # IntegerLiteral at 572.23; stackHeight = 32
               lw $t0,8($sp) # ArrayLookup at 572.22; stackHeight = 32
               beq $t0,$zero,nullPtrException # ArrayLookup at 572.22; stackHeight = 32
               lw $t1,-4($t0) # ArrayLookup at 572.22; stackHeight = 32
               lw $t2,($sp) # ArrayLookup at 572.22; stackHeight = 32
               bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 572.22; stackHeight = 32
               sll $t2,$t2,2 # ArrayLookup at 572.22; stackHeight = 32
               addu $t2,$t2,$t0 # ArrayLookup at 572.22; stackHeight = 32
               lw $t0,($t2) # ArrayLookup at 572.22; stackHeight = 32
               sw $t0,8($sp)#**"" # ArrayLookup at 572.22; stackHeight = 32
               addu $sp,$sp,8 # ArrayLookup at 572.22; stackHeight = 32
              # EXIT NODE # ArrayLookup at 572.22; stackHeight = 24
              # ENTER NODE # IdentifierExp at 572.39; stackHeight = 24
               lw $t0,28($sp) # local: stackHt=24,var-offset=4 # IdentifierExp at 572.39; stackHeight = 24
               subu $sp,$sp,4 # IdentifierExp at 572.39; stackHeight = 24
               sw $t0,($sp)#**"" # IdentifierExp at 572.39; stackHeight = 28
              # EXIT NODE # IdentifierExp at 572.39; stackHeight = 28
             lw $t0,4($sp) # Call at 572.26; stackHeight = 28
             beq $t0,$zero,nullPtrException # Call at 572.26; stackHeight = 28
             lw $t0,-12($t0) # Call at 572.26; stackHeight = 28
             lw $t0,48($t0) # Call at 572.26; stackHeight = 28
             jalr $t0 # helpHashCode # Call at 572.26; stackHeight = 28
            # EXIT NODE # Call at 572.26; stackHeight = 28
           lw $t0,($sp) # Times at 572.15; stackHeight = 28
           lw $t1,8($sp) # Times at 572.15; stackHeight = 28
           mult $t0,$t1 # Times at 572.15; stackHeight = 28
           mflo $t0 # Times at 572.15; stackHeight = 28
           addu $sp,$sp,8 # Times at 572.15; stackHeight = 28
           sw $t0,($sp)#**"" # Times at 572.15; stackHeight = 28
          # EXIT NODE # Times at 572.15; stackHeight = 20
          # ENTER NODE # Call at 572.63; stackHeight = 20
            # ENTER NODE # IdentifierExp at 572.53; stackHeight = 20
             lw $t0,8($sp) # local: stackHt=20,var-offset=-12 # IdentifierExp at 572.53; stackHeight = 20
             subu $sp,$sp,4 # IdentifierExp at 572.53; stackHeight = 20
             sw $t0,($sp)#**"" # IdentifierExp at 572.53; stackHeight = 24
            # EXIT NODE # IdentifierExp at 572.53; stackHeight = 24
            # ENTER NODE # IntegerLiteral at 572.60; stackHeight = 24
             subu $sp,$sp,8 # IntegerLiteral at 572.60; stackHeight = 24
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 572.60; stackHeight = 32
             li $t0,1 # IntegerLiteral at 572.60; stackHeight = 32
             sw $t0,($sp) # IntegerLiteral at 572.60; stackHeight = 32
            # EXIT NODE # IntegerLiteral at 572.60; stackHeight = 32
           lw $t0,8($sp) # ArrayLookup at 572.59; stackHeight = 32
           beq $t0,$zero,nullPtrException # ArrayLookup at 572.59; stackHeight = 32
           lw $t1,-4($t0) # ArrayLookup at 572.59; stackHeight = 32
           lw $t2,($sp) # ArrayLookup at 572.59; stackHeight = 32
           bgeu $t2,$t1,arrayIndexOutOfBounds # ArrayLookup at 572.59; stackHeight = 32
           sll $t2,$t2,2 # ArrayLookup at 572.59; stackHeight = 32
           addu $t2,$t2,$t0 # ArrayLookup at 572.59; stackHeight = 32
           lw $t0,($t2) # ArrayLookup at 572.59; stackHeight = 32
           sw $t0,8($sp)#**"" # ArrayLookup at 572.59; stackHeight = 32
           addu $sp,$sp,8 # ArrayLookup at 572.59; stackHeight = 32
          # EXIT NODE # ArrayLookup at 572.59; stackHeight = 24
         lw $t0,0($sp) # Call at 572.63; stackHeight = 24
         beq $t0,$zero,nullPtrException # Call at 572.63; stackHeight = 24
         lw $t0,-12($t0) # Call at 572.63; stackHeight = 24
         lw $t0,56($t0) # Call at 572.63; stackHeight = 24
         jalr $t0 # intValue # Call at 572.63; stackHeight = 24
        # EXIT NODE # Call at 572.63; stackHeight = 28
       lw $t0,($sp) # Plus at 572.51; stackHeight = 28
       lw $t1,8($sp) # Plus at 572.51; stackHeight = 28
       addu $t0,$t0,$t1 # Plus at 572.51; stackHeight = 28
       addu $sp,$sp,8 # Plus at 572.51; stackHeight = 28
       sw $t0,($sp)#**"" # Plus at 572.51; stackHeight = 28
      # EXIT NODE # Plus at 572.51; stackHeight = 20
     lw $t0,($sp) # Assign at 572.11; stackHeight = 20
     sw $t0,12($sp) # Assign at 572.11; stackHeight = 20
     addu $sp,$sp,8 # Assign at 572.11; stackHeight = 20
    # EXIT NODE # Assign at 572.11; stackHeight = 12
   addu $sp,4 # Block at 570.31; stackHeight = 12
  # EXIT NODE # Block at 570.31; stackHeight = 8
j if_done_2936 # If at 570.3; stackHeight = 8
if_else_2936: # If at 570.3; stackHeight = 8
  # ENTER NODE # Block at 574.3; stackHeight = 8
  # EXIT NODE # Block at 574.3; stackHeight = 8
if_done_2936: # If at 570.3; stackHeight = 8
# EXIT NODE # If at 570.3; stackHeight = 8
  # ENTER NODE # IdentifierExp at 574.10; stackHeight = 8
   lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 574.10; stackHeight = 8
   subu $sp,$sp,8 # IdentifierExp at 574.10; stackHeight = 8
   sw $s5,4($sp)#**"GC tag" # IdentifierExp at 574.10; stackHeight = 16
   sw $t0,($sp)#**"" # IdentifierExp at 574.10; stackHeight = 16
  # EXIT NODE # IdentifierExp at 574.10; stackHeight = 16
 lw $ra,24($sp) # MethodDeclNonVoid at 568.13; stackHeight = 16
 lw $s2,16($sp) # MethodDeclNonVoid at 568.13; stackHeight = 16
 lw $t0,($sp) # MethodDeclNonVoid at 568.13; stackHeight = 16
 sw $t0,20($sp)#**"(return-val)" # MethodDeclNonVoid at 568.13; stackHeight = 16
 sw $s5,24($sp)#**"" # MethodDeclNonVoid at 568.13; stackHeight = 16
 addu $sp,$sp,20 # MethodDeclNonVoid at 568.13; stackHeight = 16
jr $ra # MethodDeclNonVoid at 568.13; stackHeight = -4
# EXIT NODE # MethodDeclNonVoid at 568.13; stackHeight = -4
  # ENTER NODE # MethodDeclNonVoid at 577.16; stackHeight = -4
  .globl fcn_2994_primitiveMult # MethodDeclNonVoid at 577.16; stackHeight = -4
  fcn_2994_primitiveMult: # MethodDeclNonVoid at 577.16; stackHeight = -4
   subu $sp,$sp,4 # MethodDeclNonVoid at 577.16; stackHeight = -4
   sw $s2,($sp) #**"old this-ptr" # MethodDeclNonVoid at 577.16; stackHeight = -4
   lw $s2,12($sp) #**"this-ptr" # MethodDeclNonVoid at 577.16; stackHeight = -4
   sw $ra,12($sp) #**"RA:primitiveMult" # MethodDeclNonVoid at 577.16; stackHeight = -4
    # ENTER NODE # LocalVarDecl at 578.10; stackHeight = 0
      # ENTER NODE # StringLiteral at 578.19; stackHeight = 0
       subu $sp,$sp,4 # StringLiteral at 578.19; stackHeight = 0
       la $t0,strLit_2646 # StringLiteral at 578.19; stackHeight = 4
       sw $t0,($sp)#**"strLit:0" # StringLiteral at 578.19; stackHeight = 4
      # EXIT NODE # StringLiteral at 578.19; stackHeight = 4
    # EXIT NODE # LocalVarDecl at 578.10; stackHeight = 4
    # ENTER NODE # While at 579.3; stackHeight = 4
    j while_enter_2992 # While at 579.3; stackHeight = 4
    while_top_2992: # While at 579.3; stackHeight = 4
      # ENTER NODE # Block at 579.27; stackHeight = 4
        # ENTER NODE # LocalVarDecl at 580.12; stackHeight = 4
          # ENTER NODE # Equals at 580.50; stackHeight = 4
            # ENTER NODE # Remainder at 580.46; stackHeight = 4
              # ENTER NODE # Call at 580.24; stackHeight = 4
                # ENTER NODE # IdentifierExp at 580.21; stackHeight = 4
                 lw $t0,12($sp) # local: stackHt=4,var-offset=8 # IdentifierExp at 580.21; stackHeight = 4
                 subu $sp,$sp,4 # IdentifierExp at 580.21; stackHeight = 4
                 sw $t0,($sp)#**"" # IdentifierExp at 580.21; stackHeight = 8
                # EXIT NODE # IdentifierExp at 580.21; stackHeight = 8
                # ENTER NODE # Minus at 580.42; stackHeight = 8
                  # ENTER NODE # Call at 580.34; stackHeight = 8
                    # ENTER NODE # IdentifierExp at 580.31; stackHeight = 8
                     lw $t0,16($sp) # local: stackHt=8,var-offset=8 # IdentifierExp at 580.31; stackHeight = 8
                     subu $sp,$sp,4 # IdentifierExp at 580.31; stackHeight = 8
                     sw $t0,($sp)#**"" # IdentifierExp at 580.31; stackHeight = 12
                    # EXIT NODE # IdentifierExp at 580.31; stackHeight = 12
                   lw $t0,0($sp) # Call at 580.34; stackHeight = 12
                   beq $t0,$zero,nullPtrException # Call at 580.34; stackHeight = 12
                   lw $t0,-12($t0) # Call at 580.34; stackHeight = 12
                   lw $t0,20($t0) # Call at 580.34; stackHeight = 12
                   jalr $t0 # length # Call at 580.34; stackHeight = 12
                  # EXIT NODE # Call at 580.34; stackHeight = 16
                  # ENTER NODE # IntegerLiteral at 580.43; stackHeight = 16
                   subu $sp,$sp,8 # IntegerLiteral at 580.43; stackHeight = 16
                   sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 580.43; stackHeight = 24
                   li $t0,1 # IntegerLiteral at 580.43; stackHeight = 24
                   sw $t0,($sp) # IntegerLiteral at 580.43; stackHeight = 24
                  # EXIT NODE # IntegerLiteral at 580.43; stackHeight = 24
                 lw $t0,($sp) # Minus at 580.42; stackHeight = 24
                 lw $t1,8($sp) # Minus at 580.42; stackHeight = 24
                 subu $t0,$t1,$t0 # Minus at 580.42; stackHeight = 24
                 addu $sp,$sp,8 # Minus at 580.42; stackHeight = 24
                 sw $t0,($sp)#**"" # Minus at 580.42; stackHeight = 16
                # EXIT NODE # Minus at 580.42; stackHeight = 16
               lw $t0,8($sp) # Call at 580.24; stackHeight = 16
               beq $t0,$zero,nullPtrException # Call at 580.24; stackHeight = 16
               lw $t0,-12($t0) # Call at 580.24; stackHeight = 16
               lw $t0,24($t0) # Call at 580.24; stackHeight = 16
               jalr $t0 # charAt # Call at 580.24; stackHeight = 16
              # EXIT NODE # Call at 580.24; stackHeight = 12
              # ENTER NODE # IntegerLiteral at 580.48; stackHeight = 12
               subu $sp,$sp,8 # IntegerLiteral at 580.48; stackHeight = 12
               sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 580.48; stackHeight = 20
               li $t0,2 # IntegerLiteral at 580.48; stackHeight = 20
               sw $t0,($sp) # IntegerLiteral at 580.48; stackHeight = 20
              # EXIT NODE # IntegerLiteral at 580.48; stackHeight = 20
             jal remainder # Remainder at 580.46; stackHeight = 20
            # EXIT NODE # Remainder at 580.46; stackHeight = 12
            # ENTER NODE # IntegerLiteral at 580.53; stackHeight = 12
             subu $sp,$sp,8 # IntegerLiteral at 580.53; stackHeight = 12
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 580.53; stackHeight = 20
             li $t0,0 # IntegerLiteral at 580.53; stackHeight = 20
             sw $t0,($sp) # IntegerLiteral at 580.53; stackHeight = 20
            # EXIT NODE # IntegerLiteral at 580.53; stackHeight = 20
           lw $t0,($sp) # Equals at 580.50; stackHeight = 20
           lw $t1,8($sp) # Equals at 580.50; stackHeight = 20
           seq $t0,$t0,$t1 # Equals at 580.50; stackHeight = 20
           addu $sp,$sp,12 # Equals at 580.50; stackHeight = 20
           sw $t0,($sp)#**"" # Equals at 580.50; stackHeight = 8
          # EXIT NODE # Equals at 580.50; stackHeight = 8
        # EXIT NODE # LocalVarDecl at 580.12; stackHeight = 8
        # ENTER NODE # If at 581.4; stackHeight = 8
          # ENTER NODE # Not at 581.8; stackHeight = 8
            # ENTER NODE # IdentifierExp at 581.9; stackHeight = 8
             lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 581.9; stackHeight = 8
             subu $sp,$sp,4 # IdentifierExp at 581.9; stackHeight = 8
             sw $t0,($sp)#**"" # IdentifierExp at 581.9; stackHeight = 12
            # EXIT NODE # IdentifierExp at 581.9; stackHeight = 12
           lw $t0,($sp) # Not at 581.8; stackHeight = 12
           xor $t0,$t0,1 # Not at 581.8; stackHeight = 12
           sw $t0,($sp)#**"" # Not at 581.8; stackHeight = 12
          # EXIT NODE # Not at 581.8; stackHeight = 12
         lw $t0,($sp) # If at 581.4; stackHeight = 12
         addu $sp,$sp,4 # If at 581.4; stackHeight = 12
         beq $t0,$zero,if_else_2977 # If at 581.4; stackHeight = 8
          # ENTER NODE # Block at 581.17; stackHeight = 8
            # ENTER NODE # Assign at 582.12; stackHeight = 8
              # ENTER NODE # InstVarAccess at 582.43; stackHeight = 8
                # ENTER NODE # Call at 582.14; stackHeight = 8
                  # ENTER NODE # This at 582.14; stackHeight = 8
                   subu $sp,$sp,4 # This at 582.14; stackHeight = 8
                   sw $s2,($sp)#**"" # This at 582.14; stackHeight = 12
                  # EXIT NODE # This at 582.14; stackHeight = 12
                  # ENTER NODE # IdentifierExp at 582.27; stackHeight = 12
                   lw $t0,8($sp) # local: stackHt=12,var-offset=-4 # IdentifierExp at 582.27; stackHeight = 12
                   subu $sp,$sp,4 # IdentifierExp at 582.27; stackHeight = 12
                   sw $t0,($sp)#**"" # IdentifierExp at 582.27; stackHeight = 16
                  # EXIT NODE # IdentifierExp at 582.27; stackHeight = 16
                  # ENTER NODE # IdentifierExp at 582.34; stackHeight = 16
                   lw $t0,20($sp) # local: stackHt=16,var-offset=4 # IdentifierExp at 582.34; stackHeight = 16
                   subu $sp,$sp,4 # IdentifierExp at 582.34; stackHeight = 16
                   sw $t0,($sp)#**"" # IdentifierExp at 582.34; stackHeight = 20
                  # EXIT NODE # IdentifierExp at 582.34; stackHeight = 20
                  # ENTER NODE # False at 582.37; stackHeight = 20
                   subu $sp,$sp,4 # False at 582.37; stackHeight = 20
                   sw $zero,($sp)#**"" # False at 582.37; stackHeight = 24
                  # EXIT NODE # False at 582.37; stackHeight = 24
                 lw $t0,12($sp) # Call at 582.14; stackHeight = 24
                 beq $t0,$zero,nullPtrException # Call at 582.14; stackHeight = 24
                 lw $t0,-12($t0) # Call at 582.14; stackHeight = 24
                 lw $t0,92($t0) # Call at 582.14; stackHeight = 24
                 jalr $t0 # primitiveAdd # Call at 582.14; stackHeight = 24
                # EXIT NODE # Call at 582.14; stackHeight = 12
               lw $t0,($sp) # InstVarAccess at 582.43; stackHeight = 12
               beq $t0,$zero,nullPtrException # InstVarAccess at 582.43; stackHeight = 12
               lw $t0,0($t0) # InstVarAccess at 582.43; stackHeight = 12
               sw $t0,($sp)#**"" # InstVarAccess at 582.43; stackHeight = 12
              # EXIT NODE # InstVarAccess at 582.43; stackHeight = 12
             lw $t0,($sp) # Assign at 582.12; stackHeight = 12
             sw $t0,8($sp) # Assign at 582.12; stackHeight = 12
             addu $sp,$sp,4 # Assign at 582.12; stackHeight = 12
            # EXIT NODE # Assign at 582.12; stackHeight = 8
          # EXIT NODE # Block at 581.17; stackHeight = 8
        j if_done_2977 # If at 581.4; stackHeight = 8
        if_else_2977: # If at 581.4; stackHeight = 8
          # ENTER NODE # Block at 584.4; stackHeight = 8
          # EXIT NODE # Block at 584.4; stackHeight = 8
        if_done_2977: # If at 581.4; stackHeight = 8
        # EXIT NODE # If at 581.4; stackHeight = 8
        # ENTER NODE # Assign at 584.7; stackHeight = 8
          # ENTER NODE # InstVarAccess at 584.34; stackHeight = 8
            # ENTER NODE # Call at 584.9; stackHeight = 8
              # ENTER NODE # This at 584.9; stackHeight = 8
               subu $sp,$sp,4 # This at 584.9; stackHeight = 8
               sw $s2,($sp)#**"" # This at 584.9; stackHeight = 12
              # EXIT NODE # This at 584.9; stackHeight = 12
              # ENTER NODE # IdentifierExp at 584.22; stackHeight = 12
               lw $t0,16($sp) # local: stackHt=12,var-offset=4 # IdentifierExp at 584.22; stackHeight = 12
               subu $sp,$sp,4 # IdentifierExp at 584.22; stackHeight = 12
               sw $t0,($sp)#**"" # IdentifierExp at 584.22; stackHeight = 16
              # EXIT NODE # IdentifierExp at 584.22; stackHeight = 16
              # ENTER NODE # IdentifierExp at 584.25; stackHeight = 16
               lw $t0,20($sp) # local: stackHt=16,var-offset=4 # IdentifierExp at 584.25; stackHeight = 16
               subu $sp,$sp,4 # IdentifierExp at 584.25; stackHeight = 16
               sw $t0,($sp)#**"" # IdentifierExp at 584.25; stackHeight = 20
              # EXIT NODE # IdentifierExp at 584.25; stackHeight = 20
              # ENTER NODE # False at 584.28; stackHeight = 20
               subu $sp,$sp,4 # False at 584.28; stackHeight = 20
               sw $zero,($sp)#**"" # False at 584.28; stackHeight = 24
              # EXIT NODE # False at 584.28; stackHeight = 24
             lw $t0,12($sp) # Call at 584.9; stackHeight = 24
             beq $t0,$zero,nullPtrException # Call at 584.9; stackHeight = 24
             lw $t0,-12($t0) # Call at 584.9; stackHeight = 24
             lw $t0,92($t0) # Call at 584.9; stackHeight = 24
             jalr $t0 # primitiveAdd # Call at 584.9; stackHeight = 24
            # EXIT NODE # Call at 584.9; stackHeight = 12
           lw $t0,($sp) # InstVarAccess at 584.34; stackHeight = 12
           beq $t0,$zero,nullPtrException # InstVarAccess at 584.34; stackHeight = 12
           lw $t0,0($t0) # InstVarAccess at 584.34; stackHeight = 12
           sw $t0,($sp)#**"" # InstVarAccess at 584.34; stackHeight = 12
          # EXIT NODE # InstVarAccess at 584.34; stackHeight = 12
         lw $t0,($sp) # Assign at 584.7; stackHeight = 12
         sw $t0,16($sp) # Assign at 584.7; stackHeight = 12
         addu $sp,$sp,4 # Assign at 584.7; stackHeight = 12
        # EXIT NODE # Assign at 584.7; stackHeight = 8
        # ENTER NODE # Assign at 585.7; stackHeight = 8
          # ENTER NODE # Call at 585.9; stackHeight = 8
            # ENTER NODE # This at 585.9; stackHeight = 8
             subu $sp,$sp,4 # This at 585.9; stackHeight = 8
             sw $s2,($sp)#**"" # This at 585.9; stackHeight = 12
            # EXIT NODE # This at 585.9; stackHeight = 12
            # ENTER NODE # IdentifierExp at 585.14; stackHeight = 12
             lw $t0,20($sp) # local: stackHt=12,var-offset=8 # IdentifierExp at 585.14; stackHeight = 12
             subu $sp,$sp,4 # IdentifierExp at 585.14; stackHeight = 12
             sw $t0,($sp)#**"" # IdentifierExp at 585.14; stackHeight = 16
            # EXIT NODE # IdentifierExp at 585.14; stackHeight = 16
           lw $t0,4($sp) # Call at 585.9; stackHeight = 16
           beq $t0,$zero,nullPtrException # Call at 585.9; stackHeight = 16
           lw $t0,-12($t0) # Call at 585.9; stackHeight = 16
           lw $t0,84($t0) # Call at 585.9; stackHeight = 16
           jalr $t0 # div2 # Call at 585.9; stackHeight = 16
          # EXIT NODE # Call at 585.9; stackHeight = 12
         lw $t0,($sp) # Assign at 585.7; stackHeight = 12
         sw $t0,20($sp) # Assign at 585.7; stackHeight = 12
         addu $sp,$sp,4 # Assign at 585.7; stackHeight = 12
        # EXIT NODE # Assign at 585.7; stackHeight = 8
       addu $sp,4 # Block at 579.27; stackHeight = 8
      # EXIT NODE # Block at 579.27; stackHeight = 4
    while_enter_2992: # While at 579.3; stackHeight = 4
      # ENTER NODE # Not at 579.10; stackHeight = 4
        # ENTER NODE # Call at 579.14; stackHeight = 4
          # ENTER NODE # IdentifierExp at 579.11; stackHeight = 4
           lw $t0,12($sp) # local: stackHt=4,var-offset=8 # IdentifierExp at 579.11; stackHeight = 4
           subu $sp,$sp,4 # IdentifierExp at 579.11; stackHeight = 4
           sw $t0,($sp)#**"" # IdentifierExp at 579.11; stackHeight = 8
          # EXIT NODE # IdentifierExp at 579.11; stackHeight = 8
          # ENTER NODE # StringLiteral at 579.21; stackHeight = 8
           subu $sp,$sp,4 # StringLiteral at 579.21; stackHeight = 8
           la $t0,strLit_2646 # StringLiteral at 579.21; stackHeight = 12
           sw $t0,($sp)#**"strLit:0" # StringLiteral at 579.21; stackHeight = 12
          # EXIT NODE # StringLiteral at 579.21; stackHeight = 12
         lw $t0,4($sp) # Call at 579.14; stackHeight = 12
         beq $t0,$zero,nullPtrException # Call at 579.14; stackHeight = 12
         lw $t0,-12($t0) # Call at 579.14; stackHeight = 12
         lw $t0,4($t0) # Call at 579.14; stackHeight = 12
         jalr $t0 # equals # Call at 579.14; stackHeight = 12
        # EXIT NODE # Call at 579.14; stackHeight = 8
       lw $t0,($sp) # Not at 579.10; stackHeight = 8
       xor $t0,$t0,1 # Not at 579.10; stackHeight = 8
       sw $t0,($sp)#**"" # Not at 579.10; stackHeight = 8
      # EXIT NODE # Not at 579.10; stackHeight = 8
     lw $t0,($sp) # While at 579.3; stackHeight = 8
     addu $sp,$sp,4 # While at 579.3; stackHeight = 8
    bne $t0,$zero,while_top_2992 # While at 579.3; stackHeight = 4
    break_target_2992: # While at 579.3; stackHeight = 4
    # EXIT NODE # While at 579.3; stackHeight = 4
    # ENTER NODE # IdentifierExp at 587.10; stackHeight = 4
     lw $t0,0($sp) # local: stackHt=4,var-offset=-4 # IdentifierExp at 587.10; stackHeight = 4
     subu $sp,$sp,4 # IdentifierExp at 587.10; stackHeight = 4
     sw $t0,($sp)#**"" # IdentifierExp at 587.10; stackHeight = 8
    # EXIT NODE # IdentifierExp at 587.10; stackHeight = 8
   lw $ra,20($sp) # MethodDeclNonVoid at 577.16; stackHeight = 8
   lw $s2,8($sp) # MethodDeclNonVoid at 577.16; stackHeight = 8
   lw $t0,($sp) # MethodDeclNonVoid at 577.16; stackHeight = 8
   sw $t0,20($sp)#**"(return-val)" # MethodDeclNonVoid at 577.16; stackHeight = 8
   addu $sp,$sp,20 # MethodDeclNonVoid at 577.16; stackHeight = 8
  jr $ra # MethodDeclNonVoid at 577.16; stackHeight = -12
  # EXIT NODE # MethodDeclNonVoid at 577.16; stackHeight = -12
  # ENTER NODE # MethodDeclNonVoid at 590.13; stackHeight = -12
  .globl fcn_3041_intValue # MethodDeclNonVoid at 590.13; stackHeight = -12
  fcn_3041_intValue: # MethodDeclNonVoid at 590.13; stackHeight = -12
   subu $sp,$sp,4 # MethodDeclNonVoid at 590.13; stackHeight = -12
   sw $s2,($sp) #**"old this-ptr" # MethodDeclNonVoid at 590.13; stackHeight = -12
   lw $s2,4($sp) #**"this-ptr" # MethodDeclNonVoid at 590.13; stackHeight = -12
   sw $ra,4($sp) #**"RA:intValue" # MethodDeclNonVoid at 590.13; stackHeight = -12
    # ENTER NODE # LocalVarDecl at 591.7; stackHeight = 0
      # ENTER NODE # IntegerLiteral at 591.16; stackHeight = 0
       subu $sp,$sp,8 # IntegerLiteral at 591.16; stackHeight = 0
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 591.16; stackHeight = 8
       li $t0,0 # IntegerLiteral at 591.16; stackHeight = 8
       sw $t0,($sp) # IntegerLiteral at 591.16; stackHeight = 8
      # EXIT NODE # IntegerLiteral at 591.16; stackHeight = 8
    # EXIT NODE # LocalVarDecl at 591.7; stackHeight = 8
    # ENTER NODE # Block at 592.3; stackHeight = 8
      # ENTER NODE # LocalVarDecl at 592.12; stackHeight = 8
        # ENTER NODE # IntegerLiteral at 592.16; stackHeight = 8
         subu $sp,$sp,8 # IntegerLiteral at 592.16; stackHeight = 8
         sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 592.16; stackHeight = 16
         li $t0,0 # IntegerLiteral at 592.16; stackHeight = 16
         sw $t0,($sp) # IntegerLiteral at 592.16; stackHeight = 16
        # EXIT NODE # IntegerLiteral at 592.16; stackHeight = 16
      # EXIT NODE # LocalVarDecl at 592.12; stackHeight = 16
      # ENTER NODE # While at 592.3; stackHeight = 16
      j while_enter_3029 # While at 592.3; stackHeight = 16
      while_top_3029: # While at 592.3; stackHeight = 16
        # ENTER NODE # Block at 592.3; stackHeight = 16
          # ENTER NODE # Block at 592.43; stackHeight = 16
            # ENTER NODE # Assign at 593.11; stackHeight = 16
              # ENTER NODE # Times at 593.20; stackHeight = 16
                # ENTER NODE # IdentifierExp at 593.13; stackHeight = 16
                 lw $t0,8($sp) # local: stackHt=16,var-offset=-8 # IdentifierExp at 593.13; stackHeight = 16
                 subu $sp,$sp,8 # IdentifierExp at 593.13; stackHeight = 16
                 sw $s5,4($sp)#**"GC tag" # IdentifierExp at 593.13; stackHeight = 24
                 sw $t0,($sp)#**"" # IdentifierExp at 593.13; stackHeight = 24
                # EXIT NODE # IdentifierExp at 593.13; stackHeight = 24
                # ENTER NODE # IntegerLiteral at 593.22; stackHeight = 24
                 subu $sp,$sp,8 # IntegerLiteral at 593.22; stackHeight = 24
                 sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 593.22; stackHeight = 32
                 li $t0,10 # IntegerLiteral at 593.22; stackHeight = 32
                 sw $t0,($sp) # IntegerLiteral at 593.22; stackHeight = 32
                # EXIT NODE # IntegerLiteral at 593.22; stackHeight = 32
               lw $t0,($sp) # Times at 593.20; stackHeight = 32
               lw $t1,8($sp) # Times at 593.20; stackHeight = 32
               mult $t0,$t1 # Times at 593.20; stackHeight = 32
               mflo $t0 # Times at 593.20; stackHeight = 32
               addu $sp,$sp,8 # Times at 593.20; stackHeight = 32
               sw $t0,($sp)#**"" # Times at 593.20; stackHeight = 32
              # EXIT NODE # Times at 593.20; stackHeight = 24
             lw $t0,($sp) # Assign at 593.11; stackHeight = 24
             sw $t0,16($sp) # Assign at 593.11; stackHeight = 24
             addu $sp,$sp,8 # Assign at 593.11; stackHeight = 24
            # EXIT NODE # Assign at 593.11; stackHeight = 16
            # ENTER NODE # Assign at 594.11; stackHeight = 16
              # ENTER NODE # Minus at 594.36; stackHeight = 16
                # ENTER NODE # Plus at 594.20; stackHeight = 16
                  # ENTER NODE # IdentifierExp at 594.13; stackHeight = 16
                   lw $t0,8($sp) # local: stackHt=16,var-offset=-8 # IdentifierExp at 594.13; stackHeight = 16
                   subu $sp,$sp,8 # IdentifierExp at 594.13; stackHeight = 16
                   sw $s5,4($sp)#**"GC tag" # IdentifierExp at 594.13; stackHeight = 24
                   sw $t0,($sp)#**"" # IdentifierExp at 594.13; stackHeight = 24
                  # EXIT NODE # IdentifierExp at 594.13; stackHeight = 24
                  # ENTER NODE # Call at 594.27; stackHeight = 24
                    # ENTER NODE # IdentifierExp at 594.22; stackHeight = 24
                     lw $t0,0($s2) # inst-var # IdentifierExp at 594.22; stackHeight = 24
                     subu $sp,$sp,4 # IdentifierExp at 594.22; stackHeight = 24
                     sw $t0,($sp)#**"" # IdentifierExp at 594.22; stackHeight = 28
                    # EXIT NODE # IdentifierExp at 594.22; stackHeight = 28
                    # ENTER NODE # IdentifierExp at 594.34; stackHeight = 28
                     lw $t0,12($sp) # local: stackHt=28,var-offset=-16 # IdentifierExp at 594.34; stackHeight = 28
                     subu $sp,$sp,8 # IdentifierExp at 594.34; stackHeight = 28
                     sw $s5,4($sp)#**"GC tag" # IdentifierExp at 594.34; stackHeight = 36
                     sw $t0,($sp)#**"" # IdentifierExp at 594.34; stackHeight = 36
                    # EXIT NODE # IdentifierExp at 594.34; stackHeight = 36
                   lw $t0,8($sp) # Call at 594.27; stackHeight = 36
                   beq $t0,$zero,nullPtrException # Call at 594.27; stackHeight = 36
                   lw $t0,-12($t0) # Call at 594.27; stackHeight = 36
                   lw $t0,24($t0) # Call at 594.27; stackHeight = 36
                   jalr $t0 # charAt # Call at 594.27; stackHeight = 36
                  # EXIT NODE # Call at 594.27; stackHeight = 32
                 lw $t0,($sp) # Plus at 594.20; stackHeight = 32
                 lw $t1,8($sp) # Plus at 594.20; stackHeight = 32
                 addu $t0,$t0,$t1 # Plus at 594.20; stackHeight = 32
                 addu $sp,$sp,8 # Plus at 594.20; stackHeight = 32
                 sw $t0,($sp)#**"" # Plus at 594.20; stackHeight = 32
                # EXIT NODE # Plus at 594.20; stackHeight = 24
                # ENTER NODE # IntegerLiteral at 594.37; stackHeight = 24
                 subu $sp,$sp,8 # IntegerLiteral at 594.37; stackHeight = 24
                 sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 594.37; stackHeight = 32
                 li $t0,48 # IntegerLiteral at 594.37; stackHeight = 32
                 sw $t0,($sp) # IntegerLiteral at 594.37; stackHeight = 32
                # EXIT NODE # IntegerLiteral at 594.37; stackHeight = 32
               lw $t0,($sp) # Minus at 594.36; stackHeight = 32
               lw $t1,8($sp) # Minus at 594.36; stackHeight = 32
               subu $t0,$t1,$t0 # Minus at 594.36; stackHeight = 32
               addu $sp,$sp,8 # Minus at 594.36; stackHeight = 32
               sw $t0,($sp)#**"" # Minus at 594.36; stackHeight = 24
              # EXIT NODE # Minus at 594.36; stackHeight = 24
             lw $t0,($sp) # Assign at 594.11; stackHeight = 24
             sw $t0,16($sp) # Assign at 594.11; stackHeight = 24
             addu $sp,$sp,8 # Assign at 594.11; stackHeight = 24
            # EXIT NODE # Assign at 594.11; stackHeight = 16
          # EXIT NODE # Block at 592.43; stackHeight = 16
          # ENTER NODE # Assign at 592.38; stackHeight = 16
            # ENTER NODE # Plus at 592.39; stackHeight = 16
              # ENTER NODE # IdentifierExp at 592.38; stackHeight = 16
               lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 592.38; stackHeight = 16
               subu $sp,$sp,8 # IdentifierExp at 592.38; stackHeight = 16
               sw $s5,4($sp)#**"GC tag" # IdentifierExp at 592.38; stackHeight = 24
               sw $t0,($sp)#**"" # IdentifierExp at 592.38; stackHeight = 24
              # EXIT NODE # IdentifierExp at 592.38; stackHeight = 24
              # ENTER NODE # IntegerLiteral at 592.39; stackHeight = 24
               subu $sp,$sp,8 # IntegerLiteral at 592.39; stackHeight = 24
               sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 592.39; stackHeight = 32
               li $t0,1 # IntegerLiteral at 592.39; stackHeight = 32
               sw $t0,($sp) # IntegerLiteral at 592.39; stackHeight = 32
              # EXIT NODE # IntegerLiteral at 592.39; stackHeight = 32
             lw $t0,($sp) # Plus at 592.39; stackHeight = 32
             lw $t1,8($sp) # Plus at 592.39; stackHeight = 32
             addu $t0,$t0,$t1 # Plus at 592.39; stackHeight = 32
             addu $sp,$sp,8 # Plus at 592.39; stackHeight = 32
             sw $t0,($sp)#**"" # Plus at 592.39; stackHeight = 32
            # EXIT NODE # Plus at 592.39; stackHeight = 24
           lw $t0,($sp) # Assign at 592.38; stackHeight = 24
           sw $t0,8($sp) # Assign at 592.38; stackHeight = 24
           addu $sp,$sp,8 # Assign at 592.38; stackHeight = 24
          # EXIT NODE # Assign at 592.38; stackHeight = 16
        # EXIT NODE # Block at 592.3; stackHeight = 16
      while_enter_3029: # While at 592.3; stackHeight = 16
        # ENTER NODE # LessThan at 592.21; stackHeight = 16
          # ENTER NODE # IdentifierExp at 592.19; stackHeight = 16
           lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 592.19; stackHeight = 16
           subu $sp,$sp,8 # IdentifierExp at 592.19; stackHeight = 16
           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 592.19; stackHeight = 24
           sw $t0,($sp)#**"" # IdentifierExp at 592.19; stackHeight = 24
          # EXIT NODE # IdentifierExp at 592.19; stackHeight = 24
          # ENTER NODE # Call at 592.28; stackHeight = 24
            # ENTER NODE # IdentifierExp at 592.23; stackHeight = 24
             lw $t0,0($s2) # inst-var # IdentifierExp at 592.23; stackHeight = 24
             subu $sp,$sp,4 # IdentifierExp at 592.23; stackHeight = 24
             sw $t0,($sp)#**"" # IdentifierExp at 592.23; stackHeight = 28
            # EXIT NODE # IdentifierExp at 592.23; stackHeight = 28
           lw $t0,0($sp) # Call at 592.28; stackHeight = 28
           beq $t0,$zero,nullPtrException # Call at 592.28; stackHeight = 28
           lw $t0,-12($t0) # Call at 592.28; stackHeight = 28
           lw $t0,20($t0) # Call at 592.28; stackHeight = 28
           jalr $t0 # length # Call at 592.28; stackHeight = 28
          # EXIT NODE # Call at 592.28; stackHeight = 32
         lw $t0,($sp) # LessThan at 592.21; stackHeight = 32
         lw $t1,8($sp) # LessThan at 592.21; stackHeight = 32
         slt $t0,$t1,$t0 # LessThan at 592.21; stackHeight = 32
         addu $sp,$sp,12 # LessThan at 592.21; stackHeight = 32
         sw $t0,($sp)#**"" # LessThan at 592.21; stackHeight = 20
        # EXIT NODE # LessThan at 592.21; stackHeight = 20
       lw $t0,($sp) # While at 592.3; stackHeight = 20
       addu $sp,$sp,4 # While at 592.3; stackHeight = 20
      bne $t0,$zero,while_top_3029 # While at 592.3; stackHeight = 16
      break_target_3029: # While at 592.3; stackHeight = 16
      # EXIT NODE # While at 592.3; stackHeight = 16
     addu $sp,8 # Block at 592.3; stackHeight = 16
    # EXIT NODE # Block at 592.3; stackHeight = 8
    # ENTER NODE # If at 596.3; stackHeight = 8
      # ENTER NODE # IdentifierExp at 596.7; stackHeight = 8
       lw $t0,-16($s2) # inst-var # IdentifierExp at 596.7; stackHeight = 8
       subu $sp,$sp,4 # IdentifierExp at 596.7; stackHeight = 8
       sw $t0,($sp)#**"" # IdentifierExp at 596.7; stackHeight = 12
      # EXIT NODE # IdentifierExp at 596.7; stackHeight = 12
     lw $t0,($sp) # If at 596.3; stackHeight = 12
     addu $sp,$sp,4 # If at 596.3; stackHeight = 12
     beq $t0,$zero,if_else_3039 # If at 596.3; stackHeight = 8
      # ENTER NODE # Block at 596.14; stackHeight = 8
        # ENTER NODE # Assign at 597.11; stackHeight = 8
          # ENTER NODE # Minus at 597.13; stackHeight = 8
            # ENTER NODE # IntegerLiteral at 597.13; stackHeight = 8
             subu $sp,$sp,8 # IntegerLiteral at 597.13; stackHeight = 8
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 597.13; stackHeight = 16
             li $t0,0 # IntegerLiteral at 597.13; stackHeight = 16
             sw $t0,($sp) # IntegerLiteral at 597.13; stackHeight = 16
            # EXIT NODE # IntegerLiteral at 597.13; stackHeight = 16
            # ENTER NODE # IdentifierExp at 597.14; stackHeight = 16
             lw $t0,8($sp) # local: stackHt=16,var-offset=-8 # IdentifierExp at 597.14; stackHeight = 16
             subu $sp,$sp,8 # IdentifierExp at 597.14; stackHeight = 16
             sw $s5,4($sp)#**"GC tag" # IdentifierExp at 597.14; stackHeight = 24
             sw $t0,($sp)#**"" # IdentifierExp at 597.14; stackHeight = 24
            # EXIT NODE # IdentifierExp at 597.14; stackHeight = 24
           lw $t0,($sp) # Minus at 597.13; stackHeight = 24
           lw $t1,8($sp) # Minus at 597.13; stackHeight = 24
           subu $t0,$t1,$t0 # Minus at 597.13; stackHeight = 24
           addu $sp,$sp,8 # Minus at 597.13; stackHeight = 24
           sw $t0,($sp)#**"" # Minus at 597.13; stackHeight = 16
          # EXIT NODE # Minus at 597.13; stackHeight = 16
         lw $t0,($sp) # Assign at 597.11; stackHeight = 16
         sw $t0,8($sp) # Assign at 597.11; stackHeight = 16
         addu $sp,$sp,8 # Assign at 597.11; stackHeight = 16
        # EXIT NODE # Assign at 597.11; stackHeight = 8
      # EXIT NODE # Block at 596.14; stackHeight = 8
    j if_done_3039 # If at 596.3; stackHeight = 8
    if_else_3039: # If at 596.3; stackHeight = 8
      # ENTER NODE # Block at 599.3; stackHeight = 8
      # EXIT NODE # Block at 599.3; stackHeight = 8
    if_done_3039: # If at 596.3; stackHeight = 8
    # EXIT NODE # If at 596.3; stackHeight = 8
    # ENTER NODE # IdentifierExp at 599.10; stackHeight = 8
     lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 599.10; stackHeight = 8
     subu $sp,$sp,8 # IdentifierExp at 599.10; stackHeight = 8
     sw $s5,4($sp)#**"GC tag" # IdentifierExp at 599.10; stackHeight = 16
     sw $t0,($sp)#**"" # IdentifierExp at 599.10; stackHeight = 16
    # EXIT NODE # IdentifierExp at 599.10; stackHeight = 16
   lw $ra,20($sp) # MethodDeclNonVoid at 590.13; stackHeight = 16
   lw $s2,16($sp) # MethodDeclNonVoid at 590.13; stackHeight = 16
   lw $t0,($sp) # MethodDeclNonVoid at 590.13; stackHeight = 16
   sw $t0,16($sp)#**"(return-val)" # MethodDeclNonVoid at 590.13; stackHeight = 16
   sw $s5,20($sp)#**"" # MethodDeclNonVoid at 590.13; stackHeight = 16
   addu $sp,$sp,16 # MethodDeclNonVoid at 590.13; stackHeight = 16
  jr $ra # MethodDeclNonVoid at 590.13; stackHeight = 0
  # EXIT NODE # MethodDeclNonVoid at 590.13; stackHeight = 0
  # ENTER NODE # MethodDeclNonVoid at 602.16; stackHeight = 0
  .globl fcn_3061_max # MethodDeclNonVoid at 602.16; stackHeight = 0
  fcn_3061_max: # MethodDeclNonVoid at 602.16; stackHeight = 0
   subu $sp,$sp,4 # MethodDeclNonVoid at 602.16; stackHeight = 0
   sw $s2,($sp) #**"old this-ptr" # MethodDeclNonVoid at 602.16; stackHeight = 0
   lw $s2,8($sp) #**"this-ptr" # MethodDeclNonVoid at 602.16; stackHeight = 0
   sw $ra,8($sp) #**"RA:max" # MethodDeclNonVoid at 602.16; stackHeight = 0
    # ENTER NODE # LocalVarDecl at 603.10; stackHeight = 0
      # ENTER NODE # This at 603.19; stackHeight = 0
       subu $sp,$sp,4 # This at 603.19; stackHeight = 0
       sw $s2,($sp)#**"" # This at 603.19; stackHeight = 4
      # EXIT NODE # This at 603.19; stackHeight = 4
    # EXIT NODE # LocalVarDecl at 603.10; stackHeight = 4
    # ENTER NODE # If at 604.3; stackHeight = 4
      # ENTER NODE # LessThan at 604.29; stackHeight = 4
        # ENTER NODE # Call at 604.12; stackHeight = 4
          # ENTER NODE # This at 604.7; stackHeight = 4
           subu $sp,$sp,4 # This at 604.7; stackHeight = 4
           sw $s2,($sp)#**"" # This at 604.7; stackHeight = 8
          # EXIT NODE # This at 604.7; stackHeight = 8
          # ENTER NODE # IdentifierExp at 604.22; stackHeight = 8
           lw $t0,12($sp) # local: stackHt=8,var-offset=4 # IdentifierExp at 604.22; stackHeight = 8
           subu $sp,$sp,4 # IdentifierExp at 604.22; stackHeight = 8
           sw $t0,($sp)#**"" # IdentifierExp at 604.22; stackHeight = 12
          # EXIT NODE # IdentifierExp at 604.22; stackHeight = 12
         lw $t0,4($sp) # Call at 604.12; stackHeight = 12
         beq $t0,$zero,nullPtrException # Call at 604.12; stackHeight = 12
         lw $t0,-12($t0) # Call at 604.12; stackHeight = 12
         lw $t0,44($t0) # Call at 604.12; stackHeight = 12
         jalr $t0 # compareTo # Call at 604.12; stackHeight = 12
        # EXIT NODE # Call at 604.12; stackHeight = 12
        # ENTER NODE # IntegerLiteral at 604.31; stackHeight = 12
         subu $sp,$sp,8 # IntegerLiteral at 604.31; stackHeight = 12
         sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 604.31; stackHeight = 20
         li $t0,0 # IntegerLiteral at 604.31; stackHeight = 20
         sw $t0,($sp) # IntegerLiteral at 604.31; stackHeight = 20
        # EXIT NODE # IntegerLiteral at 604.31; stackHeight = 20
       lw $t0,($sp) # LessThan at 604.29; stackHeight = 20
       lw $t1,8($sp) # LessThan at 604.29; stackHeight = 20
       slt $t0,$t1,$t0 # LessThan at 604.29; stackHeight = 20
       addu $sp,$sp,12 # LessThan at 604.29; stackHeight = 20
       sw $t0,($sp)#**"" # LessThan at 604.29; stackHeight = 8
      # EXIT NODE # LessThan at 604.29; stackHeight = 8
     lw $t0,($sp) # If at 604.3; stackHeight = 8
     addu $sp,$sp,4 # If at 604.3; stackHeight = 8
     beq $t0,$zero,if_else_3059 # If at 604.3; stackHeight = 4
      # ENTER NODE # Block at 604.34; stackHeight = 4
        # ENTER NODE # Assign at 605.11; stackHeight = 4
          # ENTER NODE # IdentifierExp at 605.13; stackHeight = 4
           lw $t0,8($sp) # local: stackHt=4,var-offset=4 # IdentifierExp at 605.13; stackHeight = 4
           subu $sp,$sp,4 # IdentifierExp at 605.13; stackHeight = 4
           sw $t0,($sp)#**"" # IdentifierExp at 605.13; stackHeight = 8
          # EXIT NODE # IdentifierExp at 605.13; stackHeight = 8
         lw $t0,($sp) # Assign at 605.11; stackHeight = 8
         sw $t0,4($sp) # Assign at 605.11; stackHeight = 8
         addu $sp,$sp,4 # Assign at 605.11; stackHeight = 8
        # EXIT NODE # Assign at 605.11; stackHeight = 4
      # EXIT NODE # Block at 604.34; stackHeight = 4
    j if_done_3059 # If at 604.3; stackHeight = 4
    if_else_3059: # If at 604.3; stackHeight = 4
      # ENTER NODE # Block at 607.3; stackHeight = 4
      # EXIT NODE # Block at 607.3; stackHeight = 4
    if_done_3059: # If at 604.3; stackHeight = 4
    # EXIT NODE # If at 604.3; stackHeight = 4
    # ENTER NODE # IdentifierExp at 607.10; stackHeight = 4
     lw $t0,0($sp) # local: stackHt=4,var-offset=-4 # IdentifierExp at 607.10; stackHeight = 4
     subu $sp,$sp,4 # IdentifierExp at 607.10; stackHeight = 4
     sw $t0,($sp)#**"" # IdentifierExp at 607.10; stackHeight = 8
    # EXIT NODE # IdentifierExp at 607.10; stackHeight = 8
   lw $ra,16($sp) # MethodDeclNonVoid at 602.16; stackHeight = 8
   lw $s2,8($sp) # MethodDeclNonVoid at 602.16; stackHeight = 8
   lw $t0,($sp) # MethodDeclNonVoid at 602.16; stackHeight = 8
   sw $t0,16($sp)#**"(return-val)" # MethodDeclNonVoid at 602.16; stackHeight = 8
   addu $sp,$sp,16 # MethodDeclNonVoid at 602.16; stackHeight = 8
  jr $ra # MethodDeclNonVoid at 602.16; stackHeight = -8
  # EXIT NODE # MethodDeclNonVoid at 602.16; stackHeight = -8
  # ENTER NODE # MethodDeclNonVoid at 610.16; stackHeight = -8
  .globl fcn_3081_min # MethodDeclNonVoid at 610.16; stackHeight = -8
  fcn_3081_min: # MethodDeclNonVoid at 610.16; stackHeight = -8
   subu $sp,$sp,4 # MethodDeclNonVoid at 610.16; stackHeight = -8
   sw $s2,($sp) #**"old this-ptr" # MethodDeclNonVoid at 610.16; stackHeight = -8
   lw $s2,8($sp) #**"this-ptr" # MethodDeclNonVoid at 610.16; stackHeight = -8
   sw $ra,8($sp) #**"RA:min" # MethodDeclNonVoid at 610.16; stackHeight = -8
    # ENTER NODE # LocalVarDecl at 611.10; stackHeight = 0
      # ENTER NODE # This at 611.19; stackHeight = 0
       subu $sp,$sp,4 # This at 611.19; stackHeight = 0
       sw $s2,($sp)#**"" # This at 611.19; stackHeight = 4
      # EXIT NODE # This at 611.19; stackHeight = 4
    # EXIT NODE # LocalVarDecl at 611.10; stackHeight = 4
    # ENTER NODE # If at 612.3; stackHeight = 4
      # ENTER NODE # GreaterThan at 612.29; stackHeight = 4
        # ENTER NODE # Call at 612.12; stackHeight = 4
          # ENTER NODE # This at 612.7; stackHeight = 4
           subu $sp,$sp,4 # This at 612.7; stackHeight = 4
           sw $s2,($sp)#**"" # This at 612.7; stackHeight = 8
          # EXIT NODE # This at 612.7; stackHeight = 8
          # ENTER NODE # IdentifierExp at 612.22; stackHeight = 8
           lw $t0,12($sp) # local: stackHt=8,var-offset=4 # IdentifierExp at 612.22; stackHeight = 8
           subu $sp,$sp,4 # IdentifierExp at 612.22; stackHeight = 8
           sw $t0,($sp)#**"" # IdentifierExp at 612.22; stackHeight = 12
          # EXIT NODE # IdentifierExp at 612.22; stackHeight = 12
         lw $t0,4($sp) # Call at 612.12; stackHeight = 12
         beq $t0,$zero,nullPtrException # Call at 612.12; stackHeight = 12
         lw $t0,-12($t0) # Call at 612.12; stackHeight = 12
         lw $t0,44($t0) # Call at 612.12; stackHeight = 12
         jalr $t0 # compareTo # Call at 612.12; stackHeight = 12
        # EXIT NODE # Call at 612.12; stackHeight = 12
        # ENTER NODE # IntegerLiteral at 612.31; stackHeight = 12
         subu $sp,$sp,8 # IntegerLiteral at 612.31; stackHeight = 12
         sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 612.31; stackHeight = 20
         li $t0,0 # IntegerLiteral at 612.31; stackHeight = 20
         sw $t0,($sp) # IntegerLiteral at 612.31; stackHeight = 20
        # EXIT NODE # IntegerLiteral at 612.31; stackHeight = 20
       lw $t0,($sp) # GreaterThan at 612.29; stackHeight = 20
       lw $t1,8($sp) # GreaterThan at 612.29; stackHeight = 20
       sgt $t0,$t1,$t0 # GreaterThan at 612.29; stackHeight = 20
       addu $sp,$sp,12 # GreaterThan at 612.29; stackHeight = 20
       sw $t0,($sp)#**"" # GreaterThan at 612.29; stackHeight = 8
      # EXIT NODE # GreaterThan at 612.29; stackHeight = 8
     lw $t0,($sp) # If at 612.3; stackHeight = 8
     addu $sp,$sp,4 # If at 612.3; stackHeight = 8
     beq $t0,$zero,if_else_3079 # If at 612.3; stackHeight = 4
      # ENTER NODE # Block at 612.34; stackHeight = 4
        # ENTER NODE # Assign at 613.11; stackHeight = 4
          # ENTER NODE # IdentifierExp at 613.13; stackHeight = 4
           lw $t0,8($sp) # local: stackHt=4,var-offset=4 # IdentifierExp at 613.13; stackHeight = 4
           subu $sp,$sp,4 # IdentifierExp at 613.13; stackHeight = 4
           sw $t0,($sp)#**"" # IdentifierExp at 613.13; stackHeight = 8
          # EXIT NODE # IdentifierExp at 613.13; stackHeight = 8
         lw $t0,($sp) # Assign at 613.11; stackHeight = 8
         sw $t0,4($sp) # Assign at 613.11; stackHeight = 8
         addu $sp,$sp,4 # Assign at 613.11; stackHeight = 8
        # EXIT NODE # Assign at 613.11; stackHeight = 4
      # EXIT NODE # Block at 612.34; stackHeight = 4
    j if_done_3079 # If at 612.3; stackHeight = 4
    if_else_3079: # If at 612.3; stackHeight = 4
      # ENTER NODE # Block at 615.3; stackHeight = 4
      # EXIT NODE # Block at 615.3; stackHeight = 4
    if_done_3079: # If at 612.3; stackHeight = 4
    # EXIT NODE # If at 612.3; stackHeight = 4
    # ENTER NODE # IdentifierExp at 615.10; stackHeight = 4
     lw $t0,0($sp) # local: stackHt=4,var-offset=-4 # IdentifierExp at 615.10; stackHeight = 4
     subu $sp,$sp,4 # IdentifierExp at 615.10; stackHeight = 4
     sw $t0,($sp)#**"" # IdentifierExp at 615.10; stackHeight = 8
    # EXIT NODE # IdentifierExp at 615.10; stackHeight = 8
   lw $ra,16($sp) # MethodDeclNonVoid at 610.16; stackHeight = 8
   lw $s2,8($sp) # MethodDeclNonVoid at 610.16; stackHeight = 8
   lw $t0,($sp) # MethodDeclNonVoid at 610.16; stackHeight = 8
   sw $t0,16($sp)#**"(return-val)" # MethodDeclNonVoid at 610.16; stackHeight = 8
   addu $sp,$sp,16 # MethodDeclNonVoid at 610.16; stackHeight = 8
  jr $ra # MethodDeclNonVoid at 610.16; stackHeight = -8
  # EXIT NODE # MethodDeclNonVoid at 610.16; stackHeight = -8
  # ENTER NODE # MethodDeclNonVoid at 618.13; stackHeight = -8
  .globl fcn_3108_signum # MethodDeclNonVoid at 618.13; stackHeight = -8
  fcn_3108_signum: # MethodDeclNonVoid at 618.13; stackHeight = -8
   subu $sp,$sp,4 # MethodDeclNonVoid at 618.13; stackHeight = -8
   sw $s2,($sp) #**"old this-ptr" # MethodDeclNonVoid at 618.13; stackHeight = -8
   lw $s2,4($sp) #**"this-ptr" # MethodDeclNonVoid at 618.13; stackHeight = -8
   sw $ra,4($sp) #**"RA:signum" # MethodDeclNonVoid at 618.13; stackHeight = -8
    # ENTER NODE # LocalVarDecl at 619.7; stackHeight = 0
      # ENTER NODE # Minus at 619.16; stackHeight = 0
        # ENTER NODE # IntegerLiteral at 619.16; stackHeight = 0
         subu $sp,$sp,8 # IntegerLiteral at 619.16; stackHeight = 0
         sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 619.16; stackHeight = 8
         li $t0,0 # IntegerLiteral at 619.16; stackHeight = 8
         sw $t0,($sp) # IntegerLiteral at 619.16; stackHeight = 8
        # EXIT NODE # IntegerLiteral at 619.16; stackHeight = 8
        # ENTER NODE # IntegerLiteral at 619.17; stackHeight = 8
         subu $sp,$sp,8 # IntegerLiteral at 619.17; stackHeight = 8
         sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 619.17; stackHeight = 16
         li $t0,1 # IntegerLiteral at 619.17; stackHeight = 16
         sw $t0,($sp) # IntegerLiteral at 619.17; stackHeight = 16
        # EXIT NODE # IntegerLiteral at 619.17; stackHeight = 16
       lw $t0,($sp) # Minus at 619.16; stackHeight = 16
       lw $t1,8($sp) # Minus at 619.16; stackHeight = 16
       subu $t0,$t1,$t0 # Minus at 619.16; stackHeight = 16
       addu $sp,$sp,8 # Minus at 619.16; stackHeight = 16
       sw $t0,($sp)#**"" # Minus at 619.16; stackHeight = 8
      # EXIT NODE # Minus at 619.16; stackHeight = 8
    # EXIT NODE # LocalVarDecl at 619.7; stackHeight = 8
    # ENTER NODE # If at 620.3; stackHeight = 8
      # ENTER NODE # Not at 620.7; stackHeight = 8
        # ENTER NODE # IdentifierExp at 620.8; stackHeight = 8
         lw $t0,-16($s2) # inst-var # IdentifierExp at 620.8; stackHeight = 8
         subu $sp,$sp,4 # IdentifierExp at 620.8; stackHeight = 8
         sw $t0,($sp)#**"" # IdentifierExp at 620.8; stackHeight = 12
        # EXIT NODE # IdentifierExp at 620.8; stackHeight = 12
       lw $t0,($sp) # Not at 620.7; stackHeight = 12
       xor $t0,$t0,1 # Not at 620.7; stackHeight = 12
       sw $t0,($sp)#**"" # Not at 620.7; stackHeight = 12
      # EXIT NODE # Not at 620.7; stackHeight = 12
     lw $t0,($sp) # If at 620.3; stackHeight = 12
     addu $sp,$sp,4 # If at 620.3; stackHeight = 12
     beq $t0,$zero,if_else_3106 # If at 620.3; stackHeight = 8
      # ENTER NODE # Block at 620.15; stackHeight = 8
        # ENTER NODE # If at 621.4; stackHeight = 8
          # ENTER NODE # Call at 621.18; stackHeight = 8
            # ENTER NODE # InstVarAccess at 621.12; stackHeight = 8
              # ENTER NODE # This at 621.8; stackHeight = 8
               subu $sp,$sp,4 # This at 621.8; stackHeight = 8
               sw $s2,($sp)#**"" # This at 621.8; stackHeight = 12
              # EXIT NODE # This at 621.8; stackHeight = 12
             lw $t0,($sp) # InstVarAccess at 621.12; stackHeight = 12
             beq $t0,$zero,nullPtrException # InstVarAccess at 621.12; stackHeight = 12
             lw $t0,0($t0) # InstVarAccess at 621.12; stackHeight = 12
             sw $t0,($sp)#**"" # InstVarAccess at 621.12; stackHeight = 12
            # EXIT NODE # InstVarAccess at 621.12; stackHeight = 12
            # ENTER NODE # StringLiteral at 621.25; stackHeight = 12
             subu $sp,$sp,4 # StringLiteral at 621.25; stackHeight = 12
             la $t0,strLit_2646 # StringLiteral at 621.25; stackHeight = 16
             sw $t0,($sp)#**"strLit:0" # StringLiteral at 621.25; stackHeight = 16
            # EXIT NODE # StringLiteral at 621.25; stackHeight = 16
           lw $t0,4($sp) # Call at 621.18; stackHeight = 16
           beq $t0,$zero,nullPtrException # Call at 621.18; stackHeight = 16
           lw $t0,-12($t0) # Call at 621.18; stackHeight = 16
           lw $t0,4($t0) # Call at 621.18; stackHeight = 16
           jalr $t0 # equals # Call at 621.18; stackHeight = 16
          # EXIT NODE # Call at 621.18; stackHeight = 12
         lw $t0,($sp) # If at 621.4; stackHeight = 12
         addu $sp,$sp,4 # If at 621.4; stackHeight = 12
         beq $t0,$zero,if_else_3103 # If at 621.4; stackHeight = 8
          # ENTER NODE # Block at 621.31; stackHeight = 8
            # ENTER NODE # Assign at 622.12; stackHeight = 8
              # ENTER NODE # IntegerLiteral at 622.14; stackHeight = 8
               subu $sp,$sp,8 # IntegerLiteral at 622.14; stackHeight = 8
               sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 622.14; stackHeight = 16
               li $t0,0 # IntegerLiteral at 622.14; stackHeight = 16
               sw $t0,($sp) # IntegerLiteral at 622.14; stackHeight = 16
              # EXIT NODE # IntegerLiteral at 622.14; stackHeight = 16
             lw $t0,($sp) # Assign at 622.12; stackHeight = 16
             sw $t0,8($sp) # Assign at 622.12; stackHeight = 16
             addu $sp,$sp,8 # Assign at 622.12; stackHeight = 16
            # EXIT NODE # Assign at 622.12; stackHeight = 8
          # EXIT NODE # Block at 621.31; stackHeight = 8
        j if_done_3103 # If at 621.4; stackHeight = 8
        if_else_3103: # If at 621.4; stackHeight = 8
          # ENTER NODE # Block at 624.9; stackHeight = 8
            # ENTER NODE # Assign at 625.12; stackHeight = 8
              # ENTER NODE # IntegerLiteral at 625.14; stackHeight = 8
               subu $sp,$sp,8 # IntegerLiteral at 625.14; stackHeight = 8
               sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 625.14; stackHeight = 16
               li $t0,1 # IntegerLiteral at 625.14; stackHeight = 16
               sw $t0,($sp) # IntegerLiteral at 625.14; stackHeight = 16
              # EXIT NODE # IntegerLiteral at 625.14; stackHeight = 16
             lw $t0,($sp) # Assign at 625.12; stackHeight = 16
             sw $t0,8($sp) # Assign at 625.12; stackHeight = 16
             addu $sp,$sp,8 # Assign at 625.12; stackHeight = 16
            # EXIT NODE # Assign at 625.12; stackHeight = 8
          # EXIT NODE # Block at 624.9; stackHeight = 8
        if_done_3103: # If at 621.4; stackHeight = 8
        # EXIT NODE # If at 621.4; stackHeight = 8
      # EXIT NODE # Block at 620.15; stackHeight = 8
    j if_done_3106 # If at 620.3; stackHeight = 8
    if_else_3106: # If at 620.3; stackHeight = 8
      # ENTER NODE # Block at 628.3; stackHeight = 8
      # EXIT NODE # Block at 628.3; stackHeight = 8
    if_done_3106: # If at 620.3; stackHeight = 8
    # EXIT NODE # If at 620.3; stackHeight = 8
    # ENTER NODE # IdentifierExp at 628.10; stackHeight = 8
     lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 628.10; stackHeight = 8
     subu $sp,$sp,8 # IdentifierExp at 628.10; stackHeight = 8
     sw $s5,4($sp)#**"GC tag" # IdentifierExp at 628.10; stackHeight = 16
     sw $t0,($sp)#**"" # IdentifierExp at 628.10; stackHeight = 16
    # EXIT NODE # IdentifierExp at 628.10; stackHeight = 16
   lw $ra,20($sp) # MethodDeclNonVoid at 618.13; stackHeight = 16
   lw $s2,16($sp) # MethodDeclNonVoid at 618.13; stackHeight = 16
   lw $t0,($sp) # MethodDeclNonVoid at 618.13; stackHeight = 16
   sw $t0,16($sp)#**"(return-val)" # MethodDeclNonVoid at 618.13; stackHeight = 16
   sw $s5,20($sp)#**"" # MethodDeclNonVoid at 618.13; stackHeight = 16
   addu $sp,$sp,16 # MethodDeclNonVoid at 618.13; stackHeight = 16
  jr $ra # MethodDeclNonVoid at 618.13; stackHeight = 0
  # EXIT NODE # MethodDeclNonVoid at 618.13; stackHeight = 0
  # ENTER NODE # MethodDeclNonVoid at 631.16; stackHeight = 0
  .globl fcn_3123_remainder # MethodDeclNonVoid at 631.16; stackHeight = 0
  fcn_3123_remainder: # MethodDeclNonVoid at 631.16; stackHeight = 0
   subu $sp,$sp,4 # MethodDeclNonVoid at 631.16; stackHeight = 0
   sw $s2,($sp) #**"old this-ptr" # MethodDeclNonVoid at 631.16; stackHeight = 0
   lw $s2,8($sp) #**"this-ptr" # MethodDeclNonVoid at 631.16; stackHeight = 0
   sw $ra,8($sp) #**"RA:remainder" # MethodDeclNonVoid at 631.16; stackHeight = 0
    # ENTER NODE # LocalVarDecl at 632.10; stackHeight = 0
      # ENTER NODE # Call at 632.26; stackHeight = 0
        # ENTER NODE # This at 632.21; stackHeight = 0
         subu $sp,$sp,4 # This at 632.21; stackHeight = 0
         sw $s2,($sp)#**"" # This at 632.21; stackHeight = 4
        # EXIT NODE # This at 632.21; stackHeight = 4
        # ENTER NODE # IdentifierExp at 632.33; stackHeight = 4
         lw $t0,8($sp) # local: stackHt=4,var-offset=4 # IdentifierExp at 632.33; stackHeight = 4
         subu $sp,$sp,4 # IdentifierExp at 632.33; stackHeight = 4
         sw $t0,($sp)#**"" # IdentifierExp at 632.33; stackHeight = 8
        # EXIT NODE # IdentifierExp at 632.33; stackHeight = 8
       lw $t0,4($sp) # Call at 632.26; stackHeight = 8
       beq $t0,$zero,nullPtrException # Call at 632.26; stackHeight = 8
       lw $t0,-12($t0) # Call at 632.26; stackHeight = 8
       lw $t0,36($t0) # Call at 632.26; stackHeight = 8
       jalr $t0 # divide # Call at 632.26; stackHeight = 8
      # EXIT NODE # Call at 632.26; stackHeight = 4
    # EXIT NODE # LocalVarDecl at 632.10; stackHeight = 4
    # ENTER NODE # Call at 633.15; stackHeight = 4
      # ENTER NODE # This at 633.10; stackHeight = 4
       subu $sp,$sp,4 # This at 633.10; stackHeight = 4
       sw $s2,($sp)#**"" # This at 633.10; stackHeight = 8
      # EXIT NODE # This at 633.10; stackHeight = 8
      # ENTER NODE # Call at 633.33; stackHeight = 8
        # ENTER NODE # IdentifierExp at 633.24; stackHeight = 8
         lw $t0,4($sp) # local: stackHt=8,var-offset=-4 # IdentifierExp at 633.24; stackHeight = 8
         subu $sp,$sp,4 # IdentifierExp at 633.24; stackHeight = 8
         sw $t0,($sp)#**"" # IdentifierExp at 633.24; stackHeight = 12
        # EXIT NODE # IdentifierExp at 633.24; stackHeight = 12
        # ENTER NODE # IdentifierExp at 633.42; stackHeight = 12
         lw $t0,16($sp) # local: stackHt=12,var-offset=4 # IdentifierExp at 633.42; stackHeight = 12
         subu $sp,$sp,4 # IdentifierExp at 633.42; stackHeight = 12
         sw $t0,($sp)#**"" # IdentifierExp at 633.42; stackHeight = 16
        # EXIT NODE # IdentifierExp at 633.42; stackHeight = 16
       lw $t0,4($sp) # Call at 633.33; stackHeight = 16
       beq $t0,$zero,nullPtrException # Call at 633.33; stackHeight = 16
       lw $t0,-12($t0) # Call at 633.33; stackHeight = 16
       lw $t0,32($t0) # Call at 633.33; stackHeight = 16
       jalr $t0 # multiply # Call at 633.33; stackHeight = 16
      # EXIT NODE # Call at 633.33; stackHeight = 12
     lw $t0,4($sp) # Call at 633.15; stackHeight = 12
     beq $t0,$zero,nullPtrException # Call at 633.15; stackHeight = 12
     lw $t0,-12($t0) # Call at 633.15; stackHeight = 12
     lw $t0,24($t0) # Call at 633.15; stackHeight = 12
     jalr $t0 # subtract # Call at 633.15; stackHeight = 12
    # EXIT NODE # Call at 633.15; stackHeight = 8
   lw $ra,16($sp) # MethodDeclNonVoid at 631.16; stackHeight = 8
   lw $s2,8($sp) # MethodDeclNonVoid at 631.16; stackHeight = 8
   lw $t0,($sp) # MethodDeclNonVoid at 631.16; stackHeight = 8
   sw $t0,16($sp)#**"(return-val)" # MethodDeclNonVoid at 631.16; stackHeight = 8
   addu $sp,$sp,16 # MethodDeclNonVoid at 631.16; stackHeight = 8
  jr $ra # MethodDeclNonVoid at 631.16; stackHeight = -8
  # EXIT NODE # MethodDeclNonVoid at 631.16; stackHeight = -8
  # ENTER NODE # MethodDeclNonVoid at 636.18; stackHeight = -8
  .globl fcn_3160_divideAndRemainder # MethodDeclNonVoid at 636.18; stackHeight = -8
  fcn_3160_divideAndRemainder: # MethodDeclNonVoid at 636.18; stackHeight = -8
   subu $sp,$sp,4 # MethodDeclNonVoid at 636.18; stackHeight = -8
   sw $s2,($sp) #**"old this-ptr" # MethodDeclNonVoid at 636.18; stackHeight = -8
   lw $s2,8($sp) #**"this-ptr" # MethodDeclNonVoid at 636.18; stackHeight = -8
   sw $ra,8($sp) #**"RA:divideAndRemainder" # MethodDeclNonVoid at 636.18; stackHeight = -8
    # ENTER NODE # LocalVarDecl at 637.12; stackHeight = 0
      # ENTER NODE # NewArray at 637.21; stackHeight = 0
        # ENTER NODE # IntegerLiteral at 637.32; stackHeight = 0
         subu $sp,$sp,8 # IntegerLiteral at 637.32; stackHeight = 0
         sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 637.32; stackHeight = 8
         li $t0,2 # IntegerLiteral at 637.32; stackHeight = 8
         sw $t0,($sp) # IntegerLiteral at 637.32; stackHeight = 8
        # EXIT NODE # IntegerLiteral at 637.32; stackHeight = 8
       lw $s7,($sp) # NewArray at 637.21; stackHeight = 8
       addu $sp,$sp,8 # NewArray at 637.21; stackHeight = 8
       li $s6, 1 # NewArray at 637.21; stackHeight = 0
       jal newObject # NewArray at 637.21; stackHeight = 0
       la $t0,CLASS__ARRAY_BigInt # NewArray at 637.21; stackHeight = 4
       sw $t0,-12($s7)#**"VTP: _ARRAY_BigInt" # NewArray at 637.21; stackHeight = 4
      # EXIT NODE # NewArray at 637.21; stackHeight = 4
    # EXIT NODE # LocalVarDecl at 637.12; stackHeight = 4
    # ENTER NODE # LocalVarDecl at 638.10; stackHeight = 4
      # ENTER NODE # Call at 638.26; stackHeight = 4
        # ENTER NODE # This at 638.21; stackHeight = 4
         subu $sp,$sp,4 # This at 638.21; stackHeight = 4
         sw $s2,($sp)#**"" # This at 638.21; stackHeight = 8
        # EXIT NODE # This at 638.21; stackHeight = 8
        # ENTER NODE # IdentifierExp at 638.33; stackHeight = 8
         lw $t0,12($sp) # local: stackHt=8,var-offset=4 # IdentifierExp at 638.33; stackHeight = 8
         subu $sp,$sp,4 # IdentifierExp at 638.33; stackHeight = 8
         sw $t0,($sp)#**"" # IdentifierExp at 638.33; stackHeight = 12
        # EXIT NODE # IdentifierExp at 638.33; stackHeight = 12
       lw $t0,4($sp) # Call at 638.26; stackHeight = 12
       beq $t0,$zero,nullPtrException # Call at 638.26; stackHeight = 12
       lw $t0,-12($t0) # Call at 638.26; stackHeight = 12
       lw $t0,36($t0) # Call at 638.26; stackHeight = 12
       jalr $t0 # divide # Call at 638.26; stackHeight = 12
      # EXIT NODE # Call at 638.26; stackHeight = 8
    # EXIT NODE # LocalVarDecl at 638.10; stackHeight = 8
    # ENTER NODE # LocalVarDecl at 639.10; stackHeight = 8
      # ENTER NODE # Call at 639.27; stackHeight = 8
        # ENTER NODE # This at 639.22; stackHeight = 8
         subu $sp,$sp,4 # This at 639.22; stackHeight = 8
         sw $s2,($sp)#**"" # This at 639.22; stackHeight = 12
        # EXIT NODE # This at 639.22; stackHeight = 12
        # ENTER NODE # Call at 639.45; stackHeight = 12
          # ENTER NODE # IdentifierExp at 639.36; stackHeight = 12
           lw $t0,4($sp) # local: stackHt=12,var-offset=-8 # IdentifierExp at 639.36; stackHeight = 12
           subu $sp,$sp,4 # IdentifierExp at 639.36; stackHeight = 12
           sw $t0,($sp)#**"" # IdentifierExp at 639.36; stackHeight = 16
          # EXIT NODE # IdentifierExp at 639.36; stackHeight = 16
          # ENTER NODE # IdentifierExp at 639.54; stackHeight = 16
           lw $t0,20($sp) # local: stackHt=16,var-offset=4 # IdentifierExp at 639.54; stackHeight = 16
           subu $sp,$sp,4 # IdentifierExp at 639.54; stackHeight = 16
           sw $t0,($sp)#**"" # IdentifierExp at 639.54; stackHeight = 20
          # EXIT NODE # IdentifierExp at 639.54; stackHeight = 20
         lw $t0,4($sp) # Call at 639.45; stackHeight = 20
         beq $t0,$zero,nullPtrException # Call at 639.45; stackHeight = 20
         lw $t0,-12($t0) # Call at 639.45; stackHeight = 20
         lw $t0,32($t0) # Call at 639.45; stackHeight = 20
         jalr $t0 # multiply # Call at 639.45; stackHeight = 20
        # EXIT NODE # Call at 639.45; stackHeight = 16
       lw $t0,4($sp) # Call at 639.27; stackHeight = 16
       beq $t0,$zero,nullPtrException # Call at 639.27; stackHeight = 16
       lw $t0,-12($t0) # Call at 639.27; stackHeight = 16
       lw $t0,24($t0) # Call at 639.27; stackHeight = 16
       jalr $t0 # subtract # Call at 639.27; stackHeight = 16
      # EXIT NODE # Call at 639.27; stackHeight = 12
    # EXIT NODE # LocalVarDecl at 639.10; stackHeight = 12
    # ENTER NODE # Assign at 640.13; stackHeight = 12
      # ENTER NODE # IdentifierExp at 640.3; stackHeight = 12
       lw $t0,8($sp) # local: stackHt=12,var-offset=-4 # IdentifierExp at 640.3; stackHeight = 12
       subu $sp,$sp,4 # IdentifierExp at 640.3; stackHeight = 12
       sw $t0,($sp)#**"" # IdentifierExp at 640.3; stackHeight = 16
      # EXIT NODE # IdentifierExp at 640.3; stackHeight = 16
      # ENTER NODE # IntegerLiteral at 640.10; stackHeight = 16
       subu $sp,$sp,8 # IntegerLiteral at 640.10; stackHeight = 16
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 640.10; stackHeight = 24
       li $t0,0 # IntegerLiteral at 640.10; stackHeight = 24
       sw $t0,($sp) # IntegerLiteral at 640.10; stackHeight = 24
      # EXIT NODE # IntegerLiteral at 640.10; stackHeight = 24
      # ENTER NODE # IdentifierExp at 640.15; stackHeight = 24
       lw $t0,16($sp) # local: stackHt=24,var-offset=-8 # IdentifierExp at 640.15; stackHeight = 24
       subu $sp,$sp,4 # IdentifierExp at 640.15; stackHeight = 24
       sw $t0,($sp)#**"" # IdentifierExp at 640.15; stackHeight = 28
      # EXIT NODE # IdentifierExp at 640.15; stackHeight = 28
     lw $t0,($sp) # Assign at 640.13; stackHeight = 28
     lw $t1,12($sp) # Assign at 640.13; stackHeight = 28
     beq $t1,$zero,nullPtrException # Assign at 640.13; stackHeight = 28
     lw $t2,4($sp) # Assign at 640.13; stackHeight = 28
     lw $t3,-4($t1) # Assign at 640.13; stackHeight = 28
     bgeu $t2,$t3,arrayIndexOutOfBounds # Assign at 640.13; stackHeight = 28
     sll $t2,$t2,2 # Assign at 640.13; stackHeight = 28
     addu $t2,$t2,$t1 # Assign at 640.13; stackHeight = 28
     sw $t0,($t2) # Assign at 640.13; stackHeight = 28
     addu $sp,$sp,16 # Assign at 640.13; stackHeight = 28
    # EXIT NODE # Assign at 640.13; stackHeight = 12
    # ENTER NODE # Assign at 641.13; stackHeight = 12
      # ENTER NODE # IdentifierExp at 641.3; stackHeight = 12
       lw $t0,8($sp) # local: stackHt=12,var-offset=-4 # IdentifierExp at 641.3; stackHeight = 12
       subu $sp,$sp,4 # IdentifierExp at 641.3; stackHeight = 12
       sw $t0,($sp)#**"" # IdentifierExp at 641.3; stackHeight = 16
      # EXIT NODE # IdentifierExp at 641.3; stackHeight = 16
      # ENTER NODE # IntegerLiteral at 641.10; stackHeight = 16
       subu $sp,$sp,8 # IntegerLiteral at 641.10; stackHeight = 16
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 641.10; stackHeight = 24
       li $t0,1 # IntegerLiteral at 641.10; stackHeight = 24
       sw $t0,($sp) # IntegerLiteral at 641.10; stackHeight = 24
      # EXIT NODE # IntegerLiteral at 641.10; stackHeight = 24
      # ENTER NODE # IdentifierExp at 641.15; stackHeight = 24
       lw $t0,12($sp) # local: stackHt=24,var-offset=-12 # IdentifierExp at 641.15; stackHeight = 24
       subu $sp,$sp,4 # IdentifierExp at 641.15; stackHeight = 24
       sw $t0,($sp)#**"" # IdentifierExp at 641.15; stackHeight = 28
      # EXIT NODE # IdentifierExp at 641.15; stackHeight = 28
     lw $t0,($sp) # Assign at 641.13; stackHeight = 28
     lw $t1,12($sp) # Assign at 641.13; stackHeight = 28
     beq $t1,$zero,nullPtrException # Assign at 641.13; stackHeight = 28
     lw $t2,4($sp) # Assign at 641.13; stackHeight = 28
     lw $t3,-4($t1) # Assign at 641.13; stackHeight = 28
     bgeu $t2,$t3,arrayIndexOutOfBounds # Assign at 641.13; stackHeight = 28
     sll $t2,$t2,2 # Assign at 641.13; stackHeight = 28
     addu $t2,$t2,$t1 # Assign at 641.13; stackHeight = 28
     sw $t0,($t2) # Assign at 641.13; stackHeight = 28
     addu $sp,$sp,16 # Assign at 641.13; stackHeight = 28
    # EXIT NODE # Assign at 641.13; stackHeight = 12
    # ENTER NODE # IdentifierExp at 642.10; stackHeight = 12
     lw $t0,8($sp) # local: stackHt=12,var-offset=-4 # IdentifierExp at 642.10; stackHeight = 12
     subu $sp,$sp,4 # IdentifierExp at 642.10; stackHeight = 12
     sw $t0,($sp)#**"" # IdentifierExp at 642.10; stackHeight = 16
    # EXIT NODE # IdentifierExp at 642.10; stackHeight = 16
   lw $ra,24($sp) # MethodDeclNonVoid at 636.18; stackHeight = 16
   lw $s2,16($sp) # MethodDeclNonVoid at 636.18; stackHeight = 16
   lw $t0,($sp) # MethodDeclNonVoid at 636.18; stackHeight = 16
   sw $t0,24($sp)#**"(return-val)" # MethodDeclNonVoid at 636.18; stackHeight = 16
   addu $sp,$sp,24 # MethodDeclNonVoid at 636.18; stackHeight = 16
  jr $ra # MethodDeclNonVoid at 636.18; stackHeight = -8
  # EXIT NODE # MethodDeclNonVoid at 636.18; stackHeight = -8
  # ENTER NODE # MethodDeclNonVoid at 646.16; stackHeight = -8
  .globl fcn_3298_primitiveDivide # MethodDeclNonVoid at 646.16; stackHeight = -8
  fcn_3298_primitiveDivide: # MethodDeclNonVoid at 646.16; stackHeight = -8
   subu $sp,$sp,4 # MethodDeclNonVoid at 646.16; stackHeight = -8
   sw $s2,($sp) #**"old this-ptr" # MethodDeclNonVoid at 646.16; stackHeight = -8
   lw $s2,12($sp) #**"this-ptr" # MethodDeclNonVoid at 646.16; stackHeight = -8
   sw $ra,12($sp) #**"RA:primitiveDivide" # MethodDeclNonVoid at 646.16; stackHeight = -8
    # ENTER NODE # LocalVarDecl at 647.10; stackHeight = 0
      # ENTER NODE # Call at 647.18; stackHeight = 0
        # ENTER NODE # This at 647.18; stackHeight = 0
         subu $sp,$sp,4 # This at 647.18; stackHeight = 0
         sw $s2,($sp)#**"" # This at 647.18; stackHeight = 4
        # EXIT NODE # This at 647.18; stackHeight = 4
        # ENTER NODE # IdentifierExp at 647.38; stackHeight = 4
         lw $t0,8($sp) # local: stackHt=4,var-offset=4 # IdentifierExp at 647.38; stackHeight = 4
         subu $sp,$sp,4 # IdentifierExp at 647.38; stackHeight = 4
         sw $t0,($sp)#**"" # IdentifierExp at 647.38; stackHeight = 8
        # EXIT NODE # IdentifierExp at 647.38; stackHeight = 8
        # ENTER NODE # Call at 647.45; stackHeight = 8
          # ENTER NODE # IdentifierExp at 647.42; stackHeight = 8
           lw $t0,16($sp) # local: stackHt=8,var-offset=8 # IdentifierExp at 647.42; stackHeight = 8
           subu $sp,$sp,4 # IdentifierExp at 647.42; stackHeight = 8
           sw $t0,($sp)#**"" # IdentifierExp at 647.42; stackHeight = 12
          # EXIT NODE # IdentifierExp at 647.42; stackHeight = 12
         lw $t0,0($sp) # Call at 647.45; stackHeight = 12
         beq $t0,$zero,nullPtrException # Call at 647.45; stackHeight = 12
         lw $t0,-12($t0) # Call at 647.45; stackHeight = 12
         lw $t0,20($t0) # Call at 647.45; stackHeight = 12
         jalr $t0 # length # Call at 647.45; stackHeight = 12
        # EXIT NODE # Call at 647.45; stackHeight = 16
       lw $t0,12($sp) # Call at 647.18; stackHeight = 16
       beq $t0,$zero,nullPtrException # Call at 647.18; stackHeight = 16
       lw $t0,-12($t0) # Call at 647.18; stackHeight = 16
       lw $t0,96($t0) # Call at 647.18; stackHeight = 16
       jalr $t0 # primitiveReciprocal # Call at 647.18; stackHeight = 16
      # EXIT NODE # Call at 647.18; stackHeight = 4
    # EXIT NODE # LocalVarDecl at 647.10; stackHeight = 4
    # ENTER NODE # LocalVarDecl at 648.10; stackHeight = 4
      # ENTER NODE # Call at 648.17; stackHeight = 4
        # ENTER NODE # This at 648.17; stackHeight = 4
         subu $sp,$sp,4 # This at 648.17; stackHeight = 4
         sw $s2,($sp)#**"" # This at 648.17; stackHeight = 8
        # EXIT NODE # This at 648.17; stackHeight = 8
        # ENTER NODE # IdentifierExp at 648.31; stackHeight = 8
         lw $t0,16($sp) # local: stackHt=8,var-offset=8 # IdentifierExp at 648.31; stackHeight = 8
         subu $sp,$sp,4 # IdentifierExp at 648.31; stackHeight = 8
         sw $t0,($sp)#**"" # IdentifierExp at 648.31; stackHeight = 12
        # EXIT NODE # IdentifierExp at 648.31; stackHeight = 12
        # ENTER NODE # IdentifierExp at 648.34; stackHeight = 12
         lw $t0,8($sp) # local: stackHt=12,var-offset=-4 # IdentifierExp at 648.34; stackHeight = 12
         subu $sp,$sp,4 # IdentifierExp at 648.34; stackHeight = 12
         sw $t0,($sp)#**"" # IdentifierExp at 648.34; stackHeight = 16
        # EXIT NODE # IdentifierExp at 648.34; stackHeight = 16
       lw $t0,8($sp) # Call at 648.17; stackHeight = 16
       beq $t0,$zero,nullPtrException # Call at 648.17; stackHeight = 16
       lw $t0,-12($t0) # Call at 648.17; stackHeight = 16
       lw $t0,52($t0) # Call at 648.17; stackHeight = 16
       jalr $t0 # primitiveMult # Call at 648.17; stackHeight = 16
      # EXIT NODE # Call at 648.17; stackHeight = 8
    # EXIT NODE # LocalVarDecl at 648.10; stackHeight = 8
    # ENTER NODE # LocalVarDecl at 649.7; stackHeight = 8
      # ENTER NODE # Minus at 649.28; stackHeight = 8
        # ENTER NODE # Call at 649.20; stackHeight = 8
          # ENTER NODE # IdentifierExp at 649.15; stackHeight = 8
           lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 649.15; stackHeight = 8
           subu $sp,$sp,4 # IdentifierExp at 649.15; stackHeight = 8
           sw $t0,($sp)#**"" # IdentifierExp at 649.15; stackHeight = 12
          # EXIT NODE # IdentifierExp at 649.15; stackHeight = 12
         lw $t0,0($sp) # Call at 649.20; stackHeight = 12
         beq $t0,$zero,nullPtrException # Call at 649.20; stackHeight = 12
         lw $t0,-12($t0) # Call at 649.20; stackHeight = 12
         lw $t0,20($t0) # Call at 649.20; stackHeight = 12
         jalr $t0 # length # Call at 649.20; stackHeight = 12
        # EXIT NODE # Call at 649.20; stackHeight = 16
        # ENTER NODE # Call at 649.32; stackHeight = 16
          # ENTER NODE # IdentifierExp at 649.29; stackHeight = 16
           lw $t0,24($sp) # local: stackHt=16,var-offset=8 # IdentifierExp at 649.29; stackHeight = 16
           subu $sp,$sp,4 # IdentifierExp at 649.29; stackHeight = 16
           sw $t0,($sp)#**"" # IdentifierExp at 649.29; stackHeight = 20
          # EXIT NODE # IdentifierExp at 649.29; stackHeight = 20
         lw $t0,0($sp) # Call at 649.32; stackHeight = 20
         beq $t0,$zero,nullPtrException # Call at 649.32; stackHeight = 20
         lw $t0,-12($t0) # Call at 649.32; stackHeight = 20
         lw $t0,20($t0) # Call at 649.32; stackHeight = 20
         jalr $t0 # length # Call at 649.32; stackHeight = 20
        # EXIT NODE # Call at 649.32; stackHeight = 24
       lw $t0,($sp) # Minus at 649.28; stackHeight = 24
       lw $t1,8($sp) # Minus at 649.28; stackHeight = 24
       subu $t0,$t1,$t0 # Minus at 649.28; stackHeight = 24
       addu $sp,$sp,8 # Minus at 649.28; stackHeight = 24
       sw $t0,($sp)#**"" # Minus at 649.28; stackHeight = 16
      # EXIT NODE # Minus at 649.28; stackHeight = 16
    # EXIT NODE # LocalVarDecl at 649.7; stackHeight = 16
    # ENTER NODE # If at 650.3; stackHeight = 16
      # ENTER NODE # Not at 650.13; stackHeight = 16
        # ENTER NODE # GreaterThan at 650.13; stackHeight = 16
          # ENTER NODE # IdentifierExp at 650.7; stackHeight = 16
           lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 650.7; stackHeight = 16
           subu $sp,$sp,8 # IdentifierExp at 650.7; stackHeight = 16
           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 650.7; stackHeight = 24
           sw $t0,($sp)#**"" # IdentifierExp at 650.7; stackHeight = 24
          # EXIT NODE # IdentifierExp at 650.7; stackHeight = 24
          # ENTER NODE # IntegerLiteral at 650.16; stackHeight = 24
           subu $sp,$sp,8 # IntegerLiteral at 650.16; stackHeight = 24
           sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 650.16; stackHeight = 32
           li $t0,0 # IntegerLiteral at 650.16; stackHeight = 32
           sw $t0,($sp) # IntegerLiteral at 650.16; stackHeight = 32
          # EXIT NODE # IntegerLiteral at 650.16; stackHeight = 32
         lw $t0,($sp) # GreaterThan at 650.13; stackHeight = 32
         lw $t1,8($sp) # GreaterThan at 650.13; stackHeight = 32
         sgt $t0,$t1,$t0 # GreaterThan at 650.13; stackHeight = 32
         addu $sp,$sp,12 # GreaterThan at 650.13; stackHeight = 32
         sw $t0,($sp)#**"" # GreaterThan at 650.13; stackHeight = 20
        # EXIT NODE # GreaterThan at 650.13; stackHeight = 20
       lw $t0,($sp) # Not at 650.13; stackHeight = 20
       xor $t0,$t0,1 # Not at 650.13; stackHeight = 20
       sw $t0,($sp)#**"" # Not at 650.13; stackHeight = 20
      # EXIT NODE # Not at 650.13; stackHeight = 20
     lw $t0,($sp) # If at 650.3; stackHeight = 20
     addu $sp,$sp,4 # If at 650.3; stackHeight = 20
     beq $t0,$zero,if_else_3208 # If at 650.3; stackHeight = 16
      # ENTER NODE # Block at 650.19; stackHeight = 16
        # ENTER NODE # Assign at 651.9; stackHeight = 16
          # ENTER NODE # StringLiteral at 651.11; stackHeight = 16
           subu $sp,$sp,4 # StringLiteral at 651.11; stackHeight = 16
           la $t0,strLit_2646 # StringLiteral at 651.11; stackHeight = 20
           sw $t0,($sp)#**"strLit:0" # StringLiteral at 651.11; stackHeight = 20
          # EXIT NODE # StringLiteral at 651.11; stackHeight = 20
         lw $t0,($sp) # Assign at 651.9; stackHeight = 20
         sw $t0,12($sp) # Assign at 651.9; stackHeight = 20
         addu $sp,$sp,4 # Assign at 651.9; stackHeight = 20
        # EXIT NODE # Assign at 651.9; stackHeight = 16
      # EXIT NODE # Block at 650.19; stackHeight = 16
    j if_done_3208 # If at 650.3; stackHeight = 16
    if_else_3208: # If at 650.3; stackHeight = 16
      # ENTER NODE # Block at 653.8; stackHeight = 16
        # ENTER NODE # Assign at 654.9; stackHeight = 16
          # ENTER NODE # Call at 654.16; stackHeight = 16
            # ENTER NODE # IdentifierExp at 654.11; stackHeight = 16
             lw $t0,8($sp) # local: stackHt=16,var-offset=-8 # IdentifierExp at 654.11; stackHeight = 16
             subu $sp,$sp,4 # IdentifierExp at 654.11; stackHeight = 16
             sw $t0,($sp)#**"" # IdentifierExp at 654.11; stackHeight = 20
            # EXIT NODE # IdentifierExp at 654.11; stackHeight = 20
            # ENTER NODE # IntegerLiteral at 654.26; stackHeight = 20
             subu $sp,$sp,8 # IntegerLiteral at 654.26; stackHeight = 20
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 654.26; stackHeight = 28
             li $t0,0 # IntegerLiteral at 654.26; stackHeight = 28
             sw $t0,($sp) # IntegerLiteral at 654.26; stackHeight = 28
            # EXIT NODE # IntegerLiteral at 654.26; stackHeight = 28
            # ENTER NODE # Minus at 654.42; stackHeight = 28
              # ENTER NODE # Call at 654.34; stackHeight = 28
                # ENTER NODE # IdentifierExp at 654.29; stackHeight = 28
                 lw $t0,20($sp) # local: stackHt=28,var-offset=-8 # IdentifierExp at 654.29; stackHeight = 28
                 subu $sp,$sp,4 # IdentifierExp at 654.29; stackHeight = 28
                 sw $t0,($sp)#**"" # IdentifierExp at 654.29; stackHeight = 32
                # EXIT NODE # IdentifierExp at 654.29; stackHeight = 32
               lw $t0,0($sp) # Call at 654.34; stackHeight = 32
               beq $t0,$zero,nullPtrException # Call at 654.34; stackHeight = 32
               lw $t0,-12($t0) # Call at 654.34; stackHeight = 32
               lw $t0,20($t0) # Call at 654.34; stackHeight = 32
               jalr $t0 # length # Call at 654.34; stackHeight = 32
              # EXIT NODE # Call at 654.34; stackHeight = 36
              # ENTER NODE # Call at 654.46; stackHeight = 36
                # ENTER NODE # IdentifierExp at 654.43; stackHeight = 36
                 lw $t0,44($sp) # local: stackHt=36,var-offset=8 # IdentifierExp at 654.43; stackHeight = 36
                 subu $sp,$sp,4 # IdentifierExp at 654.43; stackHeight = 36
                 sw $t0,($sp)#**"" # IdentifierExp at 654.43; stackHeight = 40
                # EXIT NODE # IdentifierExp at 654.43; stackHeight = 40
               lw $t0,0($sp) # Call at 654.46; stackHeight = 40
               beq $t0,$zero,nullPtrException # Call at 654.46; stackHeight = 40
               lw $t0,-12($t0) # Call at 654.46; stackHeight = 40
               lw $t0,20($t0) # Call at 654.46; stackHeight = 40
               jalr $t0 # length # Call at 654.46; stackHeight = 40
              # EXIT NODE # Call at 654.46; stackHeight = 44
             lw $t0,($sp) # Minus at 654.42; stackHeight = 44
             lw $t1,8($sp) # Minus at 654.42; stackHeight = 44
             subu $t0,$t1,$t0 # Minus at 654.42; stackHeight = 44
             addu $sp,$sp,8 # Minus at 654.42; stackHeight = 44
             sw $t0,($sp)#**"" # Minus at 654.42; stackHeight = 36
            # EXIT NODE # Minus at 654.42; stackHeight = 36
           lw $t0,16($sp) # Call at 654.16; stackHeight = 36
           beq $t0,$zero,nullPtrException # Call at 654.16; stackHeight = 36
           lw $t0,-12($t0) # Call at 654.16; stackHeight = 36
           lw $t0,16($t0) # Call at 654.16; stackHeight = 36
           jalr $t0 # substring # Call at 654.16; stackHeight = 36
          # EXIT NODE # Call at 654.16; stackHeight = 20
         lw $t0,($sp) # Assign at 654.9; stackHeight = 20
         sw $t0,12($sp) # Assign at 654.9; stackHeight = 20
         addu $sp,$sp,4 # Assign at 654.9; stackHeight = 20
        # EXIT NODE # Assign at 654.9; stackHeight = 16
      # EXIT NODE # Block at 653.8; stackHeight = 16
    if_done_3208: # If at 650.3; stackHeight = 16
    # EXIT NODE # If at 650.3; stackHeight = 16
    # ENTER NODE # LocalVarDecl at 656.10; stackHeight = 16
      # ENTER NODE # Call at 656.20; stackHeight = 16
        # ENTER NODE # This at 656.20; stackHeight = 16
         subu $sp,$sp,4 # This at 656.20; stackHeight = 16
         sw $s2,($sp)#**"" # This at 656.20; stackHeight = 20
        # EXIT NODE # This at 656.20; stackHeight = 20
        # ENTER NODE # IdentifierExp at 656.34; stackHeight = 20
         lw $t0,12($sp) # local: stackHt=20,var-offset=-8 # IdentifierExp at 656.34; stackHeight = 20
         subu $sp,$sp,4 # IdentifierExp at 656.34; stackHeight = 20
         sw $t0,($sp)#**"" # IdentifierExp at 656.34; stackHeight = 24
        # EXIT NODE # IdentifierExp at 656.34; stackHeight = 24
        # ENTER NODE # IdentifierExp at 656.40; stackHeight = 24
         lw $t0,28($sp) # local: stackHt=24,var-offset=4 # IdentifierExp at 656.40; stackHeight = 24
         subu $sp,$sp,4 # IdentifierExp at 656.40; stackHeight = 24
         sw $t0,($sp)#**"" # IdentifierExp at 656.40; stackHeight = 28
        # EXIT NODE # IdentifierExp at 656.40; stackHeight = 28
       lw $t0,8($sp) # Call at 656.20; stackHeight = 28
       beq $t0,$zero,nullPtrException # Call at 656.20; stackHeight = 28
       lw $t0,-12($t0) # Call at 656.20; stackHeight = 28
       lw $t0,52($t0) # Call at 656.20; stackHeight = 28
       jalr $t0 # primitiveMult # Call at 656.20; stackHeight = 28
      # EXIT NODE # Call at 656.20; stackHeight = 20
    # EXIT NODE # LocalVarDecl at 656.10; stackHeight = 20
    # ENTER NODE # LocalVarDecl at 657.7; stackHeight = 20
      # ENTER NODE # Call at 657.23; stackHeight = 20
        # ENTER NODE # This at 657.23; stackHeight = 20
         subu $sp,$sp,4 # This at 657.23; stackHeight = 20
         sw $s2,($sp)#**"" # This at 657.23; stackHeight = 24
        # EXIT NODE # This at 657.23; stackHeight = 24
        # ENTER NODE # IdentifierExp at 657.40; stackHeight = 24
         lw $t0,4($sp) # local: stackHt=24,var-offset=-20 # IdentifierExp at 657.40; stackHeight = 24
         subu $sp,$sp,4 # IdentifierExp at 657.40; stackHeight = 24
         sw $t0,($sp)#**"" # IdentifierExp at 657.40; stackHeight = 28
        # EXIT NODE # IdentifierExp at 657.40; stackHeight = 28
        # ENTER NODE # IdentifierExp at 657.49; stackHeight = 28
         lw $t0,36($sp) # local: stackHt=28,var-offset=8 # IdentifierExp at 657.49; stackHeight = 28
         subu $sp,$sp,4 # IdentifierExp at 657.49; stackHeight = 28
         sw $t0,($sp)#**"" # IdentifierExp at 657.49; stackHeight = 32
        # EXIT NODE # IdentifierExp at 657.49; stackHeight = 32
       lw $t0,8($sp) # Call at 657.23; stackHeight = 32
       beq $t0,$zero,nullPtrException # Call at 657.23; stackHeight = 32
       lw $t0,-12($t0) # Call at 657.23; stackHeight = 32
       lw $t0,88($t0) # Call at 657.23; stackHeight = 32
       jalr $t0 # primitiveCompare # Call at 657.23; stackHeight = 32
      # EXIT NODE # Call at 657.23; stackHeight = 28
    # EXIT NODE # LocalVarDecl at 657.7; stackHeight = 28
    # ENTER NODE # If at 658.3; stackHeight = 28
      # ENTER NODE # GreaterThan at 658.21; stackHeight = 28
        # ENTER NODE # IdentifierExp at 658.7; stackHeight = 28
         lw $t0,0($sp) # local: stackHt=28,var-offset=-28 # IdentifierExp at 658.7; stackHeight = 28
         subu $sp,$sp,8 # IdentifierExp at 658.7; stackHeight = 28
         sw $s5,4($sp)#**"GC tag" # IdentifierExp at 658.7; stackHeight = 36
         sw $t0,($sp)#**"" # IdentifierExp at 658.7; stackHeight = 36
        # EXIT NODE # IdentifierExp at 658.7; stackHeight = 36
        # ENTER NODE # IntegerLiteral at 658.23; stackHeight = 36
         subu $sp,$sp,8 # IntegerLiteral at 658.23; stackHeight = 36
         sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 658.23; stackHeight = 44
         li $t0,0 # IntegerLiteral at 658.23; stackHeight = 44
         sw $t0,($sp) # IntegerLiteral at 658.23; stackHeight = 44
        # EXIT NODE # IntegerLiteral at 658.23; stackHeight = 44
       lw $t0,($sp) # GreaterThan at 658.21; stackHeight = 44
       lw $t1,8($sp) # GreaterThan at 658.21; stackHeight = 44
       sgt $t0,$t1,$t0 # GreaterThan at 658.21; stackHeight = 44
       addu $sp,$sp,12 # GreaterThan at 658.21; stackHeight = 44
       sw $t0,($sp)#**"" # GreaterThan at 658.21; stackHeight = 32
      # EXIT NODE # GreaterThan at 658.21; stackHeight = 32
     lw $t0,($sp) # If at 658.3; stackHeight = 32
     addu $sp,$sp,4 # If at 658.3; stackHeight = 32
     beq $t0,$zero,if_else_3296 # If at 658.3; stackHeight = 28
      # ENTER NODE # Block at 658.26; stackHeight = 28
        # ENTER NODE # While at 659.4; stackHeight = 28
        j while_enter_3255 # While at 659.4; stackHeight = 28
        while_top_3255: # While at 659.4; stackHeight = 28
          # ENTER NODE # Block at 659.4; stackHeight = 28
            # ENTER NODE # Block at 659.7; stackHeight = 28
              # ENTER NODE # Assign at 660.13; stackHeight = 28
                # ENTER NODE # InstVarAccess at 660.44; stackHeight = 28
                  # ENTER NODE # Call at 660.15; stackHeight = 28
                    # ENTER NODE # This at 660.15; stackHeight = 28
                     subu $sp,$sp,4 # This at 660.15; stackHeight = 28
                     sw $s2,($sp)#**"" # This at 660.15; stackHeight = 32
                    # EXIT NODE # This at 660.15; stackHeight = 32
                    # ENTER NODE # IdentifierExp at 660.28; stackHeight = 32
                     lw $t0,12($sp) # local: stackHt=32,var-offset=-20 # IdentifierExp at 660.28; stackHeight = 32
                     subu $sp,$sp,4 # IdentifierExp at 660.28; stackHeight = 32
                     sw $t0,($sp)#**"" # IdentifierExp at 660.28; stackHeight = 36
                    # EXIT NODE # IdentifierExp at 660.28; stackHeight = 36
                    # ENTER NODE # IdentifierExp at 660.36; stackHeight = 36
                     lw $t0,40($sp) # local: stackHt=36,var-offset=4 # IdentifierExp at 660.36; stackHeight = 36
                     subu $sp,$sp,4 # IdentifierExp at 660.36; stackHeight = 36
                     sw $t0,($sp)#**"" # IdentifierExp at 660.36; stackHeight = 40
                    # EXIT NODE # IdentifierExp at 660.36; stackHeight = 40
                    # ENTER NODE # True at 660.39; stackHeight = 40
                     subu $sp,$sp,4 # True at 660.39; stackHeight = 40
                     li $t0,1 # True at 660.39; stackHeight = 44
                     sw $t0,($sp)#**"" # True at 660.39; stackHeight = 44
                    # EXIT NODE # True at 660.39; stackHeight = 44
                   lw $t0,12($sp) # Call at 660.15; stackHeight = 44
                   beq $t0,$zero,nullPtrException # Call at 660.15; stackHeight = 44
                   lw $t0,-12($t0) # Call at 660.15; stackHeight = 44
                   lw $t0,92($t0) # Call at 660.15; stackHeight = 44
                   jalr $t0 # primitiveAdd # Call at 660.15; stackHeight = 44
                  # EXIT NODE # Call at 660.15; stackHeight = 32
                 lw $t0,($sp) # InstVarAccess at 660.44; stackHeight = 32
                 beq $t0,$zero,nullPtrException # InstVarAccess at 660.44; stackHeight = 32
                 lw $t0,0($t0) # InstVarAccess at 660.44; stackHeight = 32
                 sw $t0,($sp)#**"" # InstVarAccess at 660.44; stackHeight = 32
                # EXIT NODE # InstVarAccess at 660.44; stackHeight = 32
               lw $t0,($sp) # Assign at 660.13; stackHeight = 32
               sw $t0,12($sp) # Assign at 660.13; stackHeight = 32
               addu $sp,$sp,4 # Assign at 660.13; stackHeight = 32
              # EXIT NODE # Assign at 660.13; stackHeight = 28
              # ENTER NODE # Assign at 661.10; stackHeight = 28
                # ENTER NODE # InstVarAccess at 661.39; stackHeight = 28
                  # ENTER NODE # Call at 661.12; stackHeight = 28
                    # ENTER NODE # This at 661.12; stackHeight = 28
                     subu $sp,$sp,4 # This at 661.12; stackHeight = 28
                     sw $s2,($sp)#**"" # This at 661.12; stackHeight = 32
                    # EXIT NODE # This at 661.12; stackHeight = 32
                    # ENTER NODE # IdentifierExp at 661.25; stackHeight = 32
                     lw $t0,24($sp) # local: stackHt=32,var-offset=-8 # IdentifierExp at 661.25; stackHeight = 32
                     subu $sp,$sp,4 # IdentifierExp at 661.25; stackHeight = 32
                     sw $t0,($sp)#**"" # IdentifierExp at 661.25; stackHeight = 36
                    # EXIT NODE # IdentifierExp at 661.25; stackHeight = 36
                    # ENTER NODE # StringLiteral at 661.30; stackHeight = 36
                     subu $sp,$sp,4 # StringLiteral at 661.30; stackHeight = 36
                     la $t0,strLit_3236 # StringLiteral at 661.30; stackHeight = 40
                     sw $t0,($sp)#**"strLit:1" # StringLiteral at 661.30; stackHeight = 40
                    # EXIT NODE # StringLiteral at 661.30; stackHeight = 40
                    # ENTER NODE # True at 661.34; stackHeight = 40
                     subu $sp,$sp,4 # True at 661.34; stackHeight = 40
                     li $t0,1 # True at 661.34; stackHeight = 44
                     sw $t0,($sp)#**"" # True at 661.34; stackHeight = 44
                    # EXIT NODE # True at 661.34; stackHeight = 44
                   lw $t0,12($sp) # Call at 661.12; stackHeight = 44
                   beq $t0,$zero,nullPtrException # Call at 661.12; stackHeight = 44
                   lw $t0,-12($t0) # Call at 661.12; stackHeight = 44
                   lw $t0,92($t0) # Call at 661.12; stackHeight = 44
                   jalr $t0 # primitiveAdd # Call at 661.12; stackHeight = 44
                  # EXIT NODE # Call at 661.12; stackHeight = 32
                 lw $t0,($sp) # InstVarAccess at 661.39; stackHeight = 32
                 beq $t0,$zero,nullPtrException # InstVarAccess at 661.39; stackHeight = 32
                 lw $t0,0($t0) # InstVarAccess at 661.39; stackHeight = 32
                 sw $t0,($sp)#**"" # InstVarAccess at 661.39; stackHeight = 32
                # EXIT NODE # InstVarAccess at 661.39; stackHeight = 32
               lw $t0,($sp) # Assign at 661.10; stackHeight = 32
               sw $t0,24($sp) # Assign at 661.10; stackHeight = 32
               addu $sp,$sp,4 # Assign at 661.10; stackHeight = 32
              # EXIT NODE # Assign at 661.10; stackHeight = 28
            # EXIT NODE # Block at 659.7; stackHeight = 28
            # ENTER NODE # If at 665.6; stackHeight = 28
              # ENTER NODE # Not at 665.13; stackHeight = 28
                # ENTER NODE # GreaterThan at 665.43; stackHeight = 28
                  # ENTER NODE # Call at 665.13; stackHeight = 28
                    # ENTER NODE # This at 665.13; stackHeight = 28
                     subu $sp,$sp,4 # This at 665.13; stackHeight = 28
                     sw $s2,($sp)#**"" # This at 665.13; stackHeight = 32
                    # EXIT NODE # This at 665.13; stackHeight = 32
                    # ENTER NODE # IdentifierExp at 665.30; stackHeight = 32
                     lw $t0,12($sp) # local: stackHt=32,var-offset=-20 # IdentifierExp at 665.30; stackHeight = 32
                     subu $sp,$sp,4 # IdentifierExp at 665.30; stackHeight = 32
                     sw $t0,($sp)#**"" # IdentifierExp at 665.30; stackHeight = 36
                    # EXIT NODE # IdentifierExp at 665.30; stackHeight = 36
                    # ENTER NODE # IdentifierExp at 665.39; stackHeight = 36
                     lw $t0,44($sp) # local: stackHt=36,var-offset=8 # IdentifierExp at 665.39; stackHeight = 36
                     subu $sp,$sp,4 # IdentifierExp at 665.39; stackHeight = 36
                     sw $t0,($sp)#**"" # IdentifierExp at 665.39; stackHeight = 40
                    # EXIT NODE # IdentifierExp at 665.39; stackHeight = 40
                   lw $t0,8($sp) # Call at 665.13; stackHeight = 40
                   beq $t0,$zero,nullPtrException # Call at 665.13; stackHeight = 40
                   lw $t0,-12($t0) # Call at 665.13; stackHeight = 40
                   lw $t0,88($t0) # Call at 665.13; stackHeight = 40
                   jalr $t0 # primitiveCompare # Call at 665.13; stackHeight = 40
                  # EXIT NODE # Call at 665.13; stackHeight = 36
                  # ENTER NODE # IntegerLiteral at 665.45; stackHeight = 36
                   subu $sp,$sp,8 # IntegerLiteral at 665.45; stackHeight = 36
                   sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 665.45; stackHeight = 44
                   li $t0,0 # IntegerLiteral at 665.45; stackHeight = 44
                   sw $t0,($sp) # IntegerLiteral at 665.45; stackHeight = 44
                  # EXIT NODE # IntegerLiteral at 665.45; stackHeight = 44
                 lw $t0,($sp) # GreaterThan at 665.43; stackHeight = 44
                 lw $t1,8($sp) # GreaterThan at 665.43; stackHeight = 44
                 sgt $t0,$t1,$t0 # GreaterThan at 665.43; stackHeight = 44
                 addu $sp,$sp,12 # GreaterThan at 665.43; stackHeight = 44
                 sw $t0,($sp)#**"" # GreaterThan at 665.43; stackHeight = 32
                # EXIT NODE # GreaterThan at 665.43; stackHeight = 32
               lw $t0,($sp) # Not at 665.13; stackHeight = 32
               xor $t0,$t0,1 # Not at 665.13; stackHeight = 32
               sw $t0,($sp)#**"" # Not at 665.13; stackHeight = 32
              # EXIT NODE # Not at 665.13; stackHeight = 32
             lw $t0,($sp) # If at 665.6; stackHeight = 32
             addu $sp,$sp,4 # If at 665.6; stackHeight = 32
             beq $t0,$zero,if_else_3252 # If at 665.6; stackHeight = 28
              # ENTER NODE # Break at 665.13; stackHeight = 28
              j break_target_3255 # Break at 665.13; stackHeight = 28
              # EXIT NODE # Break at 665.13; stackHeight = 28
            j if_done_3252 # If at 665.6; stackHeight = 28
            if_else_3252: # If at 665.6; stackHeight = 28
              # ENTER NODE # Block at 665.6; stackHeight = 28
              # EXIT NODE # Block at 665.6; stackHeight = 28
            if_done_3252: # If at 665.6; stackHeight = 28
            # EXIT NODE # If at 665.6; stackHeight = 28
          # EXIT NODE # Block at 659.4; stackHeight = 28
        while_enter_3255: # While at 659.4; stackHeight = 28
          # ENTER NODE # True at 659.4; stackHeight = 28
           subu $sp,$sp,4 # True at 659.4; stackHeight = 28
           li $t0,1 # True at 659.4; stackHeight = 32
           sw $t0,($sp)#**"" # True at 659.4; stackHeight = 32
          # EXIT NODE # True at 659.4; stackHeight = 32
         lw $t0,($sp) # While at 659.4; stackHeight = 32
         addu $sp,$sp,4 # While at 659.4; stackHeight = 32
        bne $t0,$zero,while_top_3255 # While at 659.4; stackHeight = 28
        break_target_3255: # While at 659.4; stackHeight = 28
        # EXIT NODE # While at 659.4; stackHeight = 28
      # EXIT NODE # Block at 658.26; stackHeight = 28
    j if_done_3296 # If at 658.3; stackHeight = 28
    if_else_3296: # If at 658.3; stackHeight = 28
      # ENTER NODE # If at 667.8; stackHeight = 28
        # ENTER NODE # LessThan at 667.26; stackHeight = 28
          # ENTER NODE # IdentifierExp at 667.12; stackHeight = 28
           lw $t0,0($sp) # local: stackHt=28,var-offset=-28 # IdentifierExp at 667.12; stackHeight = 28
           subu $sp,$sp,8 # IdentifierExp at 667.12; stackHeight = 28
           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 667.12; stackHeight = 36
           sw $t0,($sp)#**"" # IdentifierExp at 667.12; stackHeight = 36
          # EXIT NODE # IdentifierExp at 667.12; stackHeight = 36
          # ENTER NODE # IntegerLiteral at 667.28; stackHeight = 36
           subu $sp,$sp,8 # IntegerLiteral at 667.28; stackHeight = 36
           sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 667.28; stackHeight = 44
           li $t0,0 # IntegerLiteral at 667.28; stackHeight = 44
           sw $t0,($sp) # IntegerLiteral at 667.28; stackHeight = 44
          # EXIT NODE # IntegerLiteral at 667.28; stackHeight = 44
         lw $t0,($sp) # LessThan at 667.26; stackHeight = 44
         lw $t1,8($sp) # LessThan at 667.26; stackHeight = 44
         slt $t0,$t1,$t0 # LessThan at 667.26; stackHeight = 44
         addu $sp,$sp,12 # LessThan at 667.26; stackHeight = 44
         sw $t0,($sp)#**"" # LessThan at 667.26; stackHeight = 32
        # EXIT NODE # LessThan at 667.26; stackHeight = 32
       lw $t0,($sp) # If at 667.8; stackHeight = 32
       addu $sp,$sp,4 # If at 667.8; stackHeight = 32
       beq $t0,$zero,if_else_3295 # If at 667.8; stackHeight = 28
        # ENTER NODE # Block at 667.30; stackHeight = 28
          # ENTER NODE # Block at 668.4; stackHeight = 28
            # ENTER NODE # Block at 668.9; stackHeight = 28
            # EXIT NODE # Block at 668.9; stackHeight = 28
            # ENTER NODE # While at 668.4; stackHeight = 28
            j while_enter_3291 # While at 668.4; stackHeight = 28
            while_top_3291: # While at 668.4; stackHeight = 28
              # ENTER NODE # Block at 668.4; stackHeight = 28
                # ENTER NODE # Block at 668.13; stackHeight = 28
                  # ENTER NODE # Assign at 669.13; stackHeight = 28
                    # ENTER NODE # InstVarAccess at 669.45; stackHeight = 28
                      # ENTER NODE # Call at 669.15; stackHeight = 28
                        # ENTER NODE # This at 669.15; stackHeight = 28
                         subu $sp,$sp,4 # This at 669.15; stackHeight = 28
                         sw $s2,($sp)#**"" # This at 669.15; stackHeight = 32
                        # EXIT NODE # This at 669.15; stackHeight = 32
                        # ENTER NODE # IdentifierExp at 669.28; stackHeight = 32
                         lw $t0,12($sp) # local: stackHt=32,var-offset=-20 # IdentifierExp at 669.28; stackHeight = 32
                         subu $sp,$sp,4 # IdentifierExp at 669.28; stackHeight = 32
                         sw $t0,($sp)#**"" # IdentifierExp at 669.28; stackHeight = 36
                        # EXIT NODE # IdentifierExp at 669.28; stackHeight = 36
                        # ENTER NODE # IdentifierExp at 669.36; stackHeight = 36
                         lw $t0,40($sp) # local: stackHt=36,var-offset=4 # IdentifierExp at 669.36; stackHeight = 36
                         subu $sp,$sp,4 # IdentifierExp at 669.36; stackHeight = 36
                         sw $t0,($sp)#**"" # IdentifierExp at 669.36; stackHeight = 40
                        # EXIT NODE # IdentifierExp at 669.36; stackHeight = 40
                        # ENTER NODE # False at 669.39; stackHeight = 40
                         subu $sp,$sp,4 # False at 669.39; stackHeight = 40
                         sw $zero,($sp)#**"" # False at 669.39; stackHeight = 44
                        # EXIT NODE # False at 669.39; stackHeight = 44
                       lw $t0,12($sp) # Call at 669.15; stackHeight = 44
                       beq $t0,$zero,nullPtrException # Call at 669.15; stackHeight = 44
                       lw $t0,-12($t0) # Call at 669.15; stackHeight = 44
                       lw $t0,92($t0) # Call at 669.15; stackHeight = 44
                       jalr $t0 # primitiveAdd # Call at 669.15; stackHeight = 44
                      # EXIT NODE # Call at 669.15; stackHeight = 32
                     lw $t0,($sp) # InstVarAccess at 669.45; stackHeight = 32
                     beq $t0,$zero,nullPtrException # InstVarAccess at 669.45; stackHeight = 32
                     lw $t0,0($t0) # InstVarAccess at 669.45; stackHeight = 32
                     sw $t0,($sp)#**"" # InstVarAccess at 669.45; stackHeight = 32
                    # EXIT NODE # InstVarAccess at 669.45; stackHeight = 32
                   lw $t0,($sp) # Assign at 669.13; stackHeight = 32
                   sw $t0,12($sp) # Assign at 669.13; stackHeight = 32
                   addu $sp,$sp,4 # Assign at 669.13; stackHeight = 32
                  # EXIT NODE # Assign at 669.13; stackHeight = 28
                  # ENTER NODE # If at 670.5; stackHeight = 28
                    # ENTER NODE # GreaterThan at 670.39; stackHeight = 28
                      # ENTER NODE # Call at 670.9; stackHeight = 28
                        # ENTER NODE # This at 670.9; stackHeight = 28
                         subu $sp,$sp,4 # This at 670.9; stackHeight = 28
                         sw $s2,($sp)#**"" # This at 670.9; stackHeight = 32
                        # EXIT NODE # This at 670.9; stackHeight = 32
                        # ENTER NODE # IdentifierExp at 670.26; stackHeight = 32
                         lw $t0,12($sp) # local: stackHt=32,var-offset=-20 # IdentifierExp at 670.26; stackHeight = 32
                         subu $sp,$sp,4 # IdentifierExp at 670.26; stackHeight = 32
                         sw $t0,($sp)#**"" # IdentifierExp at 670.26; stackHeight = 36
                        # EXIT NODE # IdentifierExp at 670.26; stackHeight = 36
                        # ENTER NODE # IdentifierExp at 670.35; stackHeight = 36
                         lw $t0,44($sp) # local: stackHt=36,var-offset=8 # IdentifierExp at 670.35; stackHeight = 36
                         subu $sp,$sp,4 # IdentifierExp at 670.35; stackHeight = 36
                         sw $t0,($sp)#**"" # IdentifierExp at 670.35; stackHeight = 40
                        # EXIT NODE # IdentifierExp at 670.35; stackHeight = 40
                       lw $t0,8($sp) # Call at 670.9; stackHeight = 40
                       beq $t0,$zero,nullPtrException # Call at 670.9; stackHeight = 40
                       lw $t0,-12($t0) # Call at 670.9; stackHeight = 40
                       lw $t0,88($t0) # Call at 670.9; stackHeight = 40
                       jalr $t0 # primitiveCompare # Call at 670.9; stackHeight = 40
                      # EXIT NODE # Call at 670.9; stackHeight = 36
                      # ENTER NODE # IntegerLiteral at 670.41; stackHeight = 36
                       subu $sp,$sp,8 # IntegerLiteral at 670.41; stackHeight = 36
                       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 670.41; stackHeight = 44
                       li $t0,0 # IntegerLiteral at 670.41; stackHeight = 44
                       sw $t0,($sp) # IntegerLiteral at 670.41; stackHeight = 44
                      # EXIT NODE # IntegerLiteral at 670.41; stackHeight = 44
                     lw $t0,($sp) # GreaterThan at 670.39; stackHeight = 44
                     lw $t1,8($sp) # GreaterThan at 670.39; stackHeight = 44
                     sgt $t0,$t1,$t0 # GreaterThan at 670.39; stackHeight = 44
                     addu $sp,$sp,12 # GreaterThan at 670.39; stackHeight = 44
                     sw $t0,($sp)#**"" # GreaterThan at 670.39; stackHeight = 32
                    # EXIT NODE # GreaterThan at 670.39; stackHeight = 32
                   lw $t0,($sp) # If at 670.5; stackHeight = 32
                   addu $sp,$sp,4 # If at 670.5; stackHeight = 32
                   beq $t0,$zero,if_else_3277 # If at 670.5; stackHeight = 28
                    # ENTER NODE # Block at 670.44; stackHeight = 28
                      # ENTER NODE # Break at 671.6; stackHeight = 28
                      j break_target_3291 # Break at 671.6; stackHeight = 28
                      # EXIT NODE # Break at 671.6; stackHeight = 28
                    # EXIT NODE # Block at 670.44; stackHeight = 28
                  j if_done_3277 # If at 670.5; stackHeight = 28
                  if_else_3277: # If at 670.5; stackHeight = 28
                    # ENTER NODE # Block at 673.5; stackHeight = 28
                    # EXIT NODE # Block at 673.5; stackHeight = 28
                  if_done_3277: # If at 670.5; stackHeight = 28
                  # EXIT NODE # If at 670.5; stackHeight = 28
                  # ENTER NODE # Assign at 673.10; stackHeight = 28
                    # ENTER NODE # InstVarAccess at 673.40; stackHeight = 28
                      # ENTER NODE # Call at 673.12; stackHeight = 28
                        # ENTER NODE # This at 673.12; stackHeight = 28
                         subu $sp,$sp,4 # This at 673.12; stackHeight = 28
                         sw $s2,($sp)#**"" # This at 673.12; stackHeight = 32
                        # EXIT NODE # This at 673.12; stackHeight = 32
                        # ENTER NODE # IdentifierExp at 673.25; stackHeight = 32
                         lw $t0,24($sp) # local: stackHt=32,var-offset=-8 # IdentifierExp at 673.25; stackHeight = 32
                         subu $sp,$sp,4 # IdentifierExp at 673.25; stackHeight = 32
                         sw $t0,($sp)#**"" # IdentifierExp at 673.25; stackHeight = 36
                        # EXIT NODE # IdentifierExp at 673.25; stackHeight = 36
                        # ENTER NODE # StringLiteral at 673.30; stackHeight = 36
                         subu $sp,$sp,4 # StringLiteral at 673.30; stackHeight = 36
                         la $t0,strLit_3236 # StringLiteral at 673.30; stackHeight = 40
                         sw $t0,($sp)#**"strLit:1" # StringLiteral at 673.30; stackHeight = 40
                        # EXIT NODE # StringLiteral at 673.30; stackHeight = 40
                        # ENTER NODE # False at 673.34; stackHeight = 40
                         subu $sp,$sp,4 # False at 673.34; stackHeight = 40
                         sw $zero,($sp)#**"" # False at 673.34; stackHeight = 44
                        # EXIT NODE # False at 673.34; stackHeight = 44
                       lw $t0,12($sp) # Call at 673.12; stackHeight = 44
                       beq $t0,$zero,nullPtrException # Call at 673.12; stackHeight = 44
                       lw $t0,-12($t0) # Call at 673.12; stackHeight = 44
                       lw $t0,92($t0) # Call at 673.12; stackHeight = 44
                       jalr $t0 # primitiveAdd # Call at 673.12; stackHeight = 44
                      # EXIT NODE # Call at 673.12; stackHeight = 32
                     lw $t0,($sp) # InstVarAccess at 673.40; stackHeight = 32
                     beq $t0,$zero,nullPtrException # InstVarAccess at 673.40; stackHeight = 32
                     lw $t0,0($t0) # InstVarAccess at 673.40; stackHeight = 32
                     sw $t0,($sp)#**"" # InstVarAccess at 673.40; stackHeight = 32
                    # EXIT NODE # InstVarAccess at 673.40; stackHeight = 32
                   lw $t0,($sp) # Assign at 673.10; stackHeight = 32
                   sw $t0,24($sp) # Assign at 673.10; stackHeight = 32
                   addu $sp,$sp,4 # Assign at 673.10; stackHeight = 32
                  # EXIT NODE # Assign at 673.10; stackHeight = 28
                # EXIT NODE # Block at 668.13; stackHeight = 28
                # ENTER NODE # Block at 668.11; stackHeight = 28
                # EXIT NODE # Block at 668.11; stackHeight = 28
              # EXIT NODE # Block at 668.4; stackHeight = 28
            while_enter_3291: # While at 668.4; stackHeight = 28
              # ENTER NODE # True at 668.10; stackHeight = 28
               subu $sp,$sp,4 # True at 668.10; stackHeight = 28
               li $t0,1 # True at 668.10; stackHeight = 32
               sw $t0,($sp)#**"" # True at 668.10; stackHeight = 32
              # EXIT NODE # True at 668.10; stackHeight = 32
             lw $t0,($sp) # While at 668.4; stackHeight = 32
             addu $sp,$sp,4 # While at 668.4; stackHeight = 32
            bne $t0,$zero,while_top_3291 # While at 668.4; stackHeight = 28
            break_target_3291: # While at 668.4; stackHeight = 28
            # EXIT NODE # While at 668.4; stackHeight = 28
          # EXIT NODE # Block at 668.4; stackHeight = 28
        # EXIT NODE # Block at 667.30; stackHeight = 28
      j if_done_3295 # If at 667.8; stackHeight = 28
      if_else_3295: # If at 667.8; stackHeight = 28
        # ENTER NODE # Block at 676.3; stackHeight = 28
        # EXIT NODE # Block at 676.3; stackHeight = 28
      if_done_3295: # If at 667.8; stackHeight = 28
      # EXIT NODE # If at 667.8; stackHeight = 28
    if_done_3296: # If at 658.3; stackHeight = 28
    # EXIT NODE # If at 658.3; stackHeight = 28
    # ENTER NODE # IdentifierExp at 676.10; stackHeight = 28
     lw $t0,20($sp) # local: stackHt=28,var-offset=-8 # IdentifierExp at 676.10; stackHeight = 28
     subu $sp,$sp,4 # IdentifierExp at 676.10; stackHeight = 28
     sw $t0,($sp)#**"" # IdentifierExp at 676.10; stackHeight = 32
    # EXIT NODE # IdentifierExp at 676.10; stackHeight = 32
   lw $ra,44($sp) # MethodDeclNonVoid at 646.16; stackHeight = 32
   lw $s2,32($sp) # MethodDeclNonVoid at 646.16; stackHeight = 32
   lw $t0,($sp) # MethodDeclNonVoid at 646.16; stackHeight = 32
   sw $t0,44($sp)#**"(return-val)" # MethodDeclNonVoid at 646.16; stackHeight = 32
   addu $sp,$sp,44 # MethodDeclNonVoid at 646.16; stackHeight = 32
  jr $ra # MethodDeclNonVoid at 646.16; stackHeight = -12
  # EXIT NODE # MethodDeclNonVoid at 646.16; stackHeight = -12
  # ENTER NODE # MethodDeclNonVoid at 679.16; stackHeight = -12
  .globl fcn_3347_div2 # MethodDeclNonVoid at 679.16; stackHeight = -12
  fcn_3347_div2: # MethodDeclNonVoid at 679.16; stackHeight = -12
   subu $sp,$sp,4 # MethodDeclNonVoid at 679.16; stackHeight = -12
   sw $s2,($sp) #**"old this-ptr" # MethodDeclNonVoid at 679.16; stackHeight = -12
   lw $s2,8($sp) #**"this-ptr" # MethodDeclNonVoid at 679.16; stackHeight = -12
   sw $ra,8($sp) #**"RA:div2" # MethodDeclNonVoid at 679.16; stackHeight = -12
    # ENTER NODE # LocalVarDecl at 680.10; stackHeight = 0
      # ENTER NODE # InstVarAccess at 680.42; stackHeight = 0
        # ENTER NODE # Call at 680.19; stackHeight = 0
          # ENTER NODE # This at 680.19; stackHeight = 0
           subu $sp,$sp,4 # This at 680.19; stackHeight = 0
           sw $s2,($sp)#**"" # This at 680.19; stackHeight = 4
          # EXIT NODE # This at 680.19; stackHeight = 4
          # ENTER NODE # IdentifierExp at 680.32; stackHeight = 4
           lw $t0,8($sp) # local: stackHt=4,var-offset=4 # IdentifierExp at 680.32; stackHeight = 4
           subu $sp,$sp,4 # IdentifierExp at 680.32; stackHeight = 4
           sw $t0,($sp)#**"" # IdentifierExp at 680.32; stackHeight = 8
          # EXIT NODE # IdentifierExp at 680.32; stackHeight = 8
          # ENTER NODE # IdentifierExp at 680.34; stackHeight = 8
           lw $t0,12($sp) # local: stackHt=8,var-offset=4 # IdentifierExp at 680.34; stackHeight = 8
           subu $sp,$sp,4 # IdentifierExp at 680.34; stackHeight = 8
           sw $t0,($sp)#**"" # IdentifierExp at 680.34; stackHeight = 12
          # EXIT NODE # IdentifierExp at 680.34; stackHeight = 12
          # ENTER NODE # False at 680.36; stackHeight = 12
           subu $sp,$sp,4 # False at 680.36; stackHeight = 12
           sw $zero,($sp)#**"" # False at 680.36; stackHeight = 16
          # EXIT NODE # False at 680.36; stackHeight = 16
         lw $t0,12($sp) # Call at 680.19; stackHeight = 16
         beq $t0,$zero,nullPtrException # Call at 680.19; stackHeight = 16
         lw $t0,-12($t0) # Call at 680.19; stackHeight = 16
         lw $t0,92($t0) # Call at 680.19; stackHeight = 16
         jalr $t0 # primitiveAdd # Call at 680.19; stackHeight = 16
        # EXIT NODE # Call at 680.19; stackHeight = 4
       lw $t0,($sp) # InstVarAccess at 680.42; stackHeight = 4
       beq $t0,$zero,nullPtrException # InstVarAccess at 680.42; stackHeight = 4
       lw $t0,0($t0) # InstVarAccess at 680.42; stackHeight = 4
       sw $t0,($sp)#**"" # InstVarAccess at 680.42; stackHeight = 4
      # EXIT NODE # InstVarAccess at 680.42; stackHeight = 4
    # EXIT NODE # LocalVarDecl at 680.10; stackHeight = 4
    # ENTER NODE # Assign at 681.10; stackHeight = 4
      # ENTER NODE # InstVarAccess at 681.45; stackHeight = 4
        # ENTER NODE # Call at 681.12; stackHeight = 4
          # ENTER NODE # This at 681.12; stackHeight = 4
           subu $sp,$sp,4 # This at 681.12; stackHeight = 4
           sw $s2,($sp)#**"" # This at 681.12; stackHeight = 8
          # EXIT NODE # This at 681.12; stackHeight = 8
          # ENTER NODE # IdentifierExp at 681.25; stackHeight = 8
           lw $t0,4($sp) # local: stackHt=8,var-offset=-4 # IdentifierExp at 681.25; stackHeight = 8
           subu $sp,$sp,4 # IdentifierExp at 681.25; stackHeight = 8
           sw $t0,($sp)#**"" # IdentifierExp at 681.25; stackHeight = 12
          # EXIT NODE # IdentifierExp at 681.25; stackHeight = 12
          # ENTER NODE # IdentifierExp at 681.32; stackHeight = 12
           lw $t0,8($sp) # local: stackHt=12,var-offset=-4 # IdentifierExp at 681.32; stackHeight = 12
           subu $sp,$sp,4 # IdentifierExp at 681.32; stackHeight = 12
           sw $t0,($sp)#**"" # IdentifierExp at 681.32; stackHeight = 16
          # EXIT NODE # IdentifierExp at 681.32; stackHeight = 16
          # ENTER NODE # False at 681.39; stackHeight = 16
           subu $sp,$sp,4 # False at 681.39; stackHeight = 16
           sw $zero,($sp)#**"" # False at 681.39; stackHeight = 20
          # EXIT NODE # False at 681.39; stackHeight = 20
         lw $t0,12($sp) # Call at 681.12; stackHeight = 20
         beq $t0,$zero,nullPtrException # Call at 681.12; stackHeight = 20
         lw $t0,-12($t0) # Call at 681.12; stackHeight = 20
         lw $t0,92($t0) # Call at 681.12; stackHeight = 20
         jalr $t0 # primitiveAdd # Call at 681.12; stackHeight = 20
        # EXIT NODE # Call at 681.12; stackHeight = 8
       lw $t0,($sp) # InstVarAccess at 681.45; stackHeight = 8
       beq $t0,$zero,nullPtrException # InstVarAccess at 681.45; stackHeight = 8
       lw $t0,0($t0) # InstVarAccess at 681.45; stackHeight = 8
       sw $t0,($sp)#**"" # InstVarAccess at 681.45; stackHeight = 8
      # EXIT NODE # InstVarAccess at 681.45; stackHeight = 8
     lw $t0,($sp) # Assign at 681.10; stackHeight = 8
     sw $t0,4($sp) # Assign at 681.10; stackHeight = 8
     addu $sp,$sp,4 # Assign at 681.10; stackHeight = 8
    # EXIT NODE # Assign at 681.10; stackHeight = 4
    # ENTER NODE # Assign at 682.10; stackHeight = 4
      # ENTER NODE # InstVarAccess at 682.40; stackHeight = 4
        # ENTER NODE # Call at 682.12; stackHeight = 4
          # ENTER NODE # This at 682.12; stackHeight = 4
           subu $sp,$sp,4 # This at 682.12; stackHeight = 4
           sw $s2,($sp)#**"" # This at 682.12; stackHeight = 8
          # EXIT NODE # This at 682.12; stackHeight = 8
          # ENTER NODE # IdentifierExp at 682.25; stackHeight = 8
           lw $t0,4($sp) # local: stackHt=8,var-offset=-4 # IdentifierExp at 682.25; stackHeight = 8
           subu $sp,$sp,4 # IdentifierExp at 682.25; stackHeight = 8
           sw $t0,($sp)#**"" # IdentifierExp at 682.25; stackHeight = 12
          # EXIT NODE # IdentifierExp at 682.25; stackHeight = 12
          # ENTER NODE # IdentifierExp at 682.32; stackHeight = 12
           lw $t0,16($sp) # local: stackHt=12,var-offset=4 # IdentifierExp at 682.32; stackHeight = 12
           subu $sp,$sp,4 # IdentifierExp at 682.32; stackHeight = 12
           sw $t0,($sp)#**"" # IdentifierExp at 682.32; stackHeight = 16
          # EXIT NODE # IdentifierExp at 682.32; stackHeight = 16
          # ENTER NODE # False at 682.34; stackHeight = 16
           subu $sp,$sp,4 # False at 682.34; stackHeight = 16
           sw $zero,($sp)#**"" # False at 682.34; stackHeight = 20
          # EXIT NODE # False at 682.34; stackHeight = 20
         lw $t0,12($sp) # Call at 682.12; stackHeight = 20
         beq $t0,$zero,nullPtrException # Call at 682.12; stackHeight = 20
         lw $t0,-12($t0) # Call at 682.12; stackHeight = 20
         lw $t0,92($t0) # Call at 682.12; stackHeight = 20
         jalr $t0 # primitiveAdd # Call at 682.12; stackHeight = 20
        # EXIT NODE # Call at 682.12; stackHeight = 8
       lw $t0,($sp) # InstVarAccess at 682.40; stackHeight = 8
       beq $t0,$zero,nullPtrException # InstVarAccess at 682.40; stackHeight = 8
       lw $t0,0($t0) # InstVarAccess at 682.40; stackHeight = 8
       sw $t0,($sp)#**"" # InstVarAccess at 682.40; stackHeight = 8
      # EXIT NODE # InstVarAccess at 682.40; stackHeight = 8
     lw $t0,($sp) # Assign at 682.10; stackHeight = 8
     sw $t0,4($sp) # Assign at 682.10; stackHeight = 8
     addu $sp,$sp,4 # Assign at 682.10; stackHeight = 8
    # EXIT NODE # Assign at 682.10; stackHeight = 4
    # ENTER NODE # Assign at 683.10; stackHeight = 4
      # ENTER NODE # Call at 683.19; stackHeight = 4
        # ENTER NODE # IdentifierExp at 683.12; stackHeight = 4
         lw $t0,0($sp) # local: stackHt=4,var-offset=-4 # IdentifierExp at 683.12; stackHeight = 4
         subu $sp,$sp,4 # IdentifierExp at 683.12; stackHeight = 4
         sw $t0,($sp)#**"" # IdentifierExp at 683.12; stackHeight = 8
        # EXIT NODE # IdentifierExp at 683.12; stackHeight = 8
        # ENTER NODE # IntegerLiteral at 683.29; stackHeight = 8
         subu $sp,$sp,8 # IntegerLiteral at 683.29; stackHeight = 8
         sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 683.29; stackHeight = 16
         li $t0,0 # IntegerLiteral at 683.29; stackHeight = 16
         sw $t0,($sp) # IntegerLiteral at 683.29; stackHeight = 16
        # EXIT NODE # IntegerLiteral at 683.29; stackHeight = 16
        # ENTER NODE # Minus at 683.46; stackHeight = 16
          # ENTER NODE # Call at 683.38; stackHeight = 16
            # ENTER NODE # IdentifierExp at 683.31; stackHeight = 16
             lw $t0,12($sp) # local: stackHt=16,var-offset=-4 # IdentifierExp at 683.31; stackHeight = 16
             subu $sp,$sp,4 # IdentifierExp at 683.31; stackHeight = 16
             sw $t0,($sp)#**"" # IdentifierExp at 683.31; stackHeight = 20
            # EXIT NODE # IdentifierExp at 683.31; stackHeight = 20
           lw $t0,0($sp) # Call at 683.38; stackHeight = 20
           beq $t0,$zero,nullPtrException # Call at 683.38; stackHeight = 20
           lw $t0,-12($t0) # Call at 683.38; stackHeight = 20
           lw $t0,20($t0) # Call at 683.38; stackHeight = 20
           jalr $t0 # length # Call at 683.38; stackHeight = 20
          # EXIT NODE # Call at 683.38; stackHeight = 24
          # ENTER NODE # IntegerLiteral at 683.47; stackHeight = 24
           subu $sp,$sp,8 # IntegerLiteral at 683.47; stackHeight = 24
           sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 683.47; stackHeight = 32
           li $t0,1 # IntegerLiteral at 683.47; stackHeight = 32
           sw $t0,($sp) # IntegerLiteral at 683.47; stackHeight = 32
          # EXIT NODE # IntegerLiteral at 683.47; stackHeight = 32
         lw $t0,($sp) # Minus at 683.46; stackHeight = 32
         lw $t1,8($sp) # Minus at 683.46; stackHeight = 32
         subu $t0,$t1,$t0 # Minus at 683.46; stackHeight = 32
         addu $sp,$sp,8 # Minus at 683.46; stackHeight = 32
         sw $t0,($sp)#**"" # Minus at 683.46; stackHeight = 24
        # EXIT NODE # Minus at 683.46; stackHeight = 24
       lw $t0,16($sp) # Call at 683.19; stackHeight = 24
       beq $t0,$zero,nullPtrException # Call at 683.19; stackHeight = 24
       lw $t0,-12($t0) # Call at 683.19; stackHeight = 24
       lw $t0,16($t0) # Call at 683.19; stackHeight = 24
       jalr $t0 # substring # Call at 683.19; stackHeight = 24
      # EXIT NODE # Call at 683.19; stackHeight = 8
     lw $t0,($sp) # Assign at 683.10; stackHeight = 8
     sw $t0,4($sp) # Assign at 683.10; stackHeight = 8
     addu $sp,$sp,4 # Assign at 683.10; stackHeight = 8
    # EXIT NODE # Assign at 683.10; stackHeight = 4
    # ENTER NODE # If at 684.3; stackHeight = 4
      # ENTER NODE # Equals at 684.23; stackHeight = 4
        # ENTER NODE # Call at 684.14; stackHeight = 4
          # ENTER NODE # IdentifierExp at 684.7; stackHeight = 4
           lw $t0,0($sp) # local: stackHt=4,var-offset=-4 # IdentifierExp at 684.7; stackHeight = 4
           subu $sp,$sp,4 # IdentifierExp at 684.7; stackHeight = 4
           sw $t0,($sp)#**"" # IdentifierExp at 684.7; stackHeight = 8
          # EXIT NODE # IdentifierExp at 684.7; stackHeight = 8
         lw $t0,0($sp) # Call at 684.14; stackHeight = 8
         beq $t0,$zero,nullPtrException # Call at 684.14; stackHeight = 8
         lw $t0,-12($t0) # Call at 684.14; stackHeight = 8
         lw $t0,20($t0) # Call at 684.14; stackHeight = 8
         jalr $t0 # length # Call at 684.14; stackHeight = 8
        # EXIT NODE # Call at 684.14; stackHeight = 12
        # ENTER NODE # IntegerLiteral at 684.26; stackHeight = 12
         subu $sp,$sp,8 # IntegerLiteral at 684.26; stackHeight = 12
         sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 684.26; stackHeight = 20
         li $t0,0 # IntegerLiteral at 684.26; stackHeight = 20
         sw $t0,($sp) # IntegerLiteral at 684.26; stackHeight = 20
        # EXIT NODE # IntegerLiteral at 684.26; stackHeight = 20
       lw $t0,($sp) # Equals at 684.23; stackHeight = 20
       lw $t1,8($sp) # Equals at 684.23; stackHeight = 20
       seq $t0,$t0,$t1 # Equals at 684.23; stackHeight = 20
       addu $sp,$sp,12 # Equals at 684.23; stackHeight = 20
       sw $t0,($sp)#**"" # Equals at 684.23; stackHeight = 8
      # EXIT NODE # Equals at 684.23; stackHeight = 8
     lw $t0,($sp) # If at 684.3; stackHeight = 8
     addu $sp,$sp,4 # If at 684.3; stackHeight = 8
     beq $t0,$zero,if_else_3345 # If at 684.3; stackHeight = 4
      # ENTER NODE # Block at 684.29; stackHeight = 4
        # ENTER NODE # Assign at 685.11; stackHeight = 4
          # ENTER NODE # StringLiteral at 685.13; stackHeight = 4
           subu $sp,$sp,4 # StringLiteral at 685.13; stackHeight = 4
           la $t0,strLit_2646 # StringLiteral at 685.13; stackHeight = 8
           sw $t0,($sp)#**"strLit:0" # StringLiteral at 685.13; stackHeight = 8
          # EXIT NODE # StringLiteral at 685.13; stackHeight = 8
         lw $t0,($sp) # Assign at 685.11; stackHeight = 8
         sw $t0,4($sp) # Assign at 685.11; stackHeight = 8
         addu $sp,$sp,4 # Assign at 685.11; stackHeight = 8
        # EXIT NODE # Assign at 685.11; stackHeight = 4
      # EXIT NODE # Block at 684.29; stackHeight = 4
    j if_done_3345 # If at 684.3; stackHeight = 4
    if_else_3345: # If at 684.3; stackHeight = 4
      # ENTER NODE # Block at 687.3; stackHeight = 4
      # EXIT NODE # Block at 687.3; stackHeight = 4
    if_done_3345: # If at 684.3; stackHeight = 4
    # EXIT NODE # If at 684.3; stackHeight = 4
    # ENTER NODE # IdentifierExp at 687.10; stackHeight = 4
     lw $t0,0($sp) # local: stackHt=4,var-offset=-4 # IdentifierExp at 687.10; stackHeight = 4
     subu $sp,$sp,4 # IdentifierExp at 687.10; stackHeight = 4
     sw $t0,($sp)#**"" # IdentifierExp at 687.10; stackHeight = 8
    # EXIT NODE # IdentifierExp at 687.10; stackHeight = 8
   lw $ra,16($sp) # MethodDeclNonVoid at 679.16; stackHeight = 8
   lw $s2,8($sp) # MethodDeclNonVoid at 679.16; stackHeight = 8
   lw $t0,($sp) # MethodDeclNonVoid at 679.16; stackHeight = 8
   sw $t0,16($sp)#**"(return-val)" # MethodDeclNonVoid at 679.16; stackHeight = 8
   addu $sp,$sp,16 # MethodDeclNonVoid at 679.16; stackHeight = 8
  jr $ra # MethodDeclNonVoid at 679.16; stackHeight = -8
  # EXIT NODE # MethodDeclNonVoid at 679.16; stackHeight = -8
  # ENTER NODE # MethodDeclNonVoid at 692.13; stackHeight = -8
  .globl fcn_3392_primitiveCompare # MethodDeclNonVoid at 692.13; stackHeight = -8
  fcn_3392_primitiveCompare: # MethodDeclNonVoid at 692.13; stackHeight = -8
   subu $sp,$sp,4 # MethodDeclNonVoid at 692.13; stackHeight = -8
   sw $s2,($sp) #**"old this-ptr" # MethodDeclNonVoid at 692.13; stackHeight = -8
   lw $s2,12($sp) #**"this-ptr" # MethodDeclNonVoid at 692.13; stackHeight = -8
   sw $ra,12($sp) #**"RA:primitiveCompare" # MethodDeclNonVoid at 692.13; stackHeight = -8
    # ENTER NODE # LocalVarDecl at 693.7; stackHeight = 0
      # ENTER NODE # IntegerLiteral at 693.16; stackHeight = 0
       subu $sp,$sp,8 # IntegerLiteral at 693.16; stackHeight = 0
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 693.16; stackHeight = 8
       li $t0,0 # IntegerLiteral at 693.16; stackHeight = 8
       sw $t0,($sp) # IntegerLiteral at 693.16; stackHeight = 8
      # EXIT NODE # IntegerLiteral at 693.16; stackHeight = 8
    # EXIT NODE # LocalVarDecl at 693.7; stackHeight = 8
    # ENTER NODE # LocalVarDecl at 694.7; stackHeight = 8
      # ENTER NODE # Call at 694.17; stackHeight = 8
        # ENTER NODE # IdentifierExp at 694.14; stackHeight = 8
         lw $t0,16($sp) # local: stackHt=8,var-offset=8 # IdentifierExp at 694.14; stackHeight = 8
         subu $sp,$sp,4 # IdentifierExp at 694.14; stackHeight = 8
         sw $t0,($sp)#**"" # IdentifierExp at 694.14; stackHeight = 12
        # EXIT NODE # IdentifierExp at 694.14; stackHeight = 12
       lw $t0,0($sp) # Call at 694.17; stackHeight = 12
       beq $t0,$zero,nullPtrException # Call at 694.17; stackHeight = 12
       lw $t0,-12($t0) # Call at 694.17; stackHeight = 12
       lw $t0,20($t0) # Call at 694.17; stackHeight = 12
       jalr $t0 # length # Call at 694.17; stackHeight = 12
      # EXIT NODE # Call at 694.17; stackHeight = 16
    # EXIT NODE # LocalVarDecl at 694.7; stackHeight = 16
    # ENTER NODE # LocalVarDecl at 695.7; stackHeight = 16
      # ENTER NODE # Call at 695.17; stackHeight = 16
        # ENTER NODE # IdentifierExp at 695.14; stackHeight = 16
         lw $t0,20($sp) # local: stackHt=16,var-offset=4 # IdentifierExp at 695.14; stackHeight = 16
         subu $sp,$sp,4 # IdentifierExp at 695.14; stackHeight = 16
         sw $t0,($sp)#**"" # IdentifierExp at 695.14; stackHeight = 20
        # EXIT NODE # IdentifierExp at 695.14; stackHeight = 20
       lw $t0,0($sp) # Call at 695.17; stackHeight = 20
       beq $t0,$zero,nullPtrException # Call at 695.17; stackHeight = 20
       lw $t0,-12($t0) # Call at 695.17; stackHeight = 20
       lw $t0,20($t0) # Call at 695.17; stackHeight = 20
       jalr $t0 # length # Call at 695.17; stackHeight = 20
      # EXIT NODE # Call at 695.17; stackHeight = 24
    # EXIT NODE # LocalVarDecl at 695.7; stackHeight = 24
    # ENTER NODE # If at 696.3; stackHeight = 24
      # ENTER NODE # LessThan at 696.12; stackHeight = 24
        # ENTER NODE # IdentifierExp at 696.7; stackHeight = 24
         lw $t0,8($sp) # local: stackHt=24,var-offset=-16 # IdentifierExp at 696.7; stackHeight = 24
         subu $sp,$sp,8 # IdentifierExp at 696.7; stackHeight = 24
         sw $s5,4($sp)#**"GC tag" # IdentifierExp at 696.7; stackHeight = 32
         sw $t0,($sp)#**"" # IdentifierExp at 696.7; stackHeight = 32
        # EXIT NODE # IdentifierExp at 696.7; stackHeight = 32
        # ENTER NODE # IdentifierExp at 696.14; stackHeight = 32
         lw $t0,8($sp) # local: stackHt=32,var-offset=-24 # IdentifierExp at 696.14; stackHeight = 32
         subu $sp,$sp,8 # IdentifierExp at 696.14; stackHeight = 32
         sw $s5,4($sp)#**"GC tag" # IdentifierExp at 696.14; stackHeight = 40
         sw $t0,($sp)#**"" # IdentifierExp at 696.14; stackHeight = 40
        # EXIT NODE # IdentifierExp at 696.14; stackHeight = 40
       lw $t0,($sp) # LessThan at 696.12; stackHeight = 40
       lw $t1,8($sp) # LessThan at 696.12; stackHeight = 40
       slt $t0,$t1,$t0 # LessThan at 696.12; stackHeight = 40
       addu $sp,$sp,12 # LessThan at 696.12; stackHeight = 40
       sw $t0,($sp)#**"" # LessThan at 696.12; stackHeight = 28
      # EXIT NODE # LessThan at 696.12; stackHeight = 28
     lw $t0,($sp) # If at 696.3; stackHeight = 28
     addu $sp,$sp,4 # If at 696.3; stackHeight = 28
     beq $t0,$zero,if_else_3390 # If at 696.3; stackHeight = 24
      # ENTER NODE # Block at 696.20; stackHeight = 24
        # ENTER NODE # Assign at 697.11; stackHeight = 24
          # ENTER NODE # Minus at 697.13; stackHeight = 24
            # ENTER NODE # IntegerLiteral at 697.13; stackHeight = 24
             subu $sp,$sp,8 # IntegerLiteral at 697.13; stackHeight = 24
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 697.13; stackHeight = 32
             li $t0,0 # IntegerLiteral at 697.13; stackHeight = 32
             sw $t0,($sp) # IntegerLiteral at 697.13; stackHeight = 32
            # EXIT NODE # IntegerLiteral at 697.13; stackHeight = 32
            # ENTER NODE # IntegerLiteral at 697.14; stackHeight = 32
             subu $sp,$sp,8 # IntegerLiteral at 697.14; stackHeight = 32
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 697.14; stackHeight = 40
             li $t0,1 # IntegerLiteral at 697.14; stackHeight = 40
             sw $t0,($sp) # IntegerLiteral at 697.14; stackHeight = 40
            # EXIT NODE # IntegerLiteral at 697.14; stackHeight = 40
           lw $t0,($sp) # Minus at 697.13; stackHeight = 40
           lw $t1,8($sp) # Minus at 697.13; stackHeight = 40
           subu $t0,$t1,$t0 # Minus at 697.13; stackHeight = 40
           addu $sp,$sp,8 # Minus at 697.13; stackHeight = 40
           sw $t0,($sp)#**"" # Minus at 697.13; stackHeight = 32
          # EXIT NODE # Minus at 697.13; stackHeight = 32
         lw $t0,($sp) # Assign at 697.11; stackHeight = 32
         sw $t0,24($sp) # Assign at 697.11; stackHeight = 32
         addu $sp,$sp,8 # Assign at 697.11; stackHeight = 32
        # EXIT NODE # Assign at 697.11; stackHeight = 24
      # EXIT NODE # Block at 696.20; stackHeight = 24
    j if_done_3390 # If at 696.3; stackHeight = 24
    if_else_3390: # If at 696.3; stackHeight = 24
      # ENTER NODE # If at 699.8; stackHeight = 24
        # ENTER NODE # GreaterThan at 699.17; stackHeight = 24
          # ENTER NODE # IdentifierExp at 699.12; stackHeight = 24
           lw $t0,8($sp) # local: stackHt=24,var-offset=-16 # IdentifierExp at 699.12; stackHeight = 24
           subu $sp,$sp,8 # IdentifierExp at 699.12; stackHeight = 24
           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 699.12; stackHeight = 32
           sw $t0,($sp)#**"" # IdentifierExp at 699.12; stackHeight = 32
          # EXIT NODE # IdentifierExp at 699.12; stackHeight = 32
          # ENTER NODE # IdentifierExp at 699.19; stackHeight = 32
           lw $t0,8($sp) # local: stackHt=32,var-offset=-24 # IdentifierExp at 699.19; stackHeight = 32
           subu $sp,$sp,8 # IdentifierExp at 699.19; stackHeight = 32
           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 699.19; stackHeight = 40
           sw $t0,($sp)#**"" # IdentifierExp at 699.19; stackHeight = 40
          # EXIT NODE # IdentifierExp at 699.19; stackHeight = 40
         lw $t0,($sp) # GreaterThan at 699.17; stackHeight = 40
         lw $t1,8($sp) # GreaterThan at 699.17; stackHeight = 40
         sgt $t0,$t1,$t0 # GreaterThan at 699.17; stackHeight = 40
         addu $sp,$sp,12 # GreaterThan at 699.17; stackHeight = 40
         sw $t0,($sp)#**"" # GreaterThan at 699.17; stackHeight = 28
        # EXIT NODE # GreaterThan at 699.17; stackHeight = 28
       lw $t0,($sp) # If at 699.8; stackHeight = 28
       addu $sp,$sp,4 # If at 699.8; stackHeight = 28
       beq $t0,$zero,if_else_3389 # If at 699.8; stackHeight = 24
        # ENTER NODE # Block at 699.25; stackHeight = 24
          # ENTER NODE # Assign at 700.11; stackHeight = 24
            # ENTER NODE # IntegerLiteral at 700.13; stackHeight = 24
             subu $sp,$sp,8 # IntegerLiteral at 700.13; stackHeight = 24
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 700.13; stackHeight = 32
             li $t0,1 # IntegerLiteral at 700.13; stackHeight = 32
             sw $t0,($sp) # IntegerLiteral at 700.13; stackHeight = 32
            # EXIT NODE # IntegerLiteral at 700.13; stackHeight = 32
           lw $t0,($sp) # Assign at 700.11; stackHeight = 32
           sw $t0,24($sp) # Assign at 700.11; stackHeight = 32
           addu $sp,$sp,8 # Assign at 700.11; stackHeight = 32
          # EXIT NODE # Assign at 700.11; stackHeight = 24
        # EXIT NODE # Block at 699.25; stackHeight = 24
      j if_done_3389 # If at 699.8; stackHeight = 24
      if_else_3389: # If at 699.8; stackHeight = 24
        # ENTER NODE # Block at 702.8; stackHeight = 24
          # ENTER NODE # Assign at 703.11; stackHeight = 24
            # ENTER NODE # Call at 703.16; stackHeight = 24
              # ENTER NODE # IdentifierExp at 703.13; stackHeight = 24
               lw $t0,32($sp) # local: stackHt=24,var-offset=8 # IdentifierExp at 703.13; stackHeight = 24
               subu $sp,$sp,4 # IdentifierExp at 703.13; stackHeight = 24
               sw $t0,($sp)#**"" # IdentifierExp at 703.13; stackHeight = 28
              # EXIT NODE # IdentifierExp at 703.13; stackHeight = 28
              # ENTER NODE # IdentifierExp at 703.26; stackHeight = 28
               lw $t0,32($sp) # local: stackHt=28,var-offset=4 # IdentifierExp at 703.26; stackHeight = 28
               subu $sp,$sp,4 # IdentifierExp at 703.26; stackHeight = 28
               sw $t0,($sp)#**"" # IdentifierExp at 703.26; stackHeight = 32
              # EXIT NODE # IdentifierExp at 703.26; stackHeight = 32
             lw $t0,4($sp) # Call at 703.16; stackHeight = 32
             beq $t0,$zero,nullPtrException # Call at 703.16; stackHeight = 32
             lw $t0,-12($t0) # Call at 703.16; stackHeight = 32
             lw $t0,28($t0) # Call at 703.16; stackHeight = 32
             jalr $t0 # compareTo # Call at 703.16; stackHeight = 32
            # EXIT NODE # Call at 703.16; stackHeight = 32
           lw $t0,($sp) # Assign at 703.11; stackHeight = 32
           sw $t0,24($sp) # Assign at 703.11; stackHeight = 32
           addu $sp,$sp,8 # Assign at 703.11; stackHeight = 32
          # EXIT NODE # Assign at 703.11; stackHeight = 24
        # EXIT NODE # Block at 702.8; stackHeight = 24
      if_done_3389: # If at 699.8; stackHeight = 24
      # EXIT NODE # If at 699.8; stackHeight = 24
    if_done_3390: # If at 696.3; stackHeight = 24
    # EXIT NODE # If at 696.3; stackHeight = 24
    # ENTER NODE # IdentifierExp at 705.10; stackHeight = 24
     lw $t0,16($sp) # local: stackHt=24,var-offset=-8 # IdentifierExp at 705.10; stackHeight = 24
     subu $sp,$sp,8 # IdentifierExp at 705.10; stackHeight = 24
     sw $s5,4($sp)#**"GC tag" # IdentifierExp at 705.10; stackHeight = 32
     sw $t0,($sp)#**"" # IdentifierExp at 705.10; stackHeight = 32
    # EXIT NODE # IdentifierExp at 705.10; stackHeight = 32
   lw $ra,44($sp) # MethodDeclNonVoid at 692.13; stackHeight = 32
   lw $s2,32($sp) # MethodDeclNonVoid at 692.13; stackHeight = 32
   lw $t0,($sp) # MethodDeclNonVoid at 692.13; stackHeight = 32
   sw $t0,40($sp)#**"(return-val)" # MethodDeclNonVoid at 692.13; stackHeight = 32
   sw $s5,44($sp)#**"" # MethodDeclNonVoid at 692.13; stackHeight = 32
   addu $sp,$sp,40 # MethodDeclNonVoid at 692.13; stackHeight = 32
  jr $ra # MethodDeclNonVoid at 692.13; stackHeight = -8
  # EXIT NODE # MethodDeclNonVoid at 692.13; stackHeight = -8
  # ENTER NODE # MethodDeclNonVoid at 709.16; stackHeight = -8
  .globl fcn_3667_primitiveAdd # MethodDeclNonVoid at 709.16; stackHeight = -8
  fcn_3667_primitiveAdd: # MethodDeclNonVoid at 709.16; stackHeight = -8
   subu $sp,$sp,4 # MethodDeclNonVoid at 709.16; stackHeight = -8
   sw $s2,($sp) #**"old this-ptr" # MethodDeclNonVoid at 709.16; stackHeight = -8
   lw $s2,16($sp) #**"this-ptr" # MethodDeclNonVoid at 709.16; stackHeight = -8
   sw $ra,16($sp) #**"RA:primitiveAdd" # MethodDeclNonVoid at 709.16; stackHeight = -8
    # ENTER NODE # LocalVarDecl at 710.10; stackHeight = 0
      # ENTER NODE # StringLiteral at 710.23; stackHeight = 0
       subu $sp,$sp,4 # StringLiteral at 710.23; stackHeight = 0
       la $t0,strLit_3401 # StringLiteral at 710.23; stackHeight = 4
       sw $t0,($sp)#**"strLit:" # StringLiteral at 710.23; stackHeight = 4
      # EXIT NODE # StringLiteral at 710.23; stackHeight = 4
    # EXIT NODE # LocalVarDecl at 710.10; stackHeight = 4
    # ENTER NODE # LocalVarDecl at 711.10; stackHeight = 4
      # ENTER NODE # Null at 711.19; stackHeight = 4
       subu $sp,$sp,4 # Null at 711.19; stackHeight = 4
       sw $zero,($sp)#**"" # Null at 711.19; stackHeight = 8
      # EXIT NODE # Null at 711.19; stackHeight = 8
    # EXIT NODE # LocalVarDecl at 711.10; stackHeight = 8
    # ENTER NODE # LocalVarDecl at 712.7; stackHeight = 8
      # ENTER NODE # Call at 712.17; stackHeight = 8
        # ENTER NODE # IdentifierExp at 712.14; stackHeight = 8
         lw $t0,20($sp) # local: stackHt=8,var-offset=12 # IdentifierExp at 712.14; stackHeight = 8
         subu $sp,$sp,4 # IdentifierExp at 712.14; stackHeight = 8
         sw $t0,($sp)#**"" # IdentifierExp at 712.14; stackHeight = 12
        # EXIT NODE # IdentifierExp at 712.14; stackHeight = 12
       lw $t0,0($sp) # Call at 712.17; stackHeight = 12
       beq $t0,$zero,nullPtrException # Call at 712.17; stackHeight = 12
       lw $t0,-12($t0) # Call at 712.17; stackHeight = 12
       lw $t0,20($t0) # Call at 712.17; stackHeight = 12
       jalr $t0 # length # Call at 712.17; stackHeight = 12
      # EXIT NODE # Call at 712.17; stackHeight = 16
    # EXIT NODE # LocalVarDecl at 712.7; stackHeight = 16
    # ENTER NODE # LocalVarDecl at 713.7; stackHeight = 16
      # ENTER NODE # Call at 713.17; stackHeight = 16
        # ENTER NODE # IdentifierExp at 713.14; stackHeight = 16
         lw $t0,24($sp) # local: stackHt=16,var-offset=8 # IdentifierExp at 713.14; stackHeight = 16
         subu $sp,$sp,4 # IdentifierExp at 713.14; stackHeight = 16
         sw $t0,($sp)#**"" # IdentifierExp at 713.14; stackHeight = 20
        # EXIT NODE # IdentifierExp at 713.14; stackHeight = 20
       lw $t0,0($sp) # Call at 713.17; stackHeight = 20
       beq $t0,$zero,nullPtrException # Call at 713.17; stackHeight = 20
       lw $t0,-12($t0) # Call at 713.17; stackHeight = 20
       lw $t0,20($t0) # Call at 713.17; stackHeight = 20
       jalr $t0 # length # Call at 713.17; stackHeight = 20
      # EXIT NODE # Call at 713.17; stackHeight = 24
    # EXIT NODE # LocalVarDecl at 713.7; stackHeight = 24
    # ENTER NODE # If at 714.3; stackHeight = 24
      # ENTER NODE # LessThan at 714.12; stackHeight = 24
        # ENTER NODE # IdentifierExp at 714.7; stackHeight = 24
         lw $t0,8($sp) # local: stackHt=24,var-offset=-16 # IdentifierExp at 714.7; stackHeight = 24
         subu $sp,$sp,8 # IdentifierExp at 714.7; stackHeight = 24
         sw $s5,4($sp)#**"GC tag" # IdentifierExp at 714.7; stackHeight = 32
         sw $t0,($sp)#**"" # IdentifierExp at 714.7; stackHeight = 32
        # EXIT NODE # IdentifierExp at 714.7; stackHeight = 32
        # ENTER NODE # IdentifierExp at 714.14; stackHeight = 32
         lw $t0,8($sp) # local: stackHt=32,var-offset=-24 # IdentifierExp at 714.14; stackHeight = 32
         subu $sp,$sp,8 # IdentifierExp at 714.14; stackHeight = 32
         sw $s5,4($sp)#**"GC tag" # IdentifierExp at 714.14; stackHeight = 40
         sw $t0,($sp)#**"" # IdentifierExp at 714.14; stackHeight = 40
        # EXIT NODE # IdentifierExp at 714.14; stackHeight = 40
       lw $t0,($sp) # LessThan at 714.12; stackHeight = 40
       lw $t1,8($sp) # LessThan at 714.12; stackHeight = 40
       slt $t0,$t1,$t0 # LessThan at 714.12; stackHeight = 40
       addu $sp,$sp,12 # LessThan at 714.12; stackHeight = 40
       sw $t0,($sp)#**"" # LessThan at 714.12; stackHeight = 28
      # EXIT NODE # LessThan at 714.12; stackHeight = 28
     lw $t0,($sp) # If at 714.3; stackHeight = 28
     addu $sp,$sp,4 # If at 714.3; stackHeight = 28
     beq $t0,$zero,if_else_3443 # If at 714.3; stackHeight = 24
      # ENTER NODE # Block at 714.20; stackHeight = 24
        # ENTER NODE # Assign at 715.7; stackHeight = 24
          # ENTER NODE # Call at 715.37; stackHeight = 24
            # ENTER NODE # Call at 715.9; stackHeight = 24
              # ENTER NODE # This at 715.9; stackHeight = 24
               subu $sp,$sp,4 # This at 715.9; stackHeight = 24
               sw $s2,($sp)#**"" # This at 715.9; stackHeight = 28
              # EXIT NODE # This at 715.9; stackHeight = 28
              # ENTER NODE # StringLiteral at 715.22; stackHeight = 28
               subu $sp,$sp,4 # StringLiteral at 715.22; stackHeight = 28
               la $t0,strLit_2646 # StringLiteral at 715.22; stackHeight = 32
               sw $t0,($sp)#**"strLit:0" # StringLiteral at 715.22; stackHeight = 32
              # EXIT NODE # StringLiteral at 715.22; stackHeight = 32
              # ENTER NODE # Minus at 715.30; stackHeight = 32
                # ENTER NODE # IdentifierExp at 715.26; stackHeight = 32
                 lw $t0,8($sp) # local: stackHt=32,var-offset=-24 # IdentifierExp at 715.26; stackHeight = 32
                 subu $sp,$sp,8 # IdentifierExp at 715.26; stackHeight = 32
                 sw $s5,4($sp)#**"GC tag" # IdentifierExp at 715.26; stackHeight = 40
                 sw $t0,($sp)#**"" # IdentifierExp at 715.26; stackHeight = 40
                # EXIT NODE # IdentifierExp at 715.26; stackHeight = 40
                # ENTER NODE # IdentifierExp at 715.31; stackHeight = 40
                 lw $t0,24($sp) # local: stackHt=40,var-offset=-16 # IdentifierExp at 715.31; stackHeight = 40
                 subu $sp,$sp,8 # IdentifierExp at 715.31; stackHeight = 40
                 sw $s5,4($sp)#**"GC tag" # IdentifierExp at 715.31; stackHeight = 48
                 sw $t0,($sp)#**"" # IdentifierExp at 715.31; stackHeight = 48
                # EXIT NODE # IdentifierExp at 715.31; stackHeight = 48
               lw $t0,($sp) # Minus at 715.30; stackHeight = 48
               lw $t1,8($sp) # Minus at 715.30; stackHeight = 48
               subu $t0,$t1,$t0 # Minus at 715.30; stackHeight = 48
               addu $sp,$sp,8 # Minus at 715.30; stackHeight = 48
               sw $t0,($sp)#**"" # Minus at 715.30; stackHeight = 40
              # EXIT NODE # Minus at 715.30; stackHeight = 40
             lw $t0,12($sp) # Call at 715.9; stackHeight = 40
             beq $t0,$zero,nullPtrException # Call at 715.9; stackHeight = 40
             lw $t0,-12($t0) # Call at 715.9; stackHeight = 40
             lw $t0,100($t0) # Call at 715.9; stackHeight = 40
             jalr $t0 # repeatString # Call at 715.9; stackHeight = 40
            # EXIT NODE # Call at 715.9; stackHeight = 28
            # ENTER NODE # IdentifierExp at 715.44; stackHeight = 28
             lw $t0,40($sp) # local: stackHt=28,var-offset=12 # IdentifierExp at 715.44; stackHeight = 28
             subu $sp,$sp,4 # IdentifierExp at 715.44; stackHeight = 28
             sw $t0,($sp)#**"" # IdentifierExp at 715.44; stackHeight = 32
            # EXIT NODE # IdentifierExp at 715.44; stackHeight = 32
           lw $t0,4($sp) # Call at 715.37; stackHeight = 32
           beq $t0,$zero,nullPtrException # Call at 715.37; stackHeight = 32
           lw $t0,-12($t0) # Call at 715.37; stackHeight = 32
           lw $t0,12($t0) # Call at 715.37; stackHeight = 32
           jalr $t0 # concat # Call at 715.37; stackHeight = 32
          # EXIT NODE # Call at 715.37; stackHeight = 28
         lw $t0,($sp) # Assign at 715.7; stackHeight = 28
         sw $t0,40($sp) # Assign at 715.7; stackHeight = 28
         addu $sp,$sp,4 # Assign at 715.7; stackHeight = 28
        # EXIT NODE # Assign at 715.7; stackHeight = 24
      # EXIT NODE # Block at 714.20; stackHeight = 24
    j if_done_3443 # If at 714.3; stackHeight = 24
    if_else_3443: # If at 714.3; stackHeight = 24
      # ENTER NODE # Block at 717.8; stackHeight = 24
        # ENTER NODE # Assign at 718.7; stackHeight = 24
          # ENTER NODE # Call at 718.37; stackHeight = 24
            # ENTER NODE # Call at 718.9; stackHeight = 24
              # ENTER NODE # This at 718.9; stackHeight = 24
               subu $sp,$sp,4 # This at 718.9; stackHeight = 24
               sw $s2,($sp)#**"" # This at 718.9; stackHeight = 28
              # EXIT NODE # This at 718.9; stackHeight = 28
              # ENTER NODE # StringLiteral at 718.22; stackHeight = 28
               subu $sp,$sp,4 # StringLiteral at 718.22; stackHeight = 28
               la $t0,strLit_2646 # StringLiteral at 718.22; stackHeight = 32
               sw $t0,($sp)#**"strLit:0" # StringLiteral at 718.22; stackHeight = 32
              # EXIT NODE # StringLiteral at 718.22; stackHeight = 32
              # ENTER NODE # Minus at 718.30; stackHeight = 32
                # ENTER NODE # IdentifierExp at 718.26; stackHeight = 32
                 lw $t0,16($sp) # local: stackHt=32,var-offset=-16 # IdentifierExp at 718.26; stackHeight = 32
                 subu $sp,$sp,8 # IdentifierExp at 718.26; stackHeight = 32
                 sw $s5,4($sp)#**"GC tag" # IdentifierExp at 718.26; stackHeight = 40
                 sw $t0,($sp)#**"" # IdentifierExp at 718.26; stackHeight = 40
                # EXIT NODE # IdentifierExp at 718.26; stackHeight = 40
                # ENTER NODE # IdentifierExp at 718.31; stackHeight = 40
                 lw $t0,16($sp) # local: stackHt=40,var-offset=-24 # IdentifierExp at 718.31; stackHeight = 40
                 subu $sp,$sp,8 # IdentifierExp at 718.31; stackHeight = 40
                 sw $s5,4($sp)#**"GC tag" # IdentifierExp at 718.31; stackHeight = 48
                 sw $t0,($sp)#**"" # IdentifierExp at 718.31; stackHeight = 48
                # EXIT NODE # IdentifierExp at 718.31; stackHeight = 48
               lw $t0,($sp) # Minus at 718.30; stackHeight = 48
               lw $t1,8($sp) # Minus at 718.30; stackHeight = 48
               subu $t0,$t1,$t0 # Minus at 718.30; stackHeight = 48
               addu $sp,$sp,8 # Minus at 718.30; stackHeight = 48
               sw $t0,($sp)#**"" # Minus at 718.30; stackHeight = 40
              # EXIT NODE # Minus at 718.30; stackHeight = 40
             lw $t0,12($sp) # Call at 718.9; stackHeight = 40
             beq $t0,$zero,nullPtrException # Call at 718.9; stackHeight = 40
             lw $t0,-12($t0) # Call at 718.9; stackHeight = 40
             lw $t0,100($t0) # Call at 718.9; stackHeight = 40
             jalr $t0 # repeatString # Call at 718.9; stackHeight = 40
            # EXIT NODE # Call at 718.9; stackHeight = 28
            # ENTER NODE # IdentifierExp at 718.44; stackHeight = 28
             lw $t0,36($sp) # local: stackHt=28,var-offset=8 # IdentifierExp at 718.44; stackHeight = 28
             subu $sp,$sp,4 # IdentifierExp at 718.44; stackHeight = 28
             sw $t0,($sp)#**"" # IdentifierExp at 718.44; stackHeight = 32
            # EXIT NODE # IdentifierExp at 718.44; stackHeight = 32
           lw $t0,4($sp) # Call at 718.37; stackHeight = 32
           beq $t0,$zero,nullPtrException # Call at 718.37; stackHeight = 32
           lw $t0,-12($t0) # Call at 718.37; stackHeight = 32
           lw $t0,12($t0) # Call at 718.37; stackHeight = 32
           jalr $t0 # concat # Call at 718.37; stackHeight = 32
          # EXIT NODE # Call at 718.37; stackHeight = 28
         lw $t0,($sp) # Assign at 718.7; stackHeight = 28
         sw $t0,36($sp) # Assign at 718.7; stackHeight = 28
         addu $sp,$sp,4 # Assign at 718.7; stackHeight = 28
        # EXIT NODE # Assign at 718.7; stackHeight = 24
      # EXIT NODE # Block at 717.8; stackHeight = 24
    if_done_3443: # If at 714.3; stackHeight = 24
    # EXIT NODE # If at 714.3; stackHeight = 24
    # ENTER NODE # LocalVarDecl at 720.7; stackHeight = 24
      # ENTER NODE # IntegerLiteral at 720.18; stackHeight = 24
       subu $sp,$sp,8 # IntegerLiteral at 720.18; stackHeight = 24
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 720.18; stackHeight = 32
       li $t0,0 # IntegerLiteral at 720.18; stackHeight = 32
       sw $t0,($sp) # IntegerLiteral at 720.18; stackHeight = 32
      # EXIT NODE # IntegerLiteral at 720.18; stackHeight = 32
    # EXIT NODE # LocalVarDecl at 720.7; stackHeight = 32
    # ENTER NODE # Block at 721.3; stackHeight = 32
      # ENTER NODE # LocalVarDecl at 721.12; stackHeight = 32
        # ENTER NODE # Minus at 721.27; stackHeight = 32
          # ENTER NODE # Call at 721.19; stackHeight = 32
            # ENTER NODE # IdentifierExp at 721.16; stackHeight = 32
             lw $t0,44($sp) # local: stackHt=32,var-offset=12 # IdentifierExp at 721.16; stackHeight = 32
             subu $sp,$sp,4 # IdentifierExp at 721.16; stackHeight = 32
             sw $t0,($sp)#**"" # IdentifierExp at 721.16; stackHeight = 36
            # EXIT NODE # IdentifierExp at 721.16; stackHeight = 36
           lw $t0,0($sp) # Call at 721.19; stackHeight = 36
           beq $t0,$zero,nullPtrException # Call at 721.19; stackHeight = 36
           lw $t0,-12($t0) # Call at 721.19; stackHeight = 36
           lw $t0,20($t0) # Call at 721.19; stackHeight = 36
           jalr $t0 # length # Call at 721.19; stackHeight = 36
          # EXIT NODE # Call at 721.19; stackHeight = 40
          # ENTER NODE # IntegerLiteral at 721.28; stackHeight = 40
           subu $sp,$sp,8 # IntegerLiteral at 721.28; stackHeight = 40
           sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 721.28; stackHeight = 48
           li $t0,1 # IntegerLiteral at 721.28; stackHeight = 48
           sw $t0,($sp) # IntegerLiteral at 721.28; stackHeight = 48
          # EXIT NODE # IntegerLiteral at 721.28; stackHeight = 48
         lw $t0,($sp) # Minus at 721.27; stackHeight = 48
         lw $t1,8($sp) # Minus at 721.27; stackHeight = 48
         subu $t0,$t1,$t0 # Minus at 721.27; stackHeight = 48
         addu $sp,$sp,8 # Minus at 721.27; stackHeight = 48
         sw $t0,($sp)#**"" # Minus at 721.27; stackHeight = 40
        # EXIT NODE # Minus at 721.27; stackHeight = 40
      # EXIT NODE # LocalVarDecl at 721.12; stackHeight = 40
      # ENTER NODE # While at 721.3; stackHeight = 40
      j while_enter_3603 # While at 721.3; stackHeight = 40
      while_top_3603: # While at 721.3; stackHeight = 40
        # ENTER NODE # Block at 721.3; stackHeight = 40
          # ENTER NODE # Block at 721.44; stackHeight = 40
            # ENTER NODE # LocalVarDecl at 722.8; stackHeight = 40
              # ENTER NODE # Minus at 722.28; stackHeight = 40
                # ENTER NODE # Call at 722.18; stackHeight = 40
                  # ENTER NODE # IdentifierExp at 722.15; stackHeight = 40
                   lw $t0,52($sp) # local: stackHt=40,var-offset=12 # IdentifierExp at 722.15; stackHeight = 40
                   subu $sp,$sp,4 # IdentifierExp at 722.15; stackHeight = 40
                   sw $t0,($sp)#**"" # IdentifierExp at 722.15; stackHeight = 44
                  # EXIT NODE # IdentifierExp at 722.15; stackHeight = 44
                  # ENTER NODE # IdentifierExp at 722.25; stackHeight = 44
                   lw $t0,4($sp) # local: stackHt=44,var-offset=-40 # IdentifierExp at 722.25; stackHeight = 44
                   subu $sp,$sp,8 # IdentifierExp at 722.25; stackHeight = 44
                   sw $s5,4($sp)#**"GC tag" # IdentifierExp at 722.25; stackHeight = 52
                   sw $t0,($sp)#**"" # IdentifierExp at 722.25; stackHeight = 52
                  # EXIT NODE # IdentifierExp at 722.25; stackHeight = 52
                 lw $t0,8($sp) # Call at 722.18; stackHeight = 52
                 beq $t0,$zero,nullPtrException # Call at 722.18; stackHeight = 52
                 lw $t0,-12($t0) # Call at 722.18; stackHeight = 52
                 lw $t0,24($t0) # Call at 722.18; stackHeight = 52
                 jalr $t0 # charAt # Call at 722.18; stackHeight = 52
                # EXIT NODE # Call at 722.18; stackHeight = 48
                # ENTER NODE # IntegerLiteral at 722.30; stackHeight = 48
                 subu $sp,$sp,8 # IntegerLiteral at 722.30; stackHeight = 48
                 sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 722.30; stackHeight = 56
                 li $t0,48 # IntegerLiteral at 722.30; stackHeight = 56
                 sw $t0,($sp) # IntegerLiteral at 722.30; stackHeight = 56
                # EXIT NODE # IntegerLiteral at 722.30; stackHeight = 56
               lw $t0,($sp) # Minus at 722.28; stackHeight = 56
               lw $t1,8($sp) # Minus at 722.28; stackHeight = 56
               subu $t0,$t1,$t0 # Minus at 722.28; stackHeight = 56
               addu $sp,$sp,8 # Minus at 722.28; stackHeight = 56
               sw $t0,($sp)#**"" # Minus at 722.28; stackHeight = 48
              # EXIT NODE # Minus at 722.28; stackHeight = 48
            # EXIT NODE # LocalVarDecl at 722.8; stackHeight = 48
            # ENTER NODE # LocalVarDecl at 723.8; stackHeight = 48
              # ENTER NODE # Minus at 723.28; stackHeight = 48
                # ENTER NODE # Call at 723.18; stackHeight = 48
                  # ENTER NODE # IdentifierExp at 723.15; stackHeight = 48
                   lw $t0,56($sp) # local: stackHt=48,var-offset=8 # IdentifierExp at 723.15; stackHeight = 48
                   subu $sp,$sp,4 # IdentifierExp at 723.15; stackHeight = 48
                   sw $t0,($sp)#**"" # IdentifierExp at 723.15; stackHeight = 52
                  # EXIT NODE # IdentifierExp at 723.15; stackHeight = 52
                  # ENTER NODE # IdentifierExp at 723.25; stackHeight = 52
                   lw $t0,12($sp) # local: stackHt=52,var-offset=-40 # IdentifierExp at 723.25; stackHeight = 52
                   subu $sp,$sp,8 # IdentifierExp at 723.25; stackHeight = 52
                   sw $s5,4($sp)#**"GC tag" # IdentifierExp at 723.25; stackHeight = 60
                   sw $t0,($sp)#**"" # IdentifierExp at 723.25; stackHeight = 60
                  # EXIT NODE # IdentifierExp at 723.25; stackHeight = 60
                 lw $t0,8($sp) # Call at 723.18; stackHeight = 60
                 beq $t0,$zero,nullPtrException # Call at 723.18; stackHeight = 60
                 lw $t0,-12($t0) # Call at 723.18; stackHeight = 60
                 lw $t0,24($t0) # Call at 723.18; stackHeight = 60
                 jalr $t0 # charAt # Call at 723.18; stackHeight = 60
                # EXIT NODE # Call at 723.18; stackHeight = 56
                # ENTER NODE # IntegerLiteral at 723.30; stackHeight = 56
                 subu $sp,$sp,8 # IntegerLiteral at 723.30; stackHeight = 56
                 sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 723.30; stackHeight = 64
                 li $t0,48 # IntegerLiteral at 723.30; stackHeight = 64
                 sw $t0,($sp) # IntegerLiteral at 723.30; stackHeight = 64
                # EXIT NODE # IntegerLiteral at 723.30; stackHeight = 64
               lw $t0,($sp) # Minus at 723.28; stackHeight = 64
               lw $t1,8($sp) # Minus at 723.28; stackHeight = 64
               subu $t0,$t1,$t0 # Minus at 723.28; stackHeight = 64
               addu $sp,$sp,8 # Minus at 723.28; stackHeight = 64
               sw $t0,($sp)#**"" # Minus at 723.28; stackHeight = 56
              # EXIT NODE # Minus at 723.28; stackHeight = 56
            # EXIT NODE # LocalVarDecl at 723.8; stackHeight = 56
            # ENTER NODE # If at 724.4; stackHeight = 56
              # ENTER NODE # IdentifierExp at 724.8; stackHeight = 56
               lw $t0,60($sp) # local: stackHt=56,var-offset=4 # IdentifierExp at 724.8; stackHeight = 56
               subu $sp,$sp,4 # IdentifierExp at 724.8; stackHeight = 56
               sw $t0,($sp)#**"" # IdentifierExp at 724.8; stackHeight = 60
              # EXIT NODE # IdentifierExp at 724.8; stackHeight = 60
             lw $t0,($sp) # If at 724.4; stackHeight = 60
             addu $sp,$sp,4 # If at 724.4; stackHeight = 60
             beq $t0,$zero,if_else_3488 # If at 724.4; stackHeight = 56
              # ENTER NODE # Block at 724.18; stackHeight = 56
                # ENTER NODE # Assign at 725.10; stackHeight = 56
                  # ENTER NODE # Minus at 725.12; stackHeight = 56
                    # ENTER NODE # IntegerLiteral at 725.12; stackHeight = 56
                     subu $sp,$sp,8 # IntegerLiteral at 725.12; stackHeight = 56
                     sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 725.12; stackHeight = 64
                     li $t0,0 # IntegerLiteral at 725.12; stackHeight = 64
                     sw $t0,($sp) # IntegerLiteral at 725.12; stackHeight = 64
                    # EXIT NODE # IntegerLiteral at 725.12; stackHeight = 64
                    # ENTER NODE # IdentifierExp at 725.13; stackHeight = 64
                     lw $t0,8($sp) # local: stackHt=64,var-offset=-56 # IdentifierExp at 725.13; stackHeight = 64
                     subu $sp,$sp,8 # IdentifierExp at 725.13; stackHeight = 64
                     sw $s5,4($sp)#**"GC tag" # IdentifierExp at 725.13; stackHeight = 72
                     sw $t0,($sp)#**"" # IdentifierExp at 725.13; stackHeight = 72
                    # EXIT NODE # IdentifierExp at 725.13; stackHeight = 72
                   lw $t0,($sp) # Minus at 725.12; stackHeight = 72
                   lw $t1,8($sp) # Minus at 725.12; stackHeight = 72
                   subu $t0,$t1,$t0 # Minus at 725.12; stackHeight = 72
                   addu $sp,$sp,8 # Minus at 725.12; stackHeight = 72
                   sw $t0,($sp)#**"" # Minus at 725.12; stackHeight = 64
                  # EXIT NODE # Minus at 725.12; stackHeight = 64
                 lw $t0,($sp) # Assign at 725.10; stackHeight = 64
                 sw $t0,8($sp) # Assign at 725.10; stackHeight = 64
                 addu $sp,$sp,8 # Assign at 725.10; stackHeight = 64
                # EXIT NODE # Assign at 725.10; stackHeight = 56
              # EXIT NODE # Block at 724.18; stackHeight = 56
            j if_done_3488 # If at 724.4; stackHeight = 56
            if_else_3488: # If at 724.4; stackHeight = 56
              # ENTER NODE # Block at 727.4; stackHeight = 56
              # EXIT NODE # Block at 727.4; stackHeight = 56
            if_done_3488: # If at 724.4; stackHeight = 56
            # EXIT NODE # If at 724.4; stackHeight = 56
            # ENTER NODE # LocalVarDecl at 727.8; stackHeight = 56
              # ENTER NODE # Plus at 727.23; stackHeight = 56
                # ENTER NODE # Plus at 727.18; stackHeight = 56
                  # ENTER NODE # IdentifierExp at 727.14; stackHeight = 56
                   lw $t0,8($sp) # local: stackHt=56,var-offset=-48 # IdentifierExp at 727.14; stackHeight = 56
                   subu $sp,$sp,8 # IdentifierExp at 727.14; stackHeight = 56
                   sw $s5,4($sp)#**"GC tag" # IdentifierExp at 727.14; stackHeight = 64
                   sw $t0,($sp)#**"" # IdentifierExp at 727.14; stackHeight = 64
                  # EXIT NODE # IdentifierExp at 727.14; stackHeight = 64
                  # ENTER NODE # IdentifierExp at 727.19; stackHeight = 64
                   lw $t0,8($sp) # local: stackHt=64,var-offset=-56 # IdentifierExp at 727.19; stackHeight = 64
                   subu $sp,$sp,8 # IdentifierExp at 727.19; stackHeight = 64
                   sw $s5,4($sp)#**"GC tag" # IdentifierExp at 727.19; stackHeight = 72
                   sw $t0,($sp)#**"" # IdentifierExp at 727.19; stackHeight = 72
                  # EXIT NODE # IdentifierExp at 727.19; stackHeight = 72
                 lw $t0,($sp) # Plus at 727.18; stackHeight = 72
                 lw $t1,8($sp) # Plus at 727.18; stackHeight = 72
                 addu $t0,$t0,$t1 # Plus at 727.18; stackHeight = 72
                 addu $sp,$sp,8 # Plus at 727.18; stackHeight = 72
                 sw $t0,($sp)#**"" # Plus at 727.18; stackHeight = 72
                # EXIT NODE # Plus at 727.18; stackHeight = 64
                # ENTER NODE # IdentifierExp at 727.24; stackHeight = 64
                 lw $t0,32($sp) # local: stackHt=64,var-offset=-32 # IdentifierExp at 727.24; stackHeight = 64
                 subu $sp,$sp,8 # IdentifierExp at 727.24; stackHeight = 64
                 sw $s5,4($sp)#**"GC tag" # IdentifierExp at 727.24; stackHeight = 72
                 sw $t0,($sp)#**"" # IdentifierExp at 727.24; stackHeight = 72
                # EXIT NODE # IdentifierExp at 727.24; stackHeight = 72
               lw $t0,($sp) # Plus at 727.23; stackHeight = 72
               lw $t1,8($sp) # Plus at 727.23; stackHeight = 72
               addu $t0,$t0,$t1 # Plus at 727.23; stackHeight = 72
               addu $sp,$sp,8 # Plus at 727.23; stackHeight = 72
               sw $t0,($sp)#**"" # Plus at 727.23; stackHeight = 72
              # EXIT NODE # Plus at 727.23; stackHeight = 64
            # EXIT NODE # LocalVarDecl at 727.8; stackHeight = 64
            # ENTER NODE # If at 728.4; stackHeight = 64
              # ENTER NODE # Not at 728.12; stackHeight = 64
                # ENTER NODE # LessThan at 728.12; stackHeight = 64
                  # ENTER NODE # IdentifierExp at 728.8; stackHeight = 64
                   lw $t0,0($sp) # local: stackHt=64,var-offset=-64 # IdentifierExp at 728.8; stackHeight = 64
                   subu $sp,$sp,8 # IdentifierExp at 728.8; stackHeight = 64
                   sw $s5,4($sp)#**"GC tag" # IdentifierExp at 728.8; stackHeight = 72
                   sw $t0,($sp)#**"" # IdentifierExp at 728.8; stackHeight = 72
                  # EXIT NODE # IdentifierExp at 728.8; stackHeight = 72
                  # ENTER NODE # IntegerLiteral at 728.15; stackHeight = 72
                   subu $sp,$sp,8 # IntegerLiteral at 728.15; stackHeight = 72
                   sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 728.15; stackHeight = 80
                   li $t0,10 # IntegerLiteral at 728.15; stackHeight = 80
                   sw $t0,($sp) # IntegerLiteral at 728.15; stackHeight = 80
                  # EXIT NODE # IntegerLiteral at 728.15; stackHeight = 80
                 lw $t0,($sp) # LessThan at 728.12; stackHeight = 80
                 lw $t1,8($sp) # LessThan at 728.12; stackHeight = 80
                 slt $t0,$t1,$t0 # LessThan at 728.12; stackHeight = 80
                 addu $sp,$sp,12 # LessThan at 728.12; stackHeight = 80
                 sw $t0,($sp)#**"" # LessThan at 728.12; stackHeight = 68
                # EXIT NODE # LessThan at 728.12; stackHeight = 68
               lw $t0,($sp) # Not at 728.12; stackHeight = 68
               xor $t0,$t0,1 # Not at 728.12; stackHeight = 68
               sw $t0,($sp)#**"" # Not at 728.12; stackHeight = 68
              # EXIT NODE # Not at 728.12; stackHeight = 68
             lw $t0,($sp) # If at 728.4; stackHeight = 68
             addu $sp,$sp,4 # If at 728.4; stackHeight = 68
             beq $t0,$zero,if_else_3529 # If at 728.4; stackHeight = 64
              # ENTER NODE # Block at 728.19; stackHeight = 64
                # ENTER NODE # Assign at 729.9; stackHeight = 64
                  # ENTER NODE # Minus at 729.15; stackHeight = 64
                    # ENTER NODE # IdentifierExp at 729.11; stackHeight = 64
                     lw $t0,0($sp) # local: stackHt=64,var-offset=-64 # IdentifierExp at 729.11; stackHeight = 64
                     subu $sp,$sp,8 # IdentifierExp at 729.11; stackHeight = 64
                     sw $s5,4($sp)#**"GC tag" # IdentifierExp at 729.11; stackHeight = 72
                     sw $t0,($sp)#**"" # IdentifierExp at 729.11; stackHeight = 72
                    # EXIT NODE # IdentifierExp at 729.11; stackHeight = 72
                    # ENTER NODE # IntegerLiteral at 729.17; stackHeight = 72
                     subu $sp,$sp,8 # IntegerLiteral at 729.17; stackHeight = 72
                     sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 729.17; stackHeight = 80
                     li $t0,10 # IntegerLiteral at 729.17; stackHeight = 80
                     sw $t0,($sp) # IntegerLiteral at 729.17; stackHeight = 80
                    # EXIT NODE # IntegerLiteral at 729.17; stackHeight = 80
                   lw $t0,($sp) # Minus at 729.15; stackHeight = 80
                   lw $t1,8($sp) # Minus at 729.15; stackHeight = 80
                   subu $t0,$t1,$t0 # Minus at 729.15; stackHeight = 80
                   addu $sp,$sp,8 # Minus at 729.15; stackHeight = 80
                   sw $t0,($sp)#**"" # Minus at 729.15; stackHeight = 72
                  # EXIT NODE # Minus at 729.15; stackHeight = 72
                 lw $t0,($sp) # Assign at 729.9; stackHeight = 72
                 sw $t0,8($sp) # Assign at 729.9; stackHeight = 72
                 addu $sp,$sp,8 # Assign at 729.9; stackHeight = 72
                # EXIT NODE # Assign at 729.9; stackHeight = 64
                # ENTER NODE # Assign at 730.14; stackHeight = 64
                  # ENTER NODE # IntegerLiteral at 730.16; stackHeight = 64
                   subu $sp,$sp,8 # IntegerLiteral at 730.16; stackHeight = 64
                   sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 730.16; stackHeight = 72
                   li $t0,1 # IntegerLiteral at 730.16; stackHeight = 72
                   sw $t0,($sp) # IntegerLiteral at 730.16; stackHeight = 72
                  # EXIT NODE # IntegerLiteral at 730.16; stackHeight = 72
                 lw $t0,($sp) # Assign at 730.14; stackHeight = 72
                 sw $t0,40($sp) # Assign at 730.14; stackHeight = 72
                 addu $sp,$sp,8 # Assign at 730.14; stackHeight = 72
                # EXIT NODE # Assign at 730.14; stackHeight = 64
              # EXIT NODE # Block at 728.19; stackHeight = 64
            j if_done_3529 # If at 728.4; stackHeight = 64
            if_else_3529: # If at 728.4; stackHeight = 64
              # ENTER NODE # If at 732.9; stackHeight = 64
                # ENTER NODE # LessThan at 732.17; stackHeight = 64
                  # ENTER NODE # IdentifierExp at 732.13; stackHeight = 64
                   lw $t0,0($sp) # local: stackHt=64,var-offset=-64 # IdentifierExp at 732.13; stackHeight = 64
                   subu $sp,$sp,8 # IdentifierExp at 732.13; stackHeight = 64
                   sw $s5,4($sp)#**"GC tag" # IdentifierExp at 732.13; stackHeight = 72
                   sw $t0,($sp)#**"" # IdentifierExp at 732.13; stackHeight = 72
                  # EXIT NODE # IdentifierExp at 732.13; stackHeight = 72
                  # ENTER NODE # IntegerLiteral at 732.19; stackHeight = 72
                   subu $sp,$sp,8 # IntegerLiteral at 732.19; stackHeight = 72
                   sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 732.19; stackHeight = 80
                   li $t0,0 # IntegerLiteral at 732.19; stackHeight = 80
                   sw $t0,($sp) # IntegerLiteral at 732.19; stackHeight = 80
                  # EXIT NODE # IntegerLiteral at 732.19; stackHeight = 80
                 lw $t0,($sp) # LessThan at 732.17; stackHeight = 80
                 lw $t1,8($sp) # LessThan at 732.17; stackHeight = 80
                 slt $t0,$t1,$t0 # LessThan at 732.17; stackHeight = 80
                 addu $sp,$sp,12 # LessThan at 732.17; stackHeight = 80
                 sw $t0,($sp)#**"" # LessThan at 732.17; stackHeight = 68
                # EXIT NODE # LessThan at 732.17; stackHeight = 68
               lw $t0,($sp) # If at 732.9; stackHeight = 68
               addu $sp,$sp,4 # If at 732.9; stackHeight = 68
               beq $t0,$zero,if_else_3528 # If at 732.9; stackHeight = 64
                # ENTER NODE # Block at 732.22; stackHeight = 64
                  # ENTER NODE # Assign at 733.9; stackHeight = 64
                    # ENTER NODE # Plus at 733.15; stackHeight = 64
                      # ENTER NODE # IdentifierExp at 733.11; stackHeight = 64
                       lw $t0,0($sp) # local: stackHt=64,var-offset=-64 # IdentifierExp at 733.11; stackHeight = 64
                       subu $sp,$sp,8 # IdentifierExp at 733.11; stackHeight = 64
                       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 733.11; stackHeight = 72
                       sw $t0,($sp)#**"" # IdentifierExp at 733.11; stackHeight = 72
                      # EXIT NODE # IdentifierExp at 733.11; stackHeight = 72
                      # ENTER NODE # IntegerLiteral at 733.17; stackHeight = 72
                       subu $sp,$sp,8 # IntegerLiteral at 733.17; stackHeight = 72
                       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 733.17; stackHeight = 80
                       li $t0,10 # IntegerLiteral at 733.17; stackHeight = 80
                       sw $t0,($sp) # IntegerLiteral at 733.17; stackHeight = 80
                      # EXIT NODE # IntegerLiteral at 733.17; stackHeight = 80
                     lw $t0,($sp) # Plus at 733.15; stackHeight = 80
                     lw $t1,8($sp) # Plus at 733.15; stackHeight = 80
                     addu $t0,$t0,$t1 # Plus at 733.15; stackHeight = 80
                     addu $sp,$sp,8 # Plus at 733.15; stackHeight = 80
                     sw $t0,($sp)#**"" # Plus at 733.15; stackHeight = 80
                    # EXIT NODE # Plus at 733.15; stackHeight = 72
                   lw $t0,($sp) # Assign at 733.9; stackHeight = 72
                   sw $t0,8($sp) # Assign at 733.9; stackHeight = 72
                   addu $sp,$sp,8 # Assign at 733.9; stackHeight = 72
                  # EXIT NODE # Assign at 733.9; stackHeight = 64
                  # ENTER NODE # Assign at 734.14; stackHeight = 64
                    # ENTER NODE # Minus at 734.16; stackHeight = 64
                      # ENTER NODE # IntegerLiteral at 734.16; stackHeight = 64
                       subu $sp,$sp,8 # IntegerLiteral at 734.16; stackHeight = 64
                       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 734.16; stackHeight = 72
                       li $t0,0 # IntegerLiteral at 734.16; stackHeight = 72
                       sw $t0,($sp) # IntegerLiteral at 734.16; stackHeight = 72
                      # EXIT NODE # IntegerLiteral at 734.16; stackHeight = 72
                      # ENTER NODE # IntegerLiteral at 734.17; stackHeight = 72
                       subu $sp,$sp,8 # IntegerLiteral at 734.17; stackHeight = 72
                       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 734.17; stackHeight = 80
                       li $t0,1 # IntegerLiteral at 734.17; stackHeight = 80
                       sw $t0,($sp) # IntegerLiteral at 734.17; stackHeight = 80
                      # EXIT NODE # IntegerLiteral at 734.17; stackHeight = 80
                     lw $t0,($sp) # Minus at 734.16; stackHeight = 80
                     lw $t1,8($sp) # Minus at 734.16; stackHeight = 80
                     subu $t0,$t1,$t0 # Minus at 734.16; stackHeight = 80
                     addu $sp,$sp,8 # Minus at 734.16; stackHeight = 80
                     sw $t0,($sp)#**"" # Minus at 734.16; stackHeight = 72
                    # EXIT NODE # Minus at 734.16; stackHeight = 72
                   lw $t0,($sp) # Assign at 734.14; stackHeight = 72
                   sw $t0,40($sp) # Assign at 734.14; stackHeight = 72
                   addu $sp,$sp,8 # Assign at 734.14; stackHeight = 72
                  # EXIT NODE # Assign at 734.14; stackHeight = 64
                # EXIT NODE # Block at 732.22; stackHeight = 64
              j if_done_3528 # If at 732.9; stackHeight = 64
              if_else_3528: # If at 732.9; stackHeight = 64
                # ENTER NODE # Block at 736.9; stackHeight = 64
                  # ENTER NODE # Assign at 737.14; stackHeight = 64
                    # ENTER NODE # IntegerLiteral at 737.16; stackHeight = 64
                     subu $sp,$sp,8 # IntegerLiteral at 737.16; stackHeight = 64
                     sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 737.16; stackHeight = 72
                     li $t0,0 # IntegerLiteral at 737.16; stackHeight = 72
                     sw $t0,($sp) # IntegerLiteral at 737.16; stackHeight = 72
                    # EXIT NODE # IntegerLiteral at 737.16; stackHeight = 72
                   lw $t0,($sp) # Assign at 737.14; stackHeight = 72
                   sw $t0,40($sp) # Assign at 737.14; stackHeight = 72
                   addu $sp,$sp,8 # Assign at 737.14; stackHeight = 72
                  # EXIT NODE # Assign at 737.14; stackHeight = 64
                # EXIT NODE # Block at 736.9; stackHeight = 64
              if_done_3528: # If at 732.9; stackHeight = 64
              # EXIT NODE # If at 732.9; stackHeight = 64
            if_done_3529: # If at 728.4; stackHeight = 64
            # EXIT NODE # If at 728.4; stackHeight = 64
            # ENTER NODE # LocalVarDecl at 739.11; stackHeight = 64
              # ENTER NODE # StringLiteral at 739.19; stackHeight = 64
               subu $sp,$sp,4 # StringLiteral at 739.19; stackHeight = 64
               la $t0,strLit_3401 # StringLiteral at 739.19; stackHeight = 68
               sw $t0,($sp)#**"strLit:" # StringLiteral at 739.19; stackHeight = 68
              # EXIT NODE # StringLiteral at 739.19; stackHeight = 68
            # EXIT NODE # LocalVarDecl at 739.11; stackHeight = 68
            # ENTER NODE # Switch at 740.4; stackHeight = 68
              # ENTER NODE # IdentifierExp at 740.12; stackHeight = 68
               lw $t0,4($sp) # local: stackHt=68,var-offset=-64 # IdentifierExp at 740.12; stackHeight = 68
               subu $sp,$sp,8 # IdentifierExp at 740.12; stackHeight = 68
               sw $s5,4($sp)#**"GC tag" # IdentifierExp at 740.12; stackHeight = 76
               sw $t0,($sp)#**"" # IdentifierExp at 740.12; stackHeight = 76
              # EXIT NODE # IdentifierExp at 740.12; stackHeight = 76
            lw $t0,($sp) # Switch at 740.4; stackHeight = 76
            addu $sp,8 # Switch at 740.4; stackHeight = 76
            li $t1,0 # Switch at 740.4; stackHeight = 68
            beq $t0,$t1,case_label_3536 # Switch at 740.4; stackHeight = 68
            li $t1,1 # Switch at 740.4; stackHeight = 68
            beq $t0,$t1,case_label_3542 # Switch at 740.4; stackHeight = 68
            li $t1,2 # Switch at 740.4; stackHeight = 68
            beq $t0,$t1,case_label_3548 # Switch at 740.4; stackHeight = 68
            li $t1,3 # Switch at 740.4; stackHeight = 68
            beq $t0,$t1,case_label_3554 # Switch at 740.4; stackHeight = 68
            li $t1,4 # Switch at 740.4; stackHeight = 68
            beq $t0,$t1,case_label_3560 # Switch at 740.4; stackHeight = 68
            li $t1,5 # Switch at 740.4; stackHeight = 68
            beq $t0,$t1,case_label_3566 # Switch at 740.4; stackHeight = 68
            li $t1,6 # Switch at 740.4; stackHeight = 68
            beq $t0,$t1,case_label_3572 # Switch at 740.4; stackHeight = 68
            li $t1,7 # Switch at 740.4; stackHeight = 68
            beq $t0,$t1,case_label_3578 # Switch at 740.4; stackHeight = 68
            li $t1,8 # Switch at 740.4; stackHeight = 68
            beq $t0,$t1,case_label_3584 # Switch at 740.4; stackHeight = 68
            li $t1,9 # Switch at 740.4; stackHeight = 68
            beq $t0,$t1,case_label_3590 # Switch at 740.4; stackHeight = 68
            j break_target_3595 # Switch at 740.4; stackHeight = 68
            case_label_3536: # Case at 741.4; stackHeight = 68
              # ENTER NODE # Assign at 741.18; stackHeight = 68
                # ENTER NODE # StringLiteral at 741.20; stackHeight = 68
                 subu $sp,$sp,4 # StringLiteral at 741.20; stackHeight = 68
                 la $t0,strLit_2646 # StringLiteral at 741.20; stackHeight = 72
                 sw $t0,($sp)#**"strLit:0" # StringLiteral at 741.20; stackHeight = 72
                # EXIT NODE # StringLiteral at 741.20; stackHeight = 72
               lw $t0,($sp) # Assign at 741.18; stackHeight = 72
               sw $t0,4($sp) # Assign at 741.18; stackHeight = 72
               addu $sp,$sp,4 # Assign at 741.18; stackHeight = 72
              # EXIT NODE # Assign at 741.18; stackHeight = 68
              # ENTER NODE # Break at 741.25; stackHeight = 68
              j break_target_3595 # Break at 741.25; stackHeight = 68
              # EXIT NODE # Break at 741.25; stackHeight = 68
            case_label_3542: # Case at 742.4; stackHeight = 68
              # ENTER NODE # Assign at 742.18; stackHeight = 68
                # ENTER NODE # StringLiteral at 742.20; stackHeight = 68
                 subu $sp,$sp,4 # StringLiteral at 742.20; stackHeight = 68
                 la $t0,strLit_3236 # StringLiteral at 742.20; stackHeight = 72
                 sw $t0,($sp)#**"strLit:1" # StringLiteral at 742.20; stackHeight = 72
                # EXIT NODE # StringLiteral at 742.20; stackHeight = 72
               lw $t0,($sp) # Assign at 742.18; stackHeight = 72
               sw $t0,4($sp) # Assign at 742.18; stackHeight = 72
               addu $sp,$sp,4 # Assign at 742.18; stackHeight = 72
              # EXIT NODE # Assign at 742.18; stackHeight = 68
              # ENTER NODE # Break at 742.25; stackHeight = 68
              j break_target_3595 # Break at 742.25; stackHeight = 68
              # EXIT NODE # Break at 742.25; stackHeight = 68
            case_label_3548: # Case at 743.4; stackHeight = 68
              # ENTER NODE # Assign at 743.18; stackHeight = 68
                # ENTER NODE # StringLiteral at 743.20; stackHeight = 68
                 subu $sp,$sp,4 # StringLiteral at 743.20; stackHeight = 68
                 la $t0,strLit_3550 # StringLiteral at 743.20; stackHeight = 72
                 sw $t0,($sp)#**"strLit:2" # StringLiteral at 743.20; stackHeight = 72
                # EXIT NODE # StringLiteral at 743.20; stackHeight = 72
               lw $t0,($sp) # Assign at 743.18; stackHeight = 72
               sw $t0,4($sp) # Assign at 743.18; stackHeight = 72
               addu $sp,$sp,4 # Assign at 743.18; stackHeight = 72
              # EXIT NODE # Assign at 743.18; stackHeight = 68
              # ENTER NODE # Break at 743.25; stackHeight = 68
              j break_target_3595 # Break at 743.25; stackHeight = 68
              # EXIT NODE # Break at 743.25; stackHeight = 68
            case_label_3554: # Case at 744.4; stackHeight = 68
              # ENTER NODE # Assign at 744.18; stackHeight = 68
                # ENTER NODE # StringLiteral at 744.20; stackHeight = 68
                 subu $sp,$sp,4 # StringLiteral at 744.20; stackHeight = 68
                 la $t0,strLit_3556 # StringLiteral at 744.20; stackHeight = 72
                 sw $t0,($sp)#**"strLit:3" # StringLiteral at 744.20; stackHeight = 72
                # EXIT NODE # StringLiteral at 744.20; stackHeight = 72
               lw $t0,($sp) # Assign at 744.18; stackHeight = 72
               sw $t0,4($sp) # Assign at 744.18; stackHeight = 72
               addu $sp,$sp,4 # Assign at 744.18; stackHeight = 72
              # EXIT NODE # Assign at 744.18; stackHeight = 68
              # ENTER NODE # Break at 744.25; stackHeight = 68
              j break_target_3595 # Break at 744.25; stackHeight = 68
              # EXIT NODE # Break at 744.25; stackHeight = 68
            case_label_3560: # Case at 745.4; stackHeight = 68
              # ENTER NODE # Assign at 745.18; stackHeight = 68
                # ENTER NODE # StringLiteral at 745.20; stackHeight = 68
                 subu $sp,$sp,4 # StringLiteral at 745.20; stackHeight = 68
                 la $t0,strLit_3562 # StringLiteral at 745.20; stackHeight = 72
                 sw $t0,($sp)#**"strLit:4" # StringLiteral at 745.20; stackHeight = 72
                # EXIT NODE # StringLiteral at 745.20; stackHeight = 72
               lw $t0,($sp) # Assign at 745.18; stackHeight = 72
               sw $t0,4($sp) # Assign at 745.18; stackHeight = 72
               addu $sp,$sp,4 # Assign at 745.18; stackHeight = 72
              # EXIT NODE # Assign at 745.18; stackHeight = 68
              # ENTER NODE # Break at 745.25; stackHeight = 68
              j break_target_3595 # Break at 745.25; stackHeight = 68
              # EXIT NODE # Break at 745.25; stackHeight = 68
            case_label_3566: # Case at 746.4; stackHeight = 68
              # ENTER NODE # Assign at 746.18; stackHeight = 68
                # ENTER NODE # StringLiteral at 746.20; stackHeight = 68
                 subu $sp,$sp,4 # StringLiteral at 746.20; stackHeight = 68
                 la $t0,strLit_3568 # StringLiteral at 746.20; stackHeight = 72
                 sw $t0,($sp)#**"strLit:5" # StringLiteral at 746.20; stackHeight = 72
                # EXIT NODE # StringLiteral at 746.20; stackHeight = 72
               lw $t0,($sp) # Assign at 746.18; stackHeight = 72
               sw $t0,4($sp) # Assign at 746.18; stackHeight = 72
               addu $sp,$sp,4 # Assign at 746.18; stackHeight = 72
              # EXIT NODE # Assign at 746.18; stackHeight = 68
              # ENTER NODE # Break at 746.25; stackHeight = 68
              j break_target_3595 # Break at 746.25; stackHeight = 68
              # EXIT NODE # Break at 746.25; stackHeight = 68
            case_label_3572: # Case at 747.4; stackHeight = 68
              # ENTER NODE # Assign at 747.18; stackHeight = 68
                # ENTER NODE # StringLiteral at 747.20; stackHeight = 68
                 subu $sp,$sp,4 # StringLiteral at 747.20; stackHeight = 68
                 la $t0,strLit_3574 # StringLiteral at 747.20; stackHeight = 72
                 sw $t0,($sp)#**"strLit:6" # StringLiteral at 747.20; stackHeight = 72
                # EXIT NODE # StringLiteral at 747.20; stackHeight = 72
               lw $t0,($sp) # Assign at 747.18; stackHeight = 72
               sw $t0,4($sp) # Assign at 747.18; stackHeight = 72
               addu $sp,$sp,4 # Assign at 747.18; stackHeight = 72
              # EXIT NODE # Assign at 747.18; stackHeight = 68
              # ENTER NODE # Break at 747.25; stackHeight = 68
              j break_target_3595 # Break at 747.25; stackHeight = 68
              # EXIT NODE # Break at 747.25; stackHeight = 68
            case_label_3578: # Case at 748.4; stackHeight = 68
              # ENTER NODE # Assign at 748.18; stackHeight = 68
                # ENTER NODE # StringLiteral at 748.20; stackHeight = 68
                 subu $sp,$sp,4 # StringLiteral at 748.20; stackHeight = 68
                 la $t0,strLit_3580 # StringLiteral at 748.20; stackHeight = 72
                 sw $t0,($sp)#**"strLit:7" # StringLiteral at 748.20; stackHeight = 72
                # EXIT NODE # StringLiteral at 748.20; stackHeight = 72
               lw $t0,($sp) # Assign at 748.18; stackHeight = 72
               sw $t0,4($sp) # Assign at 748.18; stackHeight = 72
               addu $sp,$sp,4 # Assign at 748.18; stackHeight = 72
              # EXIT NODE # Assign at 748.18; stackHeight = 68
              # ENTER NODE # Break at 748.25; stackHeight = 68
              j break_target_3595 # Break at 748.25; stackHeight = 68
              # EXIT NODE # Break at 748.25; stackHeight = 68
            case_label_3584: # Case at 749.4; stackHeight = 68
              # ENTER NODE # Assign at 749.18; stackHeight = 68
                # ENTER NODE # StringLiteral at 749.20; stackHeight = 68
                 subu $sp,$sp,4 # StringLiteral at 749.20; stackHeight = 68
                 la $t0,strLit_3586 # StringLiteral at 749.20; stackHeight = 72
                 sw $t0,($sp)#**"strLit:8" # StringLiteral at 749.20; stackHeight = 72
                # EXIT NODE # StringLiteral at 749.20; stackHeight = 72
               lw $t0,($sp) # Assign at 749.18; stackHeight = 72
               sw $t0,4($sp) # Assign at 749.18; stackHeight = 72
               addu $sp,$sp,4 # Assign at 749.18; stackHeight = 72
              # EXIT NODE # Assign at 749.18; stackHeight = 68
              # ENTER NODE # Break at 749.25; stackHeight = 68
              j break_target_3595 # Break at 749.25; stackHeight = 68
              # EXIT NODE # Break at 749.25; stackHeight = 68
            case_label_3590: # Case at 750.4; stackHeight = 68
              # ENTER NODE # Assign at 750.18; stackHeight = 68
                # ENTER NODE # StringLiteral at 750.20; stackHeight = 68
                 subu $sp,$sp,4 # StringLiteral at 750.20; stackHeight = 68
                 la $t0,strLit_3592 # StringLiteral at 750.20; stackHeight = 72
                 sw $t0,($sp)#**"strLit:9" # StringLiteral at 750.20; stackHeight = 72
                # EXIT NODE # StringLiteral at 750.20; stackHeight = 72
               lw $t0,($sp) # Assign at 750.18; stackHeight = 72
               sw $t0,4($sp) # Assign at 750.18; stackHeight = 72
               addu $sp,$sp,4 # Assign at 750.18; stackHeight = 72
              # EXIT NODE # Assign at 750.18; stackHeight = 68
              # ENTER NODE # Break at 750.25; stackHeight = 68
              j break_target_3595 # Break at 750.25; stackHeight = 68
              # EXIT NODE # Break at 750.25; stackHeight = 68
            break_target_3595: # Switch at 740.4; stackHeight = 68
            # EXIT NODE # Switch at 740.4; stackHeight = 68
            # ENTER NODE # Assign at 752.15; stackHeight = 68
              # ENTER NODE # Call at 752.23; stackHeight = 68
                # ENTER NODE # IdentifierExp at 752.17; stackHeight = 68
                 lw $t0,0($sp) # local: stackHt=68,var-offset=-68 # IdentifierExp at 752.17; stackHeight = 68
                 subu $sp,$sp,4 # IdentifierExp at 752.17; stackHeight = 68
                 sw $t0,($sp)#**"" # IdentifierExp at 752.17; stackHeight = 72
                # EXIT NODE # IdentifierExp at 752.17; stackHeight = 72
                # ENTER NODE # IdentifierExp at 752.30; stackHeight = 72
                 lw $t0,68($sp) # local: stackHt=72,var-offset=-4 # IdentifierExp at 752.30; stackHeight = 72
                 subu $sp,$sp,4 # IdentifierExp at 752.30; stackHeight = 72
                 sw $t0,($sp)#**"" # IdentifierExp at 752.30; stackHeight = 76
                # EXIT NODE # IdentifierExp at 752.30; stackHeight = 76
               lw $t0,4($sp) # Call at 752.23; stackHeight = 76
               beq $t0,$zero,nullPtrException # Call at 752.23; stackHeight = 76
               lw $t0,-12($t0) # Call at 752.23; stackHeight = 76
               lw $t0,12($t0) # Call at 752.23; stackHeight = 76
               jalr $t0 # concat # Call at 752.23; stackHeight = 76
              # EXIT NODE # Call at 752.23; stackHeight = 72
             lw $t0,($sp) # Assign at 752.15; stackHeight = 72
             sw $t0,68($sp) # Assign at 752.15; stackHeight = 72
             addu $sp,$sp,4 # Assign at 752.15; stackHeight = 72
            # EXIT NODE # Assign at 752.15; stackHeight = 68
           addu $sp,28 # Block at 721.44; stackHeight = 68
          # EXIT NODE # Block at 721.44; stackHeight = 40
          # ENTER NODE # Assign at 721.39; stackHeight = 40
            # ENTER NODE # Minus at 721.40; stackHeight = 40
              # ENTER NODE # IdentifierExp at 721.39; stackHeight = 40
               lw $t0,0($sp) # local: stackHt=40,var-offset=-40 # IdentifierExp at 721.39; stackHeight = 40
               subu $sp,$sp,8 # IdentifierExp at 721.39; stackHeight = 40
               sw $s5,4($sp)#**"GC tag" # IdentifierExp at 721.39; stackHeight = 48
               sw $t0,($sp)#**"" # IdentifierExp at 721.39; stackHeight = 48
              # EXIT NODE # IdentifierExp at 721.39; stackHeight = 48
              # ENTER NODE # IntegerLiteral at 721.40; stackHeight = 48
               subu $sp,$sp,8 # IntegerLiteral at 721.40; stackHeight = 48
               sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 721.40; stackHeight = 56
               li $t0,1 # IntegerLiteral at 721.40; stackHeight = 56
               sw $t0,($sp) # IntegerLiteral at 721.40; stackHeight = 56
              # EXIT NODE # IntegerLiteral at 721.40; stackHeight = 56
             lw $t0,($sp) # Minus at 721.40; stackHeight = 56
             lw $t1,8($sp) # Minus at 721.40; stackHeight = 56
             subu $t0,$t1,$t0 # Minus at 721.40; stackHeight = 56
             addu $sp,$sp,8 # Minus at 721.40; stackHeight = 56
             sw $t0,($sp)#**"" # Minus at 721.40; stackHeight = 48
            # EXIT NODE # Minus at 721.40; stackHeight = 48
           lw $t0,($sp) # Assign at 721.39; stackHeight = 48
           sw $t0,8($sp) # Assign at 721.39; stackHeight = 48
           addu $sp,$sp,8 # Assign at 721.39; stackHeight = 48
          # EXIT NODE # Assign at 721.39; stackHeight = 40
        # EXIT NODE # Block at 721.3; stackHeight = 40
      while_enter_3603: # While at 721.3; stackHeight = 40
        # ENTER NODE # Not at 721.33; stackHeight = 40
          # ENTER NODE # LessThan at 721.33; stackHeight = 40
            # ENTER NODE # IdentifierExp at 721.31; stackHeight = 40
             lw $t0,0($sp) # local: stackHt=40,var-offset=-40 # IdentifierExp at 721.31; stackHeight = 40
             subu $sp,$sp,8 # IdentifierExp at 721.31; stackHeight = 40
             sw $s5,4($sp)#**"GC tag" # IdentifierExp at 721.31; stackHeight = 48
             sw $t0,($sp)#**"" # IdentifierExp at 721.31; stackHeight = 48
            # EXIT NODE # IdentifierExp at 721.31; stackHeight = 48
            # ENTER NODE # IntegerLiteral at 721.36; stackHeight = 48
             subu $sp,$sp,8 # IntegerLiteral at 721.36; stackHeight = 48
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 721.36; stackHeight = 56
             li $t0,0 # IntegerLiteral at 721.36; stackHeight = 56
             sw $t0,($sp) # IntegerLiteral at 721.36; stackHeight = 56
            # EXIT NODE # IntegerLiteral at 721.36; stackHeight = 56
           lw $t0,($sp) # LessThan at 721.33; stackHeight = 56
           lw $t1,8($sp) # LessThan at 721.33; stackHeight = 56
           slt $t0,$t1,$t0 # LessThan at 721.33; stackHeight = 56
           addu $sp,$sp,12 # LessThan at 721.33; stackHeight = 56
           sw $t0,($sp)#**"" # LessThan at 721.33; stackHeight = 44
          # EXIT NODE # LessThan at 721.33; stackHeight = 44
         lw $t0,($sp) # Not at 721.33; stackHeight = 44
         xor $t0,$t0,1 # Not at 721.33; stackHeight = 44
         sw $t0,($sp)#**"" # Not at 721.33; stackHeight = 44
        # EXIT NODE # Not at 721.33; stackHeight = 44
       lw $t0,($sp) # While at 721.3; stackHeight = 44
       addu $sp,$sp,4 # While at 721.3; stackHeight = 44
      bne $t0,$zero,while_top_3603 # While at 721.3; stackHeight = 40
      break_target_3603: # While at 721.3; stackHeight = 40
      # EXIT NODE # While at 721.3; stackHeight = 40
     addu $sp,8 # Block at 721.3; stackHeight = 40
    # EXIT NODE # Block at 721.3; stackHeight = 32
    # ENTER NODE # If at 754.3; stackHeight = 32
      # ENTER NODE # Not at 754.16; stackHeight = 32
        # ENTER NODE # LessThan at 754.16; stackHeight = 32
          # ENTER NODE # IdentifierExp at 754.7; stackHeight = 32
           lw $t0,0($sp) # local: stackHt=32,var-offset=-32 # IdentifierExp at 754.7; stackHeight = 32
           subu $sp,$sp,8 # IdentifierExp at 754.7; stackHeight = 32
           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 754.7; stackHeight = 40
           sw $t0,($sp)#**"" # IdentifierExp at 754.7; stackHeight = 40
          # EXIT NODE # IdentifierExp at 754.7; stackHeight = 40
          # ENTER NODE # IntegerLiteral at 754.19; stackHeight = 40
           subu $sp,$sp,8 # IntegerLiteral at 754.19; stackHeight = 40
           sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 754.19; stackHeight = 48
           li $t0,0 # IntegerLiteral at 754.19; stackHeight = 48
           sw $t0,($sp) # IntegerLiteral at 754.19; stackHeight = 48
          # EXIT NODE # IntegerLiteral at 754.19; stackHeight = 48
         lw $t0,($sp) # LessThan at 754.16; stackHeight = 48
         lw $t1,8($sp) # LessThan at 754.16; stackHeight = 48
         slt $t0,$t1,$t0 # LessThan at 754.16; stackHeight = 48
         addu $sp,$sp,12 # LessThan at 754.16; stackHeight = 48
         sw $t0,($sp)#**"" # LessThan at 754.16; stackHeight = 36
        # EXIT NODE # LessThan at 754.16; stackHeight = 36
       lw $t0,($sp) # Not at 754.16; stackHeight = 36
       xor $t0,$t0,1 # Not at 754.16; stackHeight = 36
       sw $t0,($sp)#**"" # Not at 754.16; stackHeight = 36
      # EXIT NODE # Not at 754.16; stackHeight = 36
     lw $t0,($sp) # If at 754.3; stackHeight = 36
     addu $sp,$sp,4 # If at 754.3; stackHeight = 36
     beq $t0,$zero,if_else_3658 # If at 754.3; stackHeight = 32
      # ENTER NODE # Block at 754.22; stackHeight = 32
        # ENTER NODE # Assign at 755.11; stackHeight = 32
          # ENTER NODE # Call at 755.26; stackHeight = 32
            # ENTER NODE # NewObject at 755.13; stackHeight = 32
             li $s6,2 # NewObject at 755.13; stackHeight = 32
             li $s7,1 # NewObject at 755.13; stackHeight = 32
             jal newObject # NewObject at 755.13; stackHeight = 32
             la $t0,CLASS_BigInt # NewObject at 755.13; stackHeight = 36
             sw $t0,-12($s7)#**"VTP: BigInt" # NewObject at 755.13; stackHeight = 36
            # EXIT NODE # NewObject at 755.13; stackHeight = 36
            # ENTER NODE # IdentifierExp at 755.32; stackHeight = 36
             lw $t0,32($sp) # local: stackHt=36,var-offset=-4 # IdentifierExp at 755.32; stackHeight = 36
             subu $sp,$sp,4 # IdentifierExp at 755.32; stackHeight = 36
             sw $t0,($sp)#**"" # IdentifierExp at 755.32; stackHeight = 40
            # EXIT NODE # IdentifierExp at 755.32; stackHeight = 40
            # ENTER NODE # False at 755.43; stackHeight = 40
             subu $sp,$sp,4 # False at 755.43; stackHeight = 40
             sw $zero,($sp)#**"" # False at 755.43; stackHeight = 44
            # EXIT NODE # False at 755.43; stackHeight = 44
           lw $t0,8($sp) # Call at 755.26; stackHeight = 44
           beq $t0,$zero,nullPtrException # Call at 755.26; stackHeight = 44
           lw $t0,-12($t0) # Call at 755.26; stackHeight = 44
           lw $t0,16($t0) # Call at 755.26; stackHeight = 44
           jalr $t0 # init2 # Call at 755.26; stackHeight = 44
          # EXIT NODE # Call at 755.26; stackHeight = 36
         lw $t0,($sp) # Assign at 755.11; stackHeight = 36
         sw $t0,28($sp) # Assign at 755.11; stackHeight = 36
         addu $sp,$sp,4 # Assign at 755.11; stackHeight = 36
        # EXIT NODE # Assign at 755.11; stackHeight = 32
        # ENTER NODE # If at 756.4; stackHeight = 32
          # ENTER NODE # Equals at 756.17; stackHeight = 32
            # ENTER NODE # IdentifierExp at 756.8; stackHeight = 32
             lw $t0,0($sp) # local: stackHt=32,var-offset=-32 # IdentifierExp at 756.8; stackHeight = 32
             subu $sp,$sp,8 # IdentifierExp at 756.8; stackHeight = 32
             sw $s5,4($sp)#**"GC tag" # IdentifierExp at 756.8; stackHeight = 40
             sw $t0,($sp)#**"" # IdentifierExp at 756.8; stackHeight = 40
            # EXIT NODE # IdentifierExp at 756.8; stackHeight = 40
            # ENTER NODE # IntegerLiteral at 756.20; stackHeight = 40
             subu $sp,$sp,8 # IntegerLiteral at 756.20; stackHeight = 40
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 756.20; stackHeight = 48
             li $t0,1 # IntegerLiteral at 756.20; stackHeight = 48
             sw $t0,($sp) # IntegerLiteral at 756.20; stackHeight = 48
            # EXIT NODE # IntegerLiteral at 756.20; stackHeight = 48
           lw $t0,($sp) # Equals at 756.17; stackHeight = 48
           lw $t1,8($sp) # Equals at 756.17; stackHeight = 48
           seq $t0,$t0,$t1 # Equals at 756.17; stackHeight = 48
           addu $sp,$sp,12 # Equals at 756.17; stackHeight = 48
           sw $t0,($sp)#**"" # Equals at 756.17; stackHeight = 36
          # EXIT NODE # Equals at 756.17; stackHeight = 36
         lw $t0,($sp) # If at 756.4; stackHeight = 36
         addu $sp,$sp,4 # If at 756.4; stackHeight = 36
         beq $t0,$zero,if_else_3627 # If at 756.4; stackHeight = 32
          # ENTER NODE # Block at 756.23; stackHeight = 32
            # ENTER NODE # Assign at 757.17; stackHeight = 32
              # ENTER NODE # IdentifierExp at 757.5; stackHeight = 32
               lw $t0,24($sp) # local: stackHt=32,var-offset=-8 # IdentifierExp at 757.5; stackHeight = 32
               subu $sp,$sp,4 # IdentifierExp at 757.5; stackHeight = 32
               sw $t0,($sp)#**"" # IdentifierExp at 757.5; stackHeight = 36
              # EXIT NODE # IdentifierExp at 757.5; stackHeight = 36
              # ENTER NODE # Call at 757.23; stackHeight = 36
                # ENTER NODE # StringLiteral at 757.19; stackHeight = 36
                 subu $sp,$sp,4 # StringLiteral at 757.19; stackHeight = 36
                 la $t0,strLit_3236 # StringLiteral at 757.19; stackHeight = 40
                 sw $t0,($sp)#**"strLit:1" # StringLiteral at 757.19; stackHeight = 40
                # EXIT NODE # StringLiteral at 757.19; stackHeight = 40
                # ENTER NODE # IdentifierExp at 757.30; stackHeight = 40
                 lw $t0,36($sp) # local: stackHt=40,var-offset=-4 # IdentifierExp at 757.30; stackHeight = 40
                 subu $sp,$sp,4 # IdentifierExp at 757.30; stackHeight = 40
                 sw $t0,($sp)#**"" # IdentifierExp at 757.30; stackHeight = 44
                # EXIT NODE # IdentifierExp at 757.30; stackHeight = 44
               lw $t0,4($sp) # Call at 757.23; stackHeight = 44
               beq $t0,$zero,nullPtrException # Call at 757.23; stackHeight = 44
               lw $t0,-12($t0) # Call at 757.23; stackHeight = 44
               lw $t0,12($t0) # Call at 757.23; stackHeight = 44
               jalr $t0 # concat # Call at 757.23; stackHeight = 44
              # EXIT NODE # Call at 757.23; stackHeight = 40
             lw $t0,($sp) # Assign at 757.17; stackHeight = 40
             lw $t1,4($sp) # Assign at 757.17; stackHeight = 40
             beq $t1,$zero,nullPtrException # Assign at 757.17; stackHeight = 40
             sw $t0,0($t1) # Assign at 757.17; stackHeight = 40
             addu $sp,$sp,8 # Assign at 757.17; stackHeight = 40
            # EXIT NODE # Assign at 757.17; stackHeight = 32
          # EXIT NODE # Block at 756.23; stackHeight = 32
        j if_done_3627 # If at 756.4; stackHeight = 32
        if_else_3627: # If at 756.4; stackHeight = 32
          # ENTER NODE # Block at 759.3; stackHeight = 32
          # EXIT NODE # Block at 759.3; stackHeight = 32
        if_done_3627: # If at 756.4; stackHeight = 32
        # EXIT NODE # If at 756.4; stackHeight = 32
      # EXIT NODE # Block at 754.22; stackHeight = 32
    j if_done_3658 # If at 754.3; stackHeight = 32
    if_else_3658: # If at 754.3; stackHeight = 32
      # ENTER NODE # If at 760.8; stackHeight = 32
        # ENTER NODE # Equals at 760.21; stackHeight = 32
          # ENTER NODE # IdentifierExp at 760.12; stackHeight = 32
           lw $t0,0($sp) # local: stackHt=32,var-offset=-32 # IdentifierExp at 760.12; stackHeight = 32
           subu $sp,$sp,8 # IdentifierExp at 760.12; stackHeight = 32
           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 760.12; stackHeight = 40
           sw $t0,($sp)#**"" # IdentifierExp at 760.12; stackHeight = 40
          # EXIT NODE # IdentifierExp at 760.12; stackHeight = 40
          # ENTER NODE # Minus at 760.24; stackHeight = 40
            # ENTER NODE # IntegerLiteral at 760.24; stackHeight = 40
             subu $sp,$sp,8 # IntegerLiteral at 760.24; stackHeight = 40
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 760.24; stackHeight = 48
             li $t0,0 # IntegerLiteral at 760.24; stackHeight = 48
             sw $t0,($sp) # IntegerLiteral at 760.24; stackHeight = 48
            # EXIT NODE # IntegerLiteral at 760.24; stackHeight = 48
            # ENTER NODE # IntegerLiteral at 760.25; stackHeight = 48
             subu $sp,$sp,8 # IntegerLiteral at 760.25; stackHeight = 48
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 760.25; stackHeight = 56
             li $t0,1 # IntegerLiteral at 760.25; stackHeight = 56
             sw $t0,($sp) # IntegerLiteral at 760.25; stackHeight = 56
            # EXIT NODE # IntegerLiteral at 760.25; stackHeight = 56
           lw $t0,($sp) # Minus at 760.24; stackHeight = 56
           lw $t1,8($sp) # Minus at 760.24; stackHeight = 56
           subu $t0,$t1,$t0 # Minus at 760.24; stackHeight = 56
           addu $sp,$sp,8 # Minus at 760.24; stackHeight = 56
           sw $t0,($sp)#**"" # Minus at 760.24; stackHeight = 48
          # EXIT NODE # Minus at 760.24; stackHeight = 48
         lw $t0,($sp) # Equals at 760.21; stackHeight = 48
         lw $t1,8($sp) # Equals at 760.21; stackHeight = 48
         seq $t0,$t0,$t1 # Equals at 760.21; stackHeight = 48
         addu $sp,$sp,12 # Equals at 760.21; stackHeight = 48
         sw $t0,($sp)#**"" # Equals at 760.21; stackHeight = 36
        # EXIT NODE # Equals at 760.21; stackHeight = 36
       lw $t0,($sp) # If at 760.8; stackHeight = 36
       addu $sp,$sp,4 # If at 760.8; stackHeight = 36
       beq $t0,$zero,if_else_3657 # If at 760.8; stackHeight = 32
        # ENTER NODE # Block at 760.28; stackHeight = 32
          # ENTER NODE # LocalVarDecl at 761.11; stackHeight = 32
            # ENTER NODE # Call at 761.22; stackHeight = 32
              # ENTER NODE # StringLiteral at 761.18; stackHeight = 32
               subu $sp,$sp,4 # StringLiteral at 761.18; stackHeight = 32
               la $t0,strLit_3236 # StringLiteral at 761.18; stackHeight = 36
               sw $t0,($sp)#**"strLit:1" # StringLiteral at 761.18; stackHeight = 36
              # EXIT NODE # StringLiteral at 761.18; stackHeight = 36
              # ENTER NODE # Call at 761.29; stackHeight = 36
                # ENTER NODE # This at 761.29; stackHeight = 36
                 subu $sp,$sp,4 # This at 761.29; stackHeight = 36
                 sw $s2,($sp)#**"" # This at 761.29; stackHeight = 40
                # EXIT NODE # This at 761.29; stackHeight = 40
                # ENTER NODE # StringLiteral at 761.42; stackHeight = 40
                 subu $sp,$sp,4 # StringLiteral at 761.42; stackHeight = 40
                 la $t0,strLit_2646 # StringLiteral at 761.42; stackHeight = 44
                 sw $t0,($sp)#**"strLit:0" # StringLiteral at 761.42; stackHeight = 44
                # EXIT NODE # StringLiteral at 761.42; stackHeight = 44
                # ENTER NODE # Call at 761.57; stackHeight = 44
                  # ENTER NODE # IdentifierExp at 761.46; stackHeight = 44
                   lw $t0,40($sp) # local: stackHt=44,var-offset=-4 # IdentifierExp at 761.46; stackHeight = 44
                   subu $sp,$sp,4 # IdentifierExp at 761.46; stackHeight = 44
                   sw $t0,($sp)#**"" # IdentifierExp at 761.46; stackHeight = 48
                  # EXIT NODE # IdentifierExp at 761.46; stackHeight = 48
                 lw $t0,0($sp) # Call at 761.57; stackHeight = 48
                 beq $t0,$zero,nullPtrException # Call at 761.57; stackHeight = 48
                 lw $t0,-12($t0) # Call at 761.57; stackHeight = 48
                 lw $t0,20($t0) # Call at 761.57; stackHeight = 48
                 jalr $t0 # length # Call at 761.57; stackHeight = 48
                # EXIT NODE # Call at 761.57; stackHeight = 52
               lw $t0,12($sp) # Call at 761.29; stackHeight = 52
               beq $t0,$zero,nullPtrException # Call at 761.29; stackHeight = 52
               lw $t0,-12($t0) # Call at 761.29; stackHeight = 52
               lw $t0,100($t0) # Call at 761.29; stackHeight = 52
               jalr $t0 # repeatString # Call at 761.29; stackHeight = 52
              # EXIT NODE # Call at 761.29; stackHeight = 40
             lw $t0,4($sp) # Call at 761.22; stackHeight = 40
             beq $t0,$zero,nullPtrException # Call at 761.22; stackHeight = 40
             lw $t0,-12($t0) # Call at 761.22; stackHeight = 40
             lw $t0,12($t0) # Call at 761.22; stackHeight = 40
             jalr $t0 # concat # Call at 761.22; stackHeight = 40
            # EXIT NODE # Call at 761.22; stackHeight = 36
          # EXIT NODE # LocalVarDecl at 761.11; stackHeight = 36
          # ENTER NODE # Assign at 762.11; stackHeight = 36
            # ENTER NODE # Call at 762.13; stackHeight = 36
              # ENTER NODE # This at 762.13; stackHeight = 36
               subu $sp,$sp,4 # This at 762.13; stackHeight = 36
               sw $s2,($sp)#**"" # This at 762.13; stackHeight = 40
              # EXIT NODE # This at 762.13; stackHeight = 40
              # ENTER NODE # IdentifierExp at 762.26; stackHeight = 40
               lw $t0,4($sp) # local: stackHt=40,var-offset=-36 # IdentifierExp at 762.26; stackHeight = 40
               subu $sp,$sp,4 # IdentifierExp at 762.26; stackHeight = 40
               sw $t0,($sp)#**"" # IdentifierExp at 762.26; stackHeight = 44
              # EXIT NODE # IdentifierExp at 762.26; stackHeight = 44
              # ENTER NODE # IdentifierExp at 762.31; stackHeight = 44
               lw $t0,40($sp) # local: stackHt=44,var-offset=-4 # IdentifierExp at 762.31; stackHeight = 44
               subu $sp,$sp,4 # IdentifierExp at 762.31; stackHeight = 44
               sw $t0,($sp)#**"" # IdentifierExp at 762.31; stackHeight = 48
              # EXIT NODE # IdentifierExp at 762.31; stackHeight = 48
              # ENTER NODE # True at 762.42; stackHeight = 48
               subu $sp,$sp,4 # True at 762.42; stackHeight = 48
               li $t0,1 # True at 762.42; stackHeight = 52
               sw $t0,($sp)#**"" # True at 762.42; stackHeight = 52
              # EXIT NODE # True at 762.42; stackHeight = 52
             lw $t0,12($sp) # Call at 762.13; stackHeight = 52
             beq $t0,$zero,nullPtrException # Call at 762.13; stackHeight = 52
             lw $t0,-12($t0) # Call at 762.13; stackHeight = 52
             lw $t0,92($t0) # Call at 762.13; stackHeight = 52
             jalr $t0 # primitiveAdd # Call at 762.13; stackHeight = 52
            # EXIT NODE # Call at 762.13; stackHeight = 40
           lw $t0,($sp) # Assign at 762.11; stackHeight = 40
           sw $t0,32($sp) # Assign at 762.11; stackHeight = 40
           addu $sp,$sp,4 # Assign at 762.11; stackHeight = 40
          # EXIT NODE # Assign at 762.11; stackHeight = 36
          # ENTER NODE # Assign at 763.17; stackHeight = 36
            # ENTER NODE # IdentifierExp at 763.4; stackHeight = 36
             lw $t0,28($sp) # local: stackHt=36,var-offset=-8 # IdentifierExp at 763.4; stackHeight = 36
             subu $sp,$sp,4 # IdentifierExp at 763.4; stackHeight = 36
             sw $t0,($sp)#**"" # IdentifierExp at 763.4; stackHeight = 40
            # EXIT NODE # IdentifierExp at 763.4; stackHeight = 40
            # ENTER NODE # True at 763.19; stackHeight = 40
             subu $sp,$sp,4 # True at 763.19; stackHeight = 40
             li $t0,1 # True at 763.19; stackHeight = 44
             sw $t0,($sp)#**"" # True at 763.19; stackHeight = 44
            # EXIT NODE # True at 763.19; stackHeight = 44
           lw $t0,($sp) # Assign at 763.17; stackHeight = 44
           lw $t1,4($sp) # Assign at 763.17; stackHeight = 44
           beq $t1,$zero,nullPtrException # Assign at 763.17; stackHeight = 44
           sw $t0,-16($t1) # Assign at 763.17; stackHeight = 44
           addu $sp,$sp,8 # Assign at 763.17; stackHeight = 44
          # EXIT NODE # Assign at 763.17; stackHeight = 36
         addu $sp,4 # Block at 760.28; stackHeight = 36
        # EXIT NODE # Block at 760.28; stackHeight = 32
      j if_done_3657 # If at 760.8; stackHeight = 32
      if_else_3657: # If at 760.8; stackHeight = 32
        # ENTER NODE # Block at 765.3; stackHeight = 32
        # EXIT NODE # Block at 765.3; stackHeight = 32
      if_done_3657: # If at 760.8; stackHeight = 32
      # EXIT NODE # If at 760.8; stackHeight = 32
    if_done_3658: # If at 754.3; stackHeight = 32
    # EXIT NODE # If at 754.3; stackHeight = 32
    # ENTER NODE # Assign at 765.15; stackHeight = 32
      # ENTER NODE # IdentifierExp at 765.3; stackHeight = 32
       lw $t0,24($sp) # local: stackHt=32,var-offset=-8 # IdentifierExp at 765.3; stackHeight = 32
       subu $sp,$sp,4 # IdentifierExp at 765.3; stackHeight = 32
       sw $t0,($sp)#**"" # IdentifierExp at 765.3; stackHeight = 36
      # EXIT NODE # IdentifierExp at 765.3; stackHeight = 36
      # ENTER NODE # Call at 765.17; stackHeight = 36
        # ENTER NODE # This at 765.17; stackHeight = 36
         subu $sp,$sp,4 # This at 765.17; stackHeight = 36
         sw $s2,($sp)#**"" # This at 765.17; stackHeight = 40
        # EXIT NODE # This at 765.17; stackHeight = 40
        # ENTER NODE # InstVarAccess at 765.44; stackHeight = 40
          # ENTER NODE # IdentifierExp at 765.38; stackHeight = 40
           lw $t0,32($sp) # local: stackHt=40,var-offset=-8 # IdentifierExp at 765.38; stackHeight = 40
           subu $sp,$sp,4 # IdentifierExp at 765.38; stackHeight = 40
           sw $t0,($sp)#**"" # IdentifierExp at 765.38; stackHeight = 44
          # EXIT NODE # IdentifierExp at 765.38; stackHeight = 44
         lw $t0,($sp) # InstVarAccess at 765.44; stackHeight = 44
         beq $t0,$zero,nullPtrException # InstVarAccess at 765.44; stackHeight = 44
         lw $t0,0($t0) # InstVarAccess at 765.44; stackHeight = 44
         sw $t0,($sp)#**"" # InstVarAccess at 765.44; stackHeight = 44
        # EXIT NODE # InstVarAccess at 765.44; stackHeight = 44
       lw $t0,4($sp) # Call at 765.17; stackHeight = 44
       beq $t0,$zero,nullPtrException # Call at 765.17; stackHeight = 44
       lw $t0,-12($t0) # Call at 765.17; stackHeight = 44
       lw $t0,104($t0) # Call at 765.17; stackHeight = 44
       jalr $t0 # truncateLeadingZeros # Call at 765.17; stackHeight = 44
      # EXIT NODE # Call at 765.17; stackHeight = 40
     lw $t0,($sp) # Assign at 765.15; stackHeight = 40
     lw $t1,4($sp) # Assign at 765.15; stackHeight = 40
     beq $t1,$zero,nullPtrException # Assign at 765.15; stackHeight = 40
     sw $t0,0($t1) # Assign at 765.15; stackHeight = 40
     addu $sp,$sp,8 # Assign at 765.15; stackHeight = 40
    # EXIT NODE # Assign at 765.15; stackHeight = 32
    # ENTER NODE # IdentifierExp at 766.10; stackHeight = 32
     lw $t0,24($sp) # local: stackHt=32,var-offset=-8 # IdentifierExp at 766.10; stackHeight = 32
     subu $sp,$sp,4 # IdentifierExp at 766.10; stackHeight = 32
     sw $t0,($sp)#**"" # IdentifierExp at 766.10; stackHeight = 36
    # EXIT NODE # IdentifierExp at 766.10; stackHeight = 36
   lw $ra,52($sp) # MethodDeclNonVoid at 709.16; stackHeight = 36
   lw $s2,36($sp) # MethodDeclNonVoid at 709.16; stackHeight = 36
   lw $t0,($sp) # MethodDeclNonVoid at 709.16; stackHeight = 36
   sw $t0,52($sp)#**"(return-val)" # MethodDeclNonVoid at 709.16; stackHeight = 36
   addu $sp,$sp,52 # MethodDeclNonVoid at 709.16; stackHeight = 36
  jr $ra # MethodDeclNonVoid at 709.16; stackHeight = -16
  # EXIT NODE # MethodDeclNonVoid at 709.16; stackHeight = -16
  # ENTER NODE # MethodDeclNonVoid at 769.16; stackHeight = -16
  .globl fcn_3786_primitiveReciprocal # MethodDeclNonVoid at 769.16; stackHeight = -16
  fcn_3786_primitiveReciprocal: # MethodDeclNonVoid at 769.16; stackHeight = -16
   subu $sp,$sp,4 # MethodDeclNonVoid at 769.16; stackHeight = -16
   sw $s2,($sp) #**"old this-ptr" # MethodDeclNonVoid at 769.16; stackHeight = -16
   lw $s2,16($sp) #**"this-ptr" # MethodDeclNonVoid at 769.16; stackHeight = -16
   sw $ra,16($sp) #**"RA:primitiveReciprocal" # MethodDeclNonVoid at 769.16; stackHeight = -16
    # ENTER NODE # LocalVarDecl at 779.10; stackHeight = 0
      # ENTER NODE # StringLiteral at 779.15; stackHeight = 0
       subu $sp,$sp,4 # StringLiteral at 779.15; stackHeight = 0
       la $t0,strLit_3236 # StringLiteral at 779.15; stackHeight = 4
       sw $t0,($sp)#**"strLit:1" # StringLiteral at 779.15; stackHeight = 4
      # EXIT NODE # StringLiteral at 779.15; stackHeight = 4
    # EXIT NODE # LocalVarDecl at 779.10; stackHeight = 4
    # ENTER NODE # If at 781.3; stackHeight = 4
      # ENTER NODE # Not at 781.7; stackHeight = 4
        # ENTER NODE # Call at 781.10; stackHeight = 4
          # ENTER NODE # IdentifierExp at 781.8; stackHeight = 4
           lw $t0,16($sp) # local: stackHt=4,var-offset=12 # IdentifierExp at 781.8; stackHeight = 4
           subu $sp,$sp,4 # IdentifierExp at 781.8; stackHeight = 4
           sw $t0,($sp)#**"" # IdentifierExp at 781.8; stackHeight = 8
          # EXIT NODE # IdentifierExp at 781.8; stackHeight = 8
          # ENTER NODE # StringLiteral at 781.17; stackHeight = 8
           subu $sp,$sp,4 # StringLiteral at 781.17; stackHeight = 8
           la $t0,strLit_2646 # StringLiteral at 781.17; stackHeight = 12
           sw $t0,($sp)#**"strLit:0" # StringLiteral at 781.17; stackHeight = 12
          # EXIT NODE # StringLiteral at 781.17; stackHeight = 12
         lw $t0,4($sp) # Call at 781.10; stackHeight = 12
         beq $t0,$zero,nullPtrException # Call at 781.10; stackHeight = 12
         lw $t0,-12($t0) # Call at 781.10; stackHeight = 12
         lw $t0,4($t0) # Call at 781.10; stackHeight = 12
         jalr $t0 # equals # Call at 781.10; stackHeight = 12
        # EXIT NODE # Call at 781.10; stackHeight = 8
       lw $t0,($sp) # Not at 781.7; stackHeight = 8
       xor $t0,$t0,1 # Not at 781.7; stackHeight = 8
       sw $t0,($sp)#**"" # Not at 781.7; stackHeight = 8
      # EXIT NODE # Not at 781.7; stackHeight = 8
     lw $t0,($sp) # If at 781.3; stackHeight = 8
     addu $sp,$sp,4 # If at 781.3; stackHeight = 8
     beq $t0,$zero,if_else_3784 # If at 781.3; stackHeight = 4
      # ENTER NODE # Block at 781.23; stackHeight = 4
        # ENTER NODE # If at 783.4; stackHeight = 4
          # ENTER NODE # GreaterThan at 783.19; stackHeight = 4
            # ENTER NODE # Call at 783.10; stackHeight = 4
              # ENTER NODE # IdentifierExp at 783.8; stackHeight = 4
               lw $t0,16($sp) # local: stackHt=4,var-offset=12 # IdentifierExp at 783.8; stackHeight = 4
               subu $sp,$sp,4 # IdentifierExp at 783.8; stackHeight = 4
               sw $t0,($sp)#**"" # IdentifierExp at 783.8; stackHeight = 8
              # EXIT NODE # IdentifierExp at 783.8; stackHeight = 8
             lw $t0,0($sp) # Call at 783.10; stackHeight = 8
             beq $t0,$zero,nullPtrException # Call at 783.10; stackHeight = 8
             lw $t0,-12($t0) # Call at 783.10; stackHeight = 8
             lw $t0,20($t0) # Call at 783.10; stackHeight = 8
             jalr $t0 # length # Call at 783.10; stackHeight = 8
            # EXIT NODE # Call at 783.10; stackHeight = 12
            # ENTER NODE # IdentifierExp at 783.21; stackHeight = 12
             lw $t0,16($sp) # local: stackHt=12,var-offset=4 # IdentifierExp at 783.21; stackHeight = 12
             subu $sp,$sp,8 # IdentifierExp at 783.21; stackHeight = 12
             sw $s5,4($sp)#**"GC tag" # IdentifierExp at 783.21; stackHeight = 20
             sw $t0,($sp)#**"" # IdentifierExp at 783.21; stackHeight = 20
            # EXIT NODE # IdentifierExp at 783.21; stackHeight = 20
           lw $t0,($sp) # GreaterThan at 783.19; stackHeight = 20
           lw $t1,8($sp) # GreaterThan at 783.19; stackHeight = 20
           sgt $t0,$t1,$t0 # GreaterThan at 783.19; stackHeight = 20
           addu $sp,$sp,12 # GreaterThan at 783.19; stackHeight = 20
           sw $t0,($sp)#**"" # GreaterThan at 783.19; stackHeight = 8
          # EXIT NODE # GreaterThan at 783.19; stackHeight = 8
         lw $t0,($sp) # If at 783.4; stackHeight = 8
         addu $sp,$sp,4 # If at 783.4; stackHeight = 8
         beq $t0,$zero,if_else_3781 # If at 783.4; stackHeight = 4
          # ENTER NODE # Block at 783.29; stackHeight = 4
            # ENTER NODE # Assign at 784.8; stackHeight = 4
              # ENTER NODE # StringLiteral at 784.10; stackHeight = 4
               subu $sp,$sp,4 # StringLiteral at 784.10; stackHeight = 4
               la $t0,strLit_2646 # StringLiteral at 784.10; stackHeight = 8
               sw $t0,($sp)#**"strLit:0" # StringLiteral at 784.10; stackHeight = 8
              # EXIT NODE # StringLiteral at 784.10; stackHeight = 8
             lw $t0,($sp) # Assign at 784.8; stackHeight = 8
             sw $t0,4($sp) # Assign at 784.8; stackHeight = 8
             addu $sp,$sp,4 # Assign at 784.8; stackHeight = 8
            # EXIT NODE # Assign at 784.8; stackHeight = 4
          # EXIT NODE # Block at 783.29; stackHeight = 4
        j if_done_3781 # If at 783.4; stackHeight = 4
        if_else_3781: # If at 783.4; stackHeight = 4
          # ENTER NODE # Block at 786.9; stackHeight = 4
            # ENTER NODE # LocalVarDecl at 790.9; stackHeight = 4
              # ENTER NODE # Minus at 790.27; stackHeight = 4
                # ENTER NODE # IdentifierExp at 790.20; stackHeight = 4
                 lw $t0,8($sp) # local: stackHt=4,var-offset=4 # IdentifierExp at 790.20; stackHeight = 4
                 subu $sp,$sp,8 # IdentifierExp at 790.20; stackHeight = 4
                 sw $s5,4($sp)#**"GC tag" # IdentifierExp at 790.20; stackHeight = 12
                 sw $t0,($sp)#**"" # IdentifierExp at 790.20; stackHeight = 12
                # EXIT NODE # IdentifierExp at 790.20; stackHeight = 12
                # ENTER NODE # Call at 790.31; stackHeight = 12
                  # ENTER NODE # IdentifierExp at 790.29; stackHeight = 12
                   lw $t0,24($sp) # local: stackHt=12,var-offset=12 # IdentifierExp at 790.29; stackHeight = 12
                   subu $sp,$sp,4 # IdentifierExp at 790.29; stackHeight = 12
                   sw $t0,($sp)#**"" # IdentifierExp at 790.29; stackHeight = 16
                  # EXIT NODE # IdentifierExp at 790.29; stackHeight = 16
                 lw $t0,0($sp) # Call at 790.31; stackHeight = 16
                 beq $t0,$zero,nullPtrException # Call at 790.31; stackHeight = 16
                 lw $t0,-12($t0) # Call at 790.31; stackHeight = 16
                 lw $t0,20($t0) # Call at 790.31; stackHeight = 16
                 jalr $t0 # length # Call at 790.31; stackHeight = 16
                # EXIT NODE # Call at 790.31; stackHeight = 20
               lw $t0,($sp) # Minus at 790.27; stackHeight = 20
               lw $t1,8($sp) # Minus at 790.27; stackHeight = 20
               subu $t0,$t1,$t0 # Minus at 790.27; stackHeight = 20
               addu $sp,$sp,8 # Minus at 790.27; stackHeight = 20
               sw $t0,($sp)#**"" # Minus at 790.27; stackHeight = 12
              # EXIT NODE # Minus at 790.27; stackHeight = 12
            # EXIT NODE # LocalVarDecl at 790.9; stackHeight = 12
            # ENTER NODE # If at 791.5; stackHeight = 12
              # ENTER NODE # LessThan at 791.18; stackHeight = 12
                # ENTER NODE # IdentifierExp at 791.9; stackHeight = 12
                 lw $t0,0($sp) # local: stackHt=12,var-offset=-12 # IdentifierExp at 791.9; stackHeight = 12
                 subu $sp,$sp,8 # IdentifierExp at 791.9; stackHeight = 12
                 sw $s5,4($sp)#**"GC tag" # IdentifierExp at 791.9; stackHeight = 20
                 sw $t0,($sp)#**"" # IdentifierExp at 791.9; stackHeight = 20
                # EXIT NODE # IdentifierExp at 791.9; stackHeight = 20
                # ENTER NODE # IntegerLiteral at 791.20; stackHeight = 20
                 subu $sp,$sp,8 # IntegerLiteral at 791.20; stackHeight = 20
                 sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 791.20; stackHeight = 28
                 li $t0,0 # IntegerLiteral at 791.20; stackHeight = 28
                 sw $t0,($sp) # IntegerLiteral at 791.20; stackHeight = 28
                # EXIT NODE # IntegerLiteral at 791.20; stackHeight = 28
               lw $t0,($sp) # LessThan at 791.18; stackHeight = 28
               lw $t1,8($sp) # LessThan at 791.18; stackHeight = 28
               slt $t0,$t1,$t0 # LessThan at 791.18; stackHeight = 28
               addu $sp,$sp,12 # LessThan at 791.18; stackHeight = 28
               sw $t0,($sp)#**"" # LessThan at 791.18; stackHeight = 16
              # EXIT NODE # LessThan at 791.18; stackHeight = 16
             lw $t0,($sp) # If at 791.5; stackHeight = 16
             addu $sp,$sp,4 # If at 791.5; stackHeight = 16
             beq $t0,$zero,if_else_3704 # If at 791.5; stackHeight = 12
              # ENTER NODE # Block at 791.23; stackHeight = 12
                # ENTER NODE # Assign at 792.15; stackHeight = 12
                  # ENTER NODE # IntegerLiteral at 792.17; stackHeight = 12
                   subu $sp,$sp,8 # IntegerLiteral at 792.17; stackHeight = 12
                   sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 792.17; stackHeight = 20
                   li $t0,0 # IntegerLiteral at 792.17; stackHeight = 20
                   sw $t0,($sp) # IntegerLiteral at 792.17; stackHeight = 20
                  # EXIT NODE # IntegerLiteral at 792.17; stackHeight = 20
                 lw $t0,($sp) # Assign at 792.15; stackHeight = 20
                 sw $t0,8($sp) # Assign at 792.15; stackHeight = 20
                 addu $sp,$sp,8 # Assign at 792.15; stackHeight = 20
                # EXIT NODE # Assign at 792.15; stackHeight = 12
              # EXIT NODE # Block at 791.23; stackHeight = 12
            j if_done_3704 # If at 791.5; stackHeight = 12
            if_else_3704: # If at 791.5; stackHeight = 12
              # ENTER NODE # Block at 794.5; stackHeight = 12
              # EXIT NODE # Block at 794.5; stackHeight = 12
            if_done_3704: # If at 791.5; stackHeight = 12
            # EXIT NODE # If at 791.5; stackHeight = 12
            # ENTER NODE # Assign at 794.8; stackHeight = 12
              # ENTER NODE # Call at 794.14; stackHeight = 12
                # ENTER NODE # StringLiteral at 794.10; stackHeight = 12
                 subu $sp,$sp,4 # StringLiteral at 794.10; stackHeight = 12
                 la $t0,strLit_3236 # StringLiteral at 794.10; stackHeight = 16
                 sw $t0,($sp)#**"strLit:1" # StringLiteral at 794.10; stackHeight = 16
                # EXIT NODE # StringLiteral at 794.10; stackHeight = 16
                # ENTER NODE # Call at 794.21; stackHeight = 16
                  # ENTER NODE # This at 794.21; stackHeight = 16
                   subu $sp,$sp,4 # This at 794.21; stackHeight = 16
                   sw $s2,($sp)#**"" # This at 794.21; stackHeight = 20
                  # EXIT NODE # This at 794.21; stackHeight = 20
                  # ENTER NODE # StringLiteral at 794.34; stackHeight = 20
                   subu $sp,$sp,4 # StringLiteral at 794.34; stackHeight = 20
                   la $t0,strLit_3236 # StringLiteral at 794.34; stackHeight = 24
                   sw $t0,($sp)#**"strLit:1" # StringLiteral at 794.34; stackHeight = 24
                  # EXIT NODE # StringLiteral at 794.34; stackHeight = 24
                  # ENTER NODE # IdentifierExp at 794.39; stackHeight = 24
                   lw $t0,12($sp) # local: stackHt=24,var-offset=-12 # IdentifierExp at 794.39; stackHeight = 24
                   subu $sp,$sp,8 # IdentifierExp at 794.39; stackHeight = 24
                   sw $s5,4($sp)#**"GC tag" # IdentifierExp at 794.39; stackHeight = 32
                   sw $t0,($sp)#**"" # IdentifierExp at 794.39; stackHeight = 32
                  # EXIT NODE # IdentifierExp at 794.39; stackHeight = 32
                 lw $t0,12($sp) # Call at 794.21; stackHeight = 32
                 beq $t0,$zero,nullPtrException # Call at 794.21; stackHeight = 32
                 lw $t0,-12($t0) # Call at 794.21; stackHeight = 32
                 lw $t0,100($t0) # Call at 794.21; stackHeight = 32
                 jalr $t0 # repeatString # Call at 794.21; stackHeight = 32
                # EXIT NODE # Call at 794.21; stackHeight = 20
               lw $t0,4($sp) # Call at 794.14; stackHeight = 20
               beq $t0,$zero,nullPtrException # Call at 794.14; stackHeight = 20
               lw $t0,-12($t0) # Call at 794.14; stackHeight = 20
               lw $t0,12($t0) # Call at 794.14; stackHeight = 20
               jalr $t0 # concat # Call at 794.14; stackHeight = 20
              # EXIT NODE # Call at 794.14; stackHeight = 16
             lw $t0,($sp) # Assign at 794.8; stackHeight = 16
             sw $t0,12($sp) # Assign at 794.8; stackHeight = 16
             addu $sp,$sp,4 # Assign at 794.8; stackHeight = 16
            # EXIT NODE # Assign at 794.8; stackHeight = 12
            # ENTER NODE # LocalVarDecl at 796.12; stackHeight = 12
              # ENTER NODE # StringLiteral at 796.18; stackHeight = 12
               subu $sp,$sp,4 # StringLiteral at 796.18; stackHeight = 12
               la $t0,strLit_3401 # StringLiteral at 796.18; stackHeight = 16
               sw $t0,($sp)#**"strLit:" # StringLiteral at 796.18; stackHeight = 16
              # EXIT NODE # StringLiteral at 796.18; stackHeight = 16
            # EXIT NODE # LocalVarDecl at 796.12; stackHeight = 16
            # ENTER NODE # Block at 797.5; stackHeight = 16
              # ENTER NODE # Block at 797.10; stackHeight = 16
              # EXIT NODE # Block at 797.10; stackHeight = 16
              # ENTER NODE # While at 797.5; stackHeight = 16
              j while_enter_3778 # While at 797.5; stackHeight = 16
              while_top_3778: # While at 797.5; stackHeight = 16
                # ENTER NODE # Block at 797.5; stackHeight = 16
                  # ENTER NODE # Block at 797.14; stackHeight = 16
                    # ENTER NODE # LocalVarDecl at 798.13; stackHeight = 16
                      # ENTER NODE # IdentifierExp at 798.20; stackHeight = 16
                       lw $t0,0($sp) # local: stackHt=16,var-offset=-16 # IdentifierExp at 798.20; stackHeight = 16
                       subu $sp,$sp,4 # IdentifierExp at 798.20; stackHeight = 16
                       sw $t0,($sp)#**"" # IdentifierExp at 798.20; stackHeight = 20
                      # EXIT NODE # IdentifierExp at 798.20; stackHeight = 20
                    # EXIT NODE # LocalVarDecl at 798.13; stackHeight = 20
                    # ENTER NODE # Assign at 799.10; stackHeight = 20
                      # ENTER NODE # IdentifierExp at 799.12; stackHeight = 20
                       lw $t0,16($sp) # local: stackHt=20,var-offset=-4 # IdentifierExp at 799.12; stackHeight = 20
                       subu $sp,$sp,4 # IdentifierExp at 799.12; stackHeight = 20
                       sw $t0,($sp)#**"" # IdentifierExp at 799.12; stackHeight = 24
                      # EXIT NODE # IdentifierExp at 799.12; stackHeight = 24
                     lw $t0,($sp) # Assign at 799.10; stackHeight = 24
                     sw $t0,8($sp) # Assign at 799.10; stackHeight = 24
                     addu $sp,$sp,4 # Assign at 799.10; stackHeight = 24
                    # EXIT NODE # Assign at 799.10; stackHeight = 20
                    # ENTER NODE # LocalVarDecl at 800.13; stackHeight = 20
                      # ENTER NODE # InstVarAccess at 800.46; stackHeight = 20
                        # ENTER NODE # Call at 800.21; stackHeight = 20
                          # ENTER NODE # This at 800.21; stackHeight = 20
                           subu $sp,$sp,4 # This at 800.21; stackHeight = 20
                           sw $s2,($sp)#**"" # This at 800.21; stackHeight = 24
                          # EXIT NODE # This at 800.21; stackHeight = 24
                          # ENTER NODE # IdentifierExp at 800.34; stackHeight = 24
                           lw $t0,20($sp) # local: stackHt=24,var-offset=-4 # IdentifierExp at 800.34; stackHeight = 24
                           subu $sp,$sp,4 # IdentifierExp at 800.34; stackHeight = 24
                           sw $t0,($sp)#**"" # IdentifierExp at 800.34; stackHeight = 28
                          # EXIT NODE # IdentifierExp at 800.34; stackHeight = 28
                          # ENTER NODE # IdentifierExp at 800.37; stackHeight = 28
                           lw $t0,24($sp) # local: stackHt=28,var-offset=-4 # IdentifierExp at 800.37; stackHeight = 28
                           subu $sp,$sp,4 # IdentifierExp at 800.37; stackHeight = 28
                           sw $t0,($sp)#**"" # IdentifierExp at 800.37; stackHeight = 32
                          # EXIT NODE # IdentifierExp at 800.37; stackHeight = 32
                          # ENTER NODE # False at 800.40; stackHeight = 32
                           subu $sp,$sp,4 # False at 800.40; stackHeight = 32
                           sw $zero,($sp)#**"" # False at 800.40; stackHeight = 36
                          # EXIT NODE # False at 800.40; stackHeight = 36
                         lw $t0,12($sp) # Call at 800.21; stackHeight = 36
                         beq $t0,$zero,nullPtrException # Call at 800.21; stackHeight = 36
                         lw $t0,-12($t0) # Call at 800.21; stackHeight = 36
                         lw $t0,92($t0) # Call at 800.21; stackHeight = 36
                         jalr $t0 # primitiveAdd # Call at 800.21; stackHeight = 36
                        # EXIT NODE # Call at 800.21; stackHeight = 24
                       lw $t0,($sp) # InstVarAccess at 800.46; stackHeight = 24
                       beq $t0,$zero,nullPtrException # InstVarAccess at 800.46; stackHeight = 24
                       lw $t0,0($t0) # InstVarAccess at 800.46; stackHeight = 24
                       sw $t0,($sp)#**"" # InstVarAccess at 800.46; stackHeight = 24
                      # EXIT NODE # InstVarAccess at 800.46; stackHeight = 24
                    # EXIT NODE # LocalVarDecl at 800.13; stackHeight = 24
                    # ENTER NODE # LocalVarDecl at 801.13; stackHeight = 24
                      # ENTER NODE # Call at 801.20; stackHeight = 24
                        # ENTER NODE # This at 801.20; stackHeight = 24
                         subu $sp,$sp,4 # This at 801.20; stackHeight = 24
                         sw $s2,($sp)#**"" # This at 801.20; stackHeight = 28
                        # EXIT NODE # This at 801.20; stackHeight = 28
                        # ENTER NODE # IdentifierExp at 801.34; stackHeight = 28
                         lw $t0,40($sp) # local: stackHt=28,var-offset=12 # IdentifierExp at 801.34; stackHeight = 28
                         subu $sp,$sp,4 # IdentifierExp at 801.34; stackHeight = 28
                         sw $t0,($sp)#**"" # IdentifierExp at 801.34; stackHeight = 32
                        # EXIT NODE # IdentifierExp at 801.34; stackHeight = 32
                        # ENTER NODE # IdentifierExp at 801.36; stackHeight = 32
                         lw $t0,28($sp) # local: stackHt=32,var-offset=-4 # IdentifierExp at 801.36; stackHeight = 32
                         subu $sp,$sp,4 # IdentifierExp at 801.36; stackHeight = 32
                         sw $t0,($sp)#**"" # IdentifierExp at 801.36; stackHeight = 36
                        # EXIT NODE # IdentifierExp at 801.36; stackHeight = 36
                       lw $t0,8($sp) # Call at 801.20; stackHeight = 36
                       beq $t0,$zero,nullPtrException # Call at 801.20; stackHeight = 36
                       lw $t0,-12($t0) # Call at 801.20; stackHeight = 36
                       lw $t0,52($t0) # Call at 801.20; stackHeight = 36
                       jalr $t0 # primitiveMult # Call at 801.20; stackHeight = 36
                      # EXIT NODE # Call at 801.20; stackHeight = 28
                    # EXIT NODE # LocalVarDecl at 801.13; stackHeight = 28
                    # ENTER NODE # Assign at 802.11; stackHeight = 28
                      # ENTER NODE # Call at 802.13; stackHeight = 28
                        # ENTER NODE # This at 802.13; stackHeight = 28
                         subu $sp,$sp,4 # This at 802.13; stackHeight = 28
                         sw $s2,($sp)#**"" # This at 802.13; stackHeight = 32
                        # EXIT NODE # This at 802.13; stackHeight = 32
                        # ENTER NODE # IdentifierExp at 802.27; stackHeight = 32
                         lw $t0,4($sp) # local: stackHt=32,var-offset=-28 # IdentifierExp at 802.27; stackHeight = 32
                         subu $sp,$sp,4 # IdentifierExp at 802.27; stackHeight = 32
                         sw $t0,($sp)#**"" # IdentifierExp at 802.27; stackHeight = 36
                        # EXIT NODE # IdentifierExp at 802.27; stackHeight = 36
                        # ENTER NODE # IdentifierExp at 802.32; stackHeight = 36
                         lw $t0,32($sp) # local: stackHt=36,var-offset=-4 # IdentifierExp at 802.32; stackHeight = 36
                         subu $sp,$sp,4 # IdentifierExp at 802.32; stackHeight = 36
                         sw $t0,($sp)#**"" # IdentifierExp at 802.32; stackHeight = 40
                        # EXIT NODE # IdentifierExp at 802.32; stackHeight = 40
                       lw $t0,8($sp) # Call at 802.13; stackHeight = 40
                       beq $t0,$zero,nullPtrException # Call at 802.13; stackHeight = 40
                       lw $t0,-12($t0) # Call at 802.13; stackHeight = 40
                       lw $t0,52($t0) # Call at 802.13; stackHeight = 40
                       jalr $t0 # primitiveMult # Call at 802.13; stackHeight = 40
                      # EXIT NODE # Call at 802.13; stackHeight = 32
                     lw $t0,($sp) # Assign at 802.11; stackHeight = 32
                     sw $t0,4($sp) # Assign at 802.11; stackHeight = 32
                     addu $sp,$sp,4 # Assign at 802.11; stackHeight = 32
                    # EXIT NODE # Assign at 802.11; stackHeight = 28
                    # ENTER NODE # Assign at 803.11; stackHeight = 28
                      # ENTER NODE # Call at 803.18; stackHeight = 28
                        # ENTER NODE # IdentifierExp at 803.13; stackHeight = 28
                         lw $t0,0($sp) # local: stackHt=28,var-offset=-28 # IdentifierExp at 803.13; stackHeight = 28
                         subu $sp,$sp,4 # IdentifierExp at 803.13; stackHeight = 28
                         sw $t0,($sp)#**"" # IdentifierExp at 803.13; stackHeight = 32
                        # EXIT NODE # IdentifierExp at 803.13; stackHeight = 32
                        # ENTER NODE # IntegerLiteral at 803.28; stackHeight = 32
                         subu $sp,$sp,8 # IntegerLiteral at 803.28; stackHeight = 32
                         sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 803.28; stackHeight = 40
                         li $t0,0 # IntegerLiteral at 803.28; stackHeight = 40
                         sw $t0,($sp) # IntegerLiteral at 803.28; stackHeight = 40
                        # EXIT NODE # IntegerLiteral at 803.28; stackHeight = 40
                        # ENTER NODE # Minus at 803.43; stackHeight = 40
                          # ENTER NODE # Call at 803.35; stackHeight = 40
                            # ENTER NODE # IdentifierExp at 803.30; stackHeight = 40
                             lw $t0,12($sp) # local: stackHt=40,var-offset=-28 # IdentifierExp at 803.30; stackHeight = 40
                             subu $sp,$sp,4 # IdentifierExp at 803.30; stackHeight = 40
                             sw $t0,($sp)#**"" # IdentifierExp at 803.30; stackHeight = 44
                            # EXIT NODE # IdentifierExp at 803.30; stackHeight = 44
                           lw $t0,0($sp) # Call at 803.35; stackHeight = 44
                           beq $t0,$zero,nullPtrException # Call at 803.35; stackHeight = 44
                           lw $t0,-12($t0) # Call at 803.35; stackHeight = 44
                           lw $t0,20($t0) # Call at 803.35; stackHeight = 44
                           jalr $t0 # length # Call at 803.35; stackHeight = 44
                          # EXIT NODE # Call at 803.35; stackHeight = 48
                          # ENTER NODE # IdentifierExp at 803.44; stackHeight = 48
                           lw $t0,52($sp) # local: stackHt=48,var-offset=4 # IdentifierExp at 803.44; stackHeight = 48
                           subu $sp,$sp,8 # IdentifierExp at 803.44; stackHeight = 48
                           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 803.44; stackHeight = 56
                           sw $t0,($sp)#**"" # IdentifierExp at 803.44; stackHeight = 56
                          # EXIT NODE # IdentifierExp at 803.44; stackHeight = 56
                         lw $t0,($sp) # Minus at 803.43; stackHeight = 56
                         lw $t1,8($sp) # Minus at 803.43; stackHeight = 56
                         subu $t0,$t1,$t0 # Minus at 803.43; stackHeight = 56
                         addu $sp,$sp,8 # Minus at 803.43; stackHeight = 56
                         sw $t0,($sp)#**"" # Minus at 803.43; stackHeight = 48
                        # EXIT NODE # Minus at 803.43; stackHeight = 48
                       lw $t0,16($sp) # Call at 803.18; stackHeight = 48
                       beq $t0,$zero,nullPtrException # Call at 803.18; stackHeight = 48
                       lw $t0,-12($t0) # Call at 803.18; stackHeight = 48
                       lw $t0,16($t0) # Call at 803.18; stackHeight = 48
                       jalr $t0 # substring # Call at 803.18; stackHeight = 48
                      # EXIT NODE # Call at 803.18; stackHeight = 32
                     lw $t0,($sp) # Assign at 803.11; stackHeight = 32
                     sw $t0,4($sp) # Assign at 803.11; stackHeight = 32
                     addu $sp,$sp,4 # Assign at 803.11; stackHeight = 32
                    # EXIT NODE # Assign at 803.11; stackHeight = 28
                    # ENTER NODE # Assign at 804.9; stackHeight = 28
                      # ENTER NODE # InstVarAccess at 804.40; stackHeight = 28
                        # ENTER NODE # Call at 804.11; stackHeight = 28
                          # ENTER NODE # This at 804.11; stackHeight = 28
                           subu $sp,$sp,4 # This at 804.11; stackHeight = 28
                           sw $s2,($sp)#**"" # This at 804.11; stackHeight = 32
                          # EXIT NODE # This at 804.11; stackHeight = 32
                          # ENTER NODE # IdentifierExp at 804.24; stackHeight = 32
                           lw $t0,8($sp) # local: stackHt=32,var-offset=-24 # IdentifierExp at 804.24; stackHeight = 32
                           subu $sp,$sp,4 # IdentifierExp at 804.24; stackHeight = 32
                           sw $t0,($sp)#**"" # IdentifierExp at 804.24; stackHeight = 36
                          # EXIT NODE # IdentifierExp at 804.24; stackHeight = 36
                          # ENTER NODE # IdentifierExp at 804.30; stackHeight = 36
                           lw $t0,8($sp) # local: stackHt=36,var-offset=-28 # IdentifierExp at 804.30; stackHeight = 36
                           subu $sp,$sp,4 # IdentifierExp at 804.30; stackHeight = 36
                           sw $t0,($sp)#**"" # IdentifierExp at 804.30; stackHeight = 40
                          # EXIT NODE # IdentifierExp at 804.30; stackHeight = 40
                          # ENTER NODE # True at 804.35; stackHeight = 40
                           subu $sp,$sp,4 # True at 804.35; stackHeight = 40
                           li $t0,1 # True at 804.35; stackHeight = 44
                           sw $t0,($sp)#**"" # True at 804.35; stackHeight = 44
                          # EXIT NODE # True at 804.35; stackHeight = 44
                         lw $t0,12($sp) # Call at 804.11; stackHeight = 44
                         beq $t0,$zero,nullPtrException # Call at 804.11; stackHeight = 44
                         lw $t0,-12($t0) # Call at 804.11; stackHeight = 44
                         lw $t0,92($t0) # Call at 804.11; stackHeight = 44
                         jalr $t0 # primitiveAdd # Call at 804.11; stackHeight = 44
                        # EXIT NODE # Call at 804.11; stackHeight = 32
                       lw $t0,($sp) # InstVarAccess at 804.40; stackHeight = 32
                       beq $t0,$zero,nullPtrException # InstVarAccess at 804.40; stackHeight = 32
                       lw $t0,0($t0) # InstVarAccess at 804.40; stackHeight = 32
                       sw $t0,($sp)#**"" # InstVarAccess at 804.40; stackHeight = 32
                      # EXIT NODE # InstVarAccess at 804.40; stackHeight = 32
                     lw $t0,($sp) # Assign at 804.9; stackHeight = 32
                     sw $t0,28($sp) # Assign at 804.9; stackHeight = 32
                     addu $sp,$sp,4 # Assign at 804.9; stackHeight = 32
                    # EXIT NODE # Assign at 804.9; stackHeight = 28
                    # ENTER NODE # If at 805.6; stackHeight = 28
                      # ENTER NODE # Or at 805.25; stackHeight = 28
                        # ENTER NODE # Call at 805.13; stackHeight = 28
                          # ENTER NODE # IdentifierExp at 805.10; stackHeight = 28
                           lw $t0,24($sp) # local: stackHt=28,var-offset=-4 # IdentifierExp at 805.10; stackHeight = 28
                           subu $sp,$sp,4 # IdentifierExp at 805.10; stackHeight = 28
                           sw $t0,($sp)#**"" # IdentifierExp at 805.10; stackHeight = 32
                          # EXIT NODE # IdentifierExp at 805.10; stackHeight = 32
                          # ENTER NODE # IdentifierExp at 805.20; stackHeight = 32
                           lw $t0,16($sp) # local: stackHt=32,var-offset=-16 # IdentifierExp at 805.20; stackHeight = 32
                           subu $sp,$sp,4 # IdentifierExp at 805.20; stackHeight = 32
                           sw $t0,($sp)#**"" # IdentifierExp at 805.20; stackHeight = 36
                          # EXIT NODE # IdentifierExp at 805.20; stackHeight = 36
                         lw $t0,4($sp) # Call at 805.13; stackHeight = 36
                         beq $t0,$zero,nullPtrException # Call at 805.13; stackHeight = 36
                         lw $t0,-12($t0) # Call at 805.13; stackHeight = 36
                         lw $t0,4($t0) # Call at 805.13; stackHeight = 36
                         jalr $t0 # equals # Call at 805.13; stackHeight = 36
                        # EXIT NODE # Call at 805.13; stackHeight = 32
                       lw $t0,($sp) # Or at 805.25; stackHeight = 32
                       bne $t0,$zero, skip_3769 # Or at 805.25; stackHeight = 32
                       addu $sp,$sp,4 # Or at 805.25; stackHeight = 32
                        # ENTER NODE # Call at 805.31; stackHeight = 28
                          # ENTER NODE # IdentifierExp at 805.28; stackHeight = 28
                           lw $t0,24($sp) # local: stackHt=28,var-offset=-4 # IdentifierExp at 805.28; stackHeight = 28
                           subu $sp,$sp,4 # IdentifierExp at 805.28; stackHeight = 28
                           sw $t0,($sp)#**"" # IdentifierExp at 805.28; stackHeight = 32
                          # EXIT NODE # IdentifierExp at 805.28; stackHeight = 32
                          # ENTER NODE # IdentifierExp at 805.38; stackHeight = 32
                           lw $t0,12($sp) # local: stackHt=32,var-offset=-20 # IdentifierExp at 805.38; stackHeight = 32
                           subu $sp,$sp,4 # IdentifierExp at 805.38; stackHeight = 32
                           sw $t0,($sp)#**"" # IdentifierExp at 805.38; stackHeight = 36
                          # EXIT NODE # IdentifierExp at 805.38; stackHeight = 36
                         lw $t0,4($sp) # Call at 805.31; stackHeight = 36
                         beq $t0,$zero,nullPtrException # Call at 805.31; stackHeight = 36
                         lw $t0,-12($t0) # Call at 805.31; stackHeight = 36
                         lw $t0,4($t0) # Call at 805.31; stackHeight = 36
                         jalr $t0 # equals # Call at 805.31; stackHeight = 36
                        # EXIT NODE # Call at 805.31; stackHeight = 32
                      skip_3769: # Or at 805.25; stackHeight = 32
                      # EXIT NODE # Or at 805.25; stackHeight = 32
                     lw $t0,($sp) # If at 805.6; stackHeight = 32
                     addu $sp,$sp,4 # If at 805.6; stackHeight = 32
                     beq $t0,$zero,if_else_3772 # If at 805.6; stackHeight = 28
                      # ENTER NODE # Break at 805.45; stackHeight = 28
                       addu $sp,12 # Break at 805.45; stackHeight = 28
                      j break_target_3778 # Break at 805.45; stackHeight = 28
                      # EXIT NODE # Break at 805.45; stackHeight = 28
                    j if_done_3772 # If at 805.6; stackHeight = 28
                    if_else_3772: # If at 805.6; stackHeight = 28
                      # ENTER NODE # Block at 806.5; stackHeight = 28
                      # EXIT NODE # Block at 806.5; stackHeight = 28
                    if_done_3772: # If at 805.6; stackHeight = 28
                    # EXIT NODE # If at 805.6; stackHeight = 28
                   addu $sp,12 # Block at 797.14; stackHeight = 28
                  # EXIT NODE # Block at 797.14; stackHeight = 16
                  # ENTER NODE # Block at 797.12; stackHeight = 16
                  # EXIT NODE # Block at 797.12; stackHeight = 16
                # EXIT NODE # Block at 797.5; stackHeight = 16
              while_enter_3778: # While at 797.5; stackHeight = 16
                # ENTER NODE # True at 797.11; stackHeight = 16
                 subu $sp,$sp,4 # True at 797.11; stackHeight = 16
                 li $t0,1 # True at 797.11; stackHeight = 20
                 sw $t0,($sp)#**"" # True at 797.11; stackHeight = 20
                # EXIT NODE # True at 797.11; stackHeight = 20
               lw $t0,($sp) # While at 797.5; stackHeight = 20
               addu $sp,$sp,4 # While at 797.5; stackHeight = 20
              bne $t0,$zero,while_top_3778 # While at 797.5; stackHeight = 16
              break_target_3778: # While at 797.5; stackHeight = 16
              # EXIT NODE # While at 797.5; stackHeight = 16
            # EXIT NODE # Block at 797.5; stackHeight = 16
           addu $sp,12 # Block at 786.9; stackHeight = 16
          # EXIT NODE # Block at 786.9; stackHeight = 4
        if_done_3781: # If at 783.4; stackHeight = 4
        # EXIT NODE # If at 783.4; stackHeight = 4
      # EXIT NODE # Block at 781.23; stackHeight = 4
    j if_done_3784 # If at 781.3; stackHeight = 4
    if_else_3784: # If at 781.3; stackHeight = 4
      # ENTER NODE # Block at 811.3; stackHeight = 4
      # EXIT NODE # Block at 811.3; stackHeight = 4
    if_done_3784: # If at 781.3; stackHeight = 4
    # EXIT NODE # If at 781.3; stackHeight = 4
    # ENTER NODE # IdentifierExp at 811.10; stackHeight = 4
     lw $t0,0($sp) # local: stackHt=4,var-offset=-4 # IdentifierExp at 811.10; stackHeight = 4
     subu $sp,$sp,4 # IdentifierExp at 811.10; stackHeight = 4
     sw $t0,($sp)#**"" # IdentifierExp at 811.10; stackHeight = 8
    # EXIT NODE # IdentifierExp at 811.10; stackHeight = 8
   lw $ra,24($sp) # MethodDeclNonVoid at 769.16; stackHeight = 8
   lw $s2,8($sp) # MethodDeclNonVoid at 769.16; stackHeight = 8
   lw $t0,($sp) # MethodDeclNonVoid at 769.16; stackHeight = 8
   sw $t0,24($sp)#**"(return-val)" # MethodDeclNonVoid at 769.16; stackHeight = 8
   addu $sp,$sp,24 # MethodDeclNonVoid at 769.16; stackHeight = 8
  jr $ra # MethodDeclNonVoid at 769.16; stackHeight = -16
  # EXIT NODE # MethodDeclNonVoid at 769.16; stackHeight = -16
  # ENTER NODE # MethodDeclNonVoid at 815.16; stackHeight = -16
  .globl fcn_3832_repeatString # MethodDeclNonVoid at 815.16; stackHeight = -16
  fcn_3832_repeatString: # MethodDeclNonVoid at 815.16; stackHeight = -16
   subu $sp,$sp,4 # MethodDeclNonVoid at 815.16; stackHeight = -16
   sw $s2,($sp) #**"old this-ptr" # MethodDeclNonVoid at 815.16; stackHeight = -16
   lw $s2,16($sp) #**"this-ptr" # MethodDeclNonVoid at 815.16; stackHeight = -16
   sw $ra,16($sp) #**"RA:repeatString" # MethodDeclNonVoid at 815.16; stackHeight = -16
    # ENTER NODE # LocalVarDecl at 816.10; stackHeight = 0
      # ENTER NODE # StringLiteral at 816.19; stackHeight = 0
       subu $sp,$sp,4 # StringLiteral at 816.19; stackHeight = 0
       la $t0,strLit_3401 # StringLiteral at 816.19; stackHeight = 4
       sw $t0,($sp)#**"strLit:" # StringLiteral at 816.19; stackHeight = 4
      # EXIT NODE # StringLiteral at 816.19; stackHeight = 4
    # EXIT NODE # LocalVarDecl at 816.10; stackHeight = 4
    # ENTER NODE # If at 817.3; stackHeight = 4
      # ENTER NODE # Equals at 817.13; stackHeight = 4
        # ENTER NODE # IdentifierExp at 817.7; stackHeight = 4
         lw $t0,8($sp) # local: stackHt=4,var-offset=4 # IdentifierExp at 817.7; stackHeight = 4
         subu $sp,$sp,8 # IdentifierExp at 817.7; stackHeight = 4
         sw $s5,4($sp)#**"GC tag" # IdentifierExp at 817.7; stackHeight = 12
         sw $t0,($sp)#**"" # IdentifierExp at 817.7; stackHeight = 12
        # EXIT NODE # IdentifierExp at 817.7; stackHeight = 12
        # ENTER NODE # IntegerLiteral at 817.16; stackHeight = 12
         subu $sp,$sp,8 # IntegerLiteral at 817.16; stackHeight = 12
         sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 817.16; stackHeight = 20
         li $t0,1 # IntegerLiteral at 817.16; stackHeight = 20
         sw $t0,($sp) # IntegerLiteral at 817.16; stackHeight = 20
        # EXIT NODE # IntegerLiteral at 817.16; stackHeight = 20
       lw $t0,($sp) # Equals at 817.13; stackHeight = 20
       lw $t1,8($sp) # Equals at 817.13; stackHeight = 20
       seq $t0,$t0,$t1 # Equals at 817.13; stackHeight = 20
       addu $sp,$sp,12 # Equals at 817.13; stackHeight = 20
       sw $t0,($sp)#**"" # Equals at 817.13; stackHeight = 8
      # EXIT NODE # Equals at 817.13; stackHeight = 8
     lw $t0,($sp) # If at 817.3; stackHeight = 8
     addu $sp,$sp,4 # If at 817.3; stackHeight = 8
     beq $t0,$zero,if_else_3830 # If at 817.3; stackHeight = 4
      # ENTER NODE # Block at 817.19; stackHeight = 4
        # ENTER NODE # Assign at 818.11; stackHeight = 4
          # ENTER NODE # IdentifierExp at 818.13; stackHeight = 4
           lw $t0,16($sp) # local: stackHt=4,var-offset=12 # IdentifierExp at 818.13; stackHeight = 4
           subu $sp,$sp,4 # IdentifierExp at 818.13; stackHeight = 4
           sw $t0,($sp)#**"" # IdentifierExp at 818.13; stackHeight = 8
          # EXIT NODE # IdentifierExp at 818.13; stackHeight = 8
         lw $t0,($sp) # Assign at 818.11; stackHeight = 8
         sw $t0,4($sp) # Assign at 818.11; stackHeight = 8
         addu $sp,$sp,4 # Assign at 818.11; stackHeight = 8
        # EXIT NODE # Assign at 818.11; stackHeight = 4
      # EXIT NODE # Block at 817.19; stackHeight = 4
    j if_done_3830 # If at 817.3; stackHeight = 4
    if_else_3830: # If at 817.3; stackHeight = 4
      # ENTER NODE # If at 820.8; stackHeight = 4
        # ENTER NODE # GreaterThan at 820.18; stackHeight = 4
          # ENTER NODE # IdentifierExp at 820.12; stackHeight = 4
           lw $t0,8($sp) # local: stackHt=4,var-offset=4 # IdentifierExp at 820.12; stackHeight = 4
           subu $sp,$sp,8 # IdentifierExp at 820.12; stackHeight = 4
           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 820.12; stackHeight = 12
           sw $t0,($sp)#**"" # IdentifierExp at 820.12; stackHeight = 12
          # EXIT NODE # IdentifierExp at 820.12; stackHeight = 12
          # ENTER NODE # IntegerLiteral at 820.20; stackHeight = 12
           subu $sp,$sp,8 # IntegerLiteral at 820.20; stackHeight = 12
           sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 820.20; stackHeight = 20
           li $t0,1 # IntegerLiteral at 820.20; stackHeight = 20
           sw $t0,($sp) # IntegerLiteral at 820.20; stackHeight = 20
          # EXIT NODE # IntegerLiteral at 820.20; stackHeight = 20
         lw $t0,($sp) # GreaterThan at 820.18; stackHeight = 20
         lw $t1,8($sp) # GreaterThan at 820.18; stackHeight = 20
         sgt $t0,$t1,$t0 # GreaterThan at 820.18; stackHeight = 20
         addu $sp,$sp,12 # GreaterThan at 820.18; stackHeight = 20
         sw $t0,($sp)#**"" # GreaterThan at 820.18; stackHeight = 8
        # EXIT NODE # GreaterThan at 820.18; stackHeight = 8
       lw $t0,($sp) # If at 820.8; stackHeight = 8
       addu $sp,$sp,4 # If at 820.8; stackHeight = 8
       beq $t0,$zero,if_else_3829 # If at 820.8; stackHeight = 4
        # ENTER NODE # Block at 820.23; stackHeight = 4
          # ENTER NODE # LocalVarDecl at 821.11; stackHeight = 4
            # ENTER NODE # Call at 821.18; stackHeight = 4
              # ENTER NODE # This at 821.18; stackHeight = 4
               subu $sp,$sp,4 # This at 821.18; stackHeight = 4
               sw $s2,($sp)#**"" # This at 821.18; stackHeight = 8
              # EXIT NODE # This at 821.18; stackHeight = 8
              # ENTER NODE # IdentifierExp at 821.31; stackHeight = 8
               lw $t0,20($sp) # local: stackHt=8,var-offset=12 # IdentifierExp at 821.31; stackHeight = 8
               subu $sp,$sp,4 # IdentifierExp at 821.31; stackHeight = 8
               sw $t0,($sp)#**"" # IdentifierExp at 821.31; stackHeight = 12
              # EXIT NODE # IdentifierExp at 821.31; stackHeight = 12
              # ENTER NODE # IdentifierExp at 821.34; stackHeight = 12
               lw $t0,16($sp) # local: stackHt=12,var-offset=4 # IdentifierExp at 821.34; stackHeight = 12
               subu $sp,$sp,8 # IdentifierExp at 821.34; stackHeight = 12
               sw $s5,4($sp)#**"GC tag" # IdentifierExp at 821.34; stackHeight = 20
               sw $t0,($sp)#**"" # IdentifierExp at 821.34; stackHeight = 20
              # EXIT NODE # IdentifierExp at 821.34; stackHeight = 20
              # ENTER NODE # IntegerLiteral at 821.40; stackHeight = 20
               subu $sp,$sp,8 # IntegerLiteral at 821.40; stackHeight = 20
               sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 821.40; stackHeight = 28
               li $t0,2 # IntegerLiteral at 821.40; stackHeight = 28
               sw $t0,($sp) # IntegerLiteral at 821.40; stackHeight = 28
              # EXIT NODE # IntegerLiteral at 821.40; stackHeight = 28
             jal divide # Divide at 821.39; stackHeight = 28
            # EXIT NODE # Divide at 821.39; stackHeight = 20
           lw $t0,12($sp) # Call at 821.18; stackHeight = 20
           beq $t0,$zero,nullPtrException # Call at 821.18; stackHeight = 20
           lw $t0,-12($t0) # Call at 821.18; stackHeight = 20
           lw $t0,100($t0) # Call at 821.18; stackHeight = 20
           jalr $t0 # repeatString # Call at 821.18; stackHeight = 20
          # EXIT NODE # Call at 821.18; stackHeight = 8
        # EXIT NODE # LocalVarDecl at 821.11; stackHeight = 8
        # ENTER NODE # Assign at 822.11; stackHeight = 8
          # ENTER NODE # Call at 822.50; stackHeight = 8
            # ENTER NODE # Call at 822.37; stackHeight = 8
              # ENTER NODE # Call at 822.13; stackHeight = 8
                # ENTER NODE # This at 822.13; stackHeight = 8
                 subu $sp,$sp,4 # This at 822.13; stackHeight = 8
                 sw $s2,($sp)#**"" # This at 822.13; stackHeight = 12
                # EXIT NODE # This at 822.13; stackHeight = 12
                # ENTER NODE # IdentifierExp at 822.26; stackHeight = 12
                 lw $t0,24($sp) # local: stackHt=12,var-offset=12 # IdentifierExp at 822.26; stackHeight = 12
                 subu $sp,$sp,4 # IdentifierExp at 822.26; stackHeight = 12
                 sw $t0,($sp)#**"" # IdentifierExp at 822.26; stackHeight = 16
                # EXIT NODE # IdentifierExp at 822.26; stackHeight = 16
                # ENTER NODE # Remainder at 822.33; stackHeight = 16
                  # ENTER NODE # IdentifierExp at 822.28; stackHeight = 16
                   lw $t0,20($sp) # local: stackHt=16,var-offset=4 # IdentifierExp at 822.28; stackHeight = 16
                   subu $sp,$sp,8 # IdentifierExp at 822.28; stackHeight = 16
                   sw $s5,4($sp)#**"GC tag" # IdentifierExp at 822.28; stackHeight = 24
                   sw $t0,($sp)#**"" # IdentifierExp at 822.28; stackHeight = 24
                  # EXIT NODE # IdentifierExp at 822.28; stackHeight = 24
                  # ENTER NODE # IntegerLiteral at 822.34; stackHeight = 24
                   subu $sp,$sp,8 # IntegerLiteral at 822.34; stackHeight = 24
                   sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 822.34; stackHeight = 32
                   li $t0,2 # IntegerLiteral at 822.34; stackHeight = 32
                   sw $t0,($sp) # IntegerLiteral at 822.34; stackHeight = 32
                  # EXIT NODE # IntegerLiteral at 822.34; stackHeight = 32
                 jal remainder # Remainder at 822.33; stackHeight = 32
                # EXIT NODE # Remainder at 822.33; stackHeight = 24
               lw $t0,12($sp) # Call at 822.13; stackHeight = 24
               beq $t0,$zero,nullPtrException # Call at 822.13; stackHeight = 24
               lw $t0,-12($t0) # Call at 822.13; stackHeight = 24
               lw $t0,100($t0) # Call at 822.13; stackHeight = 24
               jalr $t0 # repeatString # Call at 822.13; stackHeight = 24
              # EXIT NODE # Call at 822.13; stackHeight = 12
              # ENTER NODE # IdentifierExp at 822.44; stackHeight = 12
               lw $t0,4($sp) # local: stackHt=12,var-offset=-8 # IdentifierExp at 822.44; stackHeight = 12
               subu $sp,$sp,4 # IdentifierExp at 822.44; stackHeight = 12
               sw $t0,($sp)#**"" # IdentifierExp at 822.44; stackHeight = 16
              # EXIT NODE # IdentifierExp at 822.44; stackHeight = 16
             lw $t0,4($sp) # Call at 822.37; stackHeight = 16
             beq $t0,$zero,nullPtrException # Call at 822.37; stackHeight = 16
             lw $t0,-12($t0) # Call at 822.37; stackHeight = 16
             lw $t0,12($t0) # Call at 822.37; stackHeight = 16
             jalr $t0 # concat # Call at 822.37; stackHeight = 16
            # EXIT NODE # Call at 822.37; stackHeight = 12
            # ENTER NODE # IdentifierExp at 822.57; stackHeight = 12
             lw $t0,4($sp) # local: stackHt=12,var-offset=-8 # IdentifierExp at 822.57; stackHeight = 12
             subu $sp,$sp,4 # IdentifierExp at 822.57; stackHeight = 12
             sw $t0,($sp)#**"" # IdentifierExp at 822.57; stackHeight = 16
            # EXIT NODE # IdentifierExp at 822.57; stackHeight = 16
           lw $t0,4($sp) # Call at 822.50; stackHeight = 16
           beq $t0,$zero,nullPtrException # Call at 822.50; stackHeight = 16
           lw $t0,-12($t0) # Call at 822.50; stackHeight = 16
           lw $t0,12($t0) # Call at 822.50; stackHeight = 16
           jalr $t0 # concat # Call at 822.50; stackHeight = 16
          # EXIT NODE # Call at 822.50; stackHeight = 12
         lw $t0,($sp) # Assign at 822.11; stackHeight = 12
         sw $t0,8($sp) # Assign at 822.11; stackHeight = 12
         addu $sp,$sp,4 # Assign at 822.11; stackHeight = 12
        # EXIT NODE # Assign at 822.11; stackHeight = 8
       addu $sp,4 # Block at 820.23; stackHeight = 8
      # EXIT NODE # Block at 820.23; stackHeight = 4
    j if_done_3829 # If at 820.8; stackHeight = 4
    if_else_3829: # If at 820.8; stackHeight = 4
      # ENTER NODE # Block at 824.3; stackHeight = 4
      # EXIT NODE # Block at 824.3; stackHeight = 4
    if_done_3829: # If at 820.8; stackHeight = 4
    # EXIT NODE # If at 820.8; stackHeight = 4
  if_done_3830: # If at 817.3; stackHeight = 4
  # EXIT NODE # If at 817.3; stackHeight = 4
  # ENTER NODE # IdentifierExp at 824.10; stackHeight = 4
   lw $t0,0($sp) # local: stackHt=4,var-offset=-4 # IdentifierExp at 824.10; stackHeight = 4
   subu $sp,$sp,4 # IdentifierExp at 824.10; stackHeight = 4
   sw $t0,($sp)#**"" # IdentifierExp at 824.10; stackHeight = 8
  # EXIT NODE # IdentifierExp at 824.10; stackHeight = 8
 lw $ra,24($sp) # MethodDeclNonVoid at 815.16; stackHeight = 8
 lw $s2,8($sp) # MethodDeclNonVoid at 815.16; stackHeight = 8
 lw $t0,($sp) # MethodDeclNonVoid at 815.16; stackHeight = 8
 sw $t0,24($sp)#**"(return-val)" # MethodDeclNonVoid at 815.16; stackHeight = 8
 addu $sp,$sp,24 # MethodDeclNonVoid at 815.16; stackHeight = 8
jr $ra # MethodDeclNonVoid at 815.16; stackHeight = -16
# EXIT NODE # MethodDeclNonVoid at 815.16; stackHeight = -16
  # ENTER NODE # MethodDeclNonVoid at 827.16; stackHeight = -16
  .globl fcn_3864_truncateLeadingZeros # MethodDeclNonVoid at 827.16; stackHeight = -16
  fcn_3864_truncateLeadingZeros: # MethodDeclNonVoid at 827.16; stackHeight = -16
   subu $sp,$sp,4 # MethodDeclNonVoid at 827.16; stackHeight = -16
   sw $s2,($sp) #**"old this-ptr" # MethodDeclNonVoid at 827.16; stackHeight = -16
   lw $s2,8($sp) #**"this-ptr" # MethodDeclNonVoid at 827.16; stackHeight = -16
   sw $ra,8($sp) #**"RA:truncateLeadingZeros" # MethodDeclNonVoid at 827.16; stackHeight = -16
    # ENTER NODE # LocalVarDecl at 828.7; stackHeight = 0
      # ENTER NODE # IntegerLiteral at 828.13; stackHeight = 0
       subu $sp,$sp,8 # IntegerLiteral at 828.13; stackHeight = 0
       sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 828.13; stackHeight = 8
       li $t0,0 # IntegerLiteral at 828.13; stackHeight = 8
       sw $t0,($sp) # IntegerLiteral at 828.13; stackHeight = 8
      # EXIT NODE # IntegerLiteral at 828.13; stackHeight = 8
    # EXIT NODE # LocalVarDecl at 828.7; stackHeight = 8
    # ENTER NODE # While at 829.3; stackHeight = 8
    j while_enter_3858 # While at 829.3; stackHeight = 8
    while_top_3858: # While at 829.3; stackHeight = 8
      # ENTER NODE # Block at 829.54; stackHeight = 8
        # ENTER NODE # Assign at 830.4; stackHeight = 8
          # ENTER NODE # Plus at 830.7; stackHeight = 8
            # ENTER NODE # IdentifierExp at 830.4; stackHeight = 8
             lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 830.4; stackHeight = 8
             subu $sp,$sp,8 # IdentifierExp at 830.4; stackHeight = 8
             sw $s5,4($sp)#**"GC tag" # IdentifierExp at 830.4; stackHeight = 16
             sw $t0,($sp)#**"" # IdentifierExp at 830.4; stackHeight = 16
            # EXIT NODE # IdentifierExp at 830.4; stackHeight = 16
            # ENTER NODE # IntegerLiteral at 830.7; stackHeight = 16
             subu $sp,$sp,8 # IntegerLiteral at 830.7; stackHeight = 16
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 830.7; stackHeight = 24
             li $t0,1 # IntegerLiteral at 830.7; stackHeight = 24
             sw $t0,($sp) # IntegerLiteral at 830.7; stackHeight = 24
            # EXIT NODE # IntegerLiteral at 830.7; stackHeight = 24
           lw $t0,($sp) # Plus at 830.7; stackHeight = 24
           lw $t1,8($sp) # Plus at 830.7; stackHeight = 24
           addu $t0,$t0,$t1 # Plus at 830.7; stackHeight = 24
           addu $sp,$sp,8 # Plus at 830.7; stackHeight = 24
           sw $t0,($sp)#**"" # Plus at 830.7; stackHeight = 24
          # EXIT NODE # Plus at 830.7; stackHeight = 16
         lw $t0,($sp) # Assign at 830.4; stackHeight = 16
         sw $t0,8($sp) # Assign at 830.4; stackHeight = 16
         addu $sp,$sp,8 # Assign at 830.4; stackHeight = 16
        # EXIT NODE # Assign at 830.4; stackHeight = 8
      # EXIT NODE # Block at 829.54; stackHeight = 8
    while_enter_3858: # While at 829.3; stackHeight = 8
      # ENTER NODE # And at 829.29; stackHeight = 8
        # ENTER NODE # LessThan at 829.14; stackHeight = 8
          # ENTER NODE # IdentifierExp at 829.10; stackHeight = 8
           lw $t0,0($sp) # local: stackHt=8,var-offset=-8 # IdentifierExp at 829.10; stackHeight = 8
           subu $sp,$sp,8 # IdentifierExp at 829.10; stackHeight = 8
           sw $s5,4($sp)#**"GC tag" # IdentifierExp at 829.10; stackHeight = 16
           sw $t0,($sp)#**"" # IdentifierExp at 829.10; stackHeight = 16
          # EXIT NODE # IdentifierExp at 829.10; stackHeight = 16
          # ENTER NODE # Minus at 829.26; stackHeight = 16
            # ENTER NODE # Call at 829.18; stackHeight = 16
              # ENTER NODE # IdentifierExp at 829.16; stackHeight = 16
               lw $t0,20($sp) # local: stackHt=16,var-offset=4 # IdentifierExp at 829.16; stackHeight = 16
               subu $sp,$sp,4 # IdentifierExp at 829.16; stackHeight = 16
               sw $t0,($sp)#**"" # IdentifierExp at 829.16; stackHeight = 20
              # EXIT NODE # IdentifierExp at 829.16; stackHeight = 20
             lw $t0,0($sp) # Call at 829.18; stackHeight = 20
             beq $t0,$zero,nullPtrException # Call at 829.18; stackHeight = 20
             lw $t0,-12($t0) # Call at 829.18; stackHeight = 20
             lw $t0,20($t0) # Call at 829.18; stackHeight = 20
             jalr $t0 # length # Call at 829.18; stackHeight = 20
            # EXIT NODE # Call at 829.18; stackHeight = 24
            # ENTER NODE # IntegerLiteral at 829.27; stackHeight = 24
             subu $sp,$sp,8 # IntegerLiteral at 829.27; stackHeight = 24
             sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 829.27; stackHeight = 32
             li $t0,1 # IntegerLiteral at 829.27; stackHeight = 32
             sw $t0,($sp) # IntegerLiteral at 829.27; stackHeight = 32
            # EXIT NODE # IntegerLiteral at 829.27; stackHeight = 32
           lw $t0,($sp) # Minus at 829.26; stackHeight = 32
           lw $t1,8($sp) # Minus at 829.26; stackHeight = 32
           subu $t0,$t1,$t0 # Minus at 829.26; stackHeight = 32
           addu $sp,$sp,8 # Minus at 829.26; stackHeight = 32
           sw $t0,($sp)#**"" # Minus at 829.26; stackHeight = 24
          # EXIT NODE # Minus at 829.26; stackHeight = 24
         lw $t0,($sp) # LessThan at 829.14; stackHeight = 24
         lw $t1,8($sp) # LessThan at 829.14; stackHeight = 24
         slt $t0,$t1,$t0 # LessThan at 829.14; stackHeight = 24
         addu $sp,$sp,12 # LessThan at 829.14; stackHeight = 24
         sw $t0,($sp)#**"" # LessThan at 829.14; stackHeight = 12
        # EXIT NODE # LessThan at 829.14; stackHeight = 12
       lw $t0,($sp) # And at 829.29; stackHeight = 12
       beq $t0,$zero, skip_3851 # And at 829.29; stackHeight = 12
       addu $sp,$sp,4 # And at 829.29; stackHeight = 12
        # ENTER NODE # Equals at 829.46; stackHeight = 8
          # ENTER NODE # Call at 829.34; stackHeight = 8
            # ENTER NODE # IdentifierExp at 829.32; stackHeight = 8
             lw $t0,12($sp) # local: stackHt=8,var-offset=4 # IdentifierExp at 829.32; stackHeight = 8
             subu $sp,$sp,4 # IdentifierExp at 829.32; stackHeight = 8
             sw $t0,($sp)#**"" # IdentifierExp at 829.32; stackHeight = 12
            # EXIT NODE # IdentifierExp at 829.32; stackHeight = 12
            # ENTER NODE # IdentifierExp at 829.41; stackHeight = 12
             lw $t0,4($sp) # local: stackHt=12,var-offset=-8 # IdentifierExp at 829.41; stackHeight = 12
             subu $sp,$sp,8 # IdentifierExp at 829.41; stackHeight = 12
             sw $s5,4($sp)#**"GC tag" # IdentifierExp at 829.41; stackHeight = 20
             sw $t0,($sp)#**"" # IdentifierExp at 829.41; stackHeight = 20
            # EXIT NODE # IdentifierExp at 829.41; stackHeight = 20
           lw $t0,8($sp) # Call at 829.34; stackHeight = 20
           beq $t0,$zero,nullPtrException # Call at 829.34; stackHeight = 20
           lw $t0,-12($t0) # Call at 829.34; stackHeight = 20
           lw $t0,24($t0) # Call at 829.34; stackHeight = 20
           jalr $t0 # charAt # Call at 829.34; stackHeight = 20
          # EXIT NODE # Call at 829.34; stackHeight = 16
          # ENTER NODE # IntegerLiteral at 829.49; stackHeight = 16
           subu $sp,$sp,8 # IntegerLiteral at 829.49; stackHeight = 16
           sw $s5,4($sp)#**"GC tag" # IntegerLiteral at 829.49; stackHeight = 24
           li $t0,48 # IntegerLiteral at 829.49; stackHeight = 24
           sw $t0,($sp) # IntegerLiteral at 829.49; stackHeight = 24
          # EXIT NODE # IntegerLiteral at 829.49; stackHeight = 24
         lw $t0,($sp) # Equals at 829.46; stackHeight = 24
         lw $t1,8($sp) # Equals at 829.46; stackHeight = 24
         seq $t0,$t0,$t1 # Equals at 829.46; stackHeight = 24
         addu $sp,$sp,12 # Equals at 829.46; stackHeight = 24
         sw $t0,($sp)#**"" # Equals at 829.46; stackHeight = 12
        # EXIT NODE # Equals at 829.46; stackHeight = 12
      skip_3851: # And at 829.29; stackHeight = 12
      # EXIT NODE # And at 829.29; stackHeight = 12
     lw $t0,($sp) # While at 829.3; stackHeight = 12
     addu $sp,$sp,4 # While at 829.3; stackHeight = 12
    bne $t0,$zero,while_top_3858 # While at 829.3; stackHeight = 8
    break_target_3858: # While at 829.3; stackHeight = 8
    # EXIT NODE # While at 829.3; stackHeight = 8
    # ENTER NODE # Call at 832.12; stackHeight = 8
      # ENTER NODE # IdentifierExp at 832.10; stackHeight = 8
       lw $t0,12($sp) # local: stackHt=8,var-offset=4 # IdentifierExp at 832.10; stackHeight = 8
       subu $sp,$sp,4 # IdentifierExp at 832.10; stackHeight = 8
       sw $t0,($sp)#**"" # IdentifierExp at 832.10; stackHeight = 12
      # EXIT NODE # IdentifierExp at 832.10; stackHeight = 12
      # ENTER NODE # IdentifierExp at 832.22; stackHeight = 12
       lw $t0,4($sp) # local: stackHt=12,var-offset=-8 # IdentifierExp at 832.22; stackHeight = 12
       subu $sp,$sp,8 # IdentifierExp at 832.22; stackHeight = 12
       sw $s5,4($sp)#**"GC tag" # IdentifierExp at 832.22; stackHeight = 20
       sw $t0,($sp)#**"" # IdentifierExp at 832.22; stackHeight = 20
      # EXIT NODE # IdentifierExp at 832.22; stackHeight = 20
      # ENTER NODE # Call at 832.28; stackHeight = 20
        # ENTER NODE # IdentifierExp at 832.26; stackHeight = 20
         lw $t0,24($sp) # local: stackHt=20,var-offset=4 # IdentifierExp at 832.26; stackHeight = 20
         subu $sp,$sp,4 # IdentifierExp at 832.26; stackHeight = 20
         sw $t0,($sp)#**"" # IdentifierExp at 832.26; stackHeight = 24
        # EXIT NODE # IdentifierExp at 832.26; stackHeight = 24
       lw $t0,0($sp) # Call at 832.28; stackHeight = 24
       beq $t0,$zero,nullPtrException # Call at 832.28; stackHeight = 24
       lw $t0,-12($t0) # Call at 832.28; stackHeight = 24
       lw $t0,20($t0) # Call at 832.28; stackHeight = 24
       jalr $t0 # length # Call at 832.28; stackHeight = 24
      # EXIT NODE # Call at 832.28; stackHeight = 28
     lw $t0,16($sp) # Call at 832.12; stackHeight = 28
     beq $t0,$zero,nullPtrException # Call at 832.12; stackHeight = 28
     lw $t0,-12($t0) # Call at 832.12; stackHeight = 28
     lw $t0,16($t0) # Call at 832.12; stackHeight = 28
     jalr $t0 # substring # Call at 832.12; stackHeight = 28
    # EXIT NODE # Call at 832.12; stackHeight = 12
   lw $ra,20($sp) # MethodDeclNonVoid at 827.16; stackHeight = 12
   lw $s2,12($sp) # MethodDeclNonVoid at 827.16; stackHeight = 12
   lw $t0,($sp) # MethodDeclNonVoid at 827.16; stackHeight = 12
   sw $t0,20($sp)#**"(return-val)" # MethodDeclNonVoid at 827.16; stackHeight = 12
   addu $sp,$sp,20 # MethodDeclNonVoid at 827.16; stackHeight = 12
  jr $ra # MethodDeclNonVoid at 827.16; stackHeight = -8
  # EXIT NODE # MethodDeclNonVoid at 827.16; stackHeight = -8
# EXIT NODE # ClassDecl at 408.7; stackHeight = -8
##############################################################
# MiniJava/UP library for MIPS/Spim -- version that assumes
#    one-word boolean on stack
# author: Steven R. Vegdahl
# date: 7-13 July 2004
# modified 12-17 March 2007
# modified 3-25 May 2007
# modified 2 May 2015
# modified 7 March 2016
# modified 11 May - 31 June 2017
# status: allegedly debugged
###############################################################

	.text

###############################################################
# hashCode() - library method (class Object)
# - returns a hash code for an object
# - produces int that is the object's hash code
#   meaning that they are the same physical object
# - parameters:
#   - ($sp) - this-pointer
#   - 4($sp) - object to compare to
# - return-value:
#   - ($sp) - 1 if the objects were the same; 0 otherwise
###############################################################
hashCode_Object:
	# for now, we'll return the -8 offset word, shifted/added to
	# itself, then XORed with a fixed "random" value
	lw $t0,($sp) # get object
	subu $sp,4 # open up space on stack for addition byte for integer
	lw $t0,-8($t0) # get word with hash bits
	srl $t1,$t0,11 # shift/add ...
	addu $t0,$t1 # ... to introduce more "randomness"
	sw $t0,($sp)
	sw $s5,4($sp) 
	jr $ra # return

###############################################################
# equals() - library method (class Object)
# - tests whether two objects are equal
# - produces boolean that tells whether two objects are equal--
#   meaning that they are the same physical object
# - parameters:
#   - ($sp) - this-pointer
#   - 4($sp) - object to compare to
# - return-value:
#   - ($sp) - 1 if the objects were the same; 0 otherwise
###############################################################
equals_Object:
	lw $t0,($sp) # second pointer
	lw $t1,4($sp) # first pointer (this)
	seq $t0,$t0,$t1 # produce boolean telling if they are equal
	addu $sp,4 # adjust stack
	sw $t0,($sp) # store return value on top of stack
	jr $ra # return

###############################################################
# hashCode() - library method (class String)
# - returns a hash code for an object
# - produces int that is the object's hash code
#   meaning that they are the same physical object
# - parameters:
#   - ($sp) - this-pointer
#   - 4($sp) - object to compare to
# - return-value:
#   - ($sp) - 1 if the objects were the same; 0 otherwise
###############################################################
hashCode_String:
	# according to Java, the hashCode of a string should
	# be s[i]*31^(n-1-i)--in other words:
	#    public int hashCode() {
	#        int h = 0;
	#        for (int i = 0; i < this.length(); i++) {
	#                h = 31 * h + this.charAt(i);
	#        }
	#        return h;
	#    }
	lw $t0,($sp) # object
	li $t2,0 # current hash value
	lw $t1,-4($t0) # negative of number of characters in string
	beq $t1,$zero,done_hashCode_String # if zero length => done
	addu $t0,$t1 # address of first character in string +12,
	            # not accounting for padding and header words
	and $t0,0xfffffffc # adjust for padding
	subu $t1,$t0,$t1 # address at end of string +12
loop_hashCode_String:	
	sll $t4,$t2,5 # multiply by 32
	subu $t2,$t4,$t2 # subtract original, so that it's now multiply by 31
	lbu $t3,-12($t0) # current character
	addu $t2,$t3 # add in current character
	addu $t0,1 # go to next character's address
	bne $t0,$t1,loop_hashCode_String # loop back if more
done_hashCode_String:	
	subu $sp,4 # open up space on stack and store value
	sw $t2,($sp) # value
	sw $s5,4($sp) # GC tag
	jr $ra # return

###############################################################
# toString() - library method (class Object)
# - returns a String version of the object
#   - ($sp) - this-pointer
# - return-value:
#   - ($sp) - the string version of the object
# ****NOTE: this method counts on the fact that the hashCode method
# ****is in slot 0 of the vtable	
###############################################################
toString_Object:
	# we need to append:
	# - a string created from the object name in the negative portion of
	#   the vtable
	# - an at-sign "@"
	# - the hex version of the hashcode for the object, with no leading
	#   zeros

	# save old this-pointer and return address. Get new this pointer
	subu $sp,4
	sw $s2,($sp)
	lw $s2,4($sp)
	sw $ra,4($sp)
	
	# get hash value
	subu $sp,4
	sw $s2,($sp) # push object pointer onto stack
	lw $t2,-12($s2) # vtable address
	lw $t0,($t2) # method address
	jalr $t0

	# compute print-size of hash value
	li $t0, 1
	lw $t1,($sp)
	srl $t1,$t1,4
	beq $t1,$zero,toString_skip_loop
toString_loop_top:
	addu $t0,1
	srl $t1,$t1,4
	bne $t1,$zero,toString_loop_top
toString_skip_loop:
	subu $sp,8
	sw $s5,4($sp)
	sw $t0,($sp)
	
	################################################################
	# at this point, the stack looks like (from top):
	# - print-size (in bytes) of the hash value
	# - GC tag (5)
	# - hash value
	# - GC tag (5)
	# - old this pointer
	# - return address
	# - ... rest of stack
	################################################################

	# determine the size of the "prefix string"
	lw $t2,-12($s2) # vtable address
	move $t0,$t2
toString_checkTagBit:
	subu $t0,1
	lb $t1,($t0)
	and $t1,0x80
	beq $t1,$zero,toString_checkTagBit
	subu $t1,$t2,$t0 # size of the prefix string, in bytes
	subu $sp,8
	sw $t1,($sp)
	sw $s5,4($sp) # push size onto stack

	# determine the header words for the string object's header
	move $s7,$zero # -4 offset header word
	lw $t4,8($sp) # bytes for hash value
	addu $t4,$t1 # bytes for prefix
	# add 8, to account for:
	#  - +1 for the '@' character
	#  - +4 for the vtable word
	#  - +3 to get the effect of rounding up rather than down
	addu $t4,8
	srl $s6,$t4,2 # divide by 4
	
	# allocate the object
	jal newObject
		
	################################################################
	# at this point, the stack looks like (from top):
	# - new object, allocated to be our string
	# - number of characters in the prefix
	# - GC tag (5)
	# - print-size (in bytes) of the hash value
	# - GC tag (5)
	# - hash value
	# - GC tag (5)
	# - old this pointer
	# - return address
	# - ... rest of stack
	# $s7 also contains the address of the new object
	################################################################

	li $t0,CLASS_String # store string vtable address into ...
	sw $t0,-12($s7) # ... -12 offset in object header
	lw $t2,-12($s2) # our object's vtable address
	lw $t5,4($sp) # number characters in prefix
	lw $t1,12($sp) # number of characters in hashcode
	addu $t3,$t1,$t5 # number of characters in string ...
	addu $t3,1 # ... including the '@' character
	subu $t0,$zero,$t3 # store negated length into ...
	sw $t0,-4($s7) # ... -4 offset header word
	lw $t0,-8($s7) # get -8 offset header-word
	bge $t0,$zero,skipMask_toString # don't strip hash code if not there
	and $t0,0xff # mask off object's hash value ...
	sw $t0,-8($s7) # ... and store back into -8 header-word
skipMask_toString:
	sll $t0,2 # convert to byte-offset (and shift off top bit, if there)
	subu $t0,$s7,$t0 # address first byte of string +8
#	addu $t1,$t0,$t3 # address of one past last byte of string +8
	
	# copy the prefix into the string
	subu $t4,$t2,$t5
toString_copyLoop:	
	lb $t3,($t4)
	and $t3,0x7f # mask off sign bit (in case first word)
	sb $t3,-8($t0)
	addu $t4,1
	addu $t0,1
	blt $t4,$t2,toString_copyLoop

	# copy the '@' sign
	li $t3,'@'
	sb $t3,-8($t0)
				
	################################################################
	# at this point, the stack looks like (from top):
	# - the new string object that we are building
	# - number of characters in the prefix
	# - GC tag (5)
	# - print-size (in bytes) of the hash value
	# - GC tag (5)
	# - hash value
	# - GC tag (5)
	# - old this pointer
	# - return address
	# - ... rest of stack
	# $t0 contains the address of next byte to store, +8
	# $t1 the number of characters in the hashcode
	# $s2 contains the object on which toString() has been called
	# $s7 also contains the address of the new object
	################################################################

	# store the hex version of the hash value
	addu $t2,$t0,$t1 # address of last byte in string to store +8
	lw $t3,20($sp) # hash code to print
toString_hashCopyLoop:
	and $t4,$t3,0xf
	srl $t3,4
	lb $t4,hexChars($t4)
	sb $t4,-8($t2)
	subu $t2,$t2,1
	bgt $t2,$t0,toString_hashCopyLoop

	# restore registers, save registers, and return
	lw $s2,28($sp)
	lw $ra,32($sp)
	sw $s7,32($sp)
	addu $sp,32
	jr $ra

###############################################################
# equals() - library method (class String)
# - the String version of the .equals method
# - produces false if the second object is null or is not a String ;
#   otherwise produces true iff the two strings have the same contents
# - parameters:
#   - ($sp) - this-pointer
#   - 4($sp) - object to compare to
# - return-value:
#   - ($sp) - 1 if the objects were the same; 0 otherwise
###############################################################
equals_String:
	
	# quick test for obvious false
	lw $t0,($sp) # second parameter
	beq $t0,$zero,goEsFalse # go return false if null
	lw $t1,-12($t0) # vtable pointer
	la $t2,CLASS_String # string vtable pointer
	bne $t1,$t2,goEsFalse # go return false if not a string

	# save $ra, $sp, etc
	subu $sp,12
	sw $s2,8($sp)
	lw $s2,16($sp)
	sw $ra,16($sp)
	
	# call "compareTo"
	sw $s2,4($sp)
	sw $t0,($sp)
	jal compareTo_String

	# return value is 1 iff result is 0; else 0
	lw $t0,($sp)
	seq $t0,$t0,$zero

	# unwind stack and return
	lw $s2,8($sp)
	lw $ra,16($sp)
	sw $t0,16($sp) # return value
	addu $sp,16
	jr $ra # return
	
goEsFalse:
	addu $sp,4 # adjust stack
	sw $zero,($sp) # store value
	jr $ra # return


	lw $t0,($sp) # second pointer
	lw $t1,4($sp) # first pointer (this)
	seq $t0,$t0,$t1 # produce boolean telling if they are equal
	addu $sp,4 # adjust stack
	sw $t0,($sp) # store return value on top of stack
	jr $ra # return

###############################################################
# toString() - library method (class String)
# - returns a String version of the object
#   - ($sp) - this-pointer
# - return-value:
#   - ($sp) - the string version of the object
###############################################################
toString_String:
	jr $ra # just return, since the parameter is the return value

###############################################################
# readLine() - library method (class Lib)
# - reads line from standard input
# - produces String that contains the line read, except that it
#   does not include the end-of-line character-sequence. An
#   end-of-line character-sequence is one of the following:
#   - a return character followed by a newline character
#   - a newline character not preceded by a return character
#   - a return character not followed by a newline character
#   - an end-of-file character that follows at least one data
#     character
# - returns null on end-of-file
# - parameter:
#   - ($sp) - this-pointer
# - return-value:
#   - ($sp) - pointer to string containing line that was read
# - anomalies:
#   - with bare "return", looks ahead one character to check for
#     newline.  This could cause non-intuitive behavior when
#     run interactively.
###############################################################
readLine_Lib:
	
	subu $sp,$sp,8 # allocate space for data tag, saving $ra
	sw $ra, 4($sp) # save $ra
	move $t1,$sp # save "original" sp

  doRead:

	# read the character
	jal readLogicalChar

	# if we have a 'return', read another character to check for
	# newline
	subu $t2,$v0,13
	bne $t2,$zero,notReturnRL
	jal readLogicalChar
	subu $t2,$v0,10 # check for newline
	beq $t2,$zero,foundNewLine
	sw $v0,lastCharRead # push back character into queue
	j foundNewLine # go process the line

  notReturnRL:

	# at this point, $v0 has our character

	subu $t0,$v0,10
	beq $t0,$zero,foundNewLine
	blt $v0,$zero,foundEof

	# we have a character, so push it onto stack
	subu $sp,$sp,4
	sw $v0,($sp)

	# loop back up to get next character
	j doRead

  foundEof:
	# if we had actually read some characters before hitting
        # the eof, go return them as if a newline had been read
	bne $t1,$sp foundNewLine

	# otherwise, we got end of file without having read any
  # new characters, so return null
	sw $zero,8($sp) # return-value: null
	j rlReturn # return

  foundNewLine:

	# at this point, we have our newline (or end-of-file), and all space
        # on the stack above $t1 are characters to be put into the string.
        # That is therefore the number of data words to allocate (plus 1
        # more for the class-pointer)


	# set up GC tag and char-count on stack
	subu $t0,$t1,$sp # number of chars we read (times 4)
	srl $s6,$t0,2 # number of words on stack with chars
	subu $sp,$sp,4 # push char-count ...
	sw $s6,($sp) # ... onto stack
	addu $t2,$t0,5 # GC tag, incl. for count-word
	sw $t2,($t1) # store GC tag
	
	# allocate the appropriate Object
	addu $s6,$s6,7 # 3 to round up, plus 1 for v-table pointer word
	srl $s6,$s6,2 # data words in object
	move $s7,$zero # # object words in object
	jal newObject # allocate space
	
	# store header words
	la $t0,CLASS_String
	sw $t0,-12($s7) # store class tag (String) into object
	lw $t2,4($sp) # char-count
	sll $t1,$t2,2 # 4 times number of chars
	subu $t2,$zero,$t2 # negative of char-count
	sw $t2,-4($s7) # store negative char-count as header-word 2

	# set up pointers to various parts of stack and object
	lw $t0,-8($s7) # data words in object, possibly must mask off hash
	bge $t0,$zero,skipMask_readLine # don't strip hash code if not there
	and $t0,0xff # mask off object's hash value ...
	sw $t0,-8($s7) # ... and store back into -8 header-word
skipMask_readLine:

	sll $t0,$t0,2 # data bytes in object
	subu $t0,$s7,$t0 # place to store first character (plus 8)	
	subu $t0,$t0,$t2 # place to store last character (plus 9)
	addu $sp,$sp,8 # pop redundant object-pointer and count
	addu $t1,$t1,$sp # first non-char spot on stack

	# at this point:
	#  $t0 points to the target-spot for the last character (plus 9)
	#  $t1 contains top spot on the stack not containing a char
	#  $sp points to the word with the last source character

	# copy the characters, popping each off the stack

	beq $sp,$t1,doneCharCopy
  charCopyLoop:
	lw $t2,($sp)
	sb $t2,-9($t0)
	addu $sp,$sp,4
	subu $t0,$t0,1
	bne $sp,$t1,charCopyLoop
  doneCharCopy:

	# put our pointer (the return value) on the eventual top stack
	sw $s7,8($sp)
	
  rlReturn:
	# restore return address and return
	lw $ra,4($sp) # restore return address, ...
	addu $sp,$sp,8 # ... by popping it (and this-pointer) off stack
	jr $ra

###################################################################
# readInt() - library method (class Lib)
# - skips whitespace
# - then attempts to read a base-10 integer from standard input
# - aborts program if a valid integer is not found
# - returns the integer that is read
# - truncates on overflow
# - parameter:
#   - ($sp) - this-pointer
# - return-value:
#   - ($sp) - value that was read
#   - 4($sp) - (dummy) GC tag
###################################################################
readInt_Lib:

	# save $ra by pushing onto stack
	subu $sp,$sp,4
	sw $ra,($sp)

  riSkipWhiteLoop:
	# read a character
	jal readLogicalChar

	# if character <= 32 ascii, check for whitespace; if not
	# whitespace, abort 
	subu $t0,$v0,32
	bgt $t0,$zero,nonWhite
	beq $t0,$zero,riSkipWhiteLoop # start over if space
	subu $t0,$v0,10
	beq $t0,$zero,riSkipWhiteLoop # start over if newline
	subu $t0,$v0,9
	beq $t0,$zero,riSkipWhiteLoop # start over if tab
	subu $t0,$v0,13
	beq $t0,$zero,riSkipWhiteLoop # start over if carriage return
	subu $t0,$v0,12
	beq $t0,$zero,riSkipWhiteLoop # start over if form-feed
	j badIntegerFormat # illegal integer char: abort program

  nonWhite:
	subu $t0,$v0,'-'
	li $t4,1 # final multiplier
	bne $t0,$zero,helpReadInt # go read
	li $t4,-1 # -1 in final multiplier

	# read another character to make up for the '-'
	jal readLogicalChar

  helpReadInt:
	li $t2,10
	subu $t1,$v0,'0' # convert digit to 0-9 value
	bgeu $t1,$t2,badIntegerFormat # abort if not digit
	move $t3,$t1 #

	#### at this point, $t3 contains value of the first digit read,
	#### and $t2 contains the value 10

  digitLoop:
	# loop invariants:
	# - $t3 contains the value of the number we've read so far
	# - $t2 contains the value 10

	jal readLogicalChar # read next character
	subu $t1,$v0,'0' # convert digit to 0-9 value
	bgeu $t1,$t2,doneDigitLoop # abort if not digit

	mul $t3,$t3,$t2 # multiply old value by 10
	addu $t3,$t3,$t1 # add in value of new digit
	j digitLoop

  doneDigitLoop:

	# "push back" unused character into queue
	sw $v0,lastCharRead

	# restore return address and overwrite it with return-val;
	# write dummy GC tag as second word of return-val
	lw $ra,($sp)
	mult $t3,$t4 # multiply to account for poss. minus sign
	mflo $t3
	sw $t3,($sp) # result
	sw $s5,4($sp) # dummy GC tag
	#lw $zero,4($sp)#**"" #--FOR MEMORY TAGGING
	
	# return
	jr $ra

###################################################################
# readChar() - library method (class Lib)
# - reads a single character from standard input
# - returns the integer that is the encoding of the character
# - returns -1 if end of file was encountered
# - parameter:
#   - ($sp) - this-pointer
# - return-value:
#   - ($sp) - value that was read
#   - 4($sp) - (dummy) GC tag
###################################################################
readChar_Lib:

	# save $ra by pushing onto stack
	subu $sp,$sp,4
	sw $ra,($sp)

  	# read the character
	jal readLogicalChar

	# restore return address; put value (and dummy GC tag),
	# replacing this-pointer saved return address
	lw $ra,($sp)
	sw $s5,4($sp)
	#lw $zero,4($sp)#**"" #--FOR MEMORY TAGGING
	sw $v0,($sp)

	# return
	jr $ra

########################################################
# printStr(str) - library method (class Lib)
# - prints string to standard output
# parameters:
#   - ($sp) - the string to print
#   - 4($sp) - this-pointer
########################################################
printStr_Lib:
	# check for null, printing "(null)", if so
	lw $t0,($sp)
	bne $t0,$zero,psNotNull

	# print "(null)"
	la $a0,nullStr
	li $v0,4
	syscall
	j donePrintStr
	
  psNotNull:
	##### we have a non-null string #####
	# this means that:
	# - number of data words in -8($sp):
	#   - if the sign bit is 1, the low 31 bits
	#   - if the sign bit is 0, the low 8 bits
	# - negative of number of characters in string is in -4($t0)
	# - string begins at $t0-8-(#dataWords*4), stored 1 char per byte
	subu $t0,$t0,8
	lw $t1,($t0) # number of data words, but needs modification
	blt $t1,$zero,skipPrintStr1
	and $t1,0xff # mask out all but low byte
	b skipPrintStr2
skipPrintStr1:
	and $t1,0x7ffffff
skipPrintStr2:	
	sll $t1,$t1,2
	subu $t1,$t0,$t1 # first word in string
	lw $t0,4($t0) # negative of string-length
	subu $t0,$t1,$t0 # byte just beyond last char in string

	# print the chars in the string
	beq $t0,$t1,donePrintStr
  psLoop:
	lb $a0,($t1) # next byte
	li $v0,11 # code for printing char
        syscall # print the char
	addu $t1,$t1,1 # go to next char
	blt $t1,$t0,psLoop

  donePrintStr:
	# pop stack and return
	addu $sp,$sp,8
	jr $ra

########################################################
# printInt(n) - library method (class Lib)
# - prints integer in decimal format to standard output
# - parameters:
#   - ($sp) - the integer to print
#   - 4($sp) - (dummy) GC tag
#   - 8($sp) - this-pointer
########################################################
printInt_Lib:
	# pop value off stack, along with 'this'
	lw $a0,($sp)
	addu $sp,$sp,12

	# print it
	li $v0,1 # code for print-int
	syscall

	# return
	jr $ra

########################################################
# printBool(n) - library method (class Lib)
# - prints boolean to standard output
# - parameters:
#   - ($sp) - the boolean to print
#   - 4($sp) - this-pointer
########################################################
printBool_Lib:
	# pop value off stack, along with 'this'
	lw $t0,($sp)
	addu $sp,$sp,8

	# print either 'true' or 'false', depending on the value
	la $a0,falseString
	beq $t0,$zero,skipPB
	la $a0,trueString
  skipPB:
	li $v0,4 # code for print-string
	syscall

	# return
	jr $ra

########################################################
# str.substring(n, k) - library method (class String)
# takes a substring of a string: Java: str.substring(n, k)
# - parameters:
#   - ($sp) - k: one beyond index of last char in subrange
#   - 4($sp) - (dummy) GC tag
#   - 8($sp) - n: index of first char in subrange
#   - 12($sp) - (dummy) GC tag
#   - 16($sp) - str: string to take substring of
# - return value:
#  - ($sp) - substring
########################################################
substring_String:

	# save $ra by pushing onto stack
	subu $sp,$sp,4
	sw $ra,($sp)

	# get string value off stack, test for null
	lw $t0,20($sp)
	beq $t0,$zero,nullPtrException

	# get both indices and string length, and ensure that
	#   0 <= n <= k <= length
	lw $t0,-4($t0) # negative of string length
	subu $t0,$zero,$t0 # string length
	lw $t1,4($sp) # k
	lw $t2,12($sp) # n
	bgt $zero,$t2,strIndexOutOfBounds
	bgt $t2,$t1,strIndexOutOfBounds
	bgt $t1,$t0,strIndexOutOfBounds

	# allocate memory
	subu $s6,$t1,$t2 # # chars in target-string
	addu $s6,$s6,7 # account for extra "class" (4) word + 3 to round up
	srl $s6,$s6,2 # convert bytes-count to word-count
	move $s7,$zero # (no object-bytes in string)
	jal newObject

	# store "String" tag in object-type field
	la $t0,CLASS_String
	sw $t0,-12($s7)
	
	# mask off hash bits, if needed
	lw $t4,-8($s7) # # data words in source string
	bge $t4,$zero,skipMask_substring # don't strip hash code if not there
	and $t4,0xff # mask off object's hash value ...
	sw $t4,-8($s7) # ... and store back into -8 header-word
skipMask_substring:

	# store negative of count (=n-k) into object-length header-word
	lw $t1,8($sp) # k
	lw $t2,16($sp) # n
	subu $t0,$t2,$t1 # value to store
	sw $t0,-4($s7) # store value
	
	# store result in return-spot on stack
	lw $t3,24($sp) # source string pointer
	sw $s7,24($sp) # store final result in return-spot on stack
	
	# skip byte-copy loop if length is zero
	beq $zero,$t0,doneSubCopyzz

	# get pointers set up in preparation for copy
	lw $t4,-8($t3) # # data words in source string
	sll $t4,$t4,2 # # data bytes in source string (incl. padding)
	subu $t3,$t3,$t4 # addr. of first data word of source string (+8)
	addu $t3,$t3,$t2 # addr. of first source data byte to be copied (+8)
	subu $t1,$t3,$t0 # addr. beyond last source data byte to be copied (+8)
	lw $t2,-8($s7) # # data words in target string
	sll $t2,$t2,2 # # data bytes in target string
	subu $t2,$s7,$t2 # addr. of first target data byte (+8)
	
	############################################
	# at this point:
	# - we know that the string has a positive length
	# - $t3 contains 8 + address of the first source-byte
	# - $t1 contains 8 + limit-address of the first source-byte
	# - $t2 contains 8 + address first target byte
	############################################

	# copy the bytes from source to target
  subCopyLoopzz:
	lb $t4,-8($t3)
	sb $t4,-8($t2)
	addu $t2,$t2,1
	addu $t3,$t3,1
	blt $t3,$t1,subCopyLoopzz
	
  doneSubCopyzz:
	# restore return address, store return value, pop stack
	lw $ra,4($sp) # restore $ra
	addu $sp,$sp,24 # pop stack
	
	# return
	jr $ra

########################################################
# length() - library method (class String)
# returns length of a string: Java: str.length()
# - parameters:
#   - ($sp) - the string
# - return-value:
#   - ($sp) - length of string
#   - 4($sp) - (dummy) GC tag
########################################################
length_String:

	# get string pointer
	lw $t0,($sp)
	
	# grow stack
	subu $sp,$sp,4

	# store GC tag
	sw $s5,4($sp)
	#lw $zero,4($sp)#**"" #--FOR MEMORY TAGGING

	# push length onto stack
	lw $t0,-4($t0) # -length
	subu $t0,$zero,$t0
	sw $t0,($sp) #store length

	# return
	jr $ra


########################################################
# str1.concat(str2) - library method (class String)
# (as in Java)
# - parameters:
#   - ($sp) - the second string
#   - 4($sp) - the first string
# - returns:
#   - ($sp) - pointer to concatenated string
########################################################
concat_String:
 	# save $ra by pushing onto stack
	subu $sp,$sp,4
	sw $ra($sp)

	# get string pointers and check parameter for null
	lw $t0,4($sp)
	beq $t0,$zero,nullPtrException
	lw $t1,8($sp)
	
	# get lengths of two strings; allocate object whose size
	# is their sum divided by 4 (rounded up) plus 1
	lw $t0,-4($t0) # negative size of second object
	lw $t1,-4($t1) # negative size of first object
	addu $s6,$t0,$t1 # sum of negative sizes
	sra $s6,$s6,2 # negative word-size of char part
	subu $s6,$zero,$s6 # word size of char part
	addu $s6,$s6,1 # data word size, including v-table word
	move $s7,$zero
	jal newObject

	# store String vtable address in vtable address field
	la $t0,CLASS_String
	sw $t0,-12($s7)
		
	# mask off hash bits, if needed
	lw $t4,-8($s7) # # data words in source string
	bge $t4,$zero,skipMask_concat # don't strip hash code if not there
	and $t4,0xff # mask off object's hash value ...
	sw $t4,-8($s7) # ... and store back into -8 header-word
skipMask_concat:

	# pop rtnVal, $ra and both parameters off stack; push rtnVal
	# onto stack
	lw $ra,4($sp) # return address
	lw $t0,8($sp) # second object
	lw $t1,12($sp) # first object
	addu $sp,$sp,12 # pop
	sw $s7,($sp) # store return value
	
	# get negative sizes; sum and store in new object size-field
	lw $t2,-4($t0) # negative length of second object
	lw $t3,-4($t1) # negative length of first object
	addu $t4,$t2,$t3 # sum of negative lengths
	sw $t4,-4($s7) # store sum as negated target-string length

	#########################################################
	# at this point:
	# - $t0 is pointer to second object
	# - $t1 is pointer to first object
	# - $t2 is negated length of second object
	# - $t3 is negated length of first object
	# - $s7 is pointer to new object
	#########################################################

	# compute addresses for moving data from first string
	lw $t4,-8($t1) # # data words in first string
	sll $t4,$t4,2 # # data bytes in first string
	subu $t1,$t1,$t4 # addr. (+8) of first byte in first string
	lw $t4,-8($s7) # # data words in new string
	sll $t4,$t4,2 # # data bytes in new string
	subu $s7,$s7,$t4 # addr. (+8) of first byte in new string
	beq $zero,$t3,doneConcatLoop1zz # skip first loop is no bytes to copy
	subu $t3,$t1,$t3 # limit (+8) address for first string

	#########################################################
	# at this point:
	# - $t0 is pointer to second object
	# - $t1 is address (+8) of first byte in first object
	# - $t2 is negated length of second object
	# - $t3 is limit-address (+8) of data in first object
	# - $s7 is address (+8) of first byte in new object
	# - note: if data-length of first object is zero, then
	#   we skip over this part, and go to 'doneConcatLoop1'
	#########################################################

	# copy the bytes from first source to target
  concatLoop1zz:
	lb $t4,-8($t1)
	sb $t4,-8($s7)
	addu $s7,$s7,1
	addu $t1,$t1,1
	blt $t1,$t3,concatLoop1zz
  doneConcatLoop1zz:
  
    # if second string is empty, skip rest of copy
    beq $zero,$t2,doneConcatLoop2zz

  	# compute addresses for moving data from second string
	lw $t4,-8($t0) # # data words in second string
	sll $t4,$t4,2 # # data bytes in second string
	subu $t1,$t0,$t4 # addr. (+8) of first byte in second string
	subu $t3,$t1,$t2 # limit (+8) address for second string

	#########################################################
	# at this point:
	# - $t1 is address (+8) of first byte in second object
	# - $t3 is limit-address (+8) of data in second object
	# - $s7 is address (+8) of next byte to write new object
	# - note: if data-length of second object is zero, then
	#   we skip over this part, and go to 'doneConcatLoop2'
	#########################################################

	# copy the bytes from first source to target
  concatLoop2zz:
	lb $t4,-8($t1)
	sb $t4,-8($s7)
	addu $s7,$s7,1
	addu $t1,$t1,1
	blt $t1,$t3,concatLoop2zz
  doneConcatLoop2zz:
 
  concatRtnzz:
	# return
	jr $ra

########################################################
# str.charAt(n) - library method (class String)
# accesses a character in a string, as in Java
# - parameters:
#   - ($sp) - the index, n
#   - 4($sp) - dummy GC tag
#   - 8($sp) - the string, str
# - returns:
#   - ($sp) - the character found
#   - 4($sp) - the dummy GC tag
########################################################
charAt_String:
	# get string
	lw $t0,8($sp)

	# check that index is in bounds
	lw $t1,-4($t0) # negative of # data words in string
	subu $t3,$zero,$t1 # # chars in string
	lw $t2,($sp) # index
	bgeu $t2,$t3,strIndexOutOfBounds

	# access element
	lw $t1,-8($t0) # # data words in object
	sll $t1,$t1,2 # - byte-offset from end of chars
	subu $t1,$t2,$t1 # - address of first char in string, offset by 8
	addu $t0,$t0,$t1 # - address of our char, offset by 8
	lb $t0,-8($t0) # our char

	# pop elements off stack, pushing rtnVal
	addu $sp,$sp,4
	sw $t0,($sp)
	sw $s5,4($sp)
	#lw $zero,4($sp)#**"" #--FOR MEMORY TAGGING

	# return
	jr $ra

########################################################
# intToString(n) - library method (class Lib)
# converts int to string: Java: ""+n
# - parameters:
#   - ($sp) - the value to convert, n
#   - 4($sp) - dummy GC tag
#   - 8($sp) - this-pointer
# - returns:
#   - ($sp) - the string, which is the string representation of
#     the integer
########################################################
intToString_Lib:

	# save return address on stack; allocate space for dummy GC tag
	subu $sp,$sp,8
	sw $ra,4($sp)

	# save current sp
	move $t0,$sp

	# move constant 10 into $t3
	li $t3,10

	# get argument, negate if negative
	lw $t1,8($sp)
	bge $t1,$zero,itsNonNegLoop
	subu $t1,$zero,$t1

	# loop through, computing unsigned remainder by 10, and
	# storing digits on stack until we reach 0
  itsNonNegLoop:
	divu $t1,$t3
	mflo $t1 # quotient
	mfhi $t4 # remainder
	addu $t4,$t4,'0' # turn remainder into digit
	subu $sp,$sp,4
	sw $t4,($sp) # push digit onto stack
	bne $t1,$zero,itsNonNegLoop

	# push '-' if negative
	lw $t4,8($t0)
	bge $t4,$zero,itsSkipNeg
	li $t4,'-'
	subu $sp,$sp,4
	sw $t4,($sp)
  itsSkipNeg:

	################################################
	# At this point, all of our digits have been pushed
	# onto the stack.  $sp points to the first one;
	# $t0 contains the limit-pointer (into which we need to
	# write a GC tag).
	################################################

	# compute number of characters on stack (one word per character);
	# write GC tag onto stack; push char-count onto stack
	subu $s6,$t0,$sp
	addu $t3,$s6,5 # GC tag (including for count-word, about to be pushed
	sw $t3,($t0)
	srl $s6,$s6,2
	subu $sp,$sp,4
	sw $s6,($sp)
	
	# allocate memory
	addu $s6,$s6,7 # 3 to round up, plus 4 for vtable word
	srl $s6,$s6,2
	move $s7,$zero # no "object" words in object
	jal newObject

	# restore char-count; pop it and return value from 'newObject'
	lw $t0,4($sp)
	addu $sp,$sp,8

	# store "String" tag into class field
	subu $s7,$s7,8 # address of header-1 word
	la $t1,CLASS_String
	sw $t1,-4($s7)
		
	# mask off hash bits, if needed
	lw $t4,($s7) # # data words in source string
	bge $t4,$zero,skipMask_intToString # don't strip hash code if not there
	and $t4,0xff # mask off object's hash value ...
	sw $t4,($s7) # ... and store back into -8 header-word
skipMask_intToString:
	
	# store negative of char-count into header-2 word
	subu $t0,$zero,$t0
	sw $t0,4($s7)

	lw $t1,($s7) # number of data words in string
	sll $t1,$t1,2 # number data bytes in string
	subu $t1,$s7,$t1 # first location to store chars in string
	subu $t0,$t1,$t0 # limit address for chars in string

	####################################################
	# at this point:
	# - $sp contains first source character address
	# - $t1 contains first target character address
	# - $t0 contains target-limit address
	####################################################

	# loop through and copy all elements as we pop them off the stack.
	# (In this case, we know that there is it least one.)
  itsLoop:
	lw $t2,($sp)
	addu $sp,$sp,4
	sb $t2,($t1)
	addu $t1,$t1,1
	bne $t1,$t0,itsLoop

	####################################################
	# At this point
	# - ($t0+15)&0xfffffffe is our return value
    # - ($sp) contains garbage (old GC tag)
	# - 4($sp) contains return address
	####################################################

	# adjust stack, restore return address; return
	lw $ra,4($sp)
	addu $sp,$sp,16
	addu $t0,$t0,15
	and $t0,$t0,0xfffffffc
	sw $t0,($sp)
	jr $ra

########################################################
# intToChar(n) - library method (class Lib)
# converts int to a one-character string: Java: ""+(char)(n&0xff)
# - parameters:
#   - ($sp) - the value to convert, n
#   - 4($sp) - dummy GC tag
#   - 8($sp) - this-pointer
# - returns:
#   - ($sp) - the string, which is the converted character
# - note: only the low 8 bits of the value n are used
########################################################
intToChar_Lib:
	# save return address
	subu $sp,$sp,4
	sw $ra,($sp)

	# allocate object
	li $s6,2
	move $s7,$zero
	jal newObject

	# restore $ra, get 'n', popping then and 'newObject' rtnVal
	# off stack
	lw $ra,4($sp)
	lw $t1,8($sp)
	addu $sp,$sp,16

	# store "String" tag into class field
	la $t0,CLASS_String
	sw $t0,-12($s7)
		
	# mask off hash bits, if needed
	lw $t4,-8($s7) # # data words in source string
	bge $t4,$zero,skipMask_intToChar # don't strip hash code if not there
	and $t4,0xff # mask off object's hash value ...
	sw $t4,-8($s7) # ... and store back into -8 header-word
skipMask_intToChar:

	# store data in string
	sb $t1,-16($s7)
	
	# store negative of size in header-word 2
	li $t0,-1
	sw $t0,-4($s7)

	# store string pointer (return val) on stack for return
	sw $s7,($sp)

	# return
	jr $ra

########################################################
# str1.compareTo(str2) - library method (class String)
# compares two strings as in Java
# - parameters:
#   - ($sp) - second string
#   - 4($sp) - first string
# - returns:
#   - ($sp) - -1, 0, or 1 depending on whether str1 is
#       lexographically less than, equal to or greater than str2
#   - 4($sp) - (dummy) GC tag
########################################################
compareTo_String:
	# get string pointers and check parameter for null
	lw $t0,($sp) # second string
	beq $t0,$zero,nullPtrException
	lw $t1,4($sp) # first string
	
	# get (negatives of) respective byte-lengths
	lw $t2,-4($t0) # negative length of second string
	lw $t3,-4($t1) # negative length of first string

	# put tentative return value in $t5.
	# The tentative return value is the one that we will use if we get
	# to the end of the shorter string during our comparison-loop.
	slt $t4,$t3,$t2
	slt $t5,$t2,$t3
	subu $t5,$t5,$t4
	
	# at this point:
	# - $t0 contains the pointer to the second string object
	# - $t1 contains the pointer to the first string object
	# - $t5 contains the value to return if the strings compare equal up
	#   to the length of the shortest word

	# get begin-of-string addresses
	lw $t2,-8($t0) # # data words in second string
	lw $t3,-8($t1) # # data words in first string
	sll $t2,$t2,2 # byte-offset to beginning of str2 (+8)
	sll $t3,$t3,2 # byte-offset to beginning of str1 (+8)
	subu $t0,$t0,$t2 # beginning of str1 address (+8)
	subu $t1,$t1,$t3 # beginning of str2 address (+8)
	
	# put $t1-limit into $t2
	beq $zero,$t5,skipStrCmpLenzz
	move $t2,$t3
  skipStrCmpLenzz:
    add $t2,$t1,$t2
	
	# at this point:
	# - $t0 contains 8 plus the address of the first data-byte of str2
	# - $t1 contains 8 plus the address of the first data-byte of str1
	# - $t2 contains 8 plus the address of the last data-type of str1
	# - $t5 contains the value to return if the strings compare equal up
	#   to the length of the shortest word

	#######################################################
	# at this point, we have
	# - $t5 containing the tentative return-value
	# - $t1 containing address of first char in str2
	# - $t2 containing limit for $t1
	# - $t0 containing address of first char in str1
	#######################################################

	# loop through, until we find unequal words or we hit
	# our limit	
  cmpLoopzz:
	lw $t3,-8($t1) # word from str2
	lw $t4,-8($t0) # word from str1
	bne $t3,$t4,cmpNotEqualzz
	addu $t1,$t1,4
	addu $t0,$t0,4
	bne $t1,$t2,cmpLoopzz

	# # got to the end of one string: go set up return
	j cmpHitLimitzz

  cmpNotEqualzz:
	# found unequal characters: return -1 or 1, depending on which is
	# greater
	slt $t5,$t4,$t3 # 1 if str2 > str1, else 0
	sll $t5,$t5,1 # 2 if str2 > str1, else 0
	subu $t5,$t5,1 # 1 if str2 > str1, else -1
  cmpHitLimitzz:
	sw $t5,($sp) # store value
	sw $s5,4($sp) # GC tag
	#lw $zero,4($sp)#**"" #--FOR MEMORY TAGGING
	jr $ra # return

########################################################
# readLogicalChar (millicode)
#  - logically reads a character from standard input
#  - first checks character buffer, consuming it if possible
#  - return-result:
#    - returns character in $v0
#  - side-effects:
#    - reads a character
#    - clobbers $t0
########################################################
readLogicalChar:

	# check if we already have a character
	lw $v0,lastCharRead
	li $t0,-2
	beq $t0,$v0 doReadCh

	# we have our character from the buffer. Wipe out
	# buffer and return
	sw $t0,lastCharRead # store -2 into buffer (i.e. "empty")
	jr $ra # return
	
  doReadCh:
	# we need to actually read a character: read and return
	li $v0,12 # use system call to read a character
	syscall
	jr $ra # return

########################################################
# newObject (millicode)
#  - allocates a new object on the heap
#  - two-word header is set up properly
#  - all non-header words in object are set to zero
#  - parameters:
#    - $s6 = the number of data words in the negative-offset portion of
#      the object (including the vtable pointer); this value is 1 if the
#      object is an array; this should always be at least 1
#    - $s7 - second header-word, which is the number of object
#      words in the object
#      - $s7 may not be negative (this is checked); if so, the program is
#        aborted with an "array size of out bounds" error message
#      is treated as if it were zero
#  - return-result:
#    - pushed onto the top of the stack
#    - also returned in $s7
#  - side-effects:
#  - may trash all $tx registers and all $sx registers, except the
#    "permanent" ones, which get updated with values that are
#    consistent with the new space
########################################################
newObject:
	# $s6 = # data words
	# $s7 = # object words (# data words if data-array allocation,
	# where a negative number is treated as 0)
	# $ra = return address
	# on return, pointer to new memory in two places:
	# - pushed onto top of stack
	# - in $s7
	
	# if the object-portion size is negative, abort with error
	blt $s7,$zero arraySizeOutOfBounds

	# mark the fact that we have not yet GC'd for this allocation
	move $t5,$zero

	###### TEMPORARY #######
	# for now, go a GC unconditionally, so that a full GC occurs
	# every time we allocate an object
	### let's not do that for now
	# j doGC

  gcJoin:
	# don't think we need what's commented out below anymore
##	# Determine actual size of "before-header" portion.
##	# If negative (which would be -1), it really means 1
##	move $t3,$s6
##	bge $t3,$zero,newSkip
##	subu $t3,$zero,$t3 # 1

  newSkip:

	# at this point:
	#  $s6 contains the before-header word count
	#  $s7 contains the second header word, which is also the
	#    after-header word count
##	#  $t3 contains the before-header word count
	#  $t5 is zero iff we have not GC'd for this allocation

	# determine if we have enough memory available
	addu $t0,$s6,$s7
##	addu $t0,$t3,$s7
	sll $t0,$t0,2
	addu $t0,$t0,8 # amount of memory needed
	addu $t1,$t0,$s3
	bgtu $t1,$s4,doGC

	# at this point:
	#  $s3 points to beginning of segment, and
	#  $t1 points just past the end

	# zero out the memory
	move $t2,$s3
  zeroObjLoop:
	sw $zero,($s3)
	#lw $zero,($s3)#**"" #--FOR MEMORY TAGGING	

	addu $s3,4
	bltu $s3,$t1,zeroObjLoop

	# at this point:
	#  $s3 has been updated to point to the next free slot,
	#    which is also the points just past our object

	# compute pointer value and set up header-words
	sll $t0,$s7,2    # number of post-header bytes
	subu $t0,$s3,$t0 # pointer that we will return

	# determine the value to store in the first header-word:
	# if <= 255 (unsigned):
	#  - it goes into low byte
	#  - hash bits go into high three bytes, with top bit being 1
	# if >255 (unsigned)
	#  - it goes into full word (with a 0 in the high bit)
	
	li $t2,255
	bgeu $s6,$t2 firstHeaderLarge
	lw $t1,prevHashConstant
	addu $t1,0x12b68fd2
	sw $t1,prevHashConstant # update hash constant
	or $t1,0x80000000 # set top bit
	and $t1,0xffffff00 # clear low bit
	or $s6,$t1
firstHeaderLarge:
	sw $s6,-8($t0) # store header-1 value
	#lw $zero,-8($t0)#**"H1" #--FOR MEMORY TAGGING

	# store second header-value
	sw $s7,-4($t0)   # second header-word
	#lw $zero,-4($t0)#**"H2" #--FOR MEMORY TAGGING
	
	# put return-value into $s7 and also push it onto top of stack
	move $s7,$t0
	subu $sp,$sp,4
	sw $t0,($sp)

	jr $ra
	
  doGC:
	#####################################################
	# We need to do a garbage-collect
	#####################################################
 
         ####### print that we are doing a GC ########
	 ####### THESE THREE LINES WILL NORMALLY BE COMMENTED OUT #######
#         la $a0,gcMsg # prints message: "GC!" 
#         li $v0,4 # syscall-code for print-string 
#         syscall 
 	  

	# if we've already done a GC for this allocation, then
	# we are actually out heap-memory: abort program
	bne $t5,$zero,outOfHeapMemory
	  
	# increment the number of times we've done a GC, for later reporting
	lw $t5,gcCount
	addu $t5,1
	sw $t5,gcCount

	# save $s2 (our only rooted register) on the stack
	# so that the garbage collector processes it
	subu $sp,$sp,4
	sw $s2,($sp)

	# set $s3 to the address of the new segment and the
	# end-limit of the new segment, respectively,
	# Also, update cur_seg to refer to the other segment
	lw $t0,cur_seg
	move $t7,$s4
	la $t6,seg1_start
	la $s3,seg0_start
	la $s4,seg0_end
	sw $zero,cur_seg
	bne $t0,$zero,skipGc1
	la $t6,seg0_start
	la $s3,seg1_start
	la $s4,seg1_end
	sw $s5,cur_seg
  skipGc1:
	li $t5,0x80000000
	lw $t0,stack_bottom
	subu $t0,4

	##################################
	# TEMPORARY HACK TO EXERCISE GC
	##################################
	#lw $t1,heapFudge
	#addu $t6,$t6,$t1
	#addu $t1,$t1,4
	#addu $s3,$s3,$t1 # fudge new heap pointer

	###############################################################
	# at this point:
	# - $t6 contains the first address of the source space
	# - $t7 contains the limit address of the source space
	# - $s3 contains the first address of the target space
	# - $s4 contains the limit address of the target space
	# - cur_seg has been updated to refer to the target space
	# - $t0 contains the address of the deepest stack element
	# - $sp contains the address of the top stack element
	# - $s2 is available for use, having been pushed onto the stack
	# - $t5 contains the value 0x80000000
	###############################################################

	###### begin outer loop to copy all stack-direct objects ######

  gcStackCopyLoop:
	lw $t1,($t0) # current stack element

	# test if we have a GC tag
	sll $t2,$t1,31 # zero iff low bit was zero
	bne $t2,$zero,gcBump # go skip data values if low bit not zero

	# bump stack-address pointer
	subu $t0,$t0,4

	# if value is out of range (which includes null=0), and is
	# therefore does not refer to an object on the heap, just go
	# loop back and do the next one
	bleu $t1,$t6,gcTestIterDone1
	bgtu $t1,$t7,gcTestIterDone1

	# if the object has already been moved, update the stack-value
	# via the forwarding pointer
	lw $t2,-8($t1) # possible forwarding tag
	bne $t2,$zero,gcNoForward1 # if not forwarding tag, go copy
	lw $t2,-4($t1) # forwarding pointer: object's new address
	sw $t2,4($t0) # update stack value
	j gcTestIterDone1 # do next iteration

  gcNoForward1:
	#########################################################
	# we actually need to copy the object into the new space
	#########################################################

	# compute the amount of space that is needed
	bge $t2,$zero,gcSkip2
	and $t2,0xff #### mask off hash value
	#### OLD
	#### subu $t2,$zero,$t2 # set to 1 if -1 (number of data words)

  gcSkip2:
	sll $t2,$t2,2
	addu $t2,$t2,8
	subu $t4,$t1,$t2 # address of first word of source
	lw $t3,-4($t1) # number of object words (negative means zero)
	bge $t3,$zero,gcH2Neg1
	move $t3,$zero
  gcH2Neg1:
	sll $t3,$t3,2
	addu $t3,$t3,$t1 # address one word past last word of source

	addu $t2,$s3,$t2 # pointer to target object

	#########################################################
	# At this point:
	# - $t0 contains the address of the stack slot we'll
	#   process next
	# - $t1 contains the contents of the stack slot we're
	#   currently working on, which is a pointer to the source
	#   object (i.e., the address just beyond the object's header)
	# - $t2 contains the pointer to the target object
	# - $t3 contains the limit address of the source object
	# - $t4 contains the first address of the source object
	# - $t5 contains the value 0x80000000
	# - $t6 contains the first address of the source space
	# - $t7 contains the limit address of the source space
	# - $s3 contains the first unallocated address of the
	#   target space, which is also the first address of the
	#   target object
	# - $s4 contains the limit address of the target space
	# - $s5 contains the value 5
	# - $s6-7 contain the original parameters to the call to
	#   'newObject'
	# - $sp contains the address of the top stack element
	# - available for use: $s0-2
	#########################################################

	# swap first header word and first data word so that header
        # can be found by "trailing finger" in the target space
	lw $s0,($t4)
	lw $s1,-8($t1)
	sw $s1,($t4)
	sw $s0,-8($t1)
	
	# copy all source bytes to the target
  gCinnerCopy1:
	lw $s0,($t4)
	sw $s0,($s3)
	addu $t4,$t4,4
	addu $s3,$s3,4
	bltu $t4,$t3,gCinnerCopy1

	###########################################################
	# All bytes have been copied to the target space.  We still
	# need to:
	# - set up forwarding pointer in source object
	# - update the pointer in the current stack slot
	###########################################################

	# set up the forwarding pointer
	sw $zero,-8($t1) # 0 in first header-slot
	sw $t2,-4($t1) # forwarding pointer in second header-slot

	# update the stack slot with the address in the target space
	sw $t2,4($t0)
	#lw $zero,-8($t2)#**"H1" #--FOR MEMORY TAGGING
	#lw $zero,-4($t2)#**"H2" #--FOR MEMORY TAGGING

	# go handle next stack slot (testing if done)
	j gcTestIterDone1

  gcBump:
	#### we have a GC tag.  Bytes to skip: tag value + 3.
	subu $t0,$t0,$t1
	subu $t0,$t0,3

  gcTestIterDone1:
	bgeu $t0,$sp,gcStackCopyLoop

	###### end outer loop to copy all stack-direct objects ######

	#############################################################
	# We have finished processing the stack elements.  Now we need
	# to update elements in the heap itself. This may itself involve
	# moving additional objects
	#############################################################

	#########################################################
	# At this point:
	# - $t5 contains the value 0x80000000
	# - $t6 contains the first address of the source space
	# - $t7 contains the limit address of the source space
	# - $s3 contains the first unallocated address of the
	#   target space
	# - $s4 contains the limit address of the target space
	# - $s5 contains the value 5
	# - $s6-7 contain the original parameters to the call to
	#   'newObject'
	# We want to set things up so that in addition:
	# - $t0 is the "trailing finger", containing the address
	#   of the first slot in target space that we have yet
	#   to process.
	# Then during processing:
	# - $t1 will contain the contents of the heap slot we're
	#   currently working on, which is a pointer to the source
	#   object
	# And when we're actually copying an object:
	# - $t2 will contain pointer to the target object
	# - $t3 will contain the limit address of the source object
	# - $t4 will contain the first address of the source object
	# - $s1 will contain the the limit address for the current
	#   object that tells where the pointers in the object end
	# - available for use: $s0
	##########################################################

	# set $t0 to be at the beginning of target-space
	lw $t1,cur_seg
	la $t0,seg0_start
	beq $t1,$zero,gcSkip4
	la $t0,seg1_start

	##################################
	# TEMPORARY HACK TO EXERCISE GC
	##################################
	#lw $s0,heapFudge
	#addu $s0,$s0,4
	#addu $t0,$t0,$s0
	#sw $s0,heapFudge

  gcSkip4:

	# if there were no objects put into the heap during stack
	# processing, we're done, so go finish up
	bgeu $t0,$s3,gcFinishUp

	###### begin outer loop to copy all non-stack-direct objects ######

  gcHeapCopyLoop:
	# get data count for object; swap header-word with first word
	# of object so that they're back in the right place
	lw $t1,($t0) # (what will be) first header word for current object
	move $t2,$t1 # number data bytes in object (poss. w/hash bits)
	bge $t2,$zero,gcSkip4a # are there hash bits?
	and $t2,0xff # mask off hash bits
gcSkip4a:	
	sll $t2,$t2,2 # # data bytes
	addu $t2,$t2,8 # to skip header words
	addu $t2,$t0,$t2 # pointer to new object
	lw $t3,-8($t2) # word to swap
	sw $t1,-8($t2) # store header word
	sw $t3,($t0) # restore first word of object

	################################################
	# at this point:
	# - $t2 contains the pointer to our new object
	################################################

	# check if we have a data array
	lw $t1,-12($t2) # vtable pointer
	li $t0,dataArrayVTableStart # address of vtable for first data array
	blt $t1,$t0,gcNotDataArray # if data array, no more xforming to do

	# We have a vtable address that is a data array.
	# we need skip over it then loop back to do next object.
  skipToNextObj:
	lw $t1,-4($t2) # data words in (object position of) array
	#### note: we know that it's not a string, so the value will
	#### not be artificially negative
	sll $t1,$t1,2 # convert to byte-count
	addu $t0,$t2,$t1 # skip over object
	j gcTestIterDone2 # go do next object, if any

	###################################################
	# at this point:
	# - the object has been restored to normal status--that is, the
	#   word-swap has been done
	# - $t2 contains a pointer to the object
	###################################################
	
  gcNotDataArray:
	lw $t3,-4($t2) # # object words (negative treated as zero)
	bge $t3,$zero,gcH2Neg2
	move $t3,$zero
  gcH2Neg2:
	sll $t3,$t3,2 # # object bytes
	move $t0,$t2 # address of first pointer in object
	add $s1,$t2,$t3 # limit address for this object

	#####################################################
	# At this point, we have to "translate" all pointers,
	# starting at $t0 to (but not including) $s1
	#####################################################

	# if there are no pointer-slots (i.e., $t0=$s1), skip this
	# part
	beq $t0,$s1,gcTestIterDone2
	
  gcNextPointerInObject:
	# get pointer from object
	lw $t1,($t0)

	# if value is out of range, and is therefore does not refer
	# to an object, just go loop back and do the next one
	bleu $t1,$t6,gcGoNextPointerSlot
	bgtu $t1,$t7,gcGoNextPointerSlot

	# if the object has already been moved, update the stack-value
	# via the forwarding pointer
	lw $t8,-8($t1) # possible forwarding tag
	bne $t8,$zero,gcNoForward2 # if not forwarding tag, go copy
	lw $t8,-4($t1) # forwarding pointer: object's new address
	sw $t8,($t0) # update pointer in object
	j gcGoNextPointerSlot # do next iteration

  gcNoForward2:
	#########################################################
	# we actually need to copy the object into the new space
	#########################################################

	#########################################################
	# At this point:
	# - $t0 contains the address of the heap-slot we're translating
	# - $t1 will contain the contents of the heap-slot we're
	#   currently working on, which is a pointer to the source
	#   object
	# - $t2 will contains pointer to the object we're in the
	#   middle of translating
	# - $t5 contains the value 0x80000000
	# - $t6 contains the first address of the source space
	# - $t7 contains the limit address of the source space
	# - $s3 contains the first unallocated address of the
	#   target space, which will also be the first address
	#   of the target object
	# - $s4 contains the limit address of the target space
	# - $s5 contains the value 5
	# - $s6-7 contain the original parameters to the call to
	#   'newObject'
	# Then during processing:
	# And when we're actually copying an object:
	# - $t3 will contain the limit address of the source object
	# - $t4 will contain the first address of the source object
	# - $s1 will contain the the limit address for the current
	#   object that tells where the pointers in the object end
	# - $t8 will contain a pointer to the target object
	# - available for use: $s0, $t8, $t9
	##########################################################

	# compute the amount of space that is needed
	bge $t8,$zero,gcSkip5 # # words in negative-offset portion
	and $t8,0xff # mask off hash bits

  gcSkip5:
	sll $t8,$t8,2 # bytes in negative-offset portion ...
	addu $t8,$t8,8 # ... add in bytes for header-words
	subu $t4,$t1,$t8 # address of first word of source object
	lw $t3,-4($t1) # # words in positive-offset portion
	bge $t3,$zero,gcNoNeg
	move $t3,$zero # negative treated as zero
  gcNoNeg:
	sll $t3,$t3,2 # bytes in negative-offset portion
	addu $t3,$t3,$t1 # address one word past last word of source

	addu $t8,$s3,$t8 # pointer to target object

	#########################################################
	# At this point:
	# - $t0 contains the address of the stack slot we'll
	#   process next
	# - $t1 contains the contents of the stack slot we're
	#   currently working on, which is a pointer to the source
	#   object
	# - $t2 will contains pointer to the object we're in the
	#   middle of translating
	# - $t3 contains the limit address of the source object
	# - $t4 contains the first address of the source object
	# - $t5 contains the value 0x80000000
	# - $t6 contains the first address of the source space
	# - $t7 contains the limit address of the source space
	# - $t8 contains the pointer to the target object
	# - $s1 contains the the limit address for the current
	#   object that tells where the pointers in the object end
	# - $s3 contains the first unallocated address of the
	#   target space, which is also the first address of the
	#   target object
	# - $s4 contains the limit address of the target space
	# - $s5 contains the value 5
	# - $s6-7 contain the original parameters to the call to
	#   'newObject'
	# - $sp contains the address of the top stack element
	# - available for use: $s0, $t9
	#########################################################

	# swap first header word and first data word so that header
        # can be found by "trailing finger"
	lw $s0,($t4)
	lw $t9,-8($t1)
	sw $t9,($t4)
	sw $s0,-8($t1)

	# copy all source bytes to the target
  gCinnerCopy2:
	lw $s0,($t4)
	sw $s0,($s3)
	addu $t4,$t4,4
	addu $s3,$s3,4
	bltu $t4,$t3,gCinnerCopy2

	###########################################################
	# All bytes have been copied to the target space.  We still
	# need to:
	# - set up forwarding pointer in source object
	# - update the pointer in the current stack slot
	###########################################################

	# set up the forwarding pointer
	sw $zero,-8($t1) # 0 in first header-slot
	sw $t8,-4($t1) # forwarding pointer in second header-slot

	# update the heap-slot with the address in the target space
	sw $t8,($t0)

  gcGoNextPointerSlot:
	# bump $t0 to next slot in object; if not done, loop back
	addu $t0,$t0,4
	bltu $t0,$s1,gcNextPointerInObject

  gcTestIterDone2:
	bltu $t0,$s3,gcHeapCopyLoop

	###### end outer loop to copy all non-stack-direct objects ######

  gcFinishUp:
	# restore $s2 to its updated value by popping off stack
	lw $s2,($sp)
	addu $sp,$sp,4

	# mark us as having already GC'd
	move $t5,$s5

	# go try and allocate again
	j gcJoin
	    

########################################################
# vm_init (millicode)
#  - initialzes the virtual machine
#  - values 5 stored in $s5
#  - zero ("this pointer") stored in $s2
#  - heap and heap-limit pointers stored respectively in $s3 and $s4
#  - address of bottom of stack stored in 'stack_bottom' memory
#    location
#  - (note: 'cur_seg' memory location is already set to 0)
########################################################
vm_init:

	# mark bottom of stack
	sw $sp,stack_bottom
	#move $sp,$sp#**"stack pointer"  #--FOR MEMORY TAGGING
	
	# set "this" pointer to be null, for now
	move $s2,$zero
	#move $s2,$s2#**"this pointer"  #--FOR MEMORY TAGGING

	#set up the "five" register
	li $s5,5
	#move $s5,$s5#**"constant 5"  #--FOR MEMORY TAGGING

	la $s3,seg0_start
	#move $s3,$s3#**"next-avail-heap"  #--FOR MEMORY TAGGING
	la $s4,seg0_end
	#move $s4,$s4#**"end-heap"  #--FOR MEMORY TAGGING
	
	# return
	jr $ra

########################################################
# divide (millicode)
#  - divides first arg by second (signed divide)
#  - aborts if divisor is zero
#  - follows calling conventions for library methods
#  - parameters:
#    - ($sp) divisor
#    - 4($sp) (dummy) GC tag
#    - 8($sp) dividend
#    - 12($sp) (dummy) GC tag
#  - return value:
#    - ($sp) result
#    - 4($sp) (dummy) GC tag
########################################################
divide:
	# get parameters; abort if divisor zero
	lw $t0,($sp)
	lw $t1,8($sp)
	beq $t0,$zero,divByZeroError
	
	# perform division
	div $t1,$t0
	mflo $t0

	# store result, adjust stack and return
	addu $sp,$sp,8 # adjust stack
	sw $t0,($sp) # store result
	jr $ra

########################################################
# remainder (millicode)
#  - takes remainder first arg divided by second (signed divide)
#  - aborts if divisor is zero
#  - follows calling conventions for library methods
#  - parameters:
#    - ($sp) divisor
#    - 4($sp) (dummy) GC tag
#    - 8($sp) dividend
#    - 12($sp) (dummy) GC tag
#  - return value:
#    - ($sp) result
#    - 4($sp) (dummy) GC tag
########################################################
remainder:
	# get parameters; abort if divisor zero
	lw $t0,($sp)
	lw $t1,8($sp)
	beq $t0,$zero,divByZeroError
	
	# perform division
	div $t1,$t0
	mfhi $t0

	# store result, adjust stack and return
	addu $sp,$sp,8 # adjust stack
	sw $t0,($sp) # store result
	jr $ra
	
########################################################
# checkCast (millicode) - checks that a cast is legal
#  - aborts if null
#  - aborts if cast is illegal cast
#  - parameters:
#    - ($sp) object to check
#    - $t0 address of vtable for target-class
#    - $t1 address one past vtable address of last
#      subclass of target-class
#  - return value:
#    - ($sp) object to check (now checked)
#  - side-effects: clobbers $t2 and $t3
########################################################
checkCast:
	# get object, allow immediately if null
	lw $t2,($sp)
	beq $t2,$zero,checkCastReturn
	
	# get vtable address of object, abort if less than
	# lower limit or greater then or equal to higher
	# limit
	lw $t2,-12($t2) # vtable address
	bge $t2,$t1,castException
	blt $t2,$t0,castException
	
	# return, leaving object unchanged on stack
  checkCastReturn:	
	jr $ra	

# checkCast:
# 	# get object, allow immediately if null
# 	lw $t2,($sp)
# 	beq $t2,$zero,checkCastReturn
# 	
# 	# get vtable address of object (using Object vtable
# 	# address for arrays)
# 	lw $t3,-8($t2) # <= 0 if array
# 	lw $t2,-12($t2) # vtable address (unless array)
# 	bgt $t3,$zero,skipArrayCast
# 	la $t2,CLASS_Object
# 	
# 	# get vtable address of object, abort if less than
# 	# lower limit or greater then or equal to higher
# 	# limit
#   skipArrayCast:
# 	bge $t2,$t1,castException
# 	blt $t2,$t0,castException
# 	
# 	# return, leaving object unchanged on stack
#   checkCastReturn:	
# 	jr $ra	

########################################################
# instanceOf (millicode) - tests whether an object is
#   a member of a given class (or subclass)
#  - returns false if object is null
#  - parameters:
#    - ($sp) object to check
#    - $t0 address of vtable for target-class
#    - $t1 address one past vtable address of last
#      subclass of target-class
#  - return value:
#    - ($sp) true (1) or false (0), depending on whether
#      object is a member
#  - side-effects: clobbers $t2 and $t3
########################################################
instanceOf:
	# get object, go return false if null
	lw $t2,($sp)
	beq $t2,$zero,doneInstanceOf
	
	# get vtable address of object, determine if we're >= the
	# lower limit, and if we're < the higher limit
	lw $t2,-12($t2) # vtable address
	sge $t0,$t2,$t0 # are we >= the lower limit?
	slt $t1,$t2,$t1 # are we < the higher limit?
	
	# store the AND of the two conditions onto the stack; return
	and $t2,$t0,$t1
	sw $t2,($sp)
doneInstanceOf: # if we reach here via branch, stack-top is zero,
	        # which will now represent false
	jr $ra

# instanceOf:
# 	# get object, go return false if null
# 	lw $t2,($sp)
# 	beq $t2,$zero,doneInstanceOf
# 	
# 	# get vtable address of object.  If it's an array
# 	# (which would be H1 <= 0), use vtable address for Object
# 	lw $t3,-8($t2) # <= 0 if array
# 	lw $t2,-12($t2) # vtable address (unless array)
# 	bgt $t3,$zero,skipArrayInstanceOf
# 	la $t2,CLASS_Object
# 	
# 	# get vtable address of object, abort if less than
# 	# lower limit or greater then or equal to higher
# 	# limit
#   skipArrayInstanceOf:
# 	sge $t0,$t2,$t0
# 	slt $t1,$t2,$t1
# 	
# 	# store the AND of the two conditions onto the stack; return
# 	and $t2,$t0,$t1
#   doneInstanceOf: # if we reach here via branch, we know $t2=0
# 	sw $t2,($sp)
# 	jr $ra

###########################################################
# jump-targets to terminate program:
# - exit: returns normally
# - outOfHeapMemory: prints "out of memory" error and returns
###########################################################

exitError:
	# assumes $a0 has pointer to null-terminated string

	# print the string
	li $v0,4 # syscall-code for print-string
	syscall
exit:
	# print termination message
	li $v0,4 # syscall-code for print-string
	la $a0,exitString
	syscall

	# print number of garbage collections
	li $v0,4 # syscall-code for print-string
	la $a0,gcCountMsg
	syscall # print "Number of ..."
	lw $a0,gcCount # number of GC's
	li $v0,1 # code for print-int
	syscall
	li $v0,4 # syscall-code for print-string
	la $a0,newlineString
	syscall # print newline

	# terminate execution
	li $v0,10 #syscall-code for "exit"
	syscall

outOfHeapMemory:
	la $a0,heapMemoryMsg
	j exitError
divByZeroError:
	la $a0,divByZeroMsg
	j exitError
strIndexOutOfBounds:
	la $a0,strIndexOutOfBoundsMsg
	j exitError
arrayIndexOutOfBounds:
	la $a0,arrayIndexOutOfBoundsMsg
	j exitError
arraySizeOutOfBounds:
	la $a0,arraySizeOutOfBoundsMsg
	j exitError
nullPtrException:
	la $a0,nullPtrExceptionMsg
	j exitError
badIntegerFormat:
	la $a0,badIntegerFormatMsg
	j exitError
castException:
	la $a0,castExceptionMsg
	j exitError
############## data section ################
	.data
hexChars:
	.ascii "0123456789abcdef"
	.align 2
cur_seg:
	.word 0

lastCharRead:
	.word -2 # -2 => no buffered character
prevHashConstant:
	.word 0x2785173c
gcCount:
	.word 0

heapMemoryMsg:
	.asciiz "ERROR: out of heap memory\n"
divByZeroMsg:
	.asciiz "ERROR: divide by zero\n"
strIndexOutOfBoundsMsg:
	.asciiz "ERROR: string index out of bounds\n"
arrayIndexOutOfBoundsMsg:
	.asciiz "ERROR: array index out of bounds\n"
arraySizeOutOfBoundsMsg:
	.asciiz "ERROR: array size out of bounds\n"
nullPtrExceptionMsg:
	.asciiz "ERROR: null-pointer exception\n"
badIntegerFormatMsg:
	.asciiz "ERROR: attempt to read badly formatted integer\n"
castExceptionMsg:
	.asciiz "ERROR: illegal cast\n"
gcMsg: 
      .asciiz "\nGC!\n"
gcCountMsg: 
      .asciiz "Number of garbage collections: "

nullStr:
	.asciiz "null"
trueString:
	.asciiz "true"
falseString:
	.asciiz "false"
exitString:
	.ascii "Program execution completed."
	#### "falls through" here
newlineString:
	.asciiz "\n"
	
	.align 2
stack_bottom:
	.word 0

#heapFudge: # temporary fudge amount to exercise GC
#	.word 0

seg0_start:
	.space 0x100000
seg0_end:
seg1_start:
	.space 0x100000
seg1_end:
